!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/evan/code/derelict/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
$	lib/flecs/templates/c/flecs-module/include/__id_underscore.h	/^#define ${/;"	d
$	lib/flecs/templates/c/flecs-module/include/__id_underscore.h	/^void ${id pascalcase}Import($/;"	v	typeref:typename:void
$	lib/flecs/templates/c/flecs/include/__id_underscore.h	/^#define ${/;"	d
$	lib/flecs/templates/cpp/flecs/include/__id_underscore.h	/^#define ${/;"	d
$(HTML)	lib/uthash/doc/Makefile	/^$(HTML): %.html: %.txt$/;"	t
$(PROGS)	lib/uthash/tests/Makefile	/^$(PROGS) $(UTILS) : $(HASHDIR)\/uthash.h$/;"	t
$(PROGS)	lib/uthash/tests/threads/Makefile	/^$(PROGS) : $(HASHDIR)\/uthash.h$/;"	t
$(UTILS)	lib/uthash/tests/Makefile	/^$(PROGS) $(UTILS) : $(HASHDIR)\/uthash.h$/;"	t
$(VERBOSE).SILENT	cmake-build-debug/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	cmake-build-debug/lib/flecs/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	cmake-build-debug/lib/libflint/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	cmake-build-release/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	cmake-build-release/lib/flecs/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	cmake-build-release/lib/libflint/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE)MAKESILENT	cmake-build-debug/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	cmake-build-debug/lib/flecs/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	cmake-build-debug/lib/libflint/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	cmake-build-release/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	cmake-build-release/lib/flecs/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	cmake-build-release/lib/libflint/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
%	cmake-build-debug/Makefile	/^% : %,v$/;"	t
%	cmake-build-debug/Makefile	/^% : RCS\/%$/;"	t
%	cmake-build-debug/Makefile	/^% : RCS\/%,v$/;"	t
%	cmake-build-debug/Makefile	/^% : SCCS\/s.%$/;"	t
%	cmake-build-debug/Makefile	/^% : s.%$/;"	t
%	cmake-build-debug/lib/flecs/Makefile	/^% : %,v$/;"	t
%	cmake-build-debug/lib/flecs/Makefile	/^% : RCS\/%$/;"	t
%	cmake-build-debug/lib/flecs/Makefile	/^% : RCS\/%,v$/;"	t
%	cmake-build-debug/lib/flecs/Makefile	/^% : SCCS\/s.%$/;"	t
%	cmake-build-debug/lib/flecs/Makefile	/^% : s.%$/;"	t
%	cmake-build-debug/lib/libflint/Makefile	/^% : %,v$/;"	t
%	cmake-build-debug/lib/libflint/Makefile	/^% : RCS\/%$/;"	t
%	cmake-build-debug/lib/libflint/Makefile	/^% : RCS\/%,v$/;"	t
%	cmake-build-debug/lib/libflint/Makefile	/^% : SCCS\/s.%$/;"	t
%	cmake-build-debug/lib/libflint/Makefile	/^% : s.%$/;"	t
%	cmake-build-release/Makefile	/^% : %,v$/;"	t
%	cmake-build-release/Makefile	/^% : RCS\/%$/;"	t
%	cmake-build-release/Makefile	/^% : RCS\/%,v$/;"	t
%	cmake-build-release/Makefile	/^% : SCCS\/s.%$/;"	t
%	cmake-build-release/Makefile	/^% : s.%$/;"	t
%	cmake-build-release/lib/flecs/Makefile	/^% : %,v$/;"	t
%	cmake-build-release/lib/flecs/Makefile	/^% : RCS\/%$/;"	t
%	cmake-build-release/lib/flecs/Makefile	/^% : RCS\/%,v$/;"	t
%	cmake-build-release/lib/flecs/Makefile	/^% : SCCS\/s.%$/;"	t
%	cmake-build-release/lib/flecs/Makefile	/^% : s.%$/;"	t
%	cmake-build-release/lib/libflint/Makefile	/^% : %,v$/;"	t
%	cmake-build-release/lib/libflint/Makefile	/^% : RCS\/%$/;"	t
%	cmake-build-release/lib/libflint/Makefile	/^% : RCS\/%,v$/;"	t
%	cmake-build-release/lib/libflint/Makefile	/^% : SCCS\/s.%$/;"	t
%	cmake-build-release/lib/libflint/Makefile	/^% : s.%$/;"	t
%.html	lib/uthash/doc/Makefile	/^$(HTML): %.html: %.txt$/;"	t
A	lib/flecs/test/cpp_api/src/World.cpp	/^namespace A {$/;"	n	file:
A1	lib/flecs/test/meta/src/Cursor.c	/^    typedef N1 A1[2];$/;"	t	function:Cursor_struct_w_2_array_type_struct	typeref:typename:N1[2]	file:
A1	lib/flecs/test/meta/src/Cursor.c	/^    typedef N1 A1[2];$/;"	t	function:Cursor_struct_w_array_type_struct	typeref:typename:N1[2]	file:
A1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef N1 A1[2];$/;"	t	function:DeserializeFromExpr_struct_w_2_array_type_struct	typeref:typename:N1[2]	file:
A1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef N1 A1[2];$/;"	t	function:DeserializeFromExpr_struct_w_array_type_struct	typeref:typename:N1[2]	file:
A1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef N1 A1[2];$/;"	t	function:SerializeToExpr_struct_w_2_array_type_struct	typeref:typename:N1[2]	file:
A1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef N1 A1[2];$/;"	t	function:SerializeToExpr_struct_w_array_type_struct	typeref:typename:N1[2]	file:
AD_HOC_QUERY_BAKE_CONFIG_H	lib/flecs/examples/cpp/queries/ad_hoc_query/include/ad_hoc_query/bake_config.h	/^#define AD_HOC_QUERY_BAKE_CONFIG_H$/;"	d
AD_HOC_QUERY_H	lib/flecs/examples/cpp/queries/ad_hoc_query/include/ad_hoc_query.h	/^#define AD_HOC_QUERY_H$/;"	d
API_BAKE_CONFIG_H	lib/flecs/test/api/include/api/bake_config.h	/^#define API_BAKE_CONFIG_H$/;"	d
API_H	lib/flecs/test/api/include/api.h	/^#define API_H$/;"	d
APP_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/app/include/app/bake_config.h	/^#define APP_BAKE_CONFIG_H$/;"	d
APP_H	lib/flecs/test/custom_builds/cpp/app/include/app.h	/^#define APP_H$/;"	d
ARG	lib/flecs/flecs.c	/^#define ARG(/;"	d	file:
ARG	lib/flecs/src/world.c	/^#define ARG(/;"	d	file:
AUTO_DEFINE_ENUM_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/auto_define_enum/include/auto_define_enum/bake_config.h	/^#define AUTO_DEFINE_ENUM_BAKE_CONFIG_H$/;"	d
AUTO_DEFINE_ENUM_H	lib/flecs/examples/c/reflection/auto_define_enum/include/auto_define_enum.h	/^#define AUTO_DEFINE_ENUM_H$/;"	d
AUTO_DEFINE_NESTED_STRUCT_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/auto_define_nested_struct/include/auto_define_nested_struct/bake_config.h	/^#define AUTO_DEFINE_NESTED_STRUCT_BAKE_CONFIG_H$/;"	d
AUTO_DEFINE_NESTED_STRUCT_H	lib/flecs/examples/c/reflection/auto_define_nested_struct/include/auto_define_nested_struct.h	/^#define AUTO_DEFINE_NESTED_STRUCT_H$/;"	d
AUTO_DEFINE_STRUCT_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/auto_define_struct/include/auto_define_struct/bake_config.h	/^#define AUTO_DEFINE_STRUCT_BAKE_CONFIG_H$/;"	d
AUTO_DEFINE_STRUCT_H	lib/flecs/examples/c/reflection/auto_define_struct/include/auto_define_struct.h	/^#define AUTO_DEFINE_STRUCT_H$/;"	d
Action	lib/flecs/test/api/src/SystemMisc.c	/^void Action(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
ActionA	lib/flecs/test/api/src/SystemMisc.c	/^void ActionA(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ActionB	lib/flecs/test/api/src/SystemMisc.c	/^void ActionB(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Active	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Active { };      \/\/ Item is active\/worn$/;"	s	file:
Actor	include/ecs/components.h	/^} Actor;$/;"	t	typeref:struct:__anon1ffac85e0408
Acyclic	lib/flecs/flecs.h	/^static const flecs::entity_t Acyclic = EcsAcyclic;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Acyclic	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Acyclic = EcsAcyclic;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Add0	lib/flecs/test/api/src/SystemOnSet.c	/^void Add0(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddAgain	lib/flecs/test/api/src/TriggerOnAdd.c	/^void AddAgain(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddInProgress	lib/flecs/test/api/src/SingleThreadStaging.c	/^void AddInProgress(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddInProgress2	lib/flecs/test/api/src/SingleThreadStaging.c	/^void AddInProgress2(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddMass	lib/flecs/test/api/src/Prefab.c	/^void AddMass(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddMass	lib/flecs/test/api/src/System_w_FromParent.c	/^void AddMass(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddMass	lib/flecs/test/api/src/TriggerOnAdd.c	/^void AddMass(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddOutOfRange	lib/flecs/test/api/src/World.c	/^void AddOutOfRange(ecs_iter_t *it) {$/;"	f	typeref:typename:void
AddParent	lib/flecs/test/api/src/SystemCascade.c	/^void AddParent(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddPosition	lib/flecs/test/api/src/ComponentLifecycle.c	/^void AddPosition(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
AddPosition	lib/flecs/test/api/src/Prefab.c	/^void AddPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddPrefab	lib/flecs/test/api/src/Prefab.c	/^void AddPrefab(ecs_iter_t *it) {$/;"	f	typeref:typename:void
AddPrefabInProgress	lib/flecs/test/api/src/Prefab.c	/^void AddPrefabInProgress(ecs_iter_t *it) {$/;"	f	typeref:typename:void
AddRemoveAdd	lib/flecs/test/api/src/SingleThreadStaging.c	/^void AddRemoveAdd(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddSwitch	lib/flecs/test/api/src/Switch.c	/^void AddSwitch(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddTickSource	lib/flecs/flecs.c	/^void AddTickSource(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddTickSource	lib/flecs/src/addons/timer.c	/^void AddTickSource(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddVelocity	lib/flecs/test/api/src/DeferredActions.c	/^void AddVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddVelocity	lib/flecs/test/api/src/MultiThreadStaging.c	/^void AddVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddVelocity	lib/flecs/test/api/src/Prefab.c	/^void AddVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddVelocity	lib/flecs/test/api/src/Run.c	/^void AddVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddVelocity	lib/flecs/test/api/src/SystemManual.c	/^void AddVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddVelocity	lib/flecs/test/api/src/TriggerOnAdd.c	/^void AddVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
AddVtoP	lib/flecs/test/api/src/Modules.c	/^void AddVtoP(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_1_remove_2_different_from_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Add_1_remove_2_different_from_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_2_components	lib/flecs/test/api/src/Add.c	/^void Add_2_components() {$/;"	f	typeref:typename:void
Add_2_components_again	lib/flecs/test/api/src/Add.c	/^void Add_2_components_again() {$/;"	f	typeref:typename:void
Add_2_components_overlap	lib/flecs/test/api/src/Add.c	/^void Add_2_components_overlap() {$/;"	f	typeref:typename:void
Add_3_to_current	lib/flecs/test/api/src/TriggerOnAdd.c	/^void Add_3_to_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Add_add_0_entity	lib/flecs/test/api/src/Add.c	/^void Add_add_0_entity() {$/;"	f	typeref:typename:void
Add_add_entity	lib/flecs/test/api/src/Add.c	/^void Add_add_entity() {$/;"	f	typeref:typename:void
Add_component	lib/flecs/test/api/src/Add.c	/^void Add_component() {$/;"	f	typeref:typename:void
Add_component_again	lib/flecs/test/api/src/Add.c	/^void Add_component_again() {$/;"	f	typeref:typename:void
Add_component_to_nonempty	lib/flecs/test/api/src/Add.c	/^void Add_component_to_nonempty() {$/;"	f	typeref:typename:void
Add_component_to_nonempty_again	lib/flecs/test/api/src/Add.c	/^void Add_component_to_nonempty_again() {$/;"	f	typeref:typename:void
Add_component_to_nonempty_overlap	lib/flecs/test/api/src/Add.c	/^void Add_component_to_nonempty_overlap() {$/;"	f	typeref:typename:void
Add_in_progress	lib/flecs/test/api/src/Get_component.c	/^void Add_in_progress(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_in_progress_test_main	lib/flecs/test/api/src/Get_component.c	/^void Add_in_progress_test_main(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_random	lib/flecs/test/api/src/Stresstests.c	/^void Add_random(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_remove_0_entity	lib/flecs/test/api/src/Add.c	/^void Add_remove_0_entity() {$/;"	f	typeref:typename:void
Add_remove_different_from_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Add_remove_different_from_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_remove_different_from_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Add_remove_different_from_new_empty(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_remove_entity	lib/flecs/test/api/src/Add.c	/^void Add_remove_entity() {$/;"	f	typeref:typename:void
Add_remove_in_progress_test_main	lib/flecs/test/api/src/Get_component.c	/^void Add_remove_in_progress_test_main(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_remove_same_from_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Add_remove_same_from_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_remove_same_from_new	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Add_remove_same_from_new(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_remove_same_from_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Add_remove_same_from_new_w_component(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_tag	lib/flecs/test/api/src/Add.c	/^void Add_tag() {$/;"	f	typeref:typename:void
Add_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Add_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Add_to_current	lib/flecs/test/api/src/MultiThreadStaging.c	/^void Add_to_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Add_to_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_to_current	lib/flecs/test/api/src/SystemOnSet.c	/^void Add_to_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_to_current	lib/flecs/test/api/src/TriggerOnAdd.c	/^void Add_to_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_to_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Add_to_new_empty(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Add_zero	lib/flecs/test/api/src/Add.c	/^void Add_zero() {$/;"	f	typeref:typename:void
Alice	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    struct Alice { };$/;"	s	function:FilterBuilder_explicit_object_w_type	file:
Alice	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    struct Alice { };$/;"	s	function:FilterBuilder_explicit_term_w_pair_type	file:
Alice	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Alice { };$/;"	s	function:QueryBuilder_explicit_object_w_type	file:
Alice	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Alice { };$/;"	s	function:QueryBuilder_explicit_term_w_pair_type	file:
All	lib/flecs/flecs.h	/^static const uint8_t All = EcsAll;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
All	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const uint8_t All = EcsAll;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Amount	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Amount {$/;"	s	file:
Amount	lib/flecs/flecs.h	/^struct Amount { };$/;"	s	struct:flecs::units
Amount	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Amount { };$/;"	s	struct:flecs::units
Ampere	lib/flecs/flecs.h	/^struct Ampere { };$/;"	s	struct:flecs::units::electric_current
Ampere	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Ampere { };$/;"	s	struct:flecs::units::electric_current
And	lib/flecs/flecs.h	/^    And = EcsAnd,$/;"	e	enum:flecs::oper_kind_t
And	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    And = EcsAnd,$/;"	e	enum:flecs::oper_kind_t
AndFrom	lib/flecs/flecs.h	/^    AndFrom = EcsAndFrom,$/;"	e	enum:flecs::oper_kind_t
AndFrom	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    AndFrom = EcsAndFrom,$/;"	e	enum:flecs::oper_kind_t
Angle	lib/flecs/flecs.h	/^struct Angle { };$/;"	s	struct:flecs::units
Angle	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Angle { };$/;"	s	struct:flecs::units
App_app_w_default_frame_action	lib/flecs/test/api/src/App.c	/^void App_app_w_default_frame_action() {$/;"	f	typeref:typename:void
App_app_w_frame_action	lib/flecs/test/api/src/App.c	/^void App_app_w_frame_action() {$/;"	f	typeref:typename:void
App_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case App_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Apples	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^struct Apples { };$/;"	s	file:
Apples	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^struct Apples { };$/;"	s	file:
Apples	lib/flecs/examples/cpp/queries/wildcards/src/main.cpp	/^struct Apples { };$/;"	s	file:
Apples	lib/flecs/test/cpp_api/src/Pairs.cpp	/^struct Apples { };$/;"	s	file:
Apples	lib/flecs/test/cpp_api/src/Query.cpp	/^struct Apples { };$/;"	s	file:
Apples	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Apples { };$/;"	s	function:RuleBuilder_2_pair_terms_w_var	file:
Apples	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Apples { };$/;"	s	function:RuleBuilder_pair_term_w_var	file:
Apples	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Apples { };$/;"	s	function:RuleBuilder_type_pair_term	file:
Apples	lib/flecs/test/cpp_api/src/Type.cpp	/^    struct Apples {};$/;"	s	function:Type_has_pair_type	file:
Armor	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Armor : Item { };$/;"	s	file:
Array	lib/flecs/flecs.h	/^using Array = EcsArray;$/;"	t	namespace:flecs	typeref:typename:EcsArray
Array	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using Array = EcsArray;$/;"	t	namespace:flecs	typeref:typename:EcsArray
ArrayTypes_2_arrays_1_bool_1_i32	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_2_arrays_1_bool_1_i32() {$/;"	f	typeref:typename:void
ArrayTypes_2_arrays_1_i32_1_bool	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_2_arrays_1_i32_1_bool() {$/;"	f	typeref:typename:void
ArrayTypes_8_arrays_bool_w_padded_member	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_8_arrays_bool_w_padded_member() {$/;"	f	typeref:typename:void
ArrayTypes_array_bool_1	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_bool_1() {$/;"	f	typeref:typename:void
ArrayTypes_array_bool_1_before_i32_member	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_bool_1_before_i32_member() {$/;"	f	typeref:typename:void
ArrayTypes_array_bool_2	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_bool_2() {$/;"	f	typeref:typename:void
ArrayTypes_array_bool_2_before_i32_member	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_bool_2_before_i32_member() {$/;"	f	typeref:typename:void
ArrayTypes_array_bool_3	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_bool_3() {$/;"	f	typeref:typename:void
ArrayTypes_array_bool_3_before_i32_member	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_bool_3_before_i32_member() {$/;"	f	typeref:typename:void
ArrayTypes_array_i32_3	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_i32_3() {$/;"	f	typeref:typename:void
ArrayTypes_array_i32_3_before_i32_member	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_i32_3_before_i32_member() {$/;"	f	typeref:typename:void
ArrayTypes_array_of_standaline_array_bool_1	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_of_standaline_array_bool_1() {$/;"	f	typeref:typename:void
ArrayTypes_array_of_standaline_array_bool_2	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_of_standaline_array_bool_2() {$/;"	f	typeref:typename:void
ArrayTypes_array_of_standaline_array_bool_3	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_of_standaline_array_bool_3() {$/;"	f	typeref:typename:void
ArrayTypes_array_struct_array_bool_3	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_struct_array_bool_3() {$/;"	f	typeref:typename:void
ArrayTypes_array_struct_bool_3	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_struct_bool_3() {$/;"	f	typeref:typename:void
ArrayTypes_array_struct_bool_3_before_i32_member	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_array_struct_bool_3_before_i32_member() {$/;"	f	typeref:typename:void
ArrayTypes_standaline_array_bool_1	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_standaline_array_bool_1() {$/;"	f	typeref:typename:void
ArrayTypes_standaline_array_bool_2	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_standaline_array_bool_2() {$/;"	f	typeref:typename:void
ArrayTypes_standaline_array_bool_3	lib/flecs/test/meta/src/ArrayTypes.c	/^void ArrayTypes_standaline_array_bool_3() {$/;"	f	typeref:typename:void
ArrayTypes_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case ArrayTypes_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Arrow1Lstart	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	d
Arrow1Lstart	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend	lib/uthash/doc/banner.svg	/^       style="overflow:visible;">$/;"	d
Arrow1Mend	lib/uthash/doc/banner.svg	/^       style="overflow:visible;">$/;"	i
Arrow1Send	lib/uthash/doc/banner.svg	/^       style="overflow:visible;">$/;"	d
Arrow1Send	lib/uthash/doc/banner.svg	/^       style="overflow:visible;">$/;"	i
Arrow1Send	lib/uthash/doc/uthash-mini.svg	/^       style="overflow:visible">$/;"	d
Arrow1Send	lib/uthash/doc/uthash-mini.svg	/^       style="overflow:visible">$/;"	i
Arrow1Sstart	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	d
Arrow1Sstart	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	i
Arrow2Mend	lib/uthash/doc/banner.svg	/^       style="overflow:visible;">$/;"	d
Arrow2Mend	lib/uthash/doc/banner.svg	/^       style="overflow:visible;">$/;"	i
AssertReadonly	lib/flecs/test/api/src/SystemPeriodic.c	/^static void AssertReadonly(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Attack	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } Attack;$/;"	t	typeref:struct:__anonfbee6d870108	file:
Attack	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct Attack { double value; };$/;"	s	file:
Attack	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Attack {$/;"	s	file:
Atto	lib/flecs/flecs.h	/^struct Atto { };$/;"	s	struct:flecs::units
Atto	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Atto { };$/;"	s	struct:flecs::units
BASICS_BAKE_CONFIG_H	lib/flecs/examples/c/entities/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BAKE_CONFIG_H	lib/flecs/examples/c/queries/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BAKE_CONFIG_H	lib/flecs/examples/c/rules/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BAKE_CONFIG_H	lib/flecs/examples/c/systems/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BAKE_CONFIG_H	lib/flecs/examples/cpp/entities/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BAKE_CONFIG_H	lib/flecs/examples/cpp/queries/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BAKE_CONFIG_H	lib/flecs/examples/cpp/rules/basics/include/basics/bake_config.h	/^#define BASICS_BAKE_CONFIG_H$/;"	d
BASICS_BITMASK_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/basics_bitmask/include/basics_bitmask/bake_config.h	/^#define BASICS_BITMASK_BAKE_CONFIG_H$/;"	d
BASICS_BITMASK_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/basics_bitmask/include/basics_bitmask/bake_config.h	/^#define BASICS_BITMASK_BAKE_CONFIG_H$/;"	d
BASICS_BITMASK_H	lib/flecs/examples/c/reflection/basics_bitmask/include/basics_bitmask.h	/^#define BASICS_BITMASK_H$/;"	d
BASICS_BITMASK_H	lib/flecs/examples/cpp/reflection/basics_bitmask/include/basics_bitmask.h	/^#define BASICS_BITMASK_H$/;"	d
BASICS_DESERIALIZE_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/basics_deserialize/include/basics_deserialize/bake_config.h	/^#define BASICS_DESERIALIZE_BAKE_CONFIG_H$/;"	d
BASICS_DESERIALIZE_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/basics_deserialize/include/basics_deserialize/bake_config.h	/^#define BASICS_DESERIALIZE_BAKE_CONFIG_H$/;"	d
BASICS_DESERIALIZE_H	lib/flecs/examples/c/reflection/basics_deserialize/include/basics_deserialize.h	/^#define BASICS_DESERIALIZE_H$/;"	d
BASICS_DESERIALIZE_H	lib/flecs/examples/cpp/reflection/basics_deserialize/include/basics_deserialize.h	/^#define BASICS_DESERIALIZE_H$/;"	d
BASICS_ENUM_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/basics_enum/include/basics_enum/bake_config.h	/^#define BASICS_ENUM_BAKE_CONFIG_H$/;"	d
BASICS_ENUM_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/basics_enum/include/basics_enum/bake_config.h	/^#define BASICS_ENUM_BAKE_CONFIG_H$/;"	d
BASICS_ENUM_H	lib/flecs/examples/c/reflection/basics_enum/include/basics_enum.h	/^#define BASICS_ENUM_H$/;"	d
BASICS_ENUM_H	lib/flecs/examples/cpp/reflection/basics_enum/include/basics_enum.h	/^#define BASICS_ENUM_H$/;"	d
BASICS_H	lib/flecs/examples/c/entities/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_H	lib/flecs/examples/c/queries/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_H	lib/flecs/examples/c/reflection/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_H	lib/flecs/examples/c/rules/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_H	lib/flecs/examples/c/systems/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_H	lib/flecs/examples/cpp/entities/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_H	lib/flecs/examples/cpp/queries/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_H	lib/flecs/examples/cpp/reflection/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_H	lib/flecs/examples/cpp/rules/basics/include/basics.h	/^#define BASICS_H$/;"	d
BASICS_JSON_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/basics_json/include/basics_json/bake_config.h	/^#define BASICS_JSON_BAKE_CONFIG_H$/;"	d
BASICS_JSON_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/basics_json/include/basics_json/bake_config.h	/^#define BASICS_JSON_BAKE_CONFIG_H$/;"	d
BASICS_JSON_H	lib/flecs/examples/c/reflection/basics_json/include/basics_json.h	/^#define BASICS_JSON_H$/;"	d
BASICS_JSON_H	lib/flecs/examples/cpp/reflection/basics_json/include/basics_json.h	/^#define BASICS_JSON_H$/;"	d
BEARLIBTERMINAL_H	include/BearLibTerminal.h	/^#define BEARLIBTERMINAL_H$/;"	d
BER	lib/uthash/tests/hashscan.c	/^#define BER /;"	d	file:
BS_MAX	lib/flecs/flecs.c	/^#define BS_MAX /;"	d	file:
BS_MAX	lib/flecs/src/query.c	/^#define BS_MAX /;"	d	file:
BUFLEN	lib/uthash/tests/bloom_perf.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/emit_keys.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test11.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test14.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test26.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test29.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test30.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test31.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test32.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test33.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test34.c	/^#define BUFLEN /;"	d	file:
BUFLEN	lib/uthash/tests/test56.c	/^#define BUFLEN /;"	d	file:
Bacon	lib/flecs/examples/c/reflection/basics_bitmask/src/main.c	/^static const uint32_t Bacon = 0x1;$/;"	v	typeref:typename:const uint32_t	file:
Bacon	lib/flecs/examples/cpp/reflection/basics_bitmask/src/main.cpp	/^    static constexpr uint32_t Bacon = 0x1;$/;"	m	struct:Toppings	typeref:typename:uint32_t	file:
Bananas	lib/flecs/test/cpp_api/src/Type.cpp	/^    struct Bananas {};$/;"	s	function:Type_has_pair_type	file:
Bar	lib/flecs/flecs.h	/^struct Bar { };$/;"	s	struct:flecs::units::pressure
Bar	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Bar { };$/;"	s	struct:flecs::units::pressure
BarSys	lib/flecs/test/api/src/Stats.c	/^static void BarSys(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
BarSystem	lib/flecs/test/api/src/SystemMisc.c	/^void BarSystem(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
BaseClass	lib/flecs/flecs.h	/^    using BaseClass = filter_builder_i<Base, Components ...>;$/;"	t	struct:flecs::observer_builder_i	typeref:typename:filter_builder_i<Base,Components...>
BaseClass	lib/flecs/flecs.h	/^    using BaseClass = filter_builder_i<Base, Components ...>;$/;"	t	struct:flecs::query_builder_i	typeref:typename:filter_builder_i<Base,Components...>
BaseClass	lib/flecs/flecs.h	/^    using BaseClass = query_builder_i<Base, Components ...>;$/;"	t	struct:flecs::system_builder_i	typeref:typename:query_builder_i<Base,Components...>
BaseClass	lib/flecs/flecs.h	/^    using BaseClass = term_builder_i<Base>;$/;"	t	struct:flecs::trigger_builder_i	typeref:typename:term_builder_i<Base>
BaseClass	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    using BaseClass = filter_builder_i<Base, Components ...>;$/;"	t	struct:flecs::observer_builder_i	typeref:typename:filter_builder_i<Base,Components...>
BaseClass	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    using BaseClass = filter_builder_i<Base, Components ...>;$/;"	t	struct:flecs::query_builder_i	typeref:typename:filter_builder_i<Base,Components...>
BaseClass	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    using BaseClass = query_builder_i<Base, Components ...>;$/;"	t	struct:flecs::system_builder_i	typeref:typename:query_builder_i<Base,Components...>
BaseClass	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    using BaseClass = term_builder_i<Base>;$/;"	t	struct:flecs::trigger_builder_i	typeref:typename:term_builder_i<Base>
Begin	lib/flecs/test/cpp_api/src/Pairs.cpp	/^struct Begin { };$/;"	s	file:
Begin	lib/flecs/test/cpp_api/src/Query.cpp	/^struct Begin { };$/;"	s	file:
BeginEvent	lib/flecs/test/cpp_api/src/Pairs.cpp	/^using BeginEvent = flecs::pair<Begin, Event>;$/;"	t	typeref:typename:flecs::pair<Begin,Event>	file:
BeginEvent	lib/flecs/test/cpp_api/src/Query.cpp	/^using BeginEvent = flecs::pair<Begin, Event>;$/;"	t	typeref:typename:flecs::pair<Begin,Event>	file:
Bel	lib/flecs/flecs.h	/^struct Bel { };$/;"	s	struct:flecs::units
Bel	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Bel { };$/;"	s	struct:flecs::units
BinTree	lib/libflint/include/lfbinarytree.h	/^} BinTree;$/;"	t	typeref:struct:__anonb782dc9e0108
BinTreeNode	lib/libflint/include/lfbinarytree.h	/^typedef struct BinTreeNode {$/;"	s
BinTreeNode	lib/libflint/include/lfbinarytree.h	/^} BinTreeNode;$/;"	t	typeref:struct:BinTreeNode
Bitmask	lib/flecs/flecs.h	/^using Bitmask = EcsBitmask;$/;"	t	namespace:flecs	typeref:typename:EcsBitmask
Bitmask	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using Bitmask = EcsBitmask;$/;"	t	namespace:flecs	typeref:typename:EcsBitmask
BitmaskTypes_bitmask_1_constant	lib/flecs/test/meta/src/BitmaskTypes.c	/^void BitmaskTypes_bitmask_1_constant() {$/;"	f	typeref:typename:void
BitmaskTypes_bitmask_2_constants	lib/flecs/test/meta/src/BitmaskTypes.c	/^void BitmaskTypes_bitmask_2_constants() {$/;"	f	typeref:typename:void
BitmaskTypes_bitmask_3_constants	lib/flecs/test/meta/src/BitmaskTypes.c	/^void BitmaskTypes_bitmask_3_constants() {$/;"	f	typeref:typename:void
BitmaskTypes_bitmask_4_constants	lib/flecs/test/meta/src/BitmaskTypes.c	/^void BitmaskTypes_bitmask_4_constants() {$/;"	f	typeref:typename:void
BitmaskTypes_bitmask_4_constants_manual_values	lib/flecs/test/meta/src/BitmaskTypes.c	/^void BitmaskTypes_bitmask_4_constants_manual_values() {$/;"	f	typeref:typename:void
BitmaskTypes_struct_w_bitmask	lib/flecs/test/meta/src/BitmaskTypes.c	/^void BitmaskTypes_struct_w_bitmask() {$/;"	f	typeref:typename:void
BitmaskTypes_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case BitmaskTypes_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Bits	lib/flecs/flecs.h	/^struct Bits { };$/;"	s	struct:flecs::units::data
Bits	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Bits { };$/;"	s	struct:flecs::units::data
BitsPerSecond	lib/flecs/flecs.h	/^struct BitsPerSecond { };$/;"	s	struct:flecs::units::datarate
BitsPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct BitsPerSecond { };$/;"	s	struct:flecs::units::datarate
Black	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Black = 1, White = 3, Grey = 5$/;"	e	enum:SparseEnum	file:
Blue	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^    Blue$/;"	e	enum:__anon0f08a1c60103	file:
Blue	lib/flecs/examples/cpp/reflection/basics_enum/src/main.cpp	/^    Blue$/;"	e	enum:Color	file:
Blue	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_enum_type_w_default_child_component::__anonb7ea1cde0f03	file:
Blue	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum::__anonb7ea1cde0203	file:
Blue	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_primitive_and_struct::__anonb7ea1cde0703	file:
Blue	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_primitive_using_meta::__anonb7ea1cde0603	file:
Blue	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_using_meta::__anonb7ea1cde0403	file:
Blue	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Red, Green, Blue$/;"	e	enum:StandardEnum	file:
Blue	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromExpr_enum::__anon51c88b180103	file:
Blue	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromExpr_struct_enum::__anon51c88b180203	file:
Blue	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromJson_struct_enum::__anon5d173e531503	file:
Blue	lib/flecs/test/meta/src/EnumTypes.c	/^        Red, Blue, Green$/;"	e	enum:EnumTypes_enum_relation::Color	file:
Blue	lib/flecs/test/meta/src/SerializeToExpr.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToExpr_enum::__anon35ed1d3e0103	file:
Blue	lib/flecs/test/meta/src/SerializeToExpr.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToExpr_struct_enum::__anon35ed1d3e0203	file:
Blue	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToJson_struct_enum::__anon413bd0791803	file:
Blue	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_enum_component::__anon413bd0792903	file:
Blue	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_invalid_enum_component::__anon413bd0792b03	file:
Blue	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_struct_and_enum_component::__anon413bd0792a03	file:
Bob	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    struct Bob { };$/;"	s	function:FilterBuilder_explicit_term_w_pair_type	file:
Bob	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    struct Bob { };$/;"	s	function:Pairs_has_w_object_tag	file:
Bob	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Bob { };$/;"	s	function:QueryBuilder_explicit_term_w_pair_type	file:
Bob	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Bob { };$/;"	s	function:World_with_relation_object_type	file:
Bool	lib/flecs/flecs.h	/^static const flecs::entity_t Bool = ecs_id(ecs_bool_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Bool	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t Bool = ecs_id(ecs_bool_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Brief	lib/flecs/flecs.h	/^static const flecs::entity_t Brief = EcsDocBrief;$/;"	v	namespace:flecs::doc	typeref:typename:const flecs::entity_t
Brief	lib/flecs/include/flecs/addons/cpp/mixins/doc/decl.hpp	/^static const flecs::entity_t Brief = EcsDocBrief;$/;"	v	namespace:flecs::doc	typeref:typename:const flecs::entity_t
Builder	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^struct Builder : Unit { };$/;"	s	file:
BusySystem	lib/flecs/test/api/src/World.c	/^void BusySystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Byte	lib/flecs/flecs.h	/^static const flecs::entity_t Byte = ecs_id(ecs_byte_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Byte	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t Byte = ecs_id(ecs_byte_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Bytes	lib/flecs/flecs.h	/^struct Bytes { };$/;"	s	struct:flecs::units::data
Bytes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Bytes { };$/;"	s	struct:flecs::units::data
BytesPerSecond	lib/flecs/flecs.h	/^struct BytesPerSecond { };$/;"	s	struct:flecs::units::datarate
BytesPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct BytesPerSecond { };$/;"	s	struct:flecs::units::datarate
CC	lib/uthash/tests/lru_cache/Makefile	/^CC=gcc$/;"	m
CDL_APPEND	lib/uthash/include/utlist.h	/^#define CDL_APPEND(/;"	d
CDL_APPEND	lib/uthash/src/utlist.h	/^#define CDL_APPEND(/;"	d
CDL_APPEND2	lib/uthash/include/utlist.h	/^#define CDL_APPEND2(/;"	d
CDL_APPEND2	lib/uthash/src/utlist.h	/^#define CDL_APPEND2(/;"	d
CDL_APPEND_ELEM	lib/uthash/include/utlist.h	/^#define CDL_APPEND_ELEM(/;"	d
CDL_APPEND_ELEM	lib/uthash/src/utlist.h	/^#define CDL_APPEND_ELEM(/;"	d
CDL_APPEND_ELEM2	lib/uthash/include/utlist.h	/^#define CDL_APPEND_ELEM2(/;"	d
CDL_APPEND_ELEM2	lib/uthash/src/utlist.h	/^#define CDL_APPEND_ELEM2(/;"	d
CDL_COUNT	lib/uthash/include/utlist.h	/^#define CDL_COUNT(/;"	d
CDL_COUNT	lib/uthash/src/utlist.h	/^#define CDL_COUNT(/;"	d
CDL_COUNT2	lib/uthash/include/utlist.h	/^#define CDL_COUNT2(/;"	d
CDL_COUNT2	lib/uthash/src/utlist.h	/^#define CDL_COUNT2(/;"	d
CDL_DELETE	lib/uthash/include/utlist.h	/^#define CDL_DELETE(/;"	d
CDL_DELETE	lib/uthash/src/utlist.h	/^#define CDL_DELETE(/;"	d
CDL_DELETE2	lib/uthash/include/utlist.h	/^#define CDL_DELETE2(/;"	d
CDL_DELETE2	lib/uthash/src/utlist.h	/^#define CDL_DELETE2(/;"	d
CDL_FOREACH	lib/uthash/include/utlist.h	/^#define CDL_FOREACH(/;"	d
CDL_FOREACH	lib/uthash/src/utlist.h	/^#define CDL_FOREACH(/;"	d
CDL_FOREACH2	lib/uthash/include/utlist.h	/^#define CDL_FOREACH2(/;"	d
CDL_FOREACH2	lib/uthash/src/utlist.h	/^#define CDL_FOREACH2(/;"	d
CDL_FOREACH_SAFE	lib/uthash/include/utlist.h	/^#define CDL_FOREACH_SAFE(/;"	d
CDL_FOREACH_SAFE	lib/uthash/src/utlist.h	/^#define CDL_FOREACH_SAFE(/;"	d
CDL_FOREACH_SAFE2	lib/uthash/include/utlist.h	/^#define CDL_FOREACH_SAFE2(/;"	d
CDL_FOREACH_SAFE2	lib/uthash/src/utlist.h	/^#define CDL_FOREACH_SAFE2(/;"	d
CDL_INSERT_INORDER	lib/uthash/include/utlist.h	/^#define CDL_INSERT_INORDER(/;"	d
CDL_INSERT_INORDER	lib/uthash/src/utlist.h	/^#define CDL_INSERT_INORDER(/;"	d
CDL_INSERT_INORDER2	lib/uthash/include/utlist.h	/^#define CDL_INSERT_INORDER2(/;"	d
CDL_INSERT_INORDER2	lib/uthash/src/utlist.h	/^#define CDL_INSERT_INORDER2(/;"	d
CDL_LOWER_BOUND	lib/uthash/include/utlist.h	/^#define CDL_LOWER_BOUND(/;"	d
CDL_LOWER_BOUND	lib/uthash/src/utlist.h	/^#define CDL_LOWER_BOUND(/;"	d
CDL_LOWER_BOUND2	lib/uthash/include/utlist.h	/^#define CDL_LOWER_BOUND2(/;"	d
CDL_LOWER_BOUND2	lib/uthash/src/utlist.h	/^#define CDL_LOWER_BOUND2(/;"	d
CDL_PREPEND	lib/uthash/include/utlist.h	/^#define CDL_PREPEND(/;"	d
CDL_PREPEND	lib/uthash/src/utlist.h	/^#define CDL_PREPEND(/;"	d
CDL_PREPEND2	lib/uthash/include/utlist.h	/^#define CDL_PREPEND2(/;"	d
CDL_PREPEND2	lib/uthash/src/utlist.h	/^#define CDL_PREPEND2(/;"	d
CDL_PREPEND_ELEM	lib/uthash/include/utlist.h	/^#define CDL_PREPEND_ELEM(/;"	d
CDL_PREPEND_ELEM	lib/uthash/src/utlist.h	/^#define CDL_PREPEND_ELEM(/;"	d
CDL_PREPEND_ELEM2	lib/uthash/include/utlist.h	/^#define CDL_PREPEND_ELEM2(/;"	d
CDL_PREPEND_ELEM2	lib/uthash/src/utlist.h	/^#define CDL_PREPEND_ELEM2(/;"	d
CDL_REPLACE_ELEM	lib/uthash/include/utlist.h	/^#define CDL_REPLACE_ELEM(/;"	d
CDL_REPLACE_ELEM	lib/uthash/src/utlist.h	/^#define CDL_REPLACE_ELEM(/;"	d
CDL_REPLACE_ELEM2	lib/uthash/include/utlist.h	/^#define CDL_REPLACE_ELEM2(/;"	d
CDL_REPLACE_ELEM2	lib/uthash/src/utlist.h	/^#define CDL_REPLACE_ELEM2(/;"	d
CDL_SEARCH	lib/uthash/include/utlist.h	/^#define CDL_SEARCH(/;"	d
CDL_SEARCH	lib/uthash/src/utlist.h	/^#define CDL_SEARCH(/;"	d
CDL_SEARCH2	lib/uthash/include/utlist.h	/^#define CDL_SEARCH2(/;"	d
CDL_SEARCH2	lib/uthash/src/utlist.h	/^#define CDL_SEARCH2(/;"	d
CDL_SEARCH_SCALAR	lib/uthash/include/utlist.h	/^#define CDL_SEARCH_SCALAR(/;"	d
CDL_SEARCH_SCALAR	lib/uthash/src/utlist.h	/^#define CDL_SEARCH_SCALAR(/;"	d
CDL_SEARCH_SCALAR2	lib/uthash/include/utlist.h	/^#define CDL_SEARCH_SCALAR2(/;"	d
CDL_SEARCH_SCALAR2	lib/uthash/src/utlist.h	/^#define CDL_SEARCH_SCALAR2(/;"	d
CDL_SORT	lib/uthash/include/utlist.h	/^#define CDL_SORT(/;"	d
CDL_SORT	lib/uthash/src/utlist.h	/^#define CDL_SORT(/;"	d
CDL_SORT2	lib/uthash/include/utlist.h	/^#define CDL_SORT2(/;"	d
CDL_SORT2	lib/uthash/src/utlist.h	/^#define CDL_SORT2(/;"	d
CHAIN_0	lib/uthash/tests/keystat.c	/^#define CHAIN_0 /;"	d	file:
CHAIN_10	lib/uthash/tests/keystat.c	/^#define CHAIN_10 /;"	d	file:
CHAIN_100	lib/uthash/tests/keystat.c	/^#define CHAIN_100 /;"	d	file:
CHAIN_20	lib/uthash/tests/keystat.c	/^#define CHAIN_20 /;"	d	file:
CHAIN_5	lib/uthash/tests/keystat.c	/^#define CHAIN_5 /;"	d	file:
CHAIN_MAX	lib/uthash/tests/keystat.c	/^#define CHAIN_MAX /;"	d	file:
CHANGE_TRACKING_BAKE_CONFIG_H	lib/flecs/examples/c/queries/change_tracking/include/change_tracking/bake_config.h	/^#define CHANGE_TRACKING_BAKE_CONFIG_H$/;"	d
CHANGE_TRACKING_BAKE_CONFIG_H	lib/flecs/examples/cpp/queries/change_tracking/include/change_tracking/bake_config.h	/^#define CHANGE_TRACKING_BAKE_CONFIG_H$/;"	d
CHANGE_TRACKING_H	lib/flecs/examples/c/queries/change_tracking/include/change_tracking.h	/^#define CHANGE_TRACKING_H$/;"	d
CHANGE_TRACKING_H	lib/flecs/examples/cpp/queries/change_tracking/include/change_tracking.h	/^#define CHANGE_TRACKING_H$/;"	d
CHUNK	lib/flecs/flecs.c	/^#define CHUNK(/;"	d	file:
CHUNK	lib/flecs/src/datastructures/sparse.c	/^#define CHUNK(/;"	d	file:
CHUNK_COUNT	lib/flecs/flecs.c	/^#define CHUNK_COUNT /;"	d	file:
CHUNK_COUNT	lib/flecs/src/datastructures/sparse.c	/^#define CHUNK_COUNT /;"	d	file:
CMAKE_BINARY_DIR	cmake-build-debug/Makefile	/^CMAKE_BINARY_DIR = \/home\/evan\/code\/derelict\/cmake-build-debug$/;"	m
CMAKE_BINARY_DIR	cmake-build-debug/lib/flecs/Makefile	/^CMAKE_BINARY_DIR = \/home\/evan\/code\/derelict\/cmake-build-debug$/;"	m
CMAKE_BINARY_DIR	cmake-build-debug/lib/libflint/Makefile	/^CMAKE_BINARY_DIR = \/home\/evan\/code\/derelict\/cmake-build-debug$/;"	m
CMAKE_BINARY_DIR	cmake-build-release/Makefile	/^CMAKE_BINARY_DIR = \/home\/evan\/code\/derelict\/cmake-build-release$/;"	m
CMAKE_BINARY_DIR	cmake-build-release/lib/flecs/Makefile	/^CMAKE_BINARY_DIR = \/home\/evan\/code\/derelict\/cmake-build-release$/;"	m
CMAKE_BINARY_DIR	cmake-build-release/lib/libflint/Makefile	/^CMAKE_BINARY_DIR = \/home\/evan\/code\/derelict\/cmake-build-release$/;"	m
CMAKE_COMMAND	cmake-build-debug/Makefile	/^CMAKE_COMMAND = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake$/;"	m
CMAKE_COMMAND	cmake-build-debug/lib/flecs/Makefile	/^CMAKE_COMMAND = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake$/;"	m
CMAKE_COMMAND	cmake-build-debug/lib/libflint/Makefile	/^CMAKE_COMMAND = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake$/;"	m
CMAKE_COMMAND	cmake-build-release/Makefile	/^CMAKE_COMMAND = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake$/;"	m
CMAKE_COMMAND	cmake-build-release/lib/flecs/Makefile	/^CMAKE_COMMAND = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake$/;"	m
CMAKE_COMMAND	cmake-build-release/lib/libflint/Makefile	/^CMAKE_COMMAND = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake$/;"	m
CMAKE_CROSSCOMPILING	cmake-build-debug/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	cmake-build-debug/lib/flecs/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	cmake-build-debug/lib/libflint/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	cmake-build-release/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	cmake-build-release/lib/flecs/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	cmake-build-release/lib/libflint/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX_STANDARD	lib/flecs/cmake/target_default_compile_options.cmake	/^set(CMAKE_CXX_STANDARD 11)$/;"	v
CMAKE_CXX_STANDARD_REQUIRED	lib/flecs/cmake/target_default_compile_options.cmake	/^set(CMAKE_CXX_STANDARD_REQUIRED ON)$/;"	v
CMAKE_C_STANDARD	CMakeLists.txt	/^set(CMAKE_C_STANDARD 11)$/;"	v
CMAKE_C_STANDARD	lib/flecs/cmake/target_default_compile_options.cmake	/^set(CMAKE_C_STANDARD 99)$/;"	v
CMAKE_C_STANDARD	lib/libflint/CMakeLists.txt	/^set(CMAKE_C_STANDARD 99)$/;"	v
CMAKE_C_STANDARD_REQUIRED	lib/flecs/cmake/target_default_compile_options.cmake	/^set(CMAKE_C_STANDARD_REQUIRED ON)$/;"	v
CMAKE_EXPORT_COMPILE_COMMANDS	lib/libflint/CMakeLists.txt	/^set(CMAKE_EXPORT_COMPILE_COMMANDS ON)$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-debug/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-debug/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-debug/lib/flecs/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-debug/lib/flecs/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-debug/lib/libflint/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-debug/lib/libflint/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-release/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-release/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-release/lib/flecs/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-release/lib/flecs/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-release/lib/libflint/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	cmake-build-release/lib/libflint/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	cmake-build-debug/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	cmake-build-debug/lib/flecs/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	cmake-build-debug/lib/libflint/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	cmake-build-release/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Release")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	cmake-build-release/lib/flecs/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Release")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	cmake-build-release/lib/libflint/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Release")$/;"	v
CMAKE_INSTALL_MANIFEST	cmake-build-debug/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	cmake-build-debug/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	cmake-build-release/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	cmake-build-release/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	cmake-build-debug/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	cmake-build-debug/lib/flecs/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	cmake-build-debug/lib/libflint/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	cmake-build-release/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	cmake-build-release/lib/flecs/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	cmake-build-release/lib/libflint/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	cmake-build-debug/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	cmake-build-debug/lib/flecs/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	cmake-build-debug/lib/libflint/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	cmake-build-release/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	cmake-build-release/lib/flecs/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	cmake-build-release/lib/libflint/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_OBJDUMP	cmake-build-debug/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	cmake-build-debug/lib/flecs/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	cmake-build-debug/lib/libflint/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	cmake-build-release/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	cmake-build-release/lib/flecs/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	cmake-build-release/lib/libflint/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_SOURCE_DIR	cmake-build-debug/Makefile	/^CMAKE_SOURCE_DIR = \/home\/evan\/code\/derelict$/;"	m
CMAKE_SOURCE_DIR	cmake-build-debug/lib/flecs/Makefile	/^CMAKE_SOURCE_DIR = \/home\/evan\/code\/derelict$/;"	m
CMAKE_SOURCE_DIR	cmake-build-debug/lib/libflint/Makefile	/^CMAKE_SOURCE_DIR = \/home\/evan\/code\/derelict$/;"	m
CMAKE_SOURCE_DIR	cmake-build-release/Makefile	/^CMAKE_SOURCE_DIR = \/home\/evan\/code\/derelict$/;"	m
CMAKE_SOURCE_DIR	cmake-build-release/lib/flecs/Makefile	/^CMAKE_SOURCE_DIR = \/home\/evan\/code\/derelict$/;"	m
CMAKE_SOURCE_DIR	cmake-build-release/lib/libflint/Makefile	/^CMAKE_SOURCE_DIR = \/home\/evan\/code\/derelict$/;"	m
CMPFUNC	lib/uthash/tests/test87.c	/^#define CMPFUNC(/;"	d	file:
COLLECTIONS_BAKE_CONFIG_H	lib/flecs/test/collections/include/collections/bake_config.h	/^#define COLLECTIONS_BAKE_CONFIG_H$/;"	d
COLLECTIONS_H	lib/flecs/test/collections/include/collections.h	/^#define COLLECTIONS_H$/;"	d
COLORS_H	include/colors.h	/^#define COLORS_H$/;"	d
COMPONENT_INHERITANCE_BAKE_CONFIG_H	lib/flecs/examples/c/rules/component_inheritance/include/component_inheritance/bake_config.h	/^#define COMPONENT_INHERITANCE_BAKE_CONFIG_H$/;"	d
COMPONENT_INHERITANCE_BAKE_CONFIG_H	lib/flecs/examples/cpp/rules/component_inheritance/include/component_inheritance/bake_config.h	/^#define COMPONENT_INHERITANCE_BAKE_CONFIG_H$/;"	d
COMPONENT_INHERITANCE_H	lib/flecs/examples/c/rules/component_inheritance/include/component_inheritance.h	/^#define COMPONENT_INHERITANCE_H$/;"	d
COMPONENT_INHERITANCE_H	lib/flecs/examples/cpp/rules/component_inheritance/include/component_inheritance.h	/^#define COMPONENT_INHERITANCE_H$/;"	d
COUNT	lib/flecs/test/api/src/OnDelete.c	/^    #define COUNT /;"	d	file:
CPP_API_BAKE_CONFIG_H	lib/flecs/test/cpp_api/include/cpp_api/bake_config.h	/^#define CPP_API_BAKE_CONFIG_H$/;"	d
CPP_API_H	lib/flecs/test/cpp_api/include/cpp_api.h	/^#define CPP_API_H$/;"	d
CREATE_TARGET	lib/flecs/examples/CMakeLists.txt	/^macro(CREATE_TARGET NAME PARENT)$/;"	m
CYCLIC_VARIABLES_BAKE_CONFIG_H	lib/flecs/examples/c/rules/cyclic_variables/include/cyclic_variables/bake_config.h	/^#define CYCLIC_VARIABLES_BAKE_CONFIG_H$/;"	d
CYCLIC_VARIABLES_BAKE_CONFIG_H	lib/flecs/examples/cpp/rules/cyclic_variables/include/cyclic_variables/bake_config.h	/^#define CYCLIC_VARIABLES_BAKE_CONFIG_H$/;"	d
CYCLIC_VARIABLES_H	lib/flecs/examples/c/rules/cyclic_variables/include/cyclic_variables.h	/^#define CYCLIC_VARIABLES_H$/;"	d
CYCLIC_VARIABLES_H	lib/flecs/examples/cpp/rules/cyclic_variables/include/cyclic_variables.h	/^#define CYCLIC_VARIABLES_H$/;"	d
CacheEntry	lib/uthash/tests/test65.c	/^struct CacheEntry {$/;"	s	file:
Candela	lib/flecs/flecs.h	/^struct Candela { };$/;"	s	struct:flecs::units::luminous_intensity
Candela	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Candela { };$/;"	s	struct:flecs::units::luminous_intensity
Cascade	lib/flecs/flecs.h	/^static const uint8_t Cascade = EcsCascade;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Cascade	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const uint8_t Cascade = EcsCascade;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Case	lib/flecs/flecs.h	/^static const flecs::entity_t Case = ECS_CASE;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Case	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Case = ECS_CASE;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Celsius	lib/flecs/flecs.h	/^struct Celsius { };$/;"	s	struct:flecs::units::temperature
Celsius	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Celsius { };$/;"	s	struct:flecs::units::temperature
Centi	lib/flecs/flecs.h	/^struct Centi { };$/;"	s	struct:flecs::units
Centi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Centi { };$/;"	s	struct:flecs::units
CentiMeters	lib/flecs/flecs.h	/^struct CentiMeters { };$/;"	s	struct:flecs::units::length
CentiMeters	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct CentiMeters { };$/;"	s	struct:flecs::units::length
Char	lib/flecs/flecs.h	/^static const flecs::entity_t Char = ecs_id(ecs_char_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Char	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t Char = ecs_id(ecs_char_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
CheckColumnType	lib/flecs/test/api/src/System_w_Empty.c	/^void CheckColumnType(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Child	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Child { };$/;"	s	struct:Parent	file:
ChildOf	lib/flecs/flecs.h	/^static const flecs::entity_t ChildOf = EcsChildOf;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
ChildOf	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t ChildOf = EcsChildOf;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
City	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^struct City { };$/;"	s	file:
Class	lib/flecs/flecs.h	/^    using Class = event_builder_typed<E>;$/;"	t	struct:flecs::event_builder_typed	typeref:typename:event_builder_typed<E>
Class	lib/flecs/flecs.h	/^    using Class = trigger_builder_i<Base, Components...>;$/;"	t	struct:flecs::trigger_builder_i	typeref:typename:trigger_builder_i<Base,Components...>
Class	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    using Class = event_builder_typed<E>;$/;"	t	struct:flecs::event_builder_typed	typeref:typename:event_builder_typed<E>
Class	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    using Class = trigger_builder_i<Base, Components...>;$/;"	t	struct:flecs::trigger_builder_i	typeref:typename:trigger_builder_i<Base,Components...>
CloneInOnAdd	lib/flecs/test/api/src/Prefab.c	/^void CloneInOnAdd(ecs_iter_t *it)$/;"	f	typeref:typename:void	file:
Clone_1_component	lib/flecs/test/api/src/Clone.c	/^void Clone_1_component() {$/;"	f	typeref:typename:void
Clone_1_component_w_value	lib/flecs/test/api/src/Clone.c	/^void Clone_1_component_w_value() {$/;"	f	typeref:typename:void
Clone_1_tag_1_component	lib/flecs/test/api/src/Clone.c	/^void Clone_1_tag_1_component() {$/;"	f	typeref:typename:void
Clone_1_tag_1_component_w_value	lib/flecs/test/api/src/Clone.c	/^void Clone_1_tag_1_component_w_value() {$/;"	f	typeref:typename:void
Clone_2_component	lib/flecs/test/api/src/Clone.c	/^void Clone_2_component() {$/;"	f	typeref:typename:void
Clone_2_component_w_value	lib/flecs/test/api/src/Clone.c	/^void Clone_2_component_w_value() {$/;"	f	typeref:typename:void
Clone_3_component	lib/flecs/test/api/src/Clone.c	/^void Clone_3_component() {$/;"	f	typeref:typename:void
Clone_3_component_w_value	lib/flecs/test/api/src/Clone.c	/^void Clone_3_component_w_value() {$/;"	f	typeref:typename:void
Clone_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Clone_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Clone_current_w_value	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Clone_current_w_value(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Clone_empty	lib/flecs/test/api/src/Clone.c	/^void Clone_empty() {$/;"	f	typeref:typename:void
Clone_empty_w_value	lib/flecs/test/api/src/Clone.c	/^void Clone_empty_w_value() {$/;"	f	typeref:typename:void
Clone_null	lib/flecs/test/api/src/Clone.c	/^void Clone_null() {$/;"	f	typeref:typename:void
Clone_null_w_value	lib/flecs/test/api/src/Clone.c	/^void Clone_null_w_value() {$/;"	f	typeref:typename:void
Clone_tag	lib/flecs/test/api/src/Clone.c	/^void Clone_tag() {$/;"	f	typeref:typename:void
Clone_tag_w_value	lib/flecs/test/api/src/Clone.c	/^void Clone_tag_w_value() {$/;"	f	typeref:typename:void
Clone_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Clone_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Coin	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Coin : Item { };$/;"	s	file:
Color	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^} Color;$/;"	t	typeref:enum:__anon0f08a1c60103	file:
Color	lib/flecs/examples/cpp/reflection/basics_enum/src/main.cpp	/^enum Color {$/;"	g	file:
Color	lib/flecs/test/api/include/api.h	/^typedef struct Color {$/;"	s
Color	lib/flecs/test/api/include/api.h	/^} Color;$/;"	t	typeref:struct:Color
Color	lib/flecs/test/api/src/Plecs.c	/^    } Color;$/;"	t	function:Plecs_enum_type_w_default_child_component	typeref:enum:Plecs_enum_type_w_default_child_component::__anonb7ea1cde0f03	file:
Color	lib/flecs/test/api/src/Plecs.c	/^    } Color;$/;"	t	function:Plecs_type_and_assign_in_plecs_w_enum	typeref:enum:Plecs_type_and_assign_in_plecs_w_enum::__anonb7ea1cde0203	file:
Color	lib/flecs/test/api/src/Plecs.c	/^    } Color;$/;"	t	function:Plecs_type_and_assign_in_plecs_w_enum_primitive_and_struct	typeref:enum:Plecs_type_and_assign_in_plecs_w_enum_primitive_and_struct::__anonb7ea1cde0703	file:
Color	lib/flecs/test/api/src/Plecs.c	/^    } Color;$/;"	t	function:Plecs_type_and_assign_in_plecs_w_enum_primitive_using_meta	typeref:enum:Plecs_type_and_assign_in_plecs_w_enum_primitive_using_meta::__anonb7ea1cde0603	file:
Color	lib/flecs/test/api/src/Plecs.c	/^    } Color;$/;"	t	function:Plecs_type_and_assign_in_plecs_w_enum_using_meta	typeref:enum:Plecs_type_and_assign_in_plecs_w_enum_using_meta::__anonb7ea1cde0403	file:
Color	lib/flecs/test/meta/src/EnumTypes.c	/^    enum Color {$/;"	g	function:EnumTypes_enum_relation	file:
Color	lib/flecs/test/meta/src/SerializeToJson.c	/^    } Color;$/;"	t	function:SerializeToJson_serialize_entity_w_enum_component	typeref:enum:SerializeToJson_serialize_entity_w_enum_component::__anon413bd0792903	file:
Color	lib/flecs/test/meta/src/SerializeToJson.c	/^    } Color;$/;"	t	function:SerializeToJson_serialize_entity_w_invalid_enum_component	typeref:enum:SerializeToJson_serialize_entity_w_invalid_enum_component::__anon413bd0792b03	file:
Color	lib/flecs/test/meta/src/SerializeToJson.c	/^    } Color;$/;"	t	function:SerializeToJson_serialize_entity_w_struct_and_enum_component	typeref:enum:SerializeToJson_serialize_entity_w_struct_and_enum_component::__anon413bd0792a03	file:
ColumnArray	lib/flecs/flecs.h	/^    using ColumnArray = flecs::array<int32_t, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
ColumnArray	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    using ColumnArray = flecs::array<int32_t, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
CombatUnit	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^struct CombatUnit : Unit { };$/;"	s	file:
CombatUnit	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct CombatUnit : Unit { };$/;"	s	file:
Comp	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Comp {$/;"	s	namespace:A	file:
CompA	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompA	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompB	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompB	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompC	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompC	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompD	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompD	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompE	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompE	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompF	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompF	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompG	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompG	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompH	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompH	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompI	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompI	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompJ	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompJ	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompK	lib/flecs/test/api/src/Filter.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompK	lib/flecs/test/api/src/Query.c	/^} CompA, CompB, CompC, CompD, CompE, CompF, CompG, CompH, CompI, CompJ, CompK,$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompL	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompL	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompM	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompM	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompN	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompN	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompO	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompO	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompP	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompP	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompQ	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompQ	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompR	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompR	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompS	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompS	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompT	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompT	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
CompU	lib/flecs/test/api/src/Filter.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anona52ddc0d0108	file:
CompU	lib/flecs/test/api/src/Query.c	/^  CompL, CompM, CompN, CompO, CompP, CompQ, CompR, CompS, CompT, CompU;$/;"	t	typeref:struct:__anon19eb1a7d0108	file:
Component	lib/flecs/flecs.h	/^using Component = EcsComponent;$/;"	t	namespace:flecs	typeref:typename:EcsComponent
Component	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using Component = EcsComponent;$/;"	t	namespace:flecs	typeref:typename:EcsComponent
ComponentLifecycle	lib/flecs/flecs.h	/^using ComponentLifecycle = EcsComponentLifecycle;$/;"	t	namespace:flecs	typeref:typename:EcsComponentLifecycle
ComponentLifecycle	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using ComponentLifecycle = EcsComponentLifecycle;$/;"	t	namespace:flecs	typeref:typename:EcsComponentLifecycle
ComponentLifecycle_allow_lifecycle_overwrite_equal_callbacks	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_allow_lifecycle_overwrite_equal_callbacks() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_clone	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_clone() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_override	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_override() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_override	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_copy_on_override() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_override_pair	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_override_pair() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_override_pair_tag	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_override_pair_tag() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_set	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_set() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_set	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_copy_on_set() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_set_pair	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_set_pair() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_set_pair_tag	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_set_pair_tag() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_snapshot	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_snapshot() {$/;"	f	typeref:typename:void
ComponentLifecycle_copy_on_tag	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_copy_on_tag() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_copy_on_snapshot	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_copy_on_snapshot() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_add	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_on_add() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_add	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_ctor_on_add() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_add_pair	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_on_add_pair() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_add_pair_set_ctor_after_table	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_on_add_pair_set_ctor_after_table() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_add_pair_tag	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_on_add_pair_tag() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_add_pair_tag_set_ctor_after_table	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_on_add_pair_tag_set_ctor_after_table() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_move_pair	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_on_move_pair() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_new	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_on_new() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_on_tag	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_on_tag() {$/;"	f	typeref:typename:void
ComponentLifecycle_ctor_w_emplace	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_ctor_w_emplace() {$/;"	f	typeref:typename:void
ComponentLifecycle_default_ctor_w_value_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_default_ctor_w_value_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_default_init	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_default_init() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_in_dtor_other_type_on_delete	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_in_dtor_other_type_on_delete() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_in_dtor_other_type_on_delete_parent	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_in_dtor_other_type_on_delete_parent() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_in_dtor_other_type_on_fini	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_in_dtor_other_type_on_fini() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_in_dtor_same_type_on_delete	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_in_dtor_same_type_on_delete() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_in_dtor_same_type_on_delete_parent	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_in_dtor_same_type_on_delete_parent() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_in_dtor_same_type_on_fini	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_in_dtor_same_type_on_fini() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_in_stage	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_in_stage() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_no_default_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_delete_no_default_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_self_in_dtor_on_delete	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_self_in_dtor_on_delete() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_self_in_dtor_on_delete_parent	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_self_in_dtor_on_delete_parent() {$/;"	f	typeref:typename:void
ComponentLifecycle_delete_self_in_dtor_on_fini	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_delete_self_in_dtor_on_fini() {$/;"	f	typeref:typename:void
ComponentLifecycle_deleted_copy	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_deleted_copy() {$/;"	f	typeref:typename:void
ComponentLifecycle_dtor_on_delete	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_dtor_on_delete() {$/;"	f	typeref:typename:void
ComponentLifecycle_dtor_on_fini	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_dtor_on_fini() {$/;"	f	typeref:typename:void
ComponentLifecycle_dtor_on_remove	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_dtor_on_remove() {$/;"	f	typeref:typename:void
ComponentLifecycle_dtor_on_remove	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_dtor_on_remove() {$/;"	f	typeref:typename:void
ComponentLifecycle_dtor_on_restore	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_dtor_on_restore() {$/;"	f	typeref:typename:void
ComponentLifecycle_dtor_on_tag	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_dtor_on_tag() {$/;"	f	typeref:typename:void
ComponentLifecycle_dtor_w_non_trivial_explicit_move	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_dtor_w_non_trivial_explicit_move() {$/;"	f	typeref:typename:void
ComponentLifecycle_dtor_w_non_trivial_implicit_move	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_dtor_w_non_trivial_implicit_move() {$/;"	f	typeref:typename:void
ComponentLifecycle_emplace_existing	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_emplace_existing() {$/;"	f	typeref:typename:void
ComponentLifecycle_emplace_no_default_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_emplace_no_default_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_emplace_singleton	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_emplace_singleton() {$/;"	f	typeref:typename:void
ComponentLifecycle_emplace_w_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_emplace_w_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_flecs_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_flecs_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_flecs_ctor_w_default_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_flecs_ctor_w_default_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_flecs_ctor_w_value_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_flecs_ctor_w_value_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_get_mut_existing	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_get_mut_existing() {$/;"	f	typeref:typename:void
ComponentLifecycle_get_mut_new	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_get_mut_new() {$/;"	f	typeref:typename:void
ComponentLifecycle_grow_no_default_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_grow_no_default_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_grow_no_default_ctor_move	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_grow_no_default_ctor_move() {$/;"	f	typeref:typename:void
ComponentLifecycle_grow_no_default_ctor_move_w_component	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_grow_no_default_ctor_move_w_component() {$/;"	f	typeref:typename:void
ComponentLifecycle_implicit_after_query	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_implicit_after_query() {$/;"	f	typeref:typename:void
ComponentLifecycle_implicit_component	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_implicit_component() {$/;"	f	typeref:typename:void
ComponentLifecycle_merge_to_different_table	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_merge_to_different_table() {$/;"	f	typeref:typename:ECS_MOVE (Rotation,dst,src,{ move_rotation ++; })void	file:
ComponentLifecycle_merge_to_new_table	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_merge_to_new_table() {$/;"	f	typeref:typename:void
ComponentLifecycle_move_dtor_on_delete	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_move_dtor_on_delete() {$/;"	f	typeref:typename:void
ComponentLifecycle_move_on_add	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_move_on_add() {$/;"	f	typeref:typename:void
ComponentLifecycle_move_on_bulk_new	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_move_on_bulk_new() {$/;"	f	typeref:typename:void
ComponentLifecycle_move_on_delete	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_move_on_delete() {$/;"	f	typeref:typename:void
ComponentLifecycle_move_on_realloc	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_move_on_realloc() {$/;"	f	typeref:typename:void
ComponentLifecycle_move_on_remove	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_move_on_remove() {$/;"	f	typeref:typename:void
ComponentLifecycle_move_on_tag	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_move_on_tag() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_copy	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_copy() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_copy_assign	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_copy_assign() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_copy_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_copy_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_copy_on_move	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_no_copy_on_move() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_default_ctor_add	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_default_ctor_add() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_default_ctor_add_relation	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_default_ctor_add_relation() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_default_ctor_add_w_object	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_default_ctor_add_w_object() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_default_ctor_emplace	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_default_ctor_emplace() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_default_ctor_move_ctor_on_set	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_default_ctor_move_ctor_on_set() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_default_ctor_set	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_default_ctor_set() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_dtor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_dtor() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_move	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_move() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_move_assign	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_move_assign() {$/;"	f	typeref:typename:void
ComponentLifecycle_no_move_ctor	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_no_move_ctor() {$/;"	f	typeref:typename:void
ComponentLifecycle_non_pod_add	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_non_pod_add() {$/;"	f	typeref:typename:void
ComponentLifecycle_non_pod_override	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_non_pod_override() {$/;"	f	typeref:typename:void
ComponentLifecycle_non_pod_remove	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_non_pod_remove() {$/;"	f	typeref:typename:void
ComponentLifecycle_non_pod_set	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^void ComponentLifecycle_non_pod_set() {$/;"	f	typeref:typename:void
ComponentLifecycle_on_set_after_set	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_on_set_after_set() {$/;"	f
ComponentLifecycle_prevent_lifecycle_overwrite	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_prevent_lifecycle_overwrite() {$/;"	f	typeref:typename:void
ComponentLifecycle_prevent_lifecycle_overwrite_null_callbacks	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_prevent_lifecycle_overwrite_null_callbacks() {$/;"	f	typeref:typename:void
ComponentLifecycle_set_lifecycle_after_trigger	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_set_lifecycle_after_trigger() {$/;"	f	typeref:typename:void
ComponentLifecycle_setup	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_setup() {$/;"	f	typeref:typename:void
ComponentLifecycle_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case ComponentLifecycle_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
ComponentLifecycle_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case ComponentLifecycle_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
ComponentLifecycle_valid_entity_in_dtor_after_delete	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_valid_entity_in_dtor_after_delete() {$/;"	f	typeref:typename:void
ComponentLifecycle_valid_other_type_of_entity_in_dtor_on_fini	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_valid_other_type_of_entity_in_dtor_on_fini() {$/;"	f	typeref:typename:void
ComponentLifecycle_valid_same_type_comp_of_entity_in_dtor_on_delete_parent	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_valid_same_type_comp_of_entity_in_dtor_on_delete_parent() {$/;"	f	typeref:typename:void
ComponentLifecycle_valid_same_type_comp_of_entity_in_dtor_on_fini	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_valid_same_type_comp_of_entity_in_dtor_on_fini() {$/;"	f	typeref:typename:void
ComponentLifecycle_valid_type_in_dtor_on_fini	lib/flecs/test/api/src/ComponentLifecycle.c	/^void ComponentLifecycle_valid_type_in_dtor_on_fini() {$/;"	f	typeref:typename:void
ComponentWriteState	lib/flecs/flecs.c	/^typedef enum ComponentWriteState {$/;"	g	file:
ComponentWriteState	lib/flecs/flecs.c	/^} ComponentWriteState;$/;"	t	typeref:enum:ComponentWriteState	file:
ComponentWriteState	lib/flecs/src/addons/pipeline/pipeline.c	/^typedef enum ComponentWriteState {$/;"	g	file:
ComponentWriteState	lib/flecs/src/addons/pipeline/pipeline.c	/^} ComponentWriteState;$/;"	t	typeref:enum:ComponentWriteState	file:
ConstPtrArray	lib/flecs/flecs.h	/^    using ConstPtrArray = flecs::array<const void*, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
ConstPtrArray	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    using ConstPtrArray = flecs::array<const void*, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
Constant	lib/flecs/flecs.h	/^static const flecs::entity_t Constant = EcsConstant;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Constant	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t Constant = EcsConstant;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
ConstantsWithNum	lib/flecs/test/cpp_api/src/Enum.cpp	/^enum ConstantsWithNum {$/;"	g	file:
ContainedBy	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct ContainedBy { }; \/\/ ContainedBy relationship$/;"	s	file:
Container	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Container { };   \/\/ Container tag$/;"	s	file:
Continent	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^struct Continent { };$/;"	s	file:
CountNoDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    CountNoDefaultCtor(CountNoDefaultCtor&& obj) {$/;"	f	class:CountNoDefaultCtor
CountNoDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    CountNoDefaultCtor(const CountNoDefaultCtor& obj) {$/;"	f	class:CountNoDefaultCtor
CountNoDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    CountNoDefaultCtor(int v) {$/;"	f	class:CountNoDefaultCtor
CountNoDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^class CountNoDefaultCtor {$/;"	c
Count_count_1_component	lib/flecs/test/api/src/Count.c	/^void Count_count_1_component() {$/;"	f	typeref:typename:void
Count_count_empty	lib/flecs/test/api/src/Count.c	/^void Count_count_empty() {$/;"	f	typeref:typename:void
Count_count_w_entity_0	lib/flecs/test/api/src/Count.c	/^void Count_count_w_entity_0() {$/;"	f	typeref:typename:void
Count_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Count_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Country	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^struct Country { };$/;"	s	file:
CreateEntity	lib/flecs/test/api/src/Delete.c	/^void CreateEntity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
CreateInstances	lib/flecs/test/api/src/Prefab.c	/^void CreateInstances(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
CreateNewTable	lib/flecs/test/api/src/Internals.c	/^void CreateNewTable(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
CreateQuery	lib/flecs/test/api/src/Pipeline.c	/^void CreateQuery(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
CreateTriggers	lib/flecs/test/api/src/Trigger.c	/^static void CreateTriggers(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
CreateTriggers_ctx	lib/flecs/test/api/src/Trigger.c	/^} CreateTriggers_ctx;$/;"	t	typeref:struct:__anonf2e46c1b0108	file:
CreateV	lib/flecs/test/api/src/Snapshot.c	/^void CreateV(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Create_container	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Create_container(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Create_container_reverse	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Create_container_reverse(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
CtorDtorNonTrivial	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    CtorDtorNonTrivial(int x) : x_(x) {$/;"	f	class:CtorDtorNonTrivial	file:
CtorDtorNonTrivial	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^class CtorDtorNonTrivial {$/;"	c	file:
CtorDtor_w_MoveAssign	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    CtorDtor_w_MoveAssign(int x) : x_(x) {$/;"	f	class:CtorDtor_w_MoveAssign	file:
CtorDtor_w_MoveAssign	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^class CtorDtor_w_MoveAssign {$/;"	c	file:
Cursor_set_bool	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_bool() {$/;"	f	typeref:typename:void
Cursor_set_byte	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_byte() {$/;"	f	typeref:typename:void
Cursor_set_char	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_char() {$/;"	f	typeref:typename:void
Cursor_set_double	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_double() {$/;"	f	typeref:typename:void
Cursor_set_entity	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_entity() {$/;"	f	typeref:typename:void
Cursor_set_entity_to_0	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_entity_to_0() {$/;"	f	typeref:typename:void
Cursor_set_entity_to_number	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_entity_to_number() {$/;"	f	typeref:typename:void
Cursor_set_float	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_float() {$/;"	f	typeref:typename:void
Cursor_set_i16	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_i16() {$/;"	f	typeref:typename:void
Cursor_set_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_i32() {$/;"	f	typeref:typename:void
Cursor_set_i64	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_i64() {$/;"	f	typeref:typename:void
Cursor_set_i8	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_i8() {$/;"	f	typeref:typename:void
Cursor_set_iptr	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_iptr() {$/;"	f	typeref:typename:void
Cursor_set_str_literal_to_char	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_literal_to_char() {$/;"	f	typeref:typename:void
Cursor_set_str_to_bool	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_bool() {$/;"	f	typeref:typename:void
Cursor_set_str_to_char	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_char() {$/;"	f	typeref:typename:void
Cursor_set_str_to_entity	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_entity() {$/;"	f	typeref:typename:void
Cursor_set_str_to_f32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_f32() {$/;"	f	typeref:typename:void
Cursor_set_str_to_f64	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_f64() {$/;"	f	typeref:typename:void
Cursor_set_str_to_i16	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_i16() {$/;"	f	typeref:typename:void
Cursor_set_str_to_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_i32() {$/;"	f	typeref:typename:void
Cursor_set_str_to_i64	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_i64() {$/;"	f	typeref:typename:void
Cursor_set_str_to_i8	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_i8() {$/;"	f	typeref:typename:void
Cursor_set_str_to_invalid_bool	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_invalid_bool() {$/;"	f	typeref:typename:void
Cursor_set_str_to_invalid_entity	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_str_to_invalid_entity() {$/;"	f	typeref:typename:void
Cursor_set_string	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_string() {$/;"	f	typeref:typename:void
Cursor_set_string_literal	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_string_literal() {$/;"	f	typeref:typename:void
Cursor_set_string_to_null	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_string_to_null() {$/;"	f	typeref:typename:void
Cursor_set_u16	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_u16() {$/;"	f	typeref:typename:void
Cursor_set_u32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_u32() {$/;"	f	typeref:typename:void
Cursor_set_u64	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_u64() {$/;"	f	typeref:typename:void
Cursor_set_u8	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_u8() {$/;"	f	typeref:typename:void
Cursor_set_uptr	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_set_uptr() {$/;"	f	typeref:typename:void
Cursor_struct_2_nested_1_i32_2_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_2_nested_1_i32_2_i32() {$/;"	f	typeref:typename:void
Cursor_struct_2_nested_1_i32_i32_2_i32_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_2_nested_1_i32_i32_2_i32_i32() {$/;"	f	typeref:typename:void
Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members() {$/;"	f	typeref:typename:void
Cursor_struct_member_2_nested_i32_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_member_2_nested_i32_i32() {$/;"	f	typeref:typename:void
Cursor_struct_member_2_nested_i32_i32_reverse	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_member_2_nested_i32_i32_reverse() {$/;"	f	typeref:typename:void
Cursor_struct_member_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_member_i32() {$/;"	f	typeref:typename:void
Cursor_struct_member_i32_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_member_i32_i32() {$/;"	f	typeref:typename:void
Cursor_struct_member_i32_i32_reverse	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_member_i32_i32_reverse() {$/;"	f	typeref:typename:void
Cursor_struct_member_nested_i32_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_member_nested_i32_i32() {$/;"	f	typeref:typename:void
Cursor_struct_nested_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_nested_i32() {$/;"	f	typeref:typename:void
Cursor_struct_set_2_array_i32_3	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_2_array_i32_3() {$/;"	f	typeref:typename:void
Cursor_struct_set_2_array_i32_3_w_padding_members	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_2_array_i32_3_w_padding_members() {$/;"	f	typeref:typename:void
Cursor_struct_set_2_array_w_struct_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_2_array_w_struct_i32() {$/;"	f	typeref:typename:void
Cursor_struct_set_2_array_w_struct_w_array_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_2_array_w_struct_w_array_i32() {$/;"	f	typeref:typename:void
Cursor_struct_set_array_i32_3	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_array_i32_3() {$/;"	f	typeref:typename:void
Cursor_struct_set_array_w_struct_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_array_w_struct_i32() {$/;"	f	typeref:typename:void
Cursor_struct_set_array_w_struct_w_array_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_array_w_struct_w_array_i32() {$/;"	f	typeref:typename:void
Cursor_struct_set_bool	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_bool() {$/;"	f	typeref:typename:void
Cursor_struct_set_bool_bool	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_bool_bool() {$/;"	f	typeref:typename:void
Cursor_struct_set_bool_bool_bool	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_bool_bool_bool() {$/;"	f	typeref:typename:void
Cursor_struct_set_bool_bool_i32_bool	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_bool_bool_i32_bool() {$/;"	f	typeref:typename:void
Cursor_struct_set_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_i32() {$/;"	f	typeref:typename:void
Cursor_struct_set_i32_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_i32_i32() {$/;"	f	typeref:typename:void
Cursor_struct_set_i32_i32_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_set_i32_i32_i32() {$/;"	f	typeref:typename:void
Cursor_struct_w_2_array_type_i32_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_w_2_array_type_i32_i32() {$/;"	f	typeref:typename:void
Cursor_struct_w_2_array_type_struct	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_w_2_array_type_struct() {$/;"	f	typeref:typename:void
Cursor_struct_w_array_type_i32_i32	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_w_array_type_i32_i32() {$/;"	f	typeref:typename:void
Cursor_struct_w_array_type_struct	lib/flecs/test/meta/src/Cursor.c	/^void Cursor_struct_w_array_type_struct() {$/;"	f	typeref:typename:void
Cursor_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case Cursor_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
DATA	lib/flecs/flecs.c	/^#define DATA(/;"	d	file:
DATA	lib/flecs/src/datastructures/sparse.c	/^#define DATA(/;"	d	file:
DColor	include/colors.h	/^struct DColor {$/;"	s
DECLTYPE	lib/uthash/include/uthash.h	/^#define DECLTYPE(/;"	d
DECLTYPE	lib/uthash/src/uthash.h	/^#define DECLTYPE(/;"	d
DECLTYPE_ASSIGN	lib/uthash/include/uthash.h	/^#define DECLTYPE_ASSIGN(/;"	d
DECLTYPE_ASSIGN	lib/uthash/src/uthash.h	/^#define DECLTYPE_ASSIGN(/;"	d
DELTA_TIME_BAKE_CONFIG_H	lib/flecs/examples/c/systems/delta_time/include/delta_time/bake_config.h	/^#define DELTA_TIME_BAKE_CONFIG_H$/;"	d
DELTA_TIME_BAKE_CONFIG_H	lib/flecs/examples/cpp/systems/delta_time/include/delta_time/bake_config.h	/^#define DELTA_TIME_BAKE_CONFIG_H$/;"	d
DELTA_TIME_H	lib/flecs/examples/c/systems/delta_time/include/delta_time.h	/^#define DELTA_TIME_H$/;"	d
DELTA_TIME_H	lib/flecs/examples/cpp/systems/delta_time/include/delta_time.h	/^#define DELTA_TIME_H$/;"	d
DIRLIST	lib/flecs/examples/CMakeLists.txt	/^    set(DIRLIST "")$/;"	v
DL_APPEND	lib/uthash/include/utlist.h	/^#define DL_APPEND(/;"	d
DL_APPEND	lib/uthash/src/utlist.h	/^#define DL_APPEND(/;"	d
DL_APPEND2	lib/uthash/include/utlist.h	/^#define DL_APPEND2(/;"	d
DL_APPEND2	lib/uthash/src/utlist.h	/^#define DL_APPEND2(/;"	d
DL_APPEND_ELEM	lib/uthash/include/utlist.h	/^#define DL_APPEND_ELEM(/;"	d
DL_APPEND_ELEM	lib/uthash/src/utlist.h	/^#define DL_APPEND_ELEM(/;"	d
DL_APPEND_ELEM2	lib/uthash/include/utlist.h	/^#define DL_APPEND_ELEM2(/;"	d
DL_APPEND_ELEM2	lib/uthash/src/utlist.h	/^#define DL_APPEND_ELEM2(/;"	d
DL_CONCAT	lib/uthash/include/utlist.h	/^#define DL_CONCAT(/;"	d
DL_CONCAT	lib/uthash/src/utlist.h	/^#define DL_CONCAT(/;"	d
DL_CONCAT2	lib/uthash/include/utlist.h	/^#define DL_CONCAT2(/;"	d
DL_CONCAT2	lib/uthash/src/utlist.h	/^#define DL_CONCAT2(/;"	d
DL_COUNT	lib/uthash/include/utlist.h	/^#define DL_COUNT(/;"	d
DL_COUNT	lib/uthash/src/utlist.h	/^#define DL_COUNT(/;"	d
DL_COUNT2	lib/uthash/include/utlist.h	/^#define DL_COUNT2(/;"	d
DL_COUNT2	lib/uthash/src/utlist.h	/^#define DL_COUNT2(/;"	d
DL_DELETE	lib/uthash/include/utlist.h	/^#define DL_DELETE(/;"	d
DL_DELETE	lib/uthash/src/utlist.h	/^#define DL_DELETE(/;"	d
DL_DELETE2	lib/uthash/include/utlist.h	/^#define DL_DELETE2(/;"	d
DL_DELETE2	lib/uthash/src/utlist.h	/^#define DL_DELETE2(/;"	d
DL_FOREACH	lib/uthash/include/utlist.h	/^#define DL_FOREACH(/;"	d
DL_FOREACH	lib/uthash/src/utlist.h	/^#define DL_FOREACH(/;"	d
DL_FOREACH2	lib/uthash/include/utlist.h	/^#define DL_FOREACH2(/;"	d
DL_FOREACH2	lib/uthash/src/utlist.h	/^#define DL_FOREACH2(/;"	d
DL_FOREACH_SAFE	lib/uthash/include/utlist.h	/^#define DL_FOREACH_SAFE(/;"	d
DL_FOREACH_SAFE	lib/uthash/src/utlist.h	/^#define DL_FOREACH_SAFE(/;"	d
DL_FOREACH_SAFE2	lib/uthash/include/utlist.h	/^#define DL_FOREACH_SAFE2(/;"	d
DL_FOREACH_SAFE2	lib/uthash/src/utlist.h	/^#define DL_FOREACH_SAFE2(/;"	d
DL_INSERT_INORDER	lib/uthash/include/utlist.h	/^#define DL_INSERT_INORDER(/;"	d
DL_INSERT_INORDER	lib/uthash/src/utlist.h	/^#define DL_INSERT_INORDER(/;"	d
DL_INSERT_INORDER2	lib/uthash/include/utlist.h	/^#define DL_INSERT_INORDER2(/;"	d
DL_INSERT_INORDER2	lib/uthash/src/utlist.h	/^#define DL_INSERT_INORDER2(/;"	d
DL_LOWER_BOUND	lib/uthash/include/utlist.h	/^#define DL_LOWER_BOUND(/;"	d
DL_LOWER_BOUND	lib/uthash/src/utlist.h	/^#define DL_LOWER_BOUND(/;"	d
DL_LOWER_BOUND2	lib/uthash/include/utlist.h	/^#define DL_LOWER_BOUND2(/;"	d
DL_LOWER_BOUND2	lib/uthash/src/utlist.h	/^#define DL_LOWER_BOUND2(/;"	d
DL_PREPEND	lib/uthash/include/utlist.h	/^#define DL_PREPEND(/;"	d
DL_PREPEND	lib/uthash/src/utlist.h	/^#define DL_PREPEND(/;"	d
DL_PREPEND2	lib/uthash/include/utlist.h	/^#define DL_PREPEND2(/;"	d
DL_PREPEND2	lib/uthash/src/utlist.h	/^#define DL_PREPEND2(/;"	d
DL_PREPEND_ELEM	lib/uthash/include/utlist.h	/^#define DL_PREPEND_ELEM(/;"	d
DL_PREPEND_ELEM	lib/uthash/src/utlist.h	/^#define DL_PREPEND_ELEM(/;"	d
DL_PREPEND_ELEM2	lib/uthash/include/utlist.h	/^#define DL_PREPEND_ELEM2(/;"	d
DL_PREPEND_ELEM2	lib/uthash/src/utlist.h	/^#define DL_PREPEND_ELEM2(/;"	d
DL_REPLACE_ELEM	lib/uthash/include/utlist.h	/^#define DL_REPLACE_ELEM(/;"	d
DL_REPLACE_ELEM	lib/uthash/src/utlist.h	/^#define DL_REPLACE_ELEM(/;"	d
DL_REPLACE_ELEM2	lib/uthash/include/utlist.h	/^#define DL_REPLACE_ELEM2(/;"	d
DL_REPLACE_ELEM2	lib/uthash/src/utlist.h	/^#define DL_REPLACE_ELEM2(/;"	d
DL_SEARCH	lib/uthash/include/utlist.h	/^#define DL_SEARCH /;"	d
DL_SEARCH	lib/uthash/src/utlist.h	/^#define DL_SEARCH /;"	d
DL_SEARCH2	lib/uthash/include/utlist.h	/^#define DL_SEARCH2 /;"	d
DL_SEARCH2	lib/uthash/src/utlist.h	/^#define DL_SEARCH2 /;"	d
DL_SEARCH_SCALAR	lib/uthash/include/utlist.h	/^#define DL_SEARCH_SCALAR /;"	d
DL_SEARCH_SCALAR	lib/uthash/src/utlist.h	/^#define DL_SEARCH_SCALAR /;"	d
DL_SEARCH_SCALAR2	lib/uthash/include/utlist.h	/^#define DL_SEARCH_SCALAR2 /;"	d
DL_SEARCH_SCALAR2	lib/uthash/src/utlist.h	/^#define DL_SEARCH_SCALAR2 /;"	d
DL_SORT	lib/uthash/include/utlist.h	/^#define DL_SORT(/;"	d
DL_SORT	lib/uthash/src/utlist.h	/^#define DL_SORT(/;"	d
DL_SORT2	lib/uthash/include/utlist.h	/^#define DL_SORT2(/;"	d
DL_SORT2	lib/uthash/src/utlist.h	/^#define DL_SORT2(/;"	d
DOC_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/doc/include/doc/bake_config.h	/^#define DOC_BAKE_CONFIG_H$/;"	d
DOC_H	lib/flecs/test/custom_builds/cpp/doc/include/doc.h	/^#define DOC_H$/;"	d
DUNGEON_SCREEN_H	include/screens/gamescreen.h	/^#define DUNGEON_SCREEN_H$/;"	d
Data	lib/flecs/flecs.h	/^struct Data { };$/;"	s	struct:flecs::units
Data	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Data { };$/;"	s	struct:flecs::units
DataRate	lib/flecs/flecs.h	/^struct DataRate { };$/;"	s	struct:flecs::units
DataRate	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct DataRate { };$/;"	s	struct:flecs::units
Date	lib/flecs/flecs.h	/^struct Date { };$/;"	s	struct:flecs::units::time
Date	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Date { };$/;"	s	struct:flecs::units::time
Days	lib/flecs/flecs.h	/^struct Days { };$/;"	s	struct:flecs::units::duration
Days	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Days { };$/;"	s	struct:flecs::units::duration
Deca	lib/flecs/flecs.h	/^struct Deca { };$/;"	s	struct:flecs::units
Deca	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Deca { };$/;"	s	struct:flecs::units
Deci	lib/flecs/flecs.h	/^struct Deci { };$/;"	s	struct:flecs::units
Deci	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Deci { };$/;"	s	struct:flecs::units
DeciBel	lib/flecs/flecs.h	/^struct DeciBel { };$/;"	s	struct:flecs::units
DeciBel	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct DeciBel { };$/;"	s	struct:flecs::units
DefaultCtorValueCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    DefaultCtorValueCtor() : x_(99) { }$/;"	f	struct:DefaultCtorValueCtor
DefaultCtorValueCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    DefaultCtorValueCtor(int x) : x_(x) { }$/;"	f	struct:DefaultCtorValueCtor
DefaultCtorValueCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct DefaultCtorValueCtor {$/;"	s
DefaultInit	lib/flecs/test/cpp_api/include/cpp_api.h	/^    DefaultInit() : x_(99) { test_assert(y_ == 99); }$/;"	f	struct:DefaultInit
DefaultInit	lib/flecs/test/cpp_api/include/cpp_api.h	/^    DefaultInit(int x) : x_(x) { test_assert(y_ == 99); }$/;"	f	struct:DefaultInit
DefaultInit	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct DefaultInit {$/;"	s
DefaultSet	lib/flecs/flecs.h	/^static const uint8_t DefaultSet = EcsDefaultSet;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
DefaultSet	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const uint8_t DefaultSet = EcsDefaultSet;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Defense	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } Defense;$/;"	t	typeref:struct:__anonfbee6d870208	file:
Defense	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct Defense { double value; };$/;"	s	file:
DeferredActions_async_stage_add	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_add() {$/;"	f	typeref:typename:void
DeferredActions_async_stage_add_twice	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_add_twice() {$/;"	f	typeref:typename:void
DeferredActions_async_stage_clear	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_clear() {$/;"	f	typeref:typename:void
DeferredActions_async_stage_delete	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_delete() {$/;"	f	typeref:typename:void
DeferredActions_async_stage_is_async	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_is_async() {$/;"	f	typeref:typename:void
DeferredActions_async_stage_new	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_new() {$/;"	f	typeref:typename:void
DeferredActions_async_stage_no_get	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_no_get() {$/;"	f	typeref:typename:void
DeferredActions_async_stage_readonly	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_readonly() {$/;"	f	typeref:typename:void
DeferredActions_async_stage_remove	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_async_stage_remove() {$/;"	f	typeref:typename:void
DeferredActions_defer_add	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_after_delete	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_after_delete() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_child_to_deleted_parent	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_child_to_deleted_parent() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_deleted_id	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_deleted_id() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_deleted_id_w_role	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_deleted_id_w_role() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_deleted_object	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_deleted_object() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_deleted_object_childof	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_deleted_object_childof() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_deleted_relation	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_deleted_relation() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_recycled_id	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_recycled_id() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_recycled_id_w_role	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_recycled_id_w_role() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_recycled_object	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_recycled_object() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_recycled_object_childof	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_recycled_object_childof() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_to_recycled_relation	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_to_recycled_relation() {$/;"	f	typeref:typename:void
DeferredActions_defer_add_two	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_add_two() {$/;"	f	typeref:typename:void
DeferredActions_defer_bulk_new	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_bulk_new() {$/;"	f	typeref:typename:void
DeferredActions_defer_clear	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_clear() {$/;"	f	typeref:typename:void
DeferredActions_defer_delete	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_delete() {$/;"	f	typeref:typename:void
DeferredActions_defer_delete_added_id	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_delete_added_id() {$/;"	f	typeref:typename:void
DeferredActions_defer_delete_added_id_w_role	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_delete_added_id_w_role() {$/;"	f	typeref:typename:void
DeferredActions_defer_delete_added_object	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_delete_added_object() {$/;"	f	typeref:typename:void
DeferredActions_defer_delete_added_object_childof	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_delete_added_object_childof() {$/;"	f	typeref:typename:void
DeferredActions_defer_delete_added_relation	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_delete_added_relation() {$/;"	f	typeref:typename:void
DeferredActions_defer_delete_with	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_delete_with() {$/;"	f	typeref:typename:void
DeferredActions_defer_disable	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_disable() {$/;"	f	typeref:typename:void
DeferredActions_defer_enable	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_enable() {$/;"	f	typeref:typename:void
DeferredActions_defer_get_mut_after_delete	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_get_mut_after_delete() {$/;"	f	typeref:typename:void
DeferredActions_defer_get_mut_after_delete_2nd_to_last	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_get_mut_after_delete_2nd_to_last() {$/;"	f	typeref:typename:void
DeferredActions_defer_get_mut_no_modify	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_get_mut_no_modify() {$/;"	f	typeref:typename:void
DeferredActions_defer_get_mut_pair	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_get_mut_pair() {$/;"	f	typeref:typename:void
DeferredActions_defer_get_mut_w_modify	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_get_mut_w_modify() {$/;"	f	typeref:typename:void
DeferredActions_defer_modify	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_modify() {$/;"	f	typeref:typename:void
DeferredActions_defer_new	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_new() {$/;"	f	typeref:typename:void
DeferredActions_defer_remove	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_remove() {$/;"	f	typeref:typename:void
DeferredActions_defer_remove_all	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_remove_all() {$/;"	f	typeref:typename:void
DeferredActions_defer_remove_two	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_remove_two() {$/;"	f	typeref:typename:void
DeferredActions_defer_return_value	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_return_value() {$/;"	f	typeref:typename:void
DeferredActions_defer_set	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_set() {$/;"	f	typeref:typename:void
DeferredActions_defer_set_after_delete	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_set_after_delete() {$/;"	f	typeref:typename:void
DeferredActions_defer_set_pair	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_set_pair() {$/;"	f	typeref:typename:void
DeferredActions_defer_twice	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_twice() {$/;"	f	typeref:typename:void
DeferredActions_defer_twice_in_progress	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_defer_twice_in_progress() {$/;"	f	typeref:typename:void
DeferredActions_discard_add	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_discard_add() {$/;"	f	typeref:typename:void
DeferredActions_discard_add_two	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_discard_add_two() {$/;"	f	typeref:typename:void
DeferredActions_discard_child	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_discard_child() {$/;"	f	typeref:typename:void
DeferredActions_discard_child_w_add	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_discard_child_w_add() {$/;"	f	typeref:typename:void
DeferredActions_discard_remove	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_discard_remove() {$/;"	f	typeref:typename:void
DeferredActions_discard_remove_two	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_discard_remove_two() {$/;"	f	typeref:typename:void
DeferredActions_recreate_deleted_entity_while_deferred	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_recreate_deleted_entity_while_deferred() {$/;"	f	typeref:typename:void
DeferredActions_register_component_while_deferred	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_register_component_while_deferred() {$/;"	f	typeref:typename:void
DeferredActions_register_component_while_in_progress	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_register_component_while_in_progress() {$/;"	f	typeref:typename:void
DeferredActions_register_component_while_staged	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_register_component_while_staged() {$/;"	f	typeref:typename:void
DeferredActions_run_w_defer	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_run_w_defer() {$/;"	f	typeref:typename:void
DeferredActions_system_in_progress_w_defer	lib/flecs/test/api/src/DeferredActions.c	/^void DeferredActions_system_in_progress_w_defer() {$/;"	f	typeref:typename:void
DeferredActions_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case DeferredActions_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Degrees	lib/flecs/flecs.h	/^struct Degrees { };$/;"	s	struct:flecs::units::angle
Degrees	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Degrees { };$/;"	s	struct:flecs::units::angle
Deinit	lib/flecs/test/api/src/TriggerOnRemove.c	/^void Deinit(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Delete	lib/flecs/flecs.h	/^static const flecs::entity_t Delete = EcsDelete;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Delete	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Delete = EcsDelete;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
DeleteEntity	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^void DeleteEntity(ecs_iter_t *it) {$/;"	f	typeref:typename:void
DeleteEntity	lib/flecs/test/api/src/Delete.c	/^void DeleteEntity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Delete_above_1000	lib/flecs/test/api/src/Stresstests.c	/^void Delete_above_1000(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Delete_after_set	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Delete_after_set(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Delete_alive_after_clear	lib/flecs/test/api/src/Delete.c	/^void Delete_alive_after_clear() {$/;"	f	typeref:typename:void
Delete_alive_after_delete	lib/flecs/test/api/src/Delete.c	/^void Delete_alive_after_delete() {$/;"	f	typeref:typename:void
Delete_alive_after_recycle	lib/flecs/test/api/src/Delete.c	/^void Delete_alive_after_recycle() {$/;"	f	typeref:typename:void
Delete_alive_after_staged_delete	lib/flecs/test/api/src/Delete.c	/^void Delete_alive_after_staged_delete() {$/;"	f	typeref:typename:void
Delete_alive_while_staged	lib/flecs/test/api/src/Delete.c	/^void Delete_alive_while_staged() {$/;"	f	typeref:typename:void
Delete_alive_while_staged_w_delete	lib/flecs/test/api/src/Delete.c	/^void Delete_alive_while_staged_w_delete() {$/;"	f	typeref:typename:void
Delete_alive_while_staged_w_delete_recycled_id	lib/flecs/test/api/src/Delete.c	/^void Delete_alive_while_staged_w_delete_recycled_id() {$/;"	f	typeref:typename:void
Delete_clear_1_component	lib/flecs/test/api/src/Delete.c	/^void Delete_clear_1_component() {$/;"	f	typeref:typename:void
Delete_clear_2_components	lib/flecs/test/api/src/Delete.c	/^void Delete_clear_2_components() {$/;"	f	typeref:typename:void
Delete_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Delete_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Delete_delete_1	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_1() {$/;"	f	typeref:typename:void
Delete_delete_1_again	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_1_again() {$/;"	f	typeref:typename:void
Delete_delete_1st_of_3	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_1st_of_3() {$/;"	f	typeref:typename:void
Delete_delete_2_of_3	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_2_of_3() {$/;"	f	typeref:typename:void
Delete_delete_2nd_of_3	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_2nd_of_3() {$/;"	f	typeref:typename:void
Delete_delete_3_of_3	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_3_of_3() {$/;"	f	typeref:typename:void
Delete_delete_3rd_of_3	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_3rd_of_3() {$/;"	f	typeref:typename:void
Delete_delete_empty	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_empty() {$/;"	f	typeref:typename:void
Delete_delete_nonexist	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_nonexist() {$/;"	f	typeref:typename:void
Delete_delete_recycled	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_recycled() {$/;"	f	typeref:typename:void
Delete_delete_w_on_remove	lib/flecs/test/api/src/Delete.c	/^void Delete_delete_w_on_remove() {$/;"	f	typeref:typename:void
Delete_even	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Delete_even(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Delete_get_alive_for_0	lib/flecs/test/api/src/Delete.c	/^void Delete_get_alive_for_0() {$/;"	f	typeref:typename:void
Delete_get_alive_for_alive	lib/flecs/test/api/src/Delete.c	/^void Delete_get_alive_for_alive() {$/;"	f	typeref:typename:void
Delete_get_alive_for_nonexistent	lib/flecs/test/api/src/Delete.c	/^void Delete_get_alive_for_nonexistent() {$/;"	f	typeref:typename:void
Delete_get_alive_for_not_alive	lib/flecs/test/api/src/Delete.c	/^void Delete_get_alive_for_not_alive() {$/;"	f	typeref:typename:void
Delete_get_alive_for_recycled	lib/flecs/test/api/src/Delete.c	/^void Delete_get_alive_for_recycled() {$/;"	f	typeref:typename:void
Delete_get_alive_w_generation_for_recycled_alive	lib/flecs/test/api/src/Delete.c	/^void Delete_get_alive_w_generation_for_recycled_alive() {$/;"	f	typeref:typename:void
Delete_get_alive_w_generation_for_recycled_not_alive	lib/flecs/test/api/src/Delete.c	/^void Delete_get_alive_w_generation_for_recycled_not_alive() {$/;"	f	typeref:typename:void
Delete_move_w_dtor_move	lib/flecs/test/api/src/Delete.c	/^void Delete_move_w_dtor_move() {$/;"	f	file:
Delete_move_w_dtor_no_move	lib/flecs/test/api/src/Delete.c	/^void Delete_move_w_dtor_no_move() {$/;"	f	typeref:typename:void
Delete_move_w_no_dtor_move	lib/flecs/test/api/src/Delete.c	/^void Delete_move_w_no_dtor_move() {$/;"	f	typeref:typename:void
Delete_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Delete_new_empty(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Delete_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Delete_new_w_component(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Delete_setup	lib/flecs/test/api/src/Delete.c	/^void Delete_setup() {$/;"	f	typeref:typename:void
Delete_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Delete_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Delete_wrap_generation_count	lib/flecs/test/api/src/Delete.c	/^void Delete_wrap_generation_count() {$/;"	f	typeref:typename:void
DequeueRest	lib/flecs/flecs.c	/^void DequeueRest(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
DequeueRest	lib/flecs/src/addons/rest.c	/^void DequeueRest(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Description	lib/flecs/flecs.h	/^using Description = EcsDocDescription;$/;"	t	namespace:flecs::doc	typeref:typename:EcsDocDescription
Description	lib/flecs/include/flecs/addons/cpp/mixins/doc/decl.hpp	/^using Description = EcsDocDescription;$/;"	t	namespace:flecs::doc	typeref:typename:EcsDocDescription
DeserializeFromExpr_bitmask	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_bitmask() {$/;"	f	typeref:typename:void
DeserializeFromExpr_bool	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_bool() {$/;"	f	typeref:typename:void
DeserializeFromExpr_byte	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_byte() {$/;"	f	typeref:typename:void
DeserializeFromExpr_char	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_char() {$/;"	f	typeref:typename:void
DeserializeFromExpr_char_literal	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_char_literal() {$/;"	f	typeref:typename:void
DeserializeFromExpr_double	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_double() {$/;"	f	typeref:typename:void
DeserializeFromExpr_entity	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_entity() {$/;"	f	typeref:typename:void
DeserializeFromExpr_enum	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_enum() {$/;"	f	typeref:typename:void
DeserializeFromExpr_float	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_float() {$/;"	f	typeref:typename:void
DeserializeFromExpr_i16	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_i16() {$/;"	f	typeref:typename:void
DeserializeFromExpr_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_i64	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_i64() {$/;"	f	typeref:typename:void
DeserializeFromExpr_i8	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_i8() {$/;"	f	typeref:typename:void
DeserializeFromExpr_iptr	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_iptr() {$/;"	f	typeref:typename:void
DeserializeFromExpr_negative_float	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_negative_float() {$/;"	f	typeref:typename:void
DeserializeFromExpr_negative_int	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_negative_int() {$/;"	f	typeref:typename:void
DeserializeFromExpr_string	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_string() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_2_nested_i32_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_2_nested_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_bitmask	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_bitmask() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_entity	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_entity() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_enum	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_enum() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_i32_array_3	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_i32_array_3() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_i32_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_member_2_nested_i32_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_member_2_nested_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_member_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_member_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_member_i32_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_member_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_member_nested_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_member_nested_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_member_nested_i32_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_member_nested_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_nested_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_nested_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_nested_i32_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_nested_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_struct_i32_array_3	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_struct_i32_array_3() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_struct_i32_i32_array_3	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_struct_i32_i32_array_3() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_w_2_array_type_i32_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_w_2_array_type_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_w_2_array_type_struct	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_w_2_array_type_struct() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_w_array_type_i32_i32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_w_array_type_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_struct_w_array_type_struct	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_struct_w_array_type_struct() {$/;"	f	typeref:typename:void
DeserializeFromExpr_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case DeserializeFromExpr_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
DeserializeFromExpr_u16	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_u16() {$/;"	f	typeref:typename:void
DeserializeFromExpr_u32	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_u32() {$/;"	f	typeref:typename:void
DeserializeFromExpr_u64	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_u64() {$/;"	f	typeref:typename:void
DeserializeFromExpr_u8	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_u8() {$/;"	f	typeref:typename:void
DeserializeFromExpr_uptr	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^void DeserializeFromExpr_uptr() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_2_nested_i32_i32	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_2_nested_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_bitmask	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_bitmask() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_bool	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_bool() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_byte	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_byte() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_char	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_char() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_char_literal	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_char_literal() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_double	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_double() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_entity	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_entity() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_enum	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_enum() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_float	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_float() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_i16	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_i16() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_i32	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_i32() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_i32_array_3	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_i32_array_3() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_i32_i32	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_i64	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_i64() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_i8	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_i8() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_iptr	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_iptr() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_negative_float	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_negative_float() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_negative_int	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_negative_int() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_nested_i32	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_nested_i32() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_nested_i32_i32	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_nested_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_string	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_string() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_struct_i32_array_3	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_struct_i32_array_3() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_struct_i32_i32_array_3	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_struct_i32_i32_array_3() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_u16	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_u16() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_u32	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_u32() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_u64	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_u64() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_u8	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_u8() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_uptr	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_uptr() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_w_2_array_type_i32_i32	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_w_2_array_type_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromJson_struct_w_array_type_i32_i32	lib/flecs/test/meta/src/DeserializeFromJson.c	/^void DeserializeFromJson_struct_w_array_type_i32_i32() {$/;"	f	typeref:typename:void
DeserializeFromJson_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case DeserializeFromJson_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Detail	lib/flecs/flecs.h	/^static const flecs::entity_t Detail = EcsDocDetail;$/;"	v	namespace:flecs::doc	typeref:typename:const flecs::entity_t
Detail	lib/flecs/include/flecs/addons/cpp/mixins/doc/decl.hpp	/^static const flecs::entity_t Detail = EcsDocDetail;$/;"	v	namespace:flecs::doc	typeref:typename:const flecs::entity_t
DiamondS	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	d
DiamondS	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	i
Dirty	lib/flecs/examples/c/queries/change_tracking/src/main.c	/^} Dirty;$/;"	t	typeref:struct:__anon3f4b18880108	file:
Dirty	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^struct Dirty {$/;"	s	file:
Disabled	lib/flecs/flecs.h	/^static const flecs::entity_t Disabled = EcsDisabled;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Disabled	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Disabled = EcsDisabled;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Doc_get_entity_name	lib/flecs/test/api/src/Doc.c	/^void Doc_get_entity_name() {$/;"	f	typeref:typename:void
Doc_get_set_brief	lib/flecs/test/api/src/Doc.c	/^void Doc_get_set_brief() {$/;"	f	typeref:typename:void
Doc_get_set_detail	lib/flecs/test/api/src/Doc.c	/^void Doc_get_set_detail() {$/;"	f	typeref:typename:void
Doc_get_set_link	lib/flecs/test/api/src/Doc.c	/^void Doc_get_set_link() {$/;"	f	typeref:typename:void
Doc_get_set_name	lib/flecs/test/api/src/Doc.c	/^void Doc_get_set_name() {$/;"	f	typeref:typename:void
Doc_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Doc_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
DontInherit	lib/flecs/flecs.h	/^static const flecs::entity_t DontInherit = EcsDontInherit;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
DontInherit	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t DontInherit = EcsDontInherit;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Drawable	include/ecs/components.h	/^} Drawable;$/;"	t	typeref:struct:__anon1ffac85e0308
Dummy	lib/flecs/test/api/src/ComponentLifecycle.c	/^typedef struct Dummy {$/;"	s	file:
Dummy	lib/flecs/test/api/src/ComponentLifecycle.c	/^} Dummy;$/;"	t	typeref:struct:Dummy	file:
Dummy	lib/flecs/test/api/src/Observer.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/Prefab.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/Snapshot.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/SystemMisc.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/SystemOnSet.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/SystemPeriodic.c	/^static void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/System_w_FromEntity.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/System_w_FromParent.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/TriggerOnAdd.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/TriggerOnRemove.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy	lib/flecs/test/api/src/TriggerOnSet.c	/^void Dummy(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Dummy1	lib/flecs/test/api/src/SystemMisc.c	/^void Dummy1(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
Dummy2	lib/flecs/test/api/src/SystemMisc.c	/^void Dummy2(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
DummyArray	lib/flecs/flecs.h	/^    using DummyArray = flecs::array<int, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
DummyArray	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    using DummyArray = flecs::array<int, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
DummyComp	lib/flecs/test/api/src/TriggerOnRemove.c	/^typedef struct DummyComp {$/;"	s	file:
DummyComp	lib/flecs/test/api/src/TriggerOnRemove.c	/^} DummyComp;$/;"	t	typeref:struct:DummyComp	file:
DummySystem	lib/flecs/test/api/src/SystemManual.c	/^void DummySystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Dummy_1	lib/flecs/test/api/src/SystemPeriodic.c	/^static void Dummy_1(ecs_iter_t *it) { probe_iter(it); }$/;"	f	typeref:typename:void	file:
Dummy_1	lib/flecs/test/api/src/System_w_FromSystem.c	/^void Dummy_1(ecs_iter_t *it) { }$/;"	f	typeref:typename:void
Dummy_2	lib/flecs/test/api/src/SystemPeriodic.c	/^static void Dummy_2(ecs_iter_t *it) { probe_iter(it); }$/;"	f	typeref:typename:void	file:
Dummy_2	lib/flecs/test/api/src/System_w_FromSystem.c	/^void Dummy_2(ecs_iter_t *it) { }$/;"	f	typeref:typename:void
Duration	lib/flecs/flecs.h	/^struct Duration { };$/;"	s	struct:flecs::units
Duration	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Duration { };$/;"	s	struct:flecs::units
E	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } E;$/;"	t	function:DeserializeFromExpr_struct_enum	typeref:enum:DeserializeFromExpr_struct_enum::__anon51c88b180203	file:
E	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } E;$/;"	t	function:DeserializeFromJson_struct_enum	typeref:enum:DeserializeFromJson_struct_enum::__anon5d173e531503	file:
E	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } E;$/;"	t	function:SerializeToExpr_struct_enum	typeref:enum:SerializeToExpr_struct_enum::__anon35ed1d3e0203	file:
E	lib/flecs/test/meta/src/SerializeToJson.c	/^    } E;$/;"	t	function:SerializeToJson_struct_enum	typeref:enum:SerializeToJson_struct_enum::__anon413bd0791803	file:
ECS_ALIGN	lib/flecs/flecs.h	/^#define ECS_ALIGN(/;"	d
ECS_ALIGN	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ALIGN(/;"	d
ECS_ALIGNOF	lib/flecs/flecs.h	/^#define ECS_ALIGNOF(/;"	d
ECS_ALIGNOF	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ALIGNOF(/;"	d
ECS_ALREADY_DEFINED	lib/flecs/flecs.h	/^#define ECS_ALREADY_DEFINED /;"	d
ECS_ALREADY_DEFINED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_ALREADY_DEFINED /;"	d
ECS_AND	lib/flecs/flecs.h	/^#define ECS_AND /;"	d
ECS_AND	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_AND /;"	d
ECS_ANNOTATION_LENGTH_MAX	lib/flecs/flecs.c	/^#define ECS_ANNOTATION_LENGTH_MAX /;"	d	file:
ECS_ANNOTATION_LENGTH_MAX	lib/flecs/src/addons/parser.c	/^#define ECS_ANNOTATION_LENGTH_MAX /;"	d	file:
ECS_BITMASK	lib/flecs/flecs.h	/^#define ECS_BITMASK(/;"	d
ECS_BITMASK	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_BITMASK(/;"	d
ECS_BITMASK_DECLARE	lib/flecs/flecs.h	/^#define ECS_BITMASK_DECLARE(/;"	d
ECS_BITMASK_DECLARE	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_BITMASK_DECLARE(/;"	d
ECS_BITMASK_ECS_META_IMPL	lib/flecs/flecs.h	/^#define ECS_BITMASK_ECS_META_IMPL /;"	d
ECS_BITMASK_ECS_META_IMPL	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_BITMASK_ECS_META_IMPL /;"	d
ECS_BITMASK_EXTERN	lib/flecs/flecs.h	/^#define ECS_BITMASK_EXTERN(/;"	d
ECS_BITMASK_EXTERN	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_BITMASK_EXTERN(/;"	d
ECS_BITMASK_IMPL	lib/flecs/flecs.h	/^#define ECS_BITMASK_IMPL(/;"	d
ECS_BITMASK_IMPL	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_BITMASK_IMPL(/;"	d
ECS_BITMASK_TYPE	lib/flecs/flecs.h	/^#define ECS_BITMASK_TYPE(/;"	d
ECS_BITMASK_TYPE	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_BITMASK_TYPE(/;"	d
ECS_BLACK	lib/flecs/flecs.h	/^#define ECS_BLACK /;"	d
ECS_BLACK	lib/flecs/include/flecs/addons/log.h	/^#define ECS_BLACK /;"	d
ECS_BLUE	lib/flecs/flecs.h	/^#define ECS_BLUE /;"	d
ECS_BLUE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_BLUE /;"	d
ECS_BOLD	lib/flecs/flecs.h	/^#define ECS_BOLD /;"	d
ECS_BOLD	lib/flecs/include/flecs/addons/log.h	/^#define ECS_BOLD /;"	d
ECS_BT_BUF_SIZE	lib/flecs/flecs.c	/^#define ECS_BT_BUF_SIZE /;"	d	file:
ECS_BT_BUF_SIZE	lib/flecs/src/os_api.c	/^#define ECS_BT_BUF_SIZE /;"	d	file:
ECS_CASE	lib/flecs/flecs.c	/^const ecs_id_t ECS_CASE =      (ECS_ROLE | (0x7Cull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_CASE	lib/flecs/src/world.c	/^const ecs_id_t ECS_CASE =      (ECS_ROLE | (0x7Cull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_CAST	lib/flecs/flecs.h	/^#define ECS_CAST(/;"	d
ECS_CAST	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_CAST(/;"	d
ECS_CLASS_LEN	lib/flecs/flecs.c	/^#define ECS_CLASS_LEN /;"	d	file:
ECS_CLASS_LEN	lib/flecs/src/addons/flecs_cpp.c	/^#define ECS_CLASS_LEN /;"	d	file:
ECS_CLASS_PREFIX	lib/flecs/flecs.c	/^#define ECS_CLASS_PREFIX /;"	d	file:
ECS_CLASS_PREFIX	lib/flecs/src/addons/flecs_cpp.c	/^#define ECS_CLASS_PREFIX /;"	d	file:
ECS_COLUMN_ACCESS_VIOLATION	lib/flecs/flecs.h	/^#define ECS_COLUMN_ACCESS_VIOLATION /;"	d
ECS_COLUMN_ACCESS_VIOLATION	lib/flecs/include/flecs/addons/log.h	/^#define ECS_COLUMN_ACCESS_VIOLATION /;"	d
ECS_COLUMN_INDEX_OUT_OF_RANGE	lib/flecs/flecs.h	/^#define ECS_COLUMN_INDEX_OUT_OF_RANGE /;"	d
ECS_COLUMN_INDEX_OUT_OF_RANGE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_COLUMN_INDEX_OUT_OF_RANGE /;"	d
ECS_COLUMN_IS_NOT_SHARED	lib/flecs/flecs.h	/^#define ECS_COLUMN_IS_NOT_SHARED /;"	d
ECS_COLUMN_IS_NOT_SHARED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_COLUMN_IS_NOT_SHARED /;"	d
ECS_COLUMN_IS_SHARED	lib/flecs/flecs.h	/^#define ECS_COLUMN_IS_SHARED /;"	d
ECS_COLUMN_IS_SHARED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_COLUMN_IS_SHARED /;"	d
ECS_COLUMN_TYPE_MISMATCH	lib/flecs/flecs.h	/^#define ECS_COLUMN_TYPE_MISMATCH /;"	d
ECS_COLUMN_TYPE_MISMATCH	lib/flecs/include/flecs/addons/log.h	/^#define ECS_COLUMN_TYPE_MISMATCH /;"	d
ECS_COMPONENT	lib/flecs/flecs.h	/^#define ECS_COMPONENT(/;"	d
ECS_COMPONENT	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_COMPONENT(/;"	d
ECS_COMPONENTS_H	include/ecs/components.h	/^#define ECS_COMPONENTS_H$/;"	d
ECS_COMPONENT_DECLARE	lib/flecs/flecs.h	/^#define ECS_COMPONENT_DECLARE(/;"	d
ECS_COMPONENT_DECLARE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_COMPONENT_DECLARE(/;"	d
ECS_COMPONENT_DEFINE	lib/flecs/flecs.h	/^#define ECS_COMPONENT_DEFINE(/;"	d
ECS_COMPONENT_DEFINE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_COMPONENT_DEFINE(/;"	d
ECS_COMPONENT_MASK	lib/flecs/flecs.h	/^#define ECS_COMPONENT_MASK /;"	d
ECS_COMPONENT_MASK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_COMPONENT_MASK /;"	d
ECS_COMPONENT_NOT_REGISTERED	lib/flecs/flecs.h	/^#define ECS_COMPONENT_NOT_REGISTERED /;"	d
ECS_COMPONENT_NOT_REGISTERED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_COMPONENT_NOT_REGISTERED /;"	d
ECS_CONSTRAINT_VIOLATED	lib/flecs/flecs.h	/^#define ECS_CONSTRAINT_VIOLATED /;"	d
ECS_CONSTRAINT_VIOLATED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_CONSTRAINT_VIOLATED /;"	d
ECS_CONST_LEN	lib/flecs/flecs.c	/^#define ECS_CONST_LEN /;"	d	file:
ECS_CONST_LEN	lib/flecs/src/addons/flecs_cpp.c	/^#define ECS_CONST_LEN /;"	d	file:
ECS_CONST_PREFIX	lib/flecs/flecs.c	/^#define ECS_CONST_PREFIX /;"	d	file:
ECS_CONST_PREFIX	lib/flecs/src/addons/flecs_cpp.c	/^#define ECS_CONST_PREFIX /;"	d	file:
ECS_COPY	lib/flecs/flecs.h	/^#define ECS_COPY(/;"	d
ECS_COPY	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_COPY(/;"	d
ECS_COPY_IMPL	lib/flecs/flecs.h	/^#define ECS_COPY_IMPL(/;"	d
ECS_COPY_IMPL	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_COPY_IMPL(/;"	d
ECS_CTOR	lib/flecs/flecs.h	/^#define ECS_CTOR(/;"	d
ECS_CTOR	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_CTOR(/;"	d
ECS_CYAN	lib/flecs/flecs.h	/^#define ECS_CYAN /;"	d
ECS_CYAN	lib/flecs/include/flecs/addons/log.h	/^#define ECS_CYAN /;"	d
ECS_DECLARE	lib/flecs/flecs.h	/^#define ECS_DECLARE(/;"	d
ECS_DECLARE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_DECLARE(/;"	d
ECS_DEPRECATED	lib/flecs/flecs.h	/^#define ECS_DEPRECATED(/;"	d
ECS_DEPRECATED	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_DEPRECATED(/;"	d
ECS_DISABLED	lib/flecs/flecs.c	/^const ecs_id_t ECS_DISABLED =  (ECS_ROLE | (0x74ull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_DISABLED	lib/flecs/src/world.c	/^const ecs_id_t ECS_DISABLED =  (ECS_ROLE | (0x74ull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_DTOR	lib/flecs/flecs.h	/^#define ECS_DTOR(/;"	d
ECS_DTOR	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_DTOR(/;"	d
ECS_ELEM	lib/flecs/flecs.h	/^#define ECS_ELEM(/;"	d
ECS_ELEM	lib/flecs/include/flecs/private/api_support.h	/^#define ECS_ELEM(/;"	d
ECS_ENTITY	lib/flecs/flecs.h	/^#define ECS_ENTITY(/;"	d
ECS_ENTITY	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_ENTITY(/;"	d
ECS_ENTITY_DEFINE	lib/flecs/flecs.h	/^#define ECS_ENTITY_DEFINE(/;"	d
ECS_ENTITY_DEFINE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_ENTITY_DEFINE(/;"	d
ECS_ENTITY_MASK	lib/flecs/flecs.h	/^#define ECS_ENTITY_MASK /;"	d
ECS_ENTITY_MASK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ENTITY_MASK /;"	d
ECS_ENTITY_TO_JSON_INIT	lib/flecs/flecs.h	/^#define ECS_ENTITY_TO_JSON_INIT /;"	d
ECS_ENTITY_TO_JSON_INIT	lib/flecs/include/flecs/addons/json.h	/^#define ECS_ENTITY_TO_JSON_INIT /;"	d
ECS_ENUM	lib/flecs/flecs.h	/^#define ECS_ENUM(/;"	d
ECS_ENUM	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_ENUM(/;"	d
ECS_ENUM_DECLARE	lib/flecs/flecs.h	/^#define ECS_ENUM_DECLARE(/;"	d
ECS_ENUM_DECLARE	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_ENUM_DECLARE(/;"	d
ECS_ENUM_ECS_META_IMPL	lib/flecs/flecs.h	/^#define ECS_ENUM_ECS_META_IMPL /;"	d
ECS_ENUM_ECS_META_IMPL	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_ENUM_ECS_META_IMPL /;"	d
ECS_ENUM_EXTERN	lib/flecs/flecs.h	/^#define ECS_ENUM_EXTERN(/;"	d
ECS_ENUM_EXTERN	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_ENUM_EXTERN(/;"	d
ECS_ENUM_IMPL	lib/flecs/flecs.h	/^#define ECS_ENUM_IMPL(/;"	d
ECS_ENUM_IMPL	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_ENUM_IMPL(/;"	d
ECS_ENUM_LEN	lib/flecs/flecs.c	/^#define ECS_ENUM_LEN /;"	d	file:
ECS_ENUM_LEN	lib/flecs/src/addons/flecs_cpp.c	/^#define ECS_ENUM_LEN /;"	d	file:
ECS_ENUM_PREFIX	lib/flecs/flecs.c	/^#define ECS_ENUM_PREFIX /;"	d	file:
ECS_ENUM_PREFIX	lib/flecs/src/addons/flecs_cpp.c	/^#define ECS_ENUM_PREFIX /;"	d	file:
ECS_ENUM_TYPE	lib/flecs/flecs.h	/^#define ECS_ENUM_TYPE(/;"	d
ECS_ENUM_TYPE	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_ENUM_TYPE(/;"	d
ECS_ERR_STR	lib/flecs/flecs.c	/^#define ECS_ERR_STR(/;"	d	file:
ECS_ERR_STR	lib/flecs/src/addons/log.c	/^#define ECS_ERR_STR(/;"	d	file:
ECS_EVENT_DESC_ID_COUNT_MAX	lib/flecs/flecs.h	/^#define ECS_EVENT_DESC_ID_COUNT_MAX /;"	d
ECS_EVENT_DESC_ID_COUNT_MAX	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^#define ECS_EVENT_DESC_ID_COUNT_MAX /;"	d
ECS_FLAG_OBSERVED	lib/flecs/flecs.h	/^#define ECS_FLAG_OBSERVED /;"	d
ECS_FLAG_OBSERVED	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_FLAG_OBSERVED /;"	d
ECS_FLAG_OBSERVED_ACYCLIC	lib/flecs/flecs.h	/^#define ECS_FLAG_OBSERVED_ACYCLIC /;"	d
ECS_FLAG_OBSERVED_ACYCLIC	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_FLAG_OBSERVED_ACYCLIC /;"	d
ECS_FLAG_OBSERVED_ID	lib/flecs/flecs.h	/^#define ECS_FLAG_OBSERVED_ID /;"	d
ECS_FLAG_OBSERVED_ID	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_FLAG_OBSERVED_ID /;"	d
ECS_FLAG_OBSERVED_OBJECT	lib/flecs/flecs.h	/^#define ECS_FLAG_OBSERVED_OBJECT /;"	d
ECS_FLAG_OBSERVED_OBJECT	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_FLAG_OBSERVED_OBJECT /;"	d
ECS_FUNC_NAME	lib/flecs/flecs.h	/^#define ECS_FUNC_NAME /;"	d
ECS_FUNC_NAME	lib/flecs/include/flecs/addons/flecs_cpp.h	/^#define ECS_FUNC_NAME /;"	d
ECS_FUNC_NAME_BACK	lib/flecs/flecs.h	/^#define ECS_FUNC_NAME_BACK /;"	d
ECS_FUNC_NAME_BACK	lib/flecs/include/flecs/addons/flecs_cpp.h	/^#define ECS_FUNC_NAME_BACK /;"	d
ECS_FUNC_NAME_FRONT	lib/flecs/flecs.h	/^#define ECS_FUNC_NAME_FRONT(/;"	d
ECS_FUNC_NAME_FRONT	lib/flecs/include/flecs/addons/flecs_cpp.h	/^#define ECS_FUNC_NAME_FRONT(/;"	d
ECS_FUNC_TYPE_LEN	lib/flecs/flecs.h	/^#define ECS_FUNC_TYPE_LEN(/;"	d
ECS_FUNC_TYPE_LEN	lib/flecs/include/flecs/addons/flecs_cpp.h	/^#define ECS_FUNC_TYPE_LEN(/;"	d
ECS_GENERATION	lib/flecs/flecs.h	/^#define ECS_GENERATION(/;"	d
ECS_GENERATION	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_GENERATION(/;"	d
ECS_GENERATION_INC	lib/flecs/flecs.h	/^#define ECS_GENERATION_INC(/;"	d
ECS_GENERATION_INC	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_GENERATION_INC(/;"	d
ECS_GENERATION_MASK	lib/flecs/flecs.h	/^#define ECS_GENERATION_MASK /;"	d
ECS_GENERATION_MASK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_GENERATION_MASK /;"	d
ECS_GREEN	lib/flecs/flecs.h	/^#define ECS_GREEN /;"	d
ECS_GREEN	lib/flecs/include/flecs/addons/log.h	/^#define ECS_GREEN /;"	d
ECS_GREY	lib/flecs/flecs.h	/^#define ECS_GREY /;"	d
ECS_GREY	lib/flecs/include/flecs/addons/log.h	/^#define ECS_GREY /;"	d
ECS_HAS	lib/flecs/flecs.h	/^#define ECS_HAS(/;"	d
ECS_HAS	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_HAS(/;"	d
ECS_HAS_PAIR_OBJECT	lib/flecs/flecs.h	/^#define ECS_HAS_PAIR_OBJECT(/;"	d
ECS_HAS_PAIR_OBJECT	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_HAS_PAIR_OBJECT(/;"	d
ECS_HAS_RELATION	lib/flecs/flecs.h	/^#define ECS_HAS_RELATION(/;"	d
ECS_HAS_RELATION	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_HAS_RELATION(/;"	d
ECS_HAS_ROLE	lib/flecs/flecs.h	/^#define ECS_HAS_ROLE(/;"	d
ECS_HAS_ROLE	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_HAS_ROLE(/;"	d
ECS_HI_COMPONENT_ID	lib/flecs/flecs.h	/^#define ECS_HI_COMPONENT_ID /;"	d
ECS_HI_COMPONENT_ID	lib/flecs/include/flecs/private/api_support.h	/^#define ECS_HI_COMPONENT_ID /;"	d
ECS_HTTP_CONNECTION_PURGE_RETRY_COUNT	lib/flecs/flecs.c	/^#define ECS_HTTP_CONNECTION_PURGE_RETRY_COUNT /;"	d	file:
ECS_HTTP_CONNECTION_PURGE_RETRY_COUNT	lib/flecs/src/addons/http.c	/^#define ECS_HTTP_CONNECTION_PURGE_RETRY_COUNT /;"	d	file:
ECS_HTTP_CONNECTION_PURGE_TIMEOUT	lib/flecs/flecs.c	/^#define ECS_HTTP_CONNECTION_PURGE_TIMEOUT /;"	d	file:
ECS_HTTP_CONNECTION_PURGE_TIMEOUT	lib/flecs/src/addons/http.c	/^#define ECS_HTTP_CONNECTION_PURGE_TIMEOUT /;"	d	file:
ECS_HTTP_HEADER_COUNT_MAX	lib/flecs/flecs.h	/^#define ECS_HTTP_HEADER_COUNT_MAX /;"	d
ECS_HTTP_HEADER_COUNT_MAX	lib/flecs/include/flecs/addons/http.h	/^#define ECS_HTTP_HEADER_COUNT_MAX /;"	d
ECS_HTTP_METHOD_LEN_MAX	lib/flecs/flecs.c	/^#define ECS_HTTP_METHOD_LEN_MAX /;"	d	file:
ECS_HTTP_METHOD_LEN_MAX	lib/flecs/src/addons/http.c	/^#define ECS_HTTP_METHOD_LEN_MAX /;"	d	file:
ECS_HTTP_MIN_DEQUEUE_INTERVAL	lib/flecs/flecs.c	/^#define ECS_HTTP_MIN_DEQUEUE_INTERVAL /;"	d	file:
ECS_HTTP_MIN_DEQUEUE_INTERVAL	lib/flecs/src/addons/http.c	/^#define ECS_HTTP_MIN_DEQUEUE_INTERVAL /;"	d	file:
ECS_HTTP_MIN_STATS_INTERVAL	lib/flecs/flecs.c	/^#define ECS_HTTP_MIN_STATS_INTERVAL /;"	d	file:
ECS_HTTP_MIN_STATS_INTERVAL	lib/flecs/src/addons/http.c	/^#define ECS_HTTP_MIN_STATS_INTERVAL /;"	d	file:
ECS_HTTP_QUERY_PARAM_COUNT_MAX	lib/flecs/flecs.h	/^#define ECS_HTTP_QUERY_PARAM_COUNT_MAX /;"	d
ECS_HTTP_QUERY_PARAM_COUNT_MAX	lib/flecs/include/flecs/addons/http.h	/^#define ECS_HTTP_QUERY_PARAM_COUNT_MAX /;"	d
ECS_HTTP_REPLY_HEADER_SIZE	lib/flecs/flecs.c	/^#define ECS_HTTP_REPLY_HEADER_SIZE /;"	d	file:
ECS_HTTP_REPLY_HEADER_SIZE	lib/flecs/src/addons/http.c	/^#define ECS_HTTP_REPLY_HEADER_SIZE /;"	d	file:
ECS_HTTP_REPLY_INIT	lib/flecs/flecs.h	/^#define ECS_HTTP_REPLY_INIT /;"	d
ECS_HTTP_REPLY_INIT	lib/flecs/include/flecs/addons/http.h	/^#define ECS_HTTP_REPLY_INIT /;"	d
ECS_HTTP_REQUEST_LEN_MAX	lib/flecs/flecs.c	/^#define ECS_HTTP_REQUEST_LEN_MAX /;"	d	file:
ECS_HTTP_REQUEST_LEN_MAX	lib/flecs/src/addons/http.c	/^#define ECS_HTTP_REQUEST_LEN_MAX /;"	d	file:
ECS_HTTP_SEND_RECV_BUFFER_SIZE	lib/flecs/flecs.c	/^#define ECS_HTTP_SEND_RECV_BUFFER_SIZE /;"	d	file:
ECS_HTTP_SEND_RECV_BUFFER_SIZE	lib/flecs/src/addons/http.c	/^#define ECS_HTTP_SEND_RECV_BUFFER_SIZE /;"	d	file:
ECS_ID_DONT_INHERIT	lib/flecs/flecs.h	/^#define ECS_ID_DONT_INHERIT /;"	d
ECS_ID_DONT_INHERIT	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_DONT_INHERIT /;"	d
ECS_ID_EXCLUSIVE	lib/flecs/flecs.h	/^#define ECS_ID_EXCLUSIVE /;"	d
ECS_ID_EXCLUSIVE	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_EXCLUSIVE /;"	d
ECS_ID_IN_USE	lib/flecs/flecs.h	/^#define ECS_ID_IN_USE /;"	d
ECS_ID_IN_USE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_ID_IN_USE /;"	d
ECS_ID_ON_DELETE	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE(/;"	d
ECS_ID_ON_DELETE	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE(/;"	d
ECS_ID_ON_DELETE_DELETE	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_DELETE /;"	d
ECS_ID_ON_DELETE_DELETE	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_DELETE /;"	d
ECS_ID_ON_DELETE_FLAG	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_FLAG(/;"	d
ECS_ID_ON_DELETE_FLAG	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_FLAG(/;"	d
ECS_ID_ON_DELETE_MASK	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_MASK\\/;"	d
ECS_ID_ON_DELETE_MASK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_MASK\\/;"	d
ECS_ID_ON_DELETE_OBJECT	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_OBJECT(/;"	d
ECS_ID_ON_DELETE_OBJECT	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_OBJECT(/;"	d
ECS_ID_ON_DELETE_OBJECT_DELETE	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_OBJECT_DELETE /;"	d
ECS_ID_ON_DELETE_OBJECT_DELETE	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_OBJECT_DELETE /;"	d
ECS_ID_ON_DELETE_OBJECT_FLAG	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_OBJECT_FLAG(/;"	d
ECS_ID_ON_DELETE_OBJECT_FLAG	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_OBJECT_FLAG(/;"	d
ECS_ID_ON_DELETE_OBJECT_MASK	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_OBJECT_MASK\\/;"	d
ECS_ID_ON_DELETE_OBJECT_MASK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_OBJECT_MASK\\/;"	d
ECS_ID_ON_DELETE_OBJECT_REMOVE	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_OBJECT_REMOVE /;"	d
ECS_ID_ON_DELETE_OBJECT_REMOVE	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_OBJECT_REMOVE /;"	d
ECS_ID_ON_DELETE_OBJECT_THROW	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_OBJECT_THROW /;"	d
ECS_ID_ON_DELETE_OBJECT_THROW	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_OBJECT_THROW /;"	d
ECS_ID_ON_DELETE_REMOVE	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_REMOVE /;"	d
ECS_ID_ON_DELETE_REMOVE	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_REMOVE /;"	d
ECS_ID_ON_DELETE_THROW	lib/flecs/flecs.h	/^#define ECS_ID_ON_DELETE_THROW /;"	d
ECS_ID_ON_DELETE_THROW	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ID_ON_DELETE_THROW /;"	d
ECS_IMPORT	lib/flecs/flecs.h	/^#define ECS_IMPORT(/;"	d
ECS_IMPORT	lib/flecs/include/flecs/addons/module.h	/^#define ECS_IMPORT(/;"	d
ECS_INCONSISTENT_COMPONENT_ACTION	lib/flecs/flecs.h	/^#define ECS_INCONSISTENT_COMPONENT_ACTION /;"	d
ECS_INCONSISTENT_COMPONENT_ACTION	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INCONSISTENT_COMPONENT_ACTION /;"	d
ECS_INCONSISTENT_COMPONENT_ID	lib/flecs/flecs.h	/^#define ECS_INCONSISTENT_COMPONENT_ID /;"	d
ECS_INCONSISTENT_COMPONENT_ID	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INCONSISTENT_COMPONENT_ID /;"	d
ECS_INCONSISTENT_NAME	lib/flecs/flecs.h	/^#define ECS_INCONSISTENT_NAME /;"	d
ECS_INCONSISTENT_NAME	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INCONSISTENT_NAME /;"	d
ECS_INTERNAL_ERROR	lib/flecs/flecs.h	/^#define ECS_INTERNAL_ERROR /;"	d
ECS_INTERNAL_ERROR	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INTERNAL_ERROR /;"	d
ECS_INVALID_COMPONENT_ALIGNMENT	lib/flecs/flecs.h	/^#define ECS_INVALID_COMPONENT_ALIGNMENT /;"	d
ECS_INVALID_COMPONENT_ALIGNMENT	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INVALID_COMPONENT_ALIGNMENT /;"	d
ECS_INVALID_COMPONENT_SIZE	lib/flecs/flecs.h	/^#define ECS_INVALID_COMPONENT_SIZE /;"	d
ECS_INVALID_COMPONENT_SIZE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INVALID_COMPONENT_SIZE /;"	d
ECS_INVALID_CONVERSION	lib/flecs/flecs.h	/^#define ECS_INVALID_CONVERSION /;"	d
ECS_INVALID_CONVERSION	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INVALID_CONVERSION /;"	d
ECS_INVALID_FROM_WORKER	lib/flecs/flecs.h	/^#define ECS_INVALID_FROM_WORKER /;"	d
ECS_INVALID_FROM_WORKER	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INVALID_FROM_WORKER /;"	d
ECS_INVALID_OPERATION	lib/flecs/flecs.h	/^#define ECS_INVALID_OPERATION /;"	d
ECS_INVALID_OPERATION	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INVALID_OPERATION /;"	d
ECS_INVALID_PARAMETER	lib/flecs/flecs.h	/^#define ECS_INVALID_PARAMETER /;"	d
ECS_INVALID_PARAMETER	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INVALID_PARAMETER /;"	d
ECS_INVALID_WHILE_ITERATING	lib/flecs/flecs.h	/^#define ECS_INVALID_WHILE_ITERATING /;"	d
ECS_INVALID_WHILE_ITERATING	lib/flecs/include/flecs/addons/log.h	/^#define ECS_INVALID_WHILE_ITERATING /;"	d
ECS_ITER_TO_JSON_INIT	lib/flecs/flecs.h	/^#define ECS_ITER_TO_JSON_INIT /;"	d
ECS_ITER_TO_JSON_INIT	lib/flecs/include/flecs/addons/json.h	/^#define ECS_ITER_TO_JSON_INIT /;"	d
ECS_LOCKED_STORAGE	lib/flecs/flecs.h	/^#define ECS_LOCKED_STORAGE /;"	d
ECS_LOCKED_STORAGE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_LOCKED_STORAGE /;"	d
ECS_MAGENTA	lib/flecs/flecs.h	/^#define ECS_MAGENTA /;"	d
ECS_MAGENTA	lib/flecs/include/flecs/addons/log.h	/^#define ECS_MAGENTA /;"	d
ECS_MAP_INIT	lib/flecs/flecs.h	/^#define ECS_MAP_INIT(/;"	d
ECS_MAP_INIT	lib/flecs/include/flecs/private/map.h	/^#define ECS_MAP_INIT(/;"	d
ECS_MAX	lib/flecs/flecs.h	/^#define ECS_MAX(/;"	d
ECS_MAX	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_MAX(/;"	d
ECS_MAX_ADD_REMOVE	lib/flecs/flecs.c	/^#define ECS_MAX_ADD_REMOVE /;"	d	file:
ECS_MAX_ADD_REMOVE	lib/flecs/flecs.h	/^#define ECS_MAX_ADD_REMOVE /;"	d
ECS_MAX_ADD_REMOVE	lib/flecs/include/flecs.h	/^#define ECS_MAX_ADD_REMOVE /;"	d
ECS_MAX_ADD_REMOVE	lib/flecs/src/private_types.h	/^#define ECS_MAX_ADD_REMOVE /;"	d
ECS_MAX_JOBS_PER_WORKER	lib/flecs/flecs.c	/^#define ECS_MAX_JOBS_PER_WORKER /;"	d	file:
ECS_MAX_JOBS_PER_WORKER	lib/flecs/src/private_types.h	/^#define ECS_MAX_JOBS_PER_WORKER /;"	d
ECS_MAX_RECURSION	lib/flecs/flecs.h	/^#define ECS_MAX_RECURSION /;"	d
ECS_MAX_RECURSION	lib/flecs/include/flecs/private/api_support.h	/^#define ECS_MAX_RECURSION /;"	d
ECS_MAX_TOKEN_SIZE	lib/flecs/flecs.c	/^#define ECS_MAX_TOKEN_SIZE /;"	d	file:
ECS_MAX_TOKEN_SIZE	lib/flecs/flecs.h	/^#define ECS_MAX_TOKEN_SIZE /;"	d
ECS_MAX_TOKEN_SIZE	lib/flecs/include/flecs/private/api_support.h	/^#define ECS_MAX_TOKEN_SIZE /;"	d
ECS_MAX_TOKEN_SIZE	lib/flecs/src/addons/parser.c	/^#define ECS_MAX_TOKEN_SIZE /;"	d	file:
ECS_MEMBER_DESC_CACHE_SIZE	lib/flecs/flecs.h	/^#define ECS_MEMBER_DESC_CACHE_SIZE /;"	d
ECS_MEMBER_DESC_CACHE_SIZE	lib/flecs/include/flecs/addons/meta.h	/^#define ECS_MEMBER_DESC_CACHE_SIZE /;"	d
ECS_META_COMPONENT	lib/flecs/flecs.h	/^#define ECS_META_COMPONENT(/;"	d
ECS_META_COMPONENT	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_META_COMPONENT(/;"	d
ECS_META_IDENTIFIER_LENGTH	lib/flecs/flecs.c	/^#define ECS_META_IDENTIFIER_LENGTH /;"	d	file:
ECS_META_IDENTIFIER_LENGTH	lib/flecs/src/addons/meta_c.c	/^#define ECS_META_IDENTIFIER_LENGTH /;"	d	file:
ECS_META_IMPL	lib/flecs/templates/c/flecs-module/include/__id_underscore.h	/^#define ECS_META_IMPL /;"	d
ECS_META_IMPL_CALL	lib/flecs/flecs.h	/^#define ECS_META_IMPL_CALL(/;"	d
ECS_META_IMPL_CALL	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_META_IMPL_CALL(/;"	d
ECS_META_IMPL_CALL_INNER	lib/flecs/flecs.h	/^#define ECS_META_IMPL_CALL_INNER(/;"	d
ECS_META_IMPL_CALL_INNER	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_META_IMPL_CALL_INNER(/;"	d
ECS_META_MAX_SCOPE_DEPTH	lib/flecs/flecs.h	/^#define ECS_META_MAX_SCOPE_DEPTH /;"	d
ECS_META_MAX_SCOPE_DEPTH	lib/flecs/include/flecs/addons/meta.h	/^#define ECS_META_MAX_SCOPE_DEPTH /;"	d
ECS_MIN	lib/flecs/flecs.h	/^#define ECS_MIN(/;"	d
ECS_MIN	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_MIN(/;"	d
ECS_MISSING_OS_API	lib/flecs/flecs.h	/^#define ECS_MISSING_OS_API /;"	d
ECS_MISSING_OS_API	lib/flecs/include/flecs/addons/log.h	/^#define ECS_MISSING_OS_API /;"	d
ECS_MISSING_SYMBOL	lib/flecs/flecs.h	/^#define ECS_MISSING_SYMBOL /;"	d
ECS_MISSING_SYMBOL	lib/flecs/include/flecs/addons/log.h	/^#define ECS_MISSING_SYMBOL /;"	d
ECS_MODULE	lib/flecs/flecs.h	/^#define ECS_MODULE(/;"	d
ECS_MODULE	lib/flecs/include/flecs/addons/module.h	/^#define ECS_MODULE(/;"	d
ECS_MODULE_UNDEFINED	lib/flecs/flecs.h	/^#define ECS_MODULE_UNDEFINED /;"	d
ECS_MODULE_UNDEFINED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_MODULE_UNDEFINED /;"	d
ECS_MOVE	lib/flecs/flecs.h	/^#define ECS_MOVE(/;"	d
ECS_MOVE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_MOVE(/;"	d
ECS_MOVE_IMPL	lib/flecs/flecs.h	/^#define ECS_MOVE_IMPL(/;"	d
ECS_MOVE_IMPL	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_MOVE_IMPL(/;"	d
ECS_NAME_BUFFER_LENGTH	lib/flecs/flecs.c	/^#define ECS_NAME_BUFFER_LENGTH /;"	d	file:
ECS_NAME_BUFFER_LENGTH	lib/flecs/src/hierarchy.c	/^#define ECS_NAME_BUFFER_LENGTH /;"	d	file:
ECS_NAME_IN_USE	lib/flecs/flecs.h	/^#define ECS_NAME_IN_USE /;"	d
ECS_NAME_IN_USE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_NAME_IN_USE /;"	d
ECS_NORMAL	lib/flecs/flecs.h	/^#define ECS_NORMAL /;"	d
ECS_NORMAL	lib/flecs/include/flecs/addons/log.h	/^#define ECS_NORMAL /;"	d
ECS_NOT	lib/flecs/flecs.h	/^#define ECS_NOT /;"	d
ECS_NOT	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_NOT /;"	d
ECS_NOT_A_COMPONENT	lib/flecs/flecs.h	/^#define ECS_NOT_A_COMPONENT /;"	d
ECS_NOT_A_COMPONENT	lib/flecs/include/flecs/addons/log.h	/^#define ECS_NOT_A_COMPONENT /;"	d
ECS_OBJECT_MAGIC	lib/flecs/flecs.c	/^#define ECS_OBJECT_MAGIC /;"	d	file:
ECS_OBJECT_MAGIC	lib/flecs/src/private_types.h	/^#define ECS_OBJECT_MAGIC /;"	d
ECS_OBSERVER	lib/flecs/flecs.h	/^#define ECS_OBSERVER(/;"	d
ECS_OBSERVER	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_OBSERVER(/;"	d
ECS_OBSERVER_DEFINE	lib/flecs/flecs.h	/^#define ECS_OBSERVER_DEFINE(/;"	d
ECS_OBSERVER_DEFINE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_OBSERVER_DEFINE(/;"	d
ECS_OFFSET	lib/flecs/flecs.h	/^#define ECS_OFFSET(/;"	d
ECS_OFFSET	lib/flecs/include/flecs/private/api_support.h	/^#define ECS_OFFSET(/;"	d
ECS_ON_SET	lib/flecs/flecs.h	/^#define ECS_ON_SET(/;"	d
ECS_ON_SET	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_ON_SET(/;"	d
ECS_ON_SET_IMPL	lib/flecs/flecs.h	/^#define ECS_ON_SET_IMPL(/;"	d
ECS_ON_SET_IMPL	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ON_SET_IMPL(/;"	d
ECS_OPERATION_FAILED	lib/flecs/flecs.h	/^#define ECS_OPERATION_FAILED /;"	d
ECS_OPERATION_FAILED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_OPERATION_FAILED /;"	d
ECS_OR	lib/flecs/flecs.h	/^#define ECS_OR /;"	d
ECS_OR	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_OR /;"	d
ECS_OUT_OF_MEMORY	lib/flecs/flecs.h	/^#define ECS_OUT_OF_MEMORY /;"	d
ECS_OUT_OF_MEMORY	lib/flecs/include/flecs/addons/log.h	/^#define ECS_OUT_OF_MEMORY /;"	d
ECS_OUT_OF_RANGE	lib/flecs/flecs.h	/^#define ECS_OUT_OF_RANGE /;"	d
ECS_OUT_OF_RANGE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_OUT_OF_RANGE /;"	d
ECS_OVERRIDE	lib/flecs/flecs.c	/^const ecs_id_t ECS_OVERRIDE =  (ECS_ROLE | (0x75ull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_OVERRIDE	lib/flecs/src/world.c	/^const ecs_id_t ECS_OVERRIDE =  (ECS_ROLE | (0x75ull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_PAIR	lib/flecs/flecs.c	/^const ecs_id_t ECS_PAIR =      (ECS_ROLE | (0x7Aull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_PAIR	lib/flecs/src/world.c	/^const ecs_id_t ECS_PAIR =      (ECS_ROLE | (0x7Aull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_PAIR_FIRST	lib/flecs/flecs.h	/^#define ECS_PAIR_FIRST(/;"	d
ECS_PAIR_FIRST	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_PAIR_FIRST(/;"	d
ECS_PAIR_OBJECT	lib/flecs/flecs.h	/^#define ECS_PAIR_OBJECT /;"	d
ECS_PAIR_OBJECT	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_PAIR_OBJECT /;"	d
ECS_PAIR_RELATION	lib/flecs/flecs.h	/^#define ECS_PAIR_RELATION /;"	d
ECS_PAIR_RELATION	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_PAIR_RELATION /;"	d
ECS_PAIR_SECOND	lib/flecs/flecs.h	/^#define ECS_PAIR_SECOND(/;"	d
ECS_PAIR_SECOND	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_PAIR_SECOND(/;"	d
ECS_PIPELINE	lib/flecs/flecs.h	/^#define ECS_PIPELINE(/;"	d
ECS_PIPELINE	lib/flecs/include/flecs/addons/pipeline.h	/^#define ECS_PIPELINE(/;"	d
ECS_PIPELINE_DEFINE	lib/flecs/flecs.h	/^#define ECS_PIPELINE_DEFINE(/;"	d
ECS_PIPELINE_DEFINE	lib/flecs/include/flecs/addons/pipeline.h	/^#define ECS_PIPELINE_DEFINE(/;"	d
ECS_PREFAB	lib/flecs/flecs.h	/^#define ECS_PREFAB(/;"	d
ECS_PREFAB	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_PREFAB(/;"	d
ECS_PREFAB_DEFINE	lib/flecs/flecs.h	/^#define ECS_PREFAB_DEFINE(/;"	d
ECS_PREFAB_DEFINE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_PREFAB_DEFINE(/;"	d
ECS_PRIMITIVE	lib/flecs/flecs.c	/^    #define ECS_PRIMITIVE(/;"	d	file:
ECS_PRIMITIVE	lib/flecs/src/addons/meta/meta.c	/^    #define ECS_PRIMITIVE(/;"	d	file:
ECS_PRIVATE	lib/flecs/flecs.h	/^#define ECS_PRIVATE$/;"	d
ECS_PRIVATE	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_PRIVATE$/;"	d
ECS_RECORD_TO_ROW	lib/flecs/flecs.h	/^#define ECS_RECORD_TO_ROW(/;"	d
ECS_RECORD_TO_ROW	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_RECORD_TO_ROW(/;"	d
ECS_RECORD_TO_ROW_FLAGS	lib/flecs/flecs.h	/^#define ECS_RECORD_TO_ROW_FLAGS(/;"	d
ECS_RECORD_TO_ROW_FLAGS	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_RECORD_TO_ROW_FLAGS(/;"	d
ECS_RED	lib/flecs/flecs.h	/^#define ECS_RED /;"	d
ECS_RED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_RED /;"	d
ECS_REST_DEFAULT_PORT	lib/flecs/flecs.h	/^#define ECS_REST_DEFAULT_PORT /;"	d
ECS_REST_DEFAULT_PORT	lib/flecs/include/flecs/addons/rest.h	/^#define ECS_REST_DEFAULT_PORT /;"	d
ECS_ROLE	lib/flecs/flecs.h	/^#define ECS_ROLE /;"	d
ECS_ROLE	lib/flecs/include/flecs.h	/^#define ECS_ROLE /;"	d
ECS_ROLE_MASK	lib/flecs/flecs.h	/^#define ECS_ROLE_MASK /;"	d
ECS_ROLE_MASK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ROLE_MASK /;"	d
ECS_ROW_FLAGS_MASK	lib/flecs/flecs.h	/^#define ECS_ROW_FLAGS_MASK /;"	d
ECS_ROW_FLAGS_MASK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ROW_FLAGS_MASK /;"	d
ECS_ROW_MASK	lib/flecs/flecs.h	/^#define ECS_ROW_MASK /;"	d
ECS_ROW_MASK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ROW_MASK /;"	d
ECS_ROW_TO_RECORD	lib/flecs/flecs.h	/^#define ECS_ROW_TO_RECORD(/;"	d
ECS_ROW_TO_RECORD	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_ROW_TO_RECORD(/;"	d
ECS_RULE_MAX_VAR_COUNT	lib/flecs/flecs.c	/^#define ECS_RULE_MAX_VAR_COUNT /;"	d	file:
ECS_RULE_MAX_VAR_COUNT	lib/flecs/src/addons/rules.c	/^#define ECS_RULE_MAX_VAR_COUNT /;"	d	file:
ECS_SIZEOF	lib/flecs/flecs.h	/^#define ECS_SIZEOF(/;"	d
ECS_SIZEOF	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_SIZEOF(/;"	d
ECS_SIZE_T_STR	lib/flecs/flecs.h	/^#define ECS_SIZE_T_STR /;"	d
ECS_SIZE_T_STR	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^#define ECS_SIZE_T_STR /;"	d
ECS_STAT_WINDOW	lib/flecs/flecs.h	/^#define ECS_STAT_WINDOW /;"	d
ECS_STAT_WINDOW	lib/flecs/include/flecs/addons/stats.h	/^#define ECS_STAT_WINDOW /;"	d
ECS_STRBUF_ELEMENT_SIZE	lib/flecs/flecs.h	/^#define ECS_STRBUF_ELEMENT_SIZE /;"	d
ECS_STRBUF_ELEMENT_SIZE	lib/flecs/include/flecs/private/strbuf.h	/^#define ECS_STRBUF_ELEMENT_SIZE /;"	d
ECS_STRBUF_INIT	lib/flecs/flecs.h	/^#define ECS_STRBUF_INIT /;"	d
ECS_STRBUF_INIT	lib/flecs/include/flecs/private/strbuf.h	/^#define ECS_STRBUF_INIT /;"	d
ECS_STRBUF_MAX_LIST_DEPTH	lib/flecs/flecs.h	/^#define ECS_STRBUF_MAX_LIST_DEPTH /;"	d
ECS_STRBUF_MAX_LIST_DEPTH	lib/flecs/include/flecs/private/strbuf.h	/^#define ECS_STRBUF_MAX_LIST_DEPTH /;"	d
ECS_STRUCT	lib/flecs/flecs.h	/^#define ECS_STRUCT(/;"	d
ECS_STRUCT	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_STRUCT(/;"	d
ECS_STRUCT_DECLARE	lib/flecs/flecs.h	/^#define ECS_STRUCT_DECLARE(/;"	d
ECS_STRUCT_DECLARE	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_STRUCT_DECLARE(/;"	d
ECS_STRUCT_ECS_META_IMPL	lib/flecs/flecs.h	/^#define ECS_STRUCT_ECS_META_IMPL /;"	d
ECS_STRUCT_ECS_META_IMPL	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_STRUCT_ECS_META_IMPL /;"	d
ECS_STRUCT_EXTERN	lib/flecs/flecs.h	/^#define ECS_STRUCT_EXTERN(/;"	d
ECS_STRUCT_EXTERN	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_STRUCT_EXTERN(/;"	d
ECS_STRUCT_IMPL	lib/flecs/flecs.h	/^#define ECS_STRUCT_IMPL(/;"	d
ECS_STRUCT_IMPL	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_STRUCT_IMPL(/;"	d
ECS_STRUCT_LEN	lib/flecs/flecs.c	/^#define ECS_STRUCT_LEN /;"	d	file:
ECS_STRUCT_LEN	lib/flecs/src/addons/flecs_cpp.c	/^#define ECS_STRUCT_LEN /;"	d	file:
ECS_STRUCT_PREFIX	lib/flecs/flecs.c	/^#define ECS_STRUCT_PREFIX /;"	d	file:
ECS_STRUCT_PREFIX	lib/flecs/src/addons/flecs_cpp.c	/^#define ECS_STRUCT_PREFIX /;"	d	file:
ECS_STRUCT_TYPE	lib/flecs/flecs.h	/^#define ECS_STRUCT_TYPE(/;"	d
ECS_STRUCT_TYPE	lib/flecs/include/flecs/addons/meta_c.h	/^#define ECS_STRUCT_TYPE(/;"	d
ECS_SWITCH	lib/flecs/flecs.c	/^const ecs_id_t ECS_SWITCH =    (ECS_ROLE | (0x7Bull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_SWITCH	lib/flecs/src/world.c	/^const ecs_id_t ECS_SWITCH =    (ECS_ROLE | (0x7Bull << 56));$/;"	v	typeref:typename:const ecs_id_t
ECS_SYSTEM	lib/flecs/flecs.h	/^#define ECS_SYSTEM(/;"	d
ECS_SYSTEM	lib/flecs/include/flecs/addons/system.h	/^#define ECS_SYSTEM(/;"	d
ECS_SYSTEMS_H	include/ecs/systems.h	/^#define ECS_SYSTEMS_H$/;"	d
ECS_SYSTEM_DECLARE	lib/flecs/flecs.h	/^#define ECS_SYSTEM_DECLARE(/;"	d
ECS_SYSTEM_DECLARE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_SYSTEM_DECLARE(/;"	d
ECS_SYSTEM_DEFINE	lib/flecs/flecs.h	/^#define ECS_SYSTEM_DEFINE(/;"	d
ECS_SYSTEM_DEFINE	lib/flecs/include/flecs/addons/system.h	/^#define ECS_SYSTEM_DEFINE(/;"	d
ECS_TABLE_DIFF_INIT	lib/flecs/flecs.c	/^#define ECS_TABLE_DIFF_INIT /;"	d	file:
ECS_TABLE_DIFF_INIT	lib/flecs/src/entity.c	/^#define ECS_TABLE_DIFF_INIT /;"	d	file:
ECS_TABLE_LOCK	lib/flecs/flecs.h	/^#define ECS_TABLE_LOCK(/;"	d
ECS_TABLE_LOCK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TABLE_LOCK(/;"	d
ECS_TABLE_UNLOCK	lib/flecs/flecs.h	/^#define ECS_TABLE_UNLOCK(/;"	d
ECS_TABLE_UNLOCK	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TABLE_UNLOCK(/;"	d
ECS_TAG	lib/flecs/flecs.h	/^#define ECS_TAG(/;"	d
ECS_TAG	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_TAG(/;"	d
ECS_TAG_DEFINE	lib/flecs/flecs.h	/^#define ECS_TAG_DEFINE(/;"	d
ECS_TAG_DEFINE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_TAG_DEFINE(/;"	d
ECS_TARGET_ANDROID	lib/flecs/flecs.h	/^#define ECS_TARGET_ANDROID$/;"	d
ECS_TARGET_ANDROID	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_ANDROID$/;"	d
ECS_TARGET_DARWIN	lib/flecs/flecs.h	/^#define ECS_TARGET_DARWIN$/;"	d
ECS_TARGET_DARWIN	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_DARWIN$/;"	d
ECS_TARGET_EM	lib/flecs/flecs.h	/^#define ECS_TARGET_EM$/;"	d
ECS_TARGET_EM	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_EM$/;"	d
ECS_TARGET_FREEBSD	lib/flecs/flecs.h	/^#define ECS_TARGET_FREEBSD$/;"	d
ECS_TARGET_FREEBSD	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_FREEBSD$/;"	d
ECS_TARGET_GNU	lib/flecs/flecs.h	/^#define ECS_TARGET_GNU$/;"	d
ECS_TARGET_GNU	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_GNU$/;"	d
ECS_TARGET_LINUX	lib/flecs/flecs.h	/^#define ECS_TARGET_LINUX$/;"	d
ECS_TARGET_LINUX	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_LINUX$/;"	d
ECS_TARGET_MSVC	lib/flecs/flecs.h	/^#define ECS_TARGET_MSVC$/;"	d
ECS_TARGET_MSVC	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_MSVC$/;"	d
ECS_TARGET_POSIX	lib/flecs/flecs.h	/^#define ECS_TARGET_POSIX$/;"	d
ECS_TARGET_POSIX	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_POSIX$/;"	d
ECS_TARGET_WINDOWS	lib/flecs/flecs.h	/^#define ECS_TARGET_WINDOWS$/;"	d
ECS_TARGET_WINDOWS	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_TARGET_WINDOWS$/;"	d
ECS_TERM_CACHE_SIZE	lib/flecs/flecs.h	/^#define ECS_TERM_CACHE_SIZE /;"	d
ECS_TERM_CACHE_SIZE	lib/flecs/include/flecs.h	/^#define ECS_TERM_CACHE_SIZE /;"	d
ECS_TERM_DESC_CACHE_SIZE	lib/flecs/flecs.h	/^#define ECS_TERM_DESC_CACHE_SIZE /;"	d
ECS_TERM_DESC_CACHE_SIZE	lib/flecs/include/flecs.h	/^#define ECS_TERM_DESC_CACHE_SIZE /;"	d
ECS_TRACE_0	lib/flecs/flecs.h	/^#define ECS_TRACE_0 /;"	d
ECS_TRACE_0	lib/flecs/flecs.h	/^#define ECS_TRACE_0$/;"	d
ECS_TRACE_0	lib/flecs/include/flecs/addons/log.h	/^#define ECS_TRACE_0 /;"	d
ECS_TRACE_0	lib/flecs/include/flecs/addons/log.h	/^#define ECS_TRACE_0$/;"	d
ECS_TRACE_1	lib/flecs/flecs.h	/^#define ECS_TRACE_1$/;"	d
ECS_TRACE_1	lib/flecs/include/flecs/addons/log.h	/^#define ECS_TRACE_1$/;"	d
ECS_TRACE_2	lib/flecs/flecs.h	/^#define ECS_TRACE_2$/;"	d
ECS_TRACE_2	lib/flecs/include/flecs/addons/log.h	/^#define ECS_TRACE_2$/;"	d
ECS_TRACE_3	lib/flecs/flecs.h	/^#define ECS_TRACE_3 /;"	d
ECS_TRACE_3	lib/flecs/include/flecs/addons/log.h	/^#define ECS_TRACE_3 /;"	d
ECS_TRIGGER	lib/flecs/flecs.h	/^#define ECS_TRIGGER(/;"	d
ECS_TRIGGER	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_TRIGGER(/;"	d
ECS_TRIGGER_DEFINE	lib/flecs/flecs.h	/^#define ECS_TRIGGER_DEFINE(/;"	d
ECS_TRIGGER_DEFINE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_TRIGGER_DEFINE(/;"	d
ECS_TRIGGER_DESC_EVENT_COUNT_MAX	lib/flecs/flecs.h	/^#define ECS_TRIGGER_DESC_EVENT_COUNT_MAX /;"	d
ECS_TRIGGER_DESC_EVENT_COUNT_MAX	lib/flecs/include/flecs.h	/^#define ECS_TRIGGER_DESC_EVENT_COUNT_MAX /;"	d
ECS_TYPE	lib/flecs/flecs.h	/^#define ECS_TYPE(/;"	d
ECS_TYPE	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ECS_TYPE(/;"	d
ECS_TYPE_INVALID_CASE	lib/flecs/flecs.h	/^#define ECS_TYPE_INVALID_CASE /;"	d
ECS_TYPE_INVALID_CASE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_TYPE_INVALID_CASE /;"	d
ECS_UNSUPPORTED	lib/flecs/flecs.h	/^#define ECS_UNSUPPORTED /;"	d
ECS_UNSUPPORTED	lib/flecs/include/flecs/addons/log.h	/^#define ECS_UNSUPPORTED /;"	d
ECS_UNUSED	lib/flecs/flecs.h	/^#define ECS_UNUSED /;"	d
ECS_UNUSED	lib/flecs/flecs.h	/^#define ECS_UNUSED$/;"	d
ECS_UNUSED	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_UNUSED /;"	d
ECS_UNUSED	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_UNUSED$/;"	d
ECS_VECTOR_DECL	lib/flecs/flecs.h	/^#define ECS_VECTOR_DECL(/;"	d
ECS_VECTOR_DECL	lib/flecs/include/flecs/private/vector.h	/^#define ECS_VECTOR_DECL(/;"	d
ECS_VECTOR_IMPL	lib/flecs/flecs.h	/^#define ECS_VECTOR_IMPL(/;"	d
ECS_VECTOR_IMPL	lib/flecs/include/flecs/private/vector.h	/^#define ECS_VECTOR_IMPL(/;"	d
ECS_VECTOR_STACK	lib/flecs/flecs.h	/^#define ECS_VECTOR_STACK(/;"	d
ECS_VECTOR_STACK	lib/flecs/include/flecs/private/vector.h	/^#define ECS_VECTOR_STACK(/;"	d
ECS_VECTOR_T	lib/flecs/flecs.h	/^#define ECS_VECTOR_T(/;"	d
ECS_VECTOR_T	lib/flecs/include/flecs/private/vector.h	/^#define ECS_VECTOR_T(/;"	d
ECS_VECTOR_T_SIZE	lib/flecs/flecs.h	/^#define ECS_VECTOR_T_SIZE\\/;"	d
ECS_VECTOR_T_SIZE	lib/flecs/include/flecs/private/vector.h	/^#define ECS_VECTOR_T_SIZE\\/;"	d
ECS_VECTOR_U	lib/flecs/flecs.h	/^#define ECS_VECTOR_U(/;"	d
ECS_VECTOR_U	lib/flecs/include/flecs/private/vector.h	/^#define ECS_VECTOR_U(/;"	d
ECS_VECTOR_VALUE	lib/flecs/flecs.h	/^#define ECS_VECTOR_VALUE(/;"	d
ECS_VECTOR_VALUE	lib/flecs/include/flecs/private/vector.h	/^#define ECS_VECTOR_VALUE(/;"	d
ECS_WHITE	lib/flecs/flecs.h	/^#define ECS_WHITE /;"	d
ECS_WHITE	lib/flecs/include/flecs/addons/log.h	/^#define ECS_WHITE /;"	d
ECS_XOR	lib/flecs/flecs.h	/^#define ECS_XOR /;"	d
ECS_XOR	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_XOR /;"	d
ECS_XTOR_IMPL	lib/flecs/flecs.h	/^#define ECS_XTOR_IMPL(/;"	d
ECS_XTOR_IMPL	lib/flecs/include/flecs/private/api_defines.h	/^#define ECS_XTOR_IMPL(/;"	d
ECS_YELLOW	lib/flecs/flecs.h	/^#define ECS_YELLOW /;"	d
ECS_YELLOW	lib/flecs/include/flecs/addons/log.h	/^#define ECS_YELLOW /;"	d
ELMT_FROM_HH	lib/uthash/include/uthash.h	/^#define ELMT_FROM_HH(/;"	d
ELMT_FROM_HH	lib/uthash/src/uthash.h	/^#define ELMT_FROM_HH(/;"	d
ENTITY_TYPE_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/entity_type/include/entity_type/bake_config.h	/^#define ENTITY_TYPE_BAKE_CONFIG_H$/;"	d
ENTITY_TYPE_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/entity_type/include/entity_type/bake_config.h	/^#define ENTITY_TYPE_BAKE_CONFIG_H$/;"	d
ENTITY_TYPE_H	lib/flecs/examples/c/reflection/entity_type/include/entity_type.h	/^#define ENTITY_TYPE_H$/;"	d
ENTITY_TYPE_H	lib/flecs/examples/cpp/reflection/entity_type/include/entity_type.h	/^#define ENTITY_TYPE_H$/;"	d
ENUM_RELATIONS_BAKE_CONFIG_H	lib/flecs/examples/cpp/relations/enum_relations/include/enum_relations/bake_config.h	/^#define ENUM_RELATIONS_BAKE_CONFIG_H$/;"	d
ENUM_RELATIONS_H	lib/flecs/examples/cpp/relations/enum_relations/include/enum_relations.h	/^#define ENUM_RELATIONS_H$/;"	d
EQUALS	cmake-build-debug/Makefile	/^EQUALS = =$/;"	m
EQUALS	cmake-build-debug/lib/flecs/Makefile	/^EQUALS = =$/;"	m
EQUALS	cmake-build-debug/lib/libflint/Makefile	/^EQUALS = =$/;"	m
EQUALS	cmake-build-release/Makefile	/^EQUALS = =$/;"	m
EQUALS	cmake-build-release/lib/flecs/Makefile	/^EQUALS = =$/;"	m
EQUALS	cmake-build-release/lib/libflint/Makefile	/^EQUALS = =$/;"	m
EVENS	lib/uthash/tests/test36.c	/^#define EVENS(/;"	d	file:
EVENS	lib/uthash/tests/test37.c	/^#define EVENS(/;"	d	file:
EXP_THRESHOLD	lib/flecs/flecs.c	/^#define EXP_THRESHOLD /;"	d	file:
EXP_THRESHOLD	lib/flecs/src/datastructures/strbuf.c	/^#define EXP_THRESHOLD /;"	d	file:
EachFunc	lib/flecs/test/cpp_api/src/Query.cpp	/^void EachFunc(flecs::entity e, Position& p) {$/;"	f	typeref:typename:void
Eats	lib/flecs/examples/c/queries/wildcards/src/main.c	/^} Eats;$/;"	t	typeref:struct:__anon629a91ad0108	file:
Eats	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^struct Eats { };$/;"	s	file:
Eats	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^struct Eats { };$/;"	s	file:
Eats	lib/flecs/examples/cpp/queries/wildcards/src/main.cpp	/^struct Eats {$/;"	s	file:
Eats	lib/flecs/examples/cpp/relations/basics/src/main.cpp	/^struct Eats { };$/;"	s	file:
Eats	lib/flecs/examples/cpp/rules/basics/src/main.cpp	/^struct Eats { };$/;"	s	file:
Eats	lib/flecs/test/cpp_api/src/Pairs.cpp	/^struct Eats { int amount; };$/;"	s	file:
Eats	lib/flecs/test/cpp_api/src/Query.cpp	/^struct Eats { int amount; };$/;"	s	file:
Eats	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Eats { };$/;"	s	function:RuleBuilder_2_pair_terms_w_var	file:
Eats	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Eats { };$/;"	s	function:RuleBuilder_set_2_vars	file:
Eats	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Eats { };$/;"	s	function:RuleBuilder_set_2_vars_by_name	file:
Eats	lib/flecs/test/cpp_api/src/Type.cpp	/^    struct Eats {};$/;"	s	function:Type_has_pair_type	file:
EatsApples	lib/flecs/test/cpp_api/src/Pairs.cpp	/^using EatsApples = flecs::pair<Eats, Apples>;$/;"	t	typeref:typename:flecs::pair<Eats,Apples>	file:
EatsApples	lib/flecs/test/cpp_api/src/Query.cpp	/^using EatsApples = flecs::pair<Eats, Apples>;$/;"	t	typeref:typename:flecs::pair<Eats,Apples>	file:
EatsPears	lib/flecs/test/cpp_api/src/Pairs.cpp	/^using EatsPears = flecs::pair<Eats, Pears>;$/;"	t	typeref:typename:flecs::pair<Eats,Pears>	file:
EatsPears	lib/flecs/test/cpp_api/src/Query.cpp	/^using EatsPears = flecs::pair<Eats, Pears>;$/;"	t	typeref:typename:flecs::pair<Eats,Pears>	file:
EcsAcyclic	lib/flecs/flecs.c	/^const ecs_entity_t EcsAcyclic =               ECS_HI_COMPONENT_ID + 20;$/;"	v	typeref:typename:const ecs_entity_t
EcsAcyclic	lib/flecs/src/world.c	/^const ecs_entity_t EcsAcyclic =               ECS_HI_COMPONENT_ID + 20;$/;"	v	typeref:typename:const ecs_entity_t
EcsAlias	lib/flecs/flecs.c	/^const ecs_entity_t EcsAlias =                 ECS_HI_COMPONENT_ID + 29;$/;"	v	typeref:typename:const ecs_entity_t
EcsAlias	lib/flecs/src/world.c	/^const ecs_entity_t EcsAlias =                 ECS_HI_COMPONENT_ID + 29;$/;"	v	typeref:typename:const ecs_entity_t
EcsAll	lib/flecs/flecs.h	/^#define EcsAll /;"	d
EcsAll	lib/flecs/include/flecs.h	/^#define EcsAll /;"	d
EcsAnd	lib/flecs/flecs.h	/^    EcsAnd,         \/* The term must match *\/$/;"	e	enum:ecs_oper_kind_t
EcsAnd	lib/flecs/include/flecs.h	/^    EcsAnd,         \/* The term must match *\/$/;"	e	enum:ecs_oper_kind_t
EcsAndFrom	lib/flecs/flecs.h	/^    EcsAndFrom,     \/* Term must match all components from term id *\/$/;"	e	enum:ecs_oper_kind_t
EcsAndFrom	lib/flecs/include/flecs.h	/^    EcsAndFrom,     \/* Term must match all components from term id *\/$/;"	e	enum:ecs_oper_kind_t
EcsAny	lib/flecs/flecs.c	/^const ecs_entity_t EcsAny =                   ECS_HI_COMPONENT_ID + 11;$/;"	v	typeref:typename:const ecs_entity_t
EcsAny	lib/flecs/src/world.c	/^const ecs_entity_t EcsAny =                   ECS_HI_COMPONENT_ID + 11;$/;"	v	typeref:typename:const ecs_entity_t
EcsArray	lib/flecs/flecs.h	/^typedef struct EcsArray {$/;"	s
EcsArray	lib/flecs/flecs.h	/^} EcsArray;$/;"	t	typeref:struct:EcsArray
EcsArray	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsArray {$/;"	s
EcsArray	lib/flecs/include/flecs/addons/meta.h	/^} EcsArray;$/;"	t	typeref:struct:EcsArray
EcsArrayType	lib/flecs/flecs.h	/^    EcsArrayType,$/;"	e	enum:ecs_type_kind_t
EcsArrayType	lib/flecs/include/flecs/addons/meta.h	/^    EcsArrayType,$/;"	e	enum:ecs_type_kind_t
EcsBitmask	lib/flecs/flecs.h	/^typedef struct EcsBitmask {$/;"	s
EcsBitmask	lib/flecs/flecs.h	/^} EcsBitmask;$/;"	t	typeref:struct:EcsBitmask
EcsBitmask	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsBitmask {$/;"	s
EcsBitmask	lib/flecs/include/flecs/addons/meta.h	/^} EcsBitmask;$/;"	t	typeref:struct:EcsBitmask
EcsBitmaskType	lib/flecs/flecs.h	/^    EcsBitmaskType,$/;"	e	enum:ecs_type_kind_t
EcsBitmaskType	lib/flecs/include/flecs/addons/meta.h	/^    EcsBitmaskType,$/;"	e	enum:ecs_type_kind_t
EcsBool	lib/flecs/flecs.h	/^    EcsBool = 1,$/;"	e	enum:ecs_primitive_kind_t
EcsBool	lib/flecs/include/flecs/addons/meta.h	/^    EcsBool = 1,$/;"	e	enum:ecs_primitive_kind_t
EcsByte	lib/flecs/flecs.h	/^    EcsByte,$/;"	e	enum:ecs_primitive_kind_t
EcsByte	lib/flecs/include/flecs/addons/meta.h	/^    EcsByte,$/;"	e	enum:ecs_primitive_kind_t
EcsCascade	lib/flecs/flecs.h	/^#define EcsCascade /;"	d
EcsCascade	lib/flecs/include/flecs.h	/^#define EcsCascade /;"	d
EcsChar	lib/flecs/flecs.h	/^    EcsChar,$/;"	e	enum:ecs_primitive_kind_t
EcsChar	lib/flecs/include/flecs/addons/meta.h	/^    EcsChar,$/;"	e	enum:ecs_primitive_kind_t
EcsChildOf	lib/flecs/flecs.c	/^const ecs_entity_t EcsChildOf =               ECS_HI_COMPONENT_ID + 25;$/;"	v	typeref:typename:const ecs_entity_t
EcsChildOf	lib/flecs/src/world.c	/^const ecs_entity_t EcsChildOf =               ECS_HI_COMPONENT_ID + 25;$/;"	v	typeref:typename:const ecs_entity_t
EcsComponent	lib/flecs/flecs.h	/^typedef struct EcsComponent {$/;"	s
EcsComponent	lib/flecs/flecs.h	/^} EcsComponent;$/;"	t	typeref:struct:EcsComponent
EcsComponent	lib/flecs/include/flecs.h	/^typedef struct EcsComponent {$/;"	s
EcsComponent	lib/flecs/include/flecs.h	/^} EcsComponent;$/;"	t	typeref:struct:EcsComponent
EcsComponentLifecycle	lib/flecs/flecs.h	/^struct EcsComponentLifecycle {$/;"	s
EcsComponentLifecycle	lib/flecs/flecs.h	/^typedef struct EcsComponentLifecycle EcsComponentLifecycle;$/;"	t	typeref:struct:EcsComponentLifecycle
EcsComponentLifecycle	lib/flecs/include/flecs.h	/^struct EcsComponentLifecycle {$/;"	s
EcsComponentLifecycle	lib/flecs/include/flecs/private/api_types.h	/^typedef struct EcsComponentLifecycle EcsComponentLifecycle;$/;"	t	typeref:struct:EcsComponentLifecycle
EcsConstant	lib/flecs/flecs.c	/^const ecs_entity_t EcsConstant =              ECS_HI_COMPONENT_ID + 97;$/;"	v	typeref:typename:const ecs_entity_t
EcsConstant	lib/flecs/src/world.c	/^const ecs_entity_t EcsConstant =              ECS_HI_COMPONENT_ID + 97;$/;"	v	typeref:typename:const ecs_entity_t
EcsDefaultChildComponent	lib/flecs/flecs.c	/^const ecs_entity_t EcsDefaultChildComponent = ECS_HI_COMPONENT_ID + 55;$/;"	v	typeref:typename:const ecs_entity_t
EcsDefaultChildComponent	lib/flecs/src/world.c	/^const ecs_entity_t EcsDefaultChildComponent = ECS_HI_COMPONENT_ID + 55;$/;"	v	typeref:typename:const ecs_entity_t
EcsDefaultSet	lib/flecs/flecs.h	/^#define EcsDefaultSet /;"	d
EcsDefaultSet	lib/flecs/include/flecs.h	/^#define EcsDefaultSet /;"	d
EcsDelete	lib/flecs/flecs.c	/^const ecs_entity_t EcsDelete =                ECS_HI_COMPONENT_ID + 51;$/;"	v	typeref:typename:const ecs_entity_t
EcsDelete	lib/flecs/src/world.c	/^const ecs_entity_t EcsDelete =                ECS_HI_COMPONENT_ID + 51;$/;"	v	typeref:typename:const ecs_entity_t
EcsDisabled	lib/flecs/flecs.c	/^const ecs_entity_t EcsDisabled =              ECS_HI_COMPONENT_ID + 7;$/;"	v	typeref:typename:const ecs_entity_t
EcsDisabled	lib/flecs/src/world.c	/^const ecs_entity_t EcsDisabled =              ECS_HI_COMPONENT_ID + 7;$/;"	v	typeref:typename:const ecs_entity_t
EcsDocBrief	lib/flecs/flecs.c	/^const ecs_entity_t EcsDocBrief =              ECS_HI_COMPONENT_ID + 101;$/;"	v	typeref:typename:const ecs_entity_t
EcsDocBrief	lib/flecs/src/world.c	/^const ecs_entity_t EcsDocBrief =              ECS_HI_COMPONENT_ID + 101;$/;"	v	typeref:typename:const ecs_entity_t
EcsDocDescription	lib/flecs/flecs.h	/^typedef struct EcsDocDescription {$/;"	s
EcsDocDescription	lib/flecs/flecs.h	/^} EcsDocDescription;$/;"	t	typeref:struct:EcsDocDescription
EcsDocDescription	lib/flecs/include/flecs/addons/doc.h	/^typedef struct EcsDocDescription {$/;"	s
EcsDocDescription	lib/flecs/include/flecs/addons/doc.h	/^} EcsDocDescription;$/;"	t	typeref:struct:EcsDocDescription
EcsDocDetail	lib/flecs/flecs.c	/^const ecs_entity_t EcsDocDetail =             ECS_HI_COMPONENT_ID + 102;$/;"	v	typeref:typename:const ecs_entity_t
EcsDocDetail	lib/flecs/src/world.c	/^const ecs_entity_t EcsDocDetail =             ECS_HI_COMPONENT_ID + 102;$/;"	v	typeref:typename:const ecs_entity_t
EcsDocLink	lib/flecs/flecs.c	/^const ecs_entity_t EcsDocLink =               ECS_HI_COMPONENT_ID + 103;$/;"	v	typeref:typename:const ecs_entity_t
EcsDocLink	lib/flecs/src/world.c	/^const ecs_entity_t EcsDocLink =               ECS_HI_COMPONENT_ID + 103;$/;"	v	typeref:typename:const ecs_entity_t
EcsDontInherit	lib/flecs/flecs.c	/^const ecs_entity_t EcsDontInherit =           ECS_HI_COMPONENT_ID + 17;$/;"	v	typeref:typename:const ecs_entity_t
EcsDontInherit	lib/flecs/src/world.c	/^const ecs_entity_t EcsDontInherit =           ECS_HI_COMPONENT_ID + 17;$/;"	v	typeref:typename:const ecs_entity_t
EcsEntity	lib/flecs/flecs.h	/^    EcsEntity,$/;"	e	enum:ecs_primitive_kind_t
EcsEntity	lib/flecs/include/flecs/addons/meta.h	/^    EcsEntity,$/;"	e	enum:ecs_primitive_kind_t
EcsEnum	lib/flecs/flecs.h	/^typedef struct EcsEnum {$/;"	s
EcsEnum	lib/flecs/flecs.h	/^} EcsEnum;$/;"	t	typeref:struct:EcsEnum
EcsEnum	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsEnum {$/;"	s
EcsEnum	lib/flecs/include/flecs/addons/meta.h	/^} EcsEnum;$/;"	t	typeref:struct:EcsEnum
EcsEnumType	lib/flecs/flecs.h	/^    EcsEnumType,$/;"	e	enum:ecs_type_kind_t
EcsEnumType	lib/flecs/include/flecs/addons/meta.h	/^    EcsEnumType,$/;"	e	enum:ecs_type_kind_t
EcsExclusive	lib/flecs/flecs.c	/^const ecs_entity_t EcsExclusive =             ECS_HI_COMPONENT_ID + 19;$/;"	v	typeref:typename:const ecs_entity_t
EcsExclusive	lib/flecs/src/world.c	/^const ecs_entity_t EcsExclusive =             ECS_HI_COMPONENT_ID + 19;$/;"	v	typeref:typename:const ecs_entity_t
EcsF32	lib/flecs/flecs.h	/^    EcsF32,$/;"	e	enum:ecs_primitive_kind_t
EcsF32	lib/flecs/include/flecs/addons/meta.h	/^    EcsF32,$/;"	e	enum:ecs_primitive_kind_t
EcsF64	lib/flecs/flecs.h	/^    EcsF64,$/;"	e	enum:ecs_primitive_kind_t
EcsF64	lib/flecs/include/flecs/addons/meta.h	/^    EcsF64,$/;"	e	enum:ecs_primitive_kind_t
EcsFinal	lib/flecs/flecs.c	/^const ecs_entity_t EcsFinal =                 ECS_HI_COMPONENT_ID + 16;$/;"	v	typeref:typename:const ecs_entity_t
EcsFinal	lib/flecs/src/world.c	/^const ecs_entity_t EcsFinal =                 ECS_HI_COMPONENT_ID + 16;$/;"	v	typeref:typename:const ecs_entity_t
EcsFirstUserComponentId	lib/flecs/flecs.h	/^#define EcsFirstUserComponentId /;"	d
EcsFirstUserComponentId	lib/flecs/include/flecs.h	/^#define EcsFirstUserComponentId /;"	d
EcsFirstUserEntityId	lib/flecs/flecs.h	/^#define EcsFirstUserEntityId /;"	d
EcsFirstUserEntityId	lib/flecs/include/flecs.h	/^#define EcsFirstUserEntityId /;"	d
EcsFlecs	lib/flecs/flecs.c	/^const ecs_entity_t EcsFlecs =                 ECS_HI_COMPONENT_ID + 1;$/;"	v	typeref:typename:const ecs_entity_t
EcsFlecs	lib/flecs/src/world.c	/^const ecs_entity_t EcsFlecs =                 ECS_HI_COMPONENT_ID + 1;$/;"	v	typeref:typename:const ecs_entity_t
EcsFlecsCore	lib/flecs/flecs.c	/^const ecs_entity_t EcsFlecsCore =             ECS_HI_COMPONENT_ID + 2;$/;"	v	typeref:typename:const ecs_entity_t
EcsFlecsCore	lib/flecs/src/world.c	/^const ecs_entity_t EcsFlecsCore =             ECS_HI_COMPONENT_ID + 2;$/;"	v	typeref:typename:const ecs_entity_t
EcsFlecsHidden	lib/flecs/flecs.c	/^const ecs_entity_t EcsFlecsHidden =           ECS_HI_COMPONENT_ID + 3;$/;"	v	typeref:typename:const ecs_entity_t
EcsFlecsHidden	lib/flecs/src/world.c	/^const ecs_entity_t EcsFlecsHidden =           ECS_HI_COMPONENT_ID + 3;$/;"	v	typeref:typename:const ecs_entity_t
EcsHttpDelete	lib/flecs/flecs.h	/^    EcsHttpDelete,$/;"	e	enum:__anona642c00a0903
EcsHttpDelete	lib/flecs/include/flecs/addons/http.h	/^    EcsHttpDelete,$/;"	e	enum:__anon12cf63340303
EcsHttpGet	lib/flecs/flecs.h	/^    EcsHttpGet,$/;"	e	enum:__anona642c00a0903
EcsHttpGet	lib/flecs/include/flecs/addons/http.h	/^    EcsHttpGet,$/;"	e	enum:__anon12cf63340303
EcsHttpMethodUnsupported	lib/flecs/flecs.h	/^    EcsHttpMethodUnsupported$/;"	e	enum:__anona642c00a0903
EcsHttpMethodUnsupported	lib/flecs/include/flecs/addons/http.h	/^    EcsHttpMethodUnsupported$/;"	e	enum:__anon12cf63340303
EcsHttpOptions	lib/flecs/flecs.h	/^    EcsHttpOptions,$/;"	e	enum:__anona642c00a0903
EcsHttpOptions	lib/flecs/include/flecs/addons/http.h	/^    EcsHttpOptions,$/;"	e	enum:__anon12cf63340303
EcsHttpPost	lib/flecs/flecs.h	/^    EcsHttpPost,$/;"	e	enum:__anona642c00a0903
EcsHttpPost	lib/flecs/include/flecs/addons/http.h	/^    EcsHttpPost,$/;"	e	enum:__anon12cf63340303
EcsHttpPut	lib/flecs/flecs.h	/^    EcsHttpPut,$/;"	e	enum:__anona642c00a0903
EcsHttpPut	lib/flecs/include/flecs/addons/http.h	/^    EcsHttpPut,$/;"	e	enum:__anon12cf63340303
EcsI16	lib/flecs/flecs.h	/^    EcsI16,$/;"	e	enum:ecs_primitive_kind_t
EcsI16	lib/flecs/include/flecs/addons/meta.h	/^    EcsI16,$/;"	e	enum:ecs_primitive_kind_t
EcsI32	lib/flecs/flecs.h	/^    EcsI32,$/;"	e	enum:ecs_primitive_kind_t
EcsI32	lib/flecs/include/flecs/addons/meta.h	/^    EcsI32,$/;"	e	enum:ecs_primitive_kind_t
EcsI64	lib/flecs/flecs.h	/^    EcsI64,$/;"	e	enum:ecs_primitive_kind_t
EcsI64	lib/flecs/include/flecs/addons/meta.h	/^    EcsI64,$/;"	e	enum:ecs_primitive_kind_t
EcsI8	lib/flecs/flecs.h	/^    EcsI8,$/;"	e	enum:ecs_primitive_kind_t
EcsI8	lib/flecs/include/flecs/addons/meta.h	/^    EcsI8,$/;"	e	enum:ecs_primitive_kind_t
EcsIPtr	lib/flecs/flecs.h	/^    EcsIPtr,$/;"	e	enum:ecs_primitive_kind_t
EcsIPtr	lib/flecs/include/flecs/addons/meta.h	/^    EcsIPtr,$/;"	e	enum:ecs_primitive_kind_t
EcsIdentifier	lib/flecs/flecs.h	/^typedef struct EcsIdentifier {$/;"	s
EcsIdentifier	lib/flecs/flecs.h	/^} EcsIdentifier;$/;"	t	typeref:struct:EcsIdentifier
EcsIdentifier	lib/flecs/include/flecs.h	/^typedef struct EcsIdentifier {$/;"	s
EcsIdentifier	lib/flecs/include/flecs.h	/^} EcsIdentifier;$/;"	t	typeref:struct:EcsIdentifier
EcsIn	lib/flecs/flecs.h	/^    EcsIn,            \/* Term is only read *\/$/;"	e	enum:ecs_inout_kind_t
EcsIn	lib/flecs/include/flecs.h	/^    EcsIn,            \/* Term is only read *\/$/;"	e	enum:ecs_inout_kind_t
EcsInOut	lib/flecs/flecs.h	/^    EcsInOut,         \/* Term is both read and written *\/$/;"	e	enum:ecs_inout_kind_t
EcsInOut	lib/flecs/include/flecs.h	/^    EcsInOut,         \/* Term is both read and written *\/$/;"	e	enum:ecs_inout_kind_t
EcsInOutDefault	lib/flecs/flecs.h	/^    EcsInOutDefault,  \/* InOut for regular terms, In for shared terms *\/$/;"	e	enum:ecs_inout_kind_t
EcsInOutDefault	lib/flecs/include/flecs.h	/^    EcsInOutDefault,  \/* InOut for regular terms, In for shared terms *\/$/;"	e	enum:ecs_inout_kind_t
EcsInOutFilter	lib/flecs/flecs.h	/^    EcsInOutFilter,   \/* Term is neither read nor written *\/$/;"	e	enum:ecs_inout_kind_t
EcsInOutFilter	lib/flecs/include/flecs.h	/^    EcsInOutFilter,   \/* Term is neither read nor written *\/$/;"	e	enum:ecs_inout_kind_t
EcsInactive	lib/flecs/flecs.c	/^const ecs_entity_t EcsInactive =              ECS_HI_COMPONENT_ID + 63;$/;"	v	typeref:typename:const ecs_entity_t
EcsInactive	lib/flecs/src/world.c	/^const ecs_entity_t EcsInactive =              ECS_HI_COMPONENT_ID + 63;$/;"	v	typeref:typename:const ecs_entity_t
EcsIsA	lib/flecs/flecs.c	/^const ecs_entity_t EcsIsA =                   ECS_HI_COMPONENT_ID + 26;$/;"	v	typeref:typename:const ecs_entity_t
EcsIsA	lib/flecs/src/world.c	/^const ecs_entity_t EcsIsA =                   ECS_HI_COMPONENT_ID + 26;$/;"	v	typeref:typename:const ecs_entity_t
EcsIterEvalChain	lib/flecs/flecs.h	/^    EcsIterEvalChain,$/;"	e	enum:ecs_iter_kind_t
EcsIterEvalChain	lib/flecs/include/flecs/private/api_types.h	/^    EcsIterEvalChain,$/;"	e	enum:ecs_iter_kind_t
EcsIterEvalCondition	lib/flecs/flecs.h	/^    EcsIterEvalCondition,$/;"	e	enum:ecs_iter_kind_t
EcsIterEvalCondition	lib/flecs/include/flecs/private/api_types.h	/^    EcsIterEvalCondition,$/;"	e	enum:ecs_iter_kind_t
EcsIterEvalIndex	lib/flecs/flecs.h	/^    EcsIterEvalIndex,$/;"	e	enum:ecs_iter_kind_t
EcsIterEvalIndex	lib/flecs/include/flecs/private/api_types.h	/^    EcsIterEvalIndex,$/;"	e	enum:ecs_iter_kind_t
EcsIterEvalNone	lib/flecs/flecs.h	/^    EcsIterEvalNone$/;"	e	enum:ecs_iter_kind_t
EcsIterEvalNone	lib/flecs/include/flecs/private/api_types.h	/^    EcsIterEvalNone$/;"	e	enum:ecs_iter_kind_t
EcsIterable	lib/flecs/flecs.h	/^typedef ecs_iterable_t EcsIterable;$/;"	t	typeref:typename:ecs_iterable_t
EcsIterable	lib/flecs/include/flecs.h	/^typedef ecs_iterable_t EcsIterable;$/;"	t	typeref:typename:ecs_iterable_t
EcsLastInternalComponentId	lib/flecs/flecs.h	/^#define EcsLastInternalComponentId /;"	d
EcsLastInternalComponentId	lib/flecs/include/flecs.h	/^#define EcsLastInternalComponentId /;"	d
EcsMember	lib/flecs/flecs.h	/^typedef struct EcsMember {$/;"	s
EcsMember	lib/flecs/flecs.h	/^} EcsMember;$/;"	t	typeref:struct:EcsMember
EcsMember	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsMember {$/;"	s
EcsMember	lib/flecs/include/flecs/addons/meta.h	/^} EcsMember;$/;"	t	typeref:struct:EcsMember
EcsMetaType	lib/flecs/flecs.h	/^typedef struct EcsMetaType {$/;"	s
EcsMetaType	lib/flecs/flecs.h	/^} EcsMetaType;$/;"	t	typeref:struct:EcsMetaType
EcsMetaType	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsMetaType {$/;"	s
EcsMetaType	lib/flecs/include/flecs/addons/meta.h	/^} EcsMetaType;$/;"	t	typeref:struct:EcsMetaType
EcsMetaTypeSerialized	lib/flecs/flecs.h	/^typedef struct EcsMetaTypeSerialized {$/;"	s
EcsMetaTypeSerialized	lib/flecs/flecs.h	/^} EcsMetaTypeSerialized;$/;"	t	typeref:struct:EcsMetaTypeSerialized
EcsMetaTypeSerialized	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsMetaTypeSerialized {$/;"	s
EcsMetaTypeSerialized	lib/flecs/include/flecs/addons/meta.h	/^} EcsMetaTypeSerialized;$/;"	t	typeref:struct:EcsMetaTypeSerialized
EcsMixinBase	lib/flecs/flecs.c	/^    EcsMixinBase,        \/* If mixin can't be found in object, look in base *\/$/;"	e	enum:ecs_mixin_kind_t	file:
EcsMixinBase	lib/flecs/src/private_types.h	/^    EcsMixinBase,        \/* If mixin can't be found in object, look in base *\/$/;"	e	enum:ecs_mixin_kind_t
EcsMixinIterable	lib/flecs/flecs.c	/^    EcsMixinIterable,$/;"	e	enum:ecs_mixin_kind_t	file:
EcsMixinIterable	lib/flecs/src/private_types.h	/^    EcsMixinIterable,$/;"	e	enum:ecs_mixin_kind_t
EcsMixinMax	lib/flecs/flecs.c	/^    EcsMixinMax$/;"	e	enum:ecs_mixin_kind_t	file:
EcsMixinMax	lib/flecs/src/private_types.h	/^    EcsMixinMax$/;"	e	enum:ecs_mixin_kind_t
EcsMixinObservable	lib/flecs/flecs.c	/^    EcsMixinObservable,$/;"	e	enum:ecs_mixin_kind_t	file:
EcsMixinObservable	lib/flecs/src/private_types.h	/^    EcsMixinObservable,$/;"	e	enum:ecs_mixin_kind_t
EcsMixinWorld	lib/flecs/flecs.c	/^    EcsMixinWorld,$/;"	e	enum:ecs_mixin_kind_t	file:
EcsMixinWorld	lib/flecs/src/private_types.h	/^    EcsMixinWorld,$/;"	e	enum:ecs_mixin_kind_t
EcsModule	lib/flecs/flecs.c	/^const ecs_entity_t EcsModule =                ECS_HI_COMPONENT_ID + 4;$/;"	v	typeref:typename:const ecs_entity_t
EcsModule	lib/flecs/src/world.c	/^const ecs_entity_t EcsModule =                ECS_HI_COMPONENT_ID + 4;$/;"	v	typeref:typename:const ecs_entity_t
EcsMonitor	lib/flecs/flecs.c	/^const ecs_entity_t EcsMonitor =               ECS_HI_COMPONENT_ID + 61;$/;"	v	typeref:typename:const ecs_entity_t
EcsMonitor	lib/flecs/src/world.c	/^const ecs_entity_t EcsMonitor =               ECS_HI_COMPONENT_ID + 61;$/;"	v	typeref:typename:const ecs_entity_t
EcsName	lib/flecs/flecs.c	/^const ecs_entity_t EcsName =                  ECS_HI_COMPONENT_ID + 27;$/;"	v	typeref:typename:const ecs_entity_t
EcsName	lib/flecs/src/world.c	/^const ecs_entity_t EcsName =                  ECS_HI_COMPONENT_ID + 27;$/;"	v	typeref:typename:const ecs_entity_t
EcsNot	lib/flecs/flecs.h	/^    EcsNot,         \/* The term must not match *\/$/;"	e	enum:ecs_oper_kind_t
EcsNot	lib/flecs/include/flecs.h	/^    EcsNot,         \/* The term must not match *\/$/;"	e	enum:ecs_oper_kind_t
EcsNotFrom	lib/flecs/flecs.h	/^    EcsNotFrom      \/* Term must match none of the components from term id *\/$/;"	e	enum:ecs_oper_kind_t
EcsNotFrom	lib/flecs/include/flecs.h	/^    EcsNotFrom      \/* Term must match none of the components from term id *\/$/;"	e	enum:ecs_oper_kind_t
EcsNothing	lib/flecs/flecs.h	/^#define EcsNothing /;"	d
EcsNothing	lib/flecs/include/flecs.h	/^#define EcsNothing /;"	d
EcsObserver	lib/flecs/flecs.h	/^typedef struct EcsObserver {$/;"	s
EcsObserver	lib/flecs/flecs.h	/^} EcsObserver;$/;"	t	typeref:struct:EcsObserver
EcsObserver	lib/flecs/include/flecs.h	/^typedef struct EcsObserver {$/;"	s
EcsObserver	lib/flecs/include/flecs.h	/^} EcsObserver;$/;"	t	typeref:struct:EcsObserver
EcsOnAdd	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnAdd =                 ECS_HI_COMPONENT_ID + 30;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnAdd	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnAdd =                 ECS_HI_COMPONENT_ID + 30;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnComponentLifecycle	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnComponentLifecycle =  ECS_HI_COMPONENT_ID + 42;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnComponentLifecycle	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnComponentLifecycle =  ECS_HI_COMPONENT_ID + 42;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnCreateTable	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnCreateTable =         ECS_HI_COMPONENT_ID + 35;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnCreateTable	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnCreateTable =         ECS_HI_COMPONENT_ID + 35;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnCreateTrigger	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnCreateTrigger =       ECS_HI_COMPONENT_ID + 39;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnCreateTrigger	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnCreateTrigger =       ECS_HI_COMPONENT_ID + 39;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDelete	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnDelete =              ECS_HI_COMPONENT_ID + 34;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDelete	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnDelete =              ECS_HI_COMPONENT_ID + 34;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDeleteObject	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnDeleteObject =        ECS_HI_COMPONENT_ID + 43;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDeleteObject	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnDeleteObject =        ECS_HI_COMPONENT_ID + 43;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDeleteObservable	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnDeleteObservable =    ECS_HI_COMPONENT_ID + 41;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDeleteObservable	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnDeleteObservable =    ECS_HI_COMPONENT_ID + 41;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDeleteTable	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnDeleteTable =         ECS_HI_COMPONENT_ID + 36;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDeleteTable	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnDeleteTable =         ECS_HI_COMPONENT_ID + 36;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDeleteTrigger	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnDeleteTrigger =       ECS_HI_COMPONENT_ID + 40;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnDeleteTrigger	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnDeleteTrigger =       ECS_HI_COMPONENT_ID + 40;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnLoad	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnLoad =                ECS_HI_COMPONENT_ID + 66;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnLoad	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnLoad =                ECS_HI_COMPONENT_ID + 66;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnRemove	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnRemove =              ECS_HI_COMPONENT_ID + 31;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnRemove	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnRemove =              ECS_HI_COMPONENT_ID + 31;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnSet	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnSet =                 ECS_HI_COMPONENT_ID + 32;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnSet	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnSet =                 ECS_HI_COMPONENT_ID + 32;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnStore	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnStore =               ECS_HI_COMPONENT_ID + 73;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnStore	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnStore =               ECS_HI_COMPONENT_ID + 73;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnTableEmpty	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnTableEmpty =          ECS_HI_COMPONENT_ID + 37;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnTableEmpty	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnTableEmpty =          ECS_HI_COMPONENT_ID + 37;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnTableFill	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnTableFill =           ECS_HI_COMPONENT_ID + 38;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnTableFill	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnTableFill =           ECS_HI_COMPONENT_ID + 38;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnUpdate	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnUpdate =              ECS_HI_COMPONENT_ID + 69;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnUpdate	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnUpdate =              ECS_HI_COMPONENT_ID + 69;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnValidate	lib/flecs/flecs.c	/^const ecs_entity_t EcsOnValidate =            ECS_HI_COMPONENT_ID + 70;$/;"	v	typeref:typename:const ecs_entity_t
EcsOnValidate	lib/flecs/src/world.c	/^const ecs_entity_t EcsOnValidate =            ECS_HI_COMPONENT_ID + 70;$/;"	v	typeref:typename:const ecs_entity_t
EcsOpAdd	lib/flecs/flecs.c	/^    EcsOpAdd,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpAdd	lib/flecs/src/private_types.h	/^    EcsOpAdd,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpArray	lib/flecs/flecs.h	/^    EcsOpArray,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpArray	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpArray,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpBitmask	lib/flecs/flecs.h	/^    EcsOpBitmask,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpBitmask	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpBitmask,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpBool	lib/flecs/flecs.h	/^    EcsOpBool,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpBool	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpBool,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpBulkNew	lib/flecs/flecs.c	/^    EcsOpBulkNew,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpBulkNew	lib/flecs/src/private_types.h	/^    EcsOpBulkNew,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpByte	lib/flecs/flecs.h	/^    EcsOpByte,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpByte	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpByte,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpChar	lib/flecs/flecs.h	/^    EcsOpChar,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpChar	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpChar,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpClear	lib/flecs/flecs.c	/^    EcsOpClear,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpClear	lib/flecs/src/private_types.h	/^    EcsOpClear,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpClone	lib/flecs/flecs.c	/^    EcsOpClone,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpClone	lib/flecs/src/private_types.h	/^    EcsOpClone,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpDelete	lib/flecs/flecs.c	/^    EcsOpDelete,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpDelete	lib/flecs/src/private_types.h	/^    EcsOpDelete,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpDisable	lib/flecs/flecs.c	/^    EcsOpDisable$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpDisable	lib/flecs/src/private_types.h	/^    EcsOpDisable$/;"	e	enum:ecs_defer_op_kind_t
EcsOpEnable	lib/flecs/flecs.c	/^    EcsOpEnable,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpEnable	lib/flecs/src/private_types.h	/^    EcsOpEnable,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpEntity	lib/flecs/flecs.h	/^    EcsOpEntity$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpEntity	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpEntity$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpEnum	lib/flecs/flecs.h	/^    EcsOpEnum,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpEnum	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpEnum,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpF32	lib/flecs/flecs.h	/^    EcsOpF32,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpF32	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpF32,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpF64	lib/flecs/flecs.h	/^    EcsOpF64,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpF64	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpF64,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpI16	lib/flecs/flecs.h	/^    EcsOpI16,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpI16	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpI16,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpI32	lib/flecs/flecs.h	/^    EcsOpI32,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpI32	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpI32,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpI64	lib/flecs/flecs.h	/^    EcsOpI64,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpI64	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpI64,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpI8	lib/flecs/flecs.h	/^    EcsOpI8,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpI8	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpI8,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpIPtr	lib/flecs/flecs.h	/^    EcsOpIPtr,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpIPtr	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpIPtr,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpModified	lib/flecs/flecs.c	/^    EcsOpModified,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpModified	lib/flecs/src/private_types.h	/^    EcsOpModified,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpMut	lib/flecs/flecs.c	/^    EcsOpMut,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpMut	lib/flecs/src/private_types.h	/^    EcsOpMut,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpNew	lib/flecs/flecs.c	/^    EcsOpNew,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpNew	lib/flecs/src/private_types.h	/^    EcsOpNew,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpOnDeleteAction	lib/flecs/flecs.c	/^    EcsOpOnDeleteAction,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpOnDeleteAction	lib/flecs/src/private_types.h	/^    EcsOpOnDeleteAction,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpPop	lib/flecs/flecs.h	/^    EcsOpPop,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpPop	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpPop,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpPrimitive	lib/flecs/flecs.h	/^    EcsOpPrimitive, \/* Marks first constant that's a primitive *\/$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpPrimitive	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpPrimitive, \/* Marks first constant that's a primitive *\/$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpPush	lib/flecs/flecs.h	/^    EcsOpPush,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpPush	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpPush,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpRemove	lib/flecs/flecs.c	/^    EcsOpRemove,   $/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpRemove	lib/flecs/src/private_types.h	/^    EcsOpRemove,   $/;"	e	enum:ecs_defer_op_kind_t
EcsOpScope	lib/flecs/flecs.h	/^    EcsOpScope, \/* Marks last constant that can open\/close a scope *\/$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpScope	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpScope, \/* Marks last constant that can open\/close a scope *\/$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpSet	lib/flecs/flecs.c	/^    EcsOpSet,$/;"	e	enum:ecs_defer_op_kind_t	file:
EcsOpSet	lib/flecs/src/private_types.h	/^    EcsOpSet,$/;"	e	enum:ecs_defer_op_kind_t
EcsOpString	lib/flecs/flecs.h	/^    EcsOpString,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpString	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpString,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpU16	lib/flecs/flecs.h	/^    EcsOpU16,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpU16	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpU16,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpU32	lib/flecs/flecs.h	/^    EcsOpU32,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpU32	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpU32,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpU64	lib/flecs/flecs.h	/^    EcsOpU64,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpU64	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpU64,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpU8	lib/flecs/flecs.h	/^    EcsOpU8,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpU8	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpU8,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpUPtr	lib/flecs/flecs.h	/^    EcsOpUPtr,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpUPtr	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpUPtr,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpVector	lib/flecs/flecs.h	/^    EcsOpVector,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOpVector	lib/flecs/include/flecs/addons/meta.h	/^    EcsOpVector,$/;"	e	enum:ecs_meta_type_op_kind_t
EcsOptional	lib/flecs/flecs.h	/^    EcsOptional,    \/* The term may match *\/$/;"	e	enum:ecs_oper_kind_t
EcsOptional	lib/flecs/include/flecs.h	/^    EcsOptional,    \/* The term may match *\/$/;"	e	enum:ecs_oper_kind_t
EcsOr	lib/flecs/flecs.h	/^    EcsOr,          \/* One of the terms in an or chain must match *\/$/;"	e	enum:ecs_oper_kind_t
EcsOr	lib/flecs/include/flecs.h	/^    EcsOr,          \/* One of the terms in an or chain must match *\/$/;"	e	enum:ecs_oper_kind_t
EcsOrFrom	lib/flecs/flecs.h	/^    EcsOrFrom,      \/* Term must match at least one component from term id *\/$/;"	e	enum:ecs_oper_kind_t
EcsOrFrom	lib/flecs/include/flecs.h	/^    EcsOrFrom,      \/* Term must match at least one component from term id *\/$/;"	e	enum:ecs_oper_kind_t
EcsOut	lib/flecs/flecs.h	/^    EcsOut,           \/* Term is only written *\/$/;"	e	enum:ecs_inout_kind_t
EcsOut	lib/flecs/include/flecs.h	/^    EcsOut,           \/* Term is only written *\/$/;"	e	enum:ecs_inout_kind_t
EcsParent	lib/flecs/flecs.h	/^#define EcsParent /;"	d
EcsParent	lib/flecs/include/flecs.h	/^#define EcsParent /;"	d
EcsPipeline	lib/flecs/flecs.c	/^const ecs_entity_t EcsPipeline =              ECS_HI_COMPONENT_ID + 64;$/;"	v	typeref:typename:const ecs_entity_t
EcsPipeline	lib/flecs/src/world.c	/^const ecs_entity_t EcsPipeline =              ECS_HI_COMPONENT_ID + 64;$/;"	v	typeref:typename:const ecs_entity_t
EcsPipelineQuery	lib/flecs/flecs.c	/^typedef struct EcsPipelineQuery {$/;"	s	file:
EcsPipelineQuery	lib/flecs/flecs.c	/^} EcsPipelineQuery;$/;"	t	typeref:struct:EcsPipelineQuery	file:
EcsPipelineQuery	lib/flecs/src/addons/pipeline/pipeline.h	/^typedef struct EcsPipelineQuery {$/;"	s
EcsPipelineQuery	lib/flecs/src/addons/pipeline/pipeline.h	/^} EcsPipelineQuery;$/;"	t	typeref:struct:EcsPipelineQuery
EcsPostFrame	lib/flecs/flecs.c	/^const ecs_entity_t EcsPostFrame =             ECS_HI_COMPONENT_ID + 74;$/;"	v	typeref:typename:const ecs_entity_t
EcsPostFrame	lib/flecs/src/world.c	/^const ecs_entity_t EcsPostFrame =             ECS_HI_COMPONENT_ID + 74;$/;"	v	typeref:typename:const ecs_entity_t
EcsPostLoad	lib/flecs/flecs.c	/^const ecs_entity_t EcsPostLoad =              ECS_HI_COMPONENT_ID + 67;$/;"	v	typeref:typename:const ecs_entity_t
EcsPostLoad	lib/flecs/src/world.c	/^const ecs_entity_t EcsPostLoad =              ECS_HI_COMPONENT_ID + 67;$/;"	v	typeref:typename:const ecs_entity_t
EcsPostUpdate	lib/flecs/flecs.c	/^const ecs_entity_t EcsPostUpdate =            ECS_HI_COMPONENT_ID + 71;$/;"	v	typeref:typename:const ecs_entity_t
EcsPostUpdate	lib/flecs/src/world.c	/^const ecs_entity_t EcsPostUpdate =            ECS_HI_COMPONENT_ID + 71;$/;"	v	typeref:typename:const ecs_entity_t
EcsPreFrame	lib/flecs/flecs.c	/^const ecs_entity_t EcsPreFrame =              ECS_HI_COMPONENT_ID + 65;$/;"	v	typeref:typename:const ecs_entity_t
EcsPreFrame	lib/flecs/src/world.c	/^const ecs_entity_t EcsPreFrame =              ECS_HI_COMPONENT_ID + 65;$/;"	v	typeref:typename:const ecs_entity_t
EcsPreStore	lib/flecs/flecs.c	/^const ecs_entity_t EcsPreStore =              ECS_HI_COMPONENT_ID + 72;$/;"	v	typeref:typename:const ecs_entity_t
EcsPreStore	lib/flecs/src/world.c	/^const ecs_entity_t EcsPreStore =              ECS_HI_COMPONENT_ID + 72;$/;"	v	typeref:typename:const ecs_entity_t
EcsPreUpdate	lib/flecs/flecs.c	/^const ecs_entity_t EcsPreUpdate =             ECS_HI_COMPONENT_ID + 68;$/;"	v	typeref:typename:const ecs_entity_t
EcsPreUpdate	lib/flecs/src/world.c	/^const ecs_entity_t EcsPreUpdate =             ECS_HI_COMPONENT_ID + 68;$/;"	v	typeref:typename:const ecs_entity_t
EcsPrefab	lib/flecs/flecs.c	/^const ecs_entity_t EcsPrefab =                ECS_HI_COMPONENT_ID + 6;$/;"	v	typeref:typename:const ecs_entity_t
EcsPrefab	lib/flecs/src/world.c	/^const ecs_entity_t EcsPrefab =                ECS_HI_COMPONENT_ID + 6;$/;"	v	typeref:typename:const ecs_entity_t
EcsPrimitive	lib/flecs/flecs.h	/^typedef struct EcsPrimitive {$/;"	s
EcsPrimitive	lib/flecs/flecs.h	/^} EcsPrimitive;$/;"	t	typeref:struct:EcsPrimitive
EcsPrimitive	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsPrimitive {$/;"	s
EcsPrimitive	lib/flecs/include/flecs/addons/meta.h	/^} EcsPrimitive;$/;"	t	typeref:struct:EcsPrimitive
EcsPrimitiveKindLast	lib/flecs/flecs.h	/^    EcsPrimitiveKindLast = EcsEntity$/;"	e	enum:ecs_primitive_kind_t
EcsPrimitiveKindLast	lib/flecs/include/flecs/addons/meta.h	/^    EcsPrimitiveKindLast = EcsEntity$/;"	e	enum:ecs_primitive_kind_t
EcsPrimitiveType	lib/flecs/flecs.h	/^    EcsPrimitiveType,$/;"	e	enum:ecs_type_kind_t
EcsPrimitiveType	lib/flecs/include/flecs/addons/meta.h	/^    EcsPrimitiveType,$/;"	e	enum:ecs_type_kind_t
EcsPrivate	lib/flecs/flecs.c	/^const ecs_entity_t EcsPrivate =               ECS_HI_COMPONENT_ID + 5;$/;"	v	typeref:typename:const ecs_entity_t
EcsPrivate	lib/flecs/src/world.c	/^const ecs_entity_t EcsPrivate =               ECS_HI_COMPONENT_ID + 5;$/;"	v	typeref:typename:const ecs_entity_t
EcsQuantity	lib/flecs/flecs.c	/^const ecs_entity_t EcsQuantity =              ECS_HI_COMPONENT_ID + 98;$/;"	v	typeref:typename:const ecs_entity_t
EcsQuantity	lib/flecs/src/world.c	/^const ecs_entity_t EcsQuantity =              ECS_HI_COMPONENT_ID + 98;$/;"	v	typeref:typename:const ecs_entity_t
EcsQuery	lib/flecs/flecs.h	/^typedef struct EcsQuery {$/;"	s
EcsQuery	lib/flecs/flecs.h	/^} EcsQuery;$/;"	t	typeref:struct:EcsQuery
EcsQuery	lib/flecs/include/flecs.h	/^typedef struct EcsQuery {$/;"	s
EcsQuery	lib/flecs/include/flecs.h	/^} EcsQuery;$/;"	t	typeref:struct:EcsQuery
EcsQueryHasMonitor	lib/flecs/flecs.c	/^#define EcsQueryHasMonitor /;"	d	file:
EcsQueryHasMonitor	lib/flecs/src/private_types.h	/^#define EcsQueryHasMonitor /;"	d
EcsQueryHasOptional	lib/flecs/flecs.c	/^#define EcsQueryHasOptional /;"	d	file:
EcsQueryHasOptional	lib/flecs/src/private_types.h	/^#define EcsQueryHasOptional /;"	d
EcsQueryHasOutColumns	lib/flecs/flecs.c	/^#define EcsQueryHasOutColumns /;"	d	file:
EcsQueryHasOutColumns	lib/flecs/src/private_types.h	/^#define EcsQueryHasOutColumns /;"	d
EcsQueryHasRefs	lib/flecs/flecs.c	/^#define EcsQueryHasRefs /;"	d	file:
EcsQueryHasRefs	lib/flecs/src/private_types.h	/^#define EcsQueryHasRefs /;"	d
EcsQueryHasTraits	lib/flecs/flecs.c	/^#define EcsQueryHasTraits /;"	d	file:
EcsQueryHasTraits	lib/flecs/src/private_types.h	/^#define EcsQueryHasTraits /;"	d
EcsQueryIsOrphaned	lib/flecs/flecs.c	/^#define EcsQueryIsOrphaned /;"	d	file:
EcsQueryIsOrphaned	lib/flecs/src/private_types.h	/^#define EcsQueryIsOrphaned /;"	d
EcsQueryIsSubquery	lib/flecs/flecs.c	/^#define EcsQueryIsSubquery /;"	d	file:
EcsQueryIsSubquery	lib/flecs/src/private_types.h	/^#define EcsQueryIsSubquery /;"	d
EcsQueryMatchDisabled	lib/flecs/flecs.c	/^#define EcsQueryMatchDisabled /;"	d	file:
EcsQueryMatchDisabled	lib/flecs/src/private_types.h	/^#define EcsQueryMatchDisabled /;"	d
EcsQueryMatchPrefab	lib/flecs/flecs.c	/^#define EcsQueryMatchPrefab /;"	d	file:
EcsQueryMatchPrefab	lib/flecs/src/private_types.h	/^#define EcsQueryMatchPrefab /;"	d
EcsQueryNeedsTables	lib/flecs/flecs.c	/^#define EcsQueryNeedsTables /;"	d	file:
EcsQueryNeedsTables	lib/flecs/src/private_types.h	/^#define EcsQueryNeedsTables /;"	d
EcsQueryOrphan	lib/flecs/flecs.c	/^    EcsQueryOrphan$/;"	e	enum:ecs_query_eventkind_t	file:
EcsQueryOrphan	lib/flecs/src/private_types.h	/^    EcsQueryOrphan$/;"	e	enum:ecs_query_eventkind_t
EcsQueryTableMatch	lib/flecs/flecs.c	/^    EcsQueryTableMatch,$/;"	e	enum:ecs_query_eventkind_t	file:
EcsQueryTableMatch	lib/flecs/src/private_types.h	/^    EcsQueryTableMatch,$/;"	e	enum:ecs_query_eventkind_t
EcsQueryTableRematch	lib/flecs/flecs.c	/^    EcsQueryTableRematch,$/;"	e	enum:ecs_query_eventkind_t	file:
EcsQueryTableRematch	lib/flecs/src/private_types.h	/^    EcsQueryTableRematch,$/;"	e	enum:ecs_query_eventkind_t
EcsQueryTableUnmatch	lib/flecs/flecs.c	/^    EcsQueryTableUnmatch,$/;"	e	enum:ecs_query_eventkind_t	file:
EcsQueryTableUnmatch	lib/flecs/src/private_types.h	/^    EcsQueryTableUnmatch,$/;"	e	enum:ecs_query_eventkind_t
EcsRateFilter	lib/flecs/flecs.h	/^typedef struct EcsRateFilter {$/;"	s
EcsRateFilter	lib/flecs/flecs.h	/^} EcsRateFilter;$/;"	t	typeref:struct:EcsRateFilter
EcsRateFilter	lib/flecs/include/flecs/addons/timer.h	/^typedef struct EcsRateFilter {$/;"	s
EcsRateFilter	lib/flecs/include/flecs/addons/timer.h	/^} EcsRateFilter;$/;"	t	typeref:struct:EcsRateFilter
EcsReflexive	lib/flecs/flecs.c	/^const ecs_entity_t EcsReflexive =             ECS_HI_COMPONENT_ID + 14;$/;"	v	typeref:typename:const ecs_entity_t
EcsReflexive	lib/flecs/src/world.c	/^const ecs_entity_t EcsReflexive =             ECS_HI_COMPONENT_ID + 14;$/;"	v	typeref:typename:const ecs_entity_t
EcsRemove	lib/flecs/flecs.c	/^const ecs_entity_t EcsRemove =                ECS_HI_COMPONENT_ID + 50;$/;"	v	typeref:typename:const ecs_entity_t
EcsRemove	lib/flecs/src/world.c	/^const ecs_entity_t EcsRemove =                ECS_HI_COMPONENT_ID + 50;$/;"	v	typeref:typename:const ecs_entity_t
EcsRest	lib/flecs/flecs.h	/^} EcsRest;$/;"	t	typeref:struct:__anona642c00a0608
EcsRest	lib/flecs/include/flecs/addons/rest.h	/^} EcsRest;$/;"	t	typeref:struct:__anon29130e920108
EcsRuleEach	lib/flecs/flecs.c	/^    EcsRuleEach,        \/* Forwards each entity in a table *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleEach	lib/flecs/src/addons/rules.c	/^    EcsRuleEach,        \/* Forwards each entity in a table *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleEq	lib/flecs/flecs.c	/^    EcsRuleEq,          \/* Test if entity in (subject) and (r_in) are equal *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleEq	lib/flecs/src/addons/rules.c	/^    EcsRuleEq,          \/* Test if entity in (subject) and (r_in) are equal *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleInTable	lib/flecs/flecs.c	/^    EcsRuleInTable,     \/* Test if entity (subject) is in table (r_in) *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleInTable	lib/flecs/src/addons/rules.c	/^    EcsRuleInTable,     \/* Test if entity (subject) is in table (r_in) *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleInput	lib/flecs/flecs.c	/^    EcsRuleInput,       \/* Input placeholder, first instruction in every rule *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleInput	lib/flecs/src/addons/rules.c	/^    EcsRuleInput,       \/* Input placeholder, first instruction in every rule *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleJump	lib/flecs/flecs.c	/^    EcsRuleJump,        \/* Jump to an operation label *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleJump	lib/flecs/src/addons/rules.c	/^    EcsRuleJump,        \/* Jump to an operation label *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleNot	lib/flecs/flecs.c	/^    EcsRuleNot,         \/* Invert result of an operation *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleNot	lib/flecs/src/addons/rules.c	/^    EcsRuleNot,         \/* Invert result of an operation *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleSelect	lib/flecs/flecs.c	/^    EcsRuleSelect,      \/* Selects all ables for a given predicate *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleSelect	lib/flecs/src/addons/rules.c	/^    EcsRuleSelect,      \/* Selects all ables for a given predicate *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleSetJmp	lib/flecs/flecs.c	/^    EcsRuleSetJmp,      \/* Set label for jump operation to one of two values *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleSetJmp	lib/flecs/src/addons/rules.c	/^    EcsRuleSetJmp,      \/* Set label for jump operation to one of two values *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleStore	lib/flecs/flecs.c	/^    EcsRuleStore,       \/* Store entity in table or entity variable *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleStore	lib/flecs/src/addons/rules.c	/^    EcsRuleStore,       \/* Store entity in table or entity variable *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleSubSet	lib/flecs/flecs.c	/^    EcsRuleSubSet,      \/* Finds all subsets for transitive relationship *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleSubSet	lib/flecs/src/addons/rules.c	/^    EcsRuleSubSet,      \/* Finds all subsets for transitive relationship *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleSuperSet	lib/flecs/flecs.c	/^    EcsRuleSuperSet,    \/* Finds all supersets for a transitive relationship *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleSuperSet	lib/flecs/src/addons/rules.c	/^    EcsRuleSuperSet,    \/* Finds all supersets for a transitive relationship *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleVarKindEntity	lib/flecs/flecs.c	/^    EcsRuleVarKindEntity,$/;"	e	enum:ecs_rule_var_kind_t	file:
EcsRuleVarKindEntity	lib/flecs/src/addons/rules.c	/^    EcsRuleVarKindEntity,$/;"	e	enum:ecs_rule_var_kind_t	file:
EcsRuleVarKindTable	lib/flecs/flecs.c	/^    EcsRuleVarKindTable, \/* Used for sorting, must be smallest *\/$/;"	e	enum:ecs_rule_var_kind_t	file:
EcsRuleVarKindTable	lib/flecs/src/addons/rules.c	/^    EcsRuleVarKindTable, \/* Used for sorting, must be smallest *\/$/;"	e	enum:ecs_rule_var_kind_t	file:
EcsRuleVarKindUnknown	lib/flecs/flecs.c	/^    EcsRuleVarKindUnknown$/;"	e	enum:ecs_rule_var_kind_t	file:
EcsRuleVarKindUnknown	lib/flecs/src/addons/rules.c	/^    EcsRuleVarKindUnknown$/;"	e	enum:ecs_rule_var_kind_t	file:
EcsRuleWith	lib/flecs/flecs.c	/^    EcsRuleWith,        \/* Applies a filter to a table or entity *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleWith	lib/flecs/src/addons/rules.c	/^    EcsRuleWith,        \/* Applies a filter to a table or entity *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleYield	lib/flecs/flecs.c	/^    EcsRuleYield        \/* Yield result *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsRuleYield	lib/flecs/src/addons/rules.c	/^    EcsRuleYield        \/* Yield result *\/$/;"	e	enum:ecs_rule_op_kind_t	file:
EcsSelf	lib/flecs/flecs.h	/^#define EcsSelf /;"	d
EcsSelf	lib/flecs/include/flecs.h	/^#define EcsSelf /;"	d
EcsString	lib/flecs/flecs.h	/^    EcsString,$/;"	e	enum:ecs_primitive_kind_t
EcsString	lib/flecs/include/flecs/addons/meta.h	/^    EcsString,$/;"	e	enum:ecs_primitive_kind_t
EcsStruct	lib/flecs/flecs.h	/^typedef struct EcsStruct {$/;"	s
EcsStruct	lib/flecs/flecs.h	/^} EcsStruct;$/;"	t	typeref:struct:EcsStruct
EcsStruct	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsStruct {$/;"	s
EcsStruct	lib/flecs/include/flecs/addons/meta.h	/^} EcsStruct;$/;"	t	typeref:struct:EcsStruct
EcsStructType	lib/flecs/flecs.h	/^    EcsStructType,$/;"	e	enum:ecs_type_kind_t
EcsStructType	lib/flecs/include/flecs/addons/meta.h	/^    EcsStructType,$/;"	e	enum:ecs_type_kind_t
EcsSubSet	lib/flecs/flecs.h	/^#define EcsSubSet /;"	d
EcsSubSet	lib/flecs/include/flecs.h	/^#define EcsSubSet /;"	d
EcsSuperSet	lib/flecs/flecs.h	/^#define EcsSuperSet /;"	d
EcsSuperSet	lib/flecs/include/flecs.h	/^#define EcsSuperSet /;"	d
EcsSymbol	lib/flecs/flecs.c	/^const ecs_entity_t EcsSymbol =                ECS_HI_COMPONENT_ID + 28;$/;"	v	typeref:typename:const ecs_entity_t
EcsSymbol	lib/flecs/src/world.c	/^const ecs_entity_t EcsSymbol =                ECS_HI_COMPONENT_ID + 28;$/;"	v	typeref:typename:const ecs_entity_t
EcsSymmetric	lib/flecs/flecs.c	/^const ecs_entity_t EcsSymmetric =             ECS_HI_COMPONENT_ID + 15;$/;"	v	typeref:typename:const ecs_entity_t
EcsSymmetric	lib/flecs/src/world.c	/^const ecs_entity_t EcsSymmetric =             ECS_HI_COMPONENT_ID + 15;$/;"	v	typeref:typename:const ecs_entity_t
EcsSystem	lib/flecs/flecs.c	/^typedef struct EcsSystem {$/;"	s	file:
EcsSystem	lib/flecs/flecs.c	/^} EcsSystem;$/;"	t	typeref:struct:EcsSystem	file:
EcsSystem	lib/flecs/src/addons/system/system.h	/^typedef struct EcsSystem {$/;"	s
EcsSystem	lib/flecs/src/addons/system/system.h	/^} EcsSystem;$/;"	t	typeref:struct:EcsSystem
EcsSystemActivated	lib/flecs/flecs.h	/^    EcsSystemActivated,$/;"	e	enum:ecs_system_status_t
EcsSystemActivated	lib/flecs/include/flecs/addons/system.h	/^    EcsSystemActivated,$/;"	e	enum:ecs_system_status_t
EcsSystemDeactivated	lib/flecs/flecs.h	/^    EcsSystemDeactivated$/;"	e	enum:ecs_system_status_t
EcsSystemDeactivated	lib/flecs/include/flecs/addons/system.h	/^    EcsSystemDeactivated$/;"	e	enum:ecs_system_status_t
EcsSystemDisabled	lib/flecs/flecs.h	/^    EcsSystemDisabled,$/;"	e	enum:ecs_system_status_t
EcsSystemDisabled	lib/flecs/include/flecs/addons/system.h	/^    EcsSystemDisabled,$/;"	e	enum:ecs_system_status_t
EcsSystemEnabled	lib/flecs/flecs.h	/^    EcsSystemEnabled,$/;"	e	enum:ecs_system_status_t
EcsSystemEnabled	lib/flecs/include/flecs/addons/system.h	/^    EcsSystemEnabled,$/;"	e	enum:ecs_system_status_t
EcsSystemStatusNone	lib/flecs/flecs.h	/^    EcsSystemStatusNone = 0,$/;"	e	enum:ecs_system_status_t
EcsSystemStatusNone	lib/flecs/include/flecs/addons/system.h	/^    EcsSystemStatusNone = 0,$/;"	e	enum:ecs_system_status_t
EcsTableComponentInfo	lib/flecs/flecs.c	/^    EcsTableComponentInfo$/;"	e	enum:ecs_table_eventkind_t	file:
EcsTableComponentInfo	lib/flecs/src/private_types.h	/^    EcsTableComponentInfo$/;"	e	enum:ecs_table_eventkind_t
EcsTableHasAddActions	lib/flecs/flecs.c	/^#define EcsTableHasAddActions /;"	d	file:
EcsTableHasAddActions	lib/flecs/src/private_types.h	/^#define EcsTableHasAddActions /;"	d
EcsTableHasBuiltins	lib/flecs/flecs.c	/^#define EcsTableHasBuiltins /;"	d	file:
EcsTableHasBuiltins	lib/flecs/src/private_types.h	/^#define EcsTableHasBuiltins /;"	d
EcsTableHasChildOf	lib/flecs/flecs.c	/^#define EcsTableHasChildOf /;"	d	file:
EcsTableHasChildOf	lib/flecs/src/private_types.h	/^#define EcsTableHasChildOf /;"	d
EcsTableHasCopy	lib/flecs/flecs.c	/^#define EcsTableHasCopy /;"	d	file:
EcsTableHasCopy	lib/flecs/src/private_types.h	/^#define EcsTableHasCopy /;"	d
EcsTableHasCtors	lib/flecs/flecs.c	/^#define EcsTableHasCtors /;"	d	file:
EcsTableHasCtors	lib/flecs/src/private_types.h	/^#define EcsTableHasCtors /;"	d
EcsTableHasDisabled	lib/flecs/flecs.c	/^#define EcsTableHasDisabled /;"	d	file:
EcsTableHasDisabled	lib/flecs/src/private_types.h	/^#define EcsTableHasDisabled /;"	d
EcsTableHasDtors	lib/flecs/flecs.c	/^#define EcsTableHasDtors /;"	d	file:
EcsTableHasDtors	lib/flecs/src/private_types.h	/^#define EcsTableHasDtors /;"	d
EcsTableHasIsA	lib/flecs/flecs.c	/^#define EcsTableHasIsA /;"	d	file:
EcsTableHasIsA	lib/flecs/src/private_types.h	/^#define EcsTableHasIsA /;"	d
EcsTableHasLifecycle	lib/flecs/flecs.c	/^#define EcsTableHasLifecycle /;"	d	file:
EcsTableHasLifecycle	lib/flecs/src/private_types.h	/^#define EcsTableHasLifecycle /;"	d
EcsTableHasModule	lib/flecs/flecs.c	/^#define EcsTableHasModule /;"	d	file:
EcsTableHasModule	lib/flecs/src/private_types.h	/^#define EcsTableHasModule /;"	d
EcsTableHasMove	lib/flecs/flecs.c	/^#define EcsTableHasMove /;"	d	file:
EcsTableHasMove	lib/flecs/src/private_types.h	/^#define EcsTableHasMove /;"	d
EcsTableHasOnAdd	lib/flecs/flecs.c	/^#define EcsTableHasOnAdd /;"	d	file:
EcsTableHasOnAdd	lib/flecs/src/private_types.h	/^#define EcsTableHasOnAdd /;"	d
EcsTableHasOnRemove	lib/flecs/flecs.c	/^#define EcsTableHasOnRemove /;"	d	file:
EcsTableHasOnRemove	lib/flecs/src/private_types.h	/^#define EcsTableHasOnRemove /;"	d
EcsTableHasOnSet	lib/flecs/flecs.c	/^#define EcsTableHasOnSet /;"	d	file:
EcsTableHasOnSet	lib/flecs/src/private_types.h	/^#define EcsTableHasOnSet /;"	d
EcsTableHasPairs	lib/flecs/flecs.c	/^#define EcsTableHasPairs /;"	d	file:
EcsTableHasPairs	lib/flecs/src/private_types.h	/^#define EcsTableHasPairs /;"	d
EcsTableHasRemoveActions	lib/flecs/flecs.c	/^#define EcsTableHasRemoveActions /;"	d	file:
EcsTableHasRemoveActions	lib/flecs/src/private_types.h	/^#define EcsTableHasRemoveActions /;"	d
EcsTableHasSwitch	lib/flecs/flecs.c	/^#define EcsTableHasSwitch /;"	d	file:
EcsTableHasSwitch	lib/flecs/src/private_types.h	/^#define EcsTableHasSwitch /;"	d
EcsTableHasUnSet	lib/flecs/flecs.c	/^#define EcsTableHasUnSet /;"	d	file:
EcsTableHasUnSet	lib/flecs/src/private_types.h	/^#define EcsTableHasUnSet /;"	d
EcsTableHasXor	lib/flecs/flecs.c	/^#define EcsTableHasXor /;"	d	file:
EcsTableHasXor	lib/flecs/src/private_types.h	/^#define EcsTableHasXor /;"	d
EcsTableIsComplex	lib/flecs/flecs.c	/^#define EcsTableIsComplex /;"	d	file:
EcsTableIsComplex	lib/flecs/src/private_types.h	/^#define EcsTableIsComplex /;"	d
EcsTableIsDisabled	lib/flecs/flecs.c	/^#define EcsTableIsDisabled /;"	d	file:
EcsTableIsDisabled	lib/flecs/src/private_types.h	/^#define EcsTableIsDisabled /;"	d
EcsTableIsPrefab	lib/flecs/flecs.c	/^#define EcsTableIsPrefab /;"	d	file:
EcsTableIsPrefab	lib/flecs/src/private_types.h	/^#define EcsTableIsPrefab /;"	d
EcsTableNoTriggersForId	lib/flecs/flecs.c	/^    EcsTableNoTriggersForId,$/;"	e	enum:ecs_table_eventkind_t	file:
EcsTableNoTriggersForId	lib/flecs/src/private_types.h	/^    EcsTableNoTriggersForId,$/;"	e	enum:ecs_table_eventkind_t
EcsTableTriggersForId	lib/flecs/flecs.c	/^    EcsTableTriggersForId,$/;"	e	enum:ecs_table_eventkind_t	file:
EcsTableTriggersForId	lib/flecs/src/private_types.h	/^    EcsTableTriggersForId,$/;"	e	enum:ecs_table_eventkind_t
EcsTag	lib/flecs/flecs.c	/^const ecs_entity_t EcsTag =                   ECS_HI_COMPONENT_ID + 18;$/;"	v	typeref:typename:const ecs_entity_t
EcsTag	lib/flecs/src/world.c	/^const ecs_entity_t EcsTag =                   ECS_HI_COMPONENT_ID + 18;$/;"	v	typeref:typename:const ecs_entity_t
EcsThis	lib/flecs/flecs.c	/^const ecs_entity_t EcsThis =                  ECS_HI_COMPONENT_ID + 12;$/;"	v	typeref:typename:const ecs_entity_t
EcsThis	lib/flecs/src/world.c	/^const ecs_entity_t EcsThis =                  ECS_HI_COMPONENT_ID + 12;$/;"	v	typeref:typename:const ecs_entity_t
EcsThrow	lib/flecs/flecs.c	/^const ecs_entity_t EcsThrow =                 ECS_HI_COMPONENT_ID + 52;$/;"	v	typeref:typename:const ecs_entity_t
EcsThrow	lib/flecs/src/world.c	/^const ecs_entity_t EcsThrow =                 ECS_HI_COMPONENT_ID + 52;$/;"	v	typeref:typename:const ecs_entity_t
EcsTickSource	lib/flecs/flecs.h	/^typedef struct EcsTickSource {$/;"	s
EcsTickSource	lib/flecs/flecs.h	/^} EcsTickSource;$/;"	t	typeref:struct:EcsTickSource
EcsTickSource	lib/flecs/include/flecs/addons/system.h	/^typedef struct EcsTickSource {$/;"	s
EcsTickSource	lib/flecs/include/flecs/addons/system.h	/^} EcsTickSource;$/;"	t	typeref:struct:EcsTickSource
EcsTimer	lib/flecs/flecs.h	/^typedef struct EcsTimer {$/;"	s
EcsTimer	lib/flecs/flecs.h	/^} EcsTimer;$/;"	t	typeref:struct:EcsTimer
EcsTimer	lib/flecs/include/flecs/addons/timer.h	/^typedef struct EcsTimer {$/;"	s
EcsTimer	lib/flecs/include/flecs/addons/timer.h	/^} EcsTimer;$/;"	t	typeref:struct:EcsTimer
EcsTransitive	lib/flecs/flecs.c	/^const ecs_entity_t EcsTransitive =            ECS_HI_COMPONENT_ID + 13;$/;"	v	typeref:typename:const ecs_entity_t
EcsTransitive	lib/flecs/src/world.c	/^const ecs_entity_t EcsTransitive =            ECS_HI_COMPONENT_ID + 13;$/;"	v	typeref:typename:const ecs_entity_t
EcsTrigger	lib/flecs/flecs.h	/^typedef struct EcsTrigger {$/;"	s
EcsTrigger	lib/flecs/flecs.h	/^} EcsTrigger;$/;"	t	typeref:struct:EcsTrigger
EcsTrigger	lib/flecs/include/flecs.h	/^typedef struct EcsTrigger {$/;"	s
EcsTrigger	lib/flecs/include/flecs.h	/^} EcsTrigger;$/;"	t	typeref:struct:EcsTrigger
EcsType	lib/flecs/flecs.h	/^typedef struct EcsType {$/;"	s
EcsType	lib/flecs/flecs.h	/^} EcsType;$/;"	t	typeref:struct:EcsType
EcsType	lib/flecs/include/flecs.h	/^typedef struct EcsType {$/;"	s
EcsType	lib/flecs/include/flecs.h	/^} EcsType;$/;"	t	typeref:struct:EcsType
EcsTypeKindLast	lib/flecs/flecs.h	/^    EcsTypeKindLast = EcsVectorType$/;"	e	enum:ecs_type_kind_t
EcsTypeKindLast	lib/flecs/include/flecs/addons/meta.h	/^    EcsTypeKindLast = EcsVectorType$/;"	e	enum:ecs_type_kind_t
EcsU16	lib/flecs/flecs.h	/^    EcsU16,$/;"	e	enum:ecs_primitive_kind_t
EcsU16	lib/flecs/include/flecs/addons/meta.h	/^    EcsU16,$/;"	e	enum:ecs_primitive_kind_t
EcsU32	lib/flecs/flecs.h	/^    EcsU32,$/;"	e	enum:ecs_primitive_kind_t
EcsU32	lib/flecs/include/flecs/addons/meta.h	/^    EcsU32,$/;"	e	enum:ecs_primitive_kind_t
EcsU64	lib/flecs/flecs.h	/^    EcsU64,$/;"	e	enum:ecs_primitive_kind_t
EcsU64	lib/flecs/include/flecs/addons/meta.h	/^    EcsU64,$/;"	e	enum:ecs_primitive_kind_t
EcsU8	lib/flecs/flecs.h	/^    EcsU8,$/;"	e	enum:ecs_primitive_kind_t
EcsU8	lib/flecs/include/flecs/addons/meta.h	/^    EcsU8,$/;"	e	enum:ecs_primitive_kind_t
EcsUPtr	lib/flecs/flecs.h	/^    EcsUPtr,$/;"	e	enum:ecs_primitive_kind_t
EcsUPtr	lib/flecs/include/flecs/addons/meta.h	/^    EcsUPtr,$/;"	e	enum:ecs_primitive_kind_t
EcsUnSet	lib/flecs/flecs.c	/^const ecs_entity_t EcsUnSet =                 ECS_HI_COMPONENT_ID + 33;$/;"	v	typeref:typename:const ecs_entity_t
EcsUnSet	lib/flecs/src/world.c	/^const ecs_entity_t EcsUnSet =                 ECS_HI_COMPONENT_ID + 33;$/;"	v	typeref:typename:const ecs_entity_t
EcsUnit	lib/flecs/flecs.h	/^typedef struct EcsUnit {$/;"	s
EcsUnit	lib/flecs/flecs.h	/^} EcsUnit;$/;"	t	typeref:struct:EcsUnit
EcsUnit	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsUnit {$/;"	s
EcsUnit	lib/flecs/include/flecs/addons/meta.h	/^} EcsUnit;$/;"	t	typeref:struct:EcsUnit
EcsUnitPrefix	lib/flecs/flecs.h	/^typedef struct EcsUnitPrefix {$/;"	s
EcsUnitPrefix	lib/flecs/flecs.h	/^} EcsUnitPrefix;$/;"	t	typeref:struct:EcsUnitPrefix
EcsUnitPrefix	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsUnitPrefix {$/;"	s
EcsUnitPrefix	lib/flecs/include/flecs/addons/meta.h	/^} EcsUnitPrefix;$/;"	t	typeref:struct:EcsUnitPrefix
EcsVarDefault	lib/flecs/flecs.h	/^    EcsVarDefault,      \/* Variable if name is all caps, otherwise an entity *\/$/;"	e	enum:ecs_var_kind_t
EcsVarDefault	lib/flecs/include/flecs.h	/^    EcsVarDefault,      \/* Variable if name is all caps, otherwise an entity *\/$/;"	e	enum:ecs_var_kind_t
EcsVarIsEntity	lib/flecs/flecs.h	/^    EcsVarIsEntity,     \/* Term is an entity *\/$/;"	e	enum:ecs_var_kind_t
EcsVarIsEntity	lib/flecs/include/flecs.h	/^    EcsVarIsEntity,     \/* Term is an entity *\/$/;"	e	enum:ecs_var_kind_t
EcsVarIsVariable	lib/flecs/flecs.h	/^    EcsVarIsVariable    \/* Term is a variable *\/$/;"	e	enum:ecs_var_kind_t
EcsVarIsVariable	lib/flecs/include/flecs.h	/^    EcsVarIsVariable    \/* Term is a variable *\/$/;"	e	enum:ecs_var_kind_t
EcsVector	lib/flecs/flecs.h	/^typedef struct EcsVector {$/;"	s
EcsVector	lib/flecs/flecs.h	/^} EcsVector;$/;"	t	typeref:struct:EcsVector
EcsVector	lib/flecs/include/flecs/addons/meta.h	/^typedef struct EcsVector {$/;"	s
EcsVector	lib/flecs/include/flecs/addons/meta.h	/^} EcsVector;$/;"	t	typeref:struct:EcsVector
EcsVectorType	lib/flecs/flecs.h	/^    EcsVectorType,$/;"	e	enum:ecs_type_kind_t
EcsVectorType	lib/flecs/include/flecs/addons/meta.h	/^    EcsVectorType,$/;"	e	enum:ecs_type_kind_t
EcsWildcard	lib/flecs/flecs.c	/^const ecs_entity_t EcsWildcard =              ECS_HI_COMPONENT_ID + 10;$/;"	v	typeref:typename:const ecs_entity_t
EcsWildcard	lib/flecs/src/world.c	/^const ecs_entity_t EcsWildcard =              ECS_HI_COMPONENT_ID + 10;$/;"	v	typeref:typename:const ecs_entity_t
EcsWith	lib/flecs/flecs.c	/^const ecs_entity_t EcsWith =                  ECS_HI_COMPONENT_ID + 21;$/;"	v	typeref:typename:const ecs_entity_t
EcsWith	lib/flecs/src/world.c	/^const ecs_entity_t EcsWith =                  ECS_HI_COMPONENT_ID + 21;$/;"	v	typeref:typename:const ecs_entity_t
EcsWorld	lib/flecs/flecs.c	/^const ecs_entity_t EcsWorld =                 ECS_HI_COMPONENT_ID + 0;$/;"	v	typeref:typename:const ecs_entity_t
EcsWorld	lib/flecs/src/world.c	/^const ecs_entity_t EcsWorld =                 ECS_HI_COMPONENT_ID + 0;$/;"	v	typeref:typename:const ecs_entity_t
ElectricCurrent	lib/flecs/flecs.h	/^struct ElectricCurrent { };$/;"	s	struct:flecs::units
ElectricCurrent	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct ElectricCurrent { };$/;"	s	struct:flecs::units
EnableMonitor	lib/flecs/flecs.c	/^void EnableMonitor($/;"	f	typeref:typename:void	file:
EnableMonitor	lib/flecs/src/addons/system/system.c	/^void EnableMonitor($/;"	f	typeref:typename:void	file:
EnabledComponents_defer_enable	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_defer_enable() {$/;"	f	typeref:typename:void
EnabledComponents_has_enabled_component	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_has_enabled_component() {$/;"	f	typeref:typename:void
EnabledComponents_is_0_component_disabled	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_0_component_disabled() {$/;"	f	typeref:typename:void
EnabledComponents_is_0_entity_disabled	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_0_entity_disabled() {$/;"	f	typeref:typename:void
EnabledComponents_is_component_enabled	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_component_enabled() {$/;"	f	typeref:typename:void
EnabledComponents_is_disabled_after_enable	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_disabled_after_enable() {$/;"	f	typeref:typename:void
EnabledComponents_is_disabled_component_enabled	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_disabled_component_enabled() {$/;"	f	typeref:typename:void
EnabledComponents_is_empty_entity_disabled	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_empty_entity_disabled() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_2	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_2() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_2_after_add	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_2_after_add() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_3	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_3() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_3_after_add	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_3_after_add() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_after_add	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_after_add() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_after_add_randomized	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_after_add_randomized() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_after_disable	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_after_disable() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_after_randomized_add_randomized	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_after_randomized_add_randomized() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_after_remove	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_after_remove() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_component_enabled	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_component_enabled() {$/;"	f	typeref:typename:void
EnabledComponents_is_enabled_randomized	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_enabled_randomized() {$/;"	f	typeref:typename:void
EnabledComponents_is_nonexist_component_disabled	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_is_nonexist_component_disabled() {$/;"	f	typeref:typename:void
EnabledComponents_query_disabled	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_disabled() {$/;"	f	typeref:typename:void
EnabledComponents_query_disabled_skip_initial	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_disabled_skip_initial() {$/;"	f	typeref:typename:void
EnabledComponents_query_enable_mod_10	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_enable_mod_10() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_1024	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_1024() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_1024_2_bitsets	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_1024_2_bitsets() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_2	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_2() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_256	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_256() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_256_2_bitsets	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_256_2_bitsets() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_2_2_bitsets	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_2_2_bitsets() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_64	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_64() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_64_2_bitsets	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_64_2_bitsets() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_8	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_8() {$/;"	f	typeref:typename:void
EnabledComponents_query_mod_8_2_bitsets	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_mod_8_2_bitsets() {$/;"	f	typeref:typename:void
EnabledComponents_query_randomized_2_bitsets	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_randomized_2_bitsets() {$/;"	f	typeref:typename:void
EnabledComponents_query_randomized_3_bitsets	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_randomized_3_bitsets() {$/;"	f	typeref:typename:void
EnabledComponents_query_randomized_4_bitsets	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_query_randomized_4_bitsets() {$/;"	f	typeref:typename:void
EnabledComponents_sort	lib/flecs/test/api/src/EnabledComponents.c	/^void EnabledComponents_sort() {$/;"	f	typeref:typename:void
EnabledComponents_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case EnabledComponents_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
End	lib/flecs/test/cpp_api/src/Pairs.cpp	/^struct End { };$/;"	s	file:
End	lib/flecs/test/cpp_api/src/Query.cpp	/^struct End { };$/;"	s	file:
EndEvent	lib/flecs/test/cpp_api/src/Pairs.cpp	/^using EndEvent = flecs::pair<End, Event>;$/;"	t	typeref:typename:flecs::pair<End,Event>	file:
EndEvent	lib/flecs/test/cpp_api/src/Query.cpp	/^using EndEvent = flecs::pair<End, Event>;$/;"	t	typeref:typename:flecs::pair<End,Event>	file:
Entity	lib/flecs/flecs.h	/^static const flecs::entity_t Entity = ecs_id(ecs_entity_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Entity	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t Entity = ecs_id(ecs_entity_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Entity	lib/flecs/test/api/src/ComponentLifecycle.c	/^} Entity;$/;"	t	typeref:struct:__anoneccc1c6a0108	file:
Entity	lib/flecs/test/api/src/OnDelete.c	/^} Entity;$/;"	t	typeref:struct:__anonb57edf370108	file:
Entity	lib/flecs/test/cpp_api/src/System.cpp	/^struct Entity {$/;"	s	file:
Entity	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^    struct Entity {$/;"	s	function:SystemBuilder_singleton_term	file:
EntityType	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct EntityType { };$/;"	s	struct:Parent	file:
EntityType	lib/flecs/test/cpp_api/src/Entity.cpp	/^struct EntityType { };$/;"	s	file:
Entity_add	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_add() {$/;"	f	typeref:typename:void
Entity_add_2	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_add_2() {$/;"	f	typeref:typename:void
Entity_add_childof	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_add_childof() {$/;"	f	typeref:typename:void
Entity_add_entity	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_add_entity() {$/;"	f	typeref:typename:void
Entity_add_instanceof	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_add_instanceof() {$/;"	f	typeref:typename:void
Entity_add_role	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_add_role() {$/;"	f	typeref:typename:void
Entity_change_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_change_name() {$/;"	f	typeref:typename:void
Entity_child_of	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_child_of() {$/;"	f	typeref:typename:void
Entity_child_of_w_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_child_of_w_type() {$/;"	f	typeref:typename:void
Entity_clear	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_clear() {$/;"	f	typeref:typename:void
Entity_clone	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_clone() {$/;"	f	typeref:typename:void
Entity_clone_to_existing	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_clone_to_existing() {$/;"	f	typeref:typename:void
Entity_clone_to_existing_overlap	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_clone_to_existing_overlap() {$/;"	f	typeref:typename:void
Entity_clone_w_value	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_clone_w_value() {$/;"	f	typeref:typename:void
Entity_compare_0	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_compare_0() {$/;"	f	typeref:typename:void
Entity_compare_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_compare_id() {$/;"	f	typeref:typename:void
Entity_compare_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_compare_id_t() {$/;"	f	typeref:typename:void
Entity_compare_literal	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_compare_literal() {$/;"	f	typeref:typename:void
Entity_create_entity_view_from_stage	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_create_entity_view_from_stage() {$/;"	f	typeref:typename:void
Entity_create_named_twice_deferred	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_create_named_twice_deferred() {$/;"	f	typeref:typename:void
Entity_default_ctor	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_default_ctor() {$/;"	f	typeref:typename:void
Entity_defer_component_init	lib/flecs/test/api/src/Entity.c	/^void Entity_defer_component_init() {$/;"	f	typeref:typename:void
Entity_defer_component_init_w_symbol	lib/flecs/test/api/src/Entity.c	/^void Entity_defer_component_init_w_symbol() {$/;"	f	typeref:typename:void
Entity_defer_entity_init_w_symbol	lib/flecs/test/api/src/Entity.c	/^void Entity_defer_entity_init_w_symbol() {$/;"	f	typeref:typename:void
Entity_defer_new_w_deferred_scope_nested_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_deferred_scope_nested_name() {$/;"	f	typeref:typename:void
Entity_defer_new_w_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_name() {$/;"	f	typeref:typename:void
Entity_defer_new_w_name_scope_with	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_name_scope_with() {$/;"	f	typeref:typename:void
Entity_defer_new_w_nested_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_nested_name() {$/;"	f	typeref:typename:void
Entity_defer_new_w_nested_name_scope_with	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_nested_name_scope_with() {$/;"	f	typeref:typename:void
Entity_defer_new_w_scope	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_scope() {$/;"	f	typeref:typename:void
Entity_defer_new_w_scope_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_scope_name() {$/;"	f	typeref:typename:void
Entity_defer_new_w_scope_nested_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_scope_nested_name() {$/;"	f	typeref:typename:void
Entity_defer_new_w_with	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_new_w_with() {$/;"	f	typeref:typename:void
Entity_defer_set_1_component	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_set_1_component() {$/;"	f	typeref:typename:void
Entity_defer_set_2_components	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_set_2_components() {$/;"	f	typeref:typename:void
Entity_defer_set_2_w_on_set	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_set_2_w_on_set() {$/;"	f	typeref:typename:void
Entity_defer_set_3_components	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_set_3_components() {$/;"	f	typeref:typename:void
Entity_defer_w_with_implicit_component	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_defer_w_with_implicit_component() {$/;"	f	typeref:typename:void
Entity_deferred_entity_init_w_childof_and_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_deferred_entity_init_w_childof_and_scope() {$/;"	f	typeref:typename:void
Entity_deferred_entity_init_w_childof_and_scope_and_scoped_name	lib/flecs/test/api/src/Entity.c	/^void Entity_deferred_entity_init_w_childof_and_scope_and_scoped_name() {$/;"	f	typeref:typename:void
Entity_delete	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_delete() {$/;"	f	typeref:typename:void
Entity_each_in_stage	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_each_in_stage() {$/;"	f	typeref:typename:void
Entity_emplace	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_emplace() {$/;"	f	typeref:typename:void
Entity_emplace_2	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_emplace_2() {$/;"	f	typeref:typename:void
Entity_emplace_after_add	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_emplace_after_add() {$/;"	f	typeref:typename:void
Entity_emplace_after_add_pair	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_emplace_after_add_pair() {$/;"	f	typeref:typename:void
Entity_emplace_w_self_ctor	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_emplace_w_self_ctor() {$/;"	f	typeref:typename:void
Entity_ensure_nonzero_gen	lib/flecs/test/api/src/Entity.c	/^void Entity_ensure_nonzero_gen() {$/;"	f	typeref:typename:void
Entity_ensure_nonzero_gen_exists	lib/flecs/test/api/src/Entity.c	/^void Entity_ensure_nonzero_gen_exists() {$/;"	f	typeref:typename:void
Entity_ensure_nonzero_gen_exists_alive	lib/flecs/test/api/src/Entity.c	/^void Entity_ensure_nonzero_gen_exists_alive() {$/;"	f	typeref:typename:void
Entity_ensure_zero_gen	lib/flecs/test/api/src/Entity.c	/^void Entity_ensure_zero_gen() {$/;"	f	typeref:typename:void
Entity_ensure_zero_gen_exists	lib/flecs/test/api/src/Entity.c	/^void Entity_ensure_zero_gen_exists() {$/;"	f	typeref:typename:void
Entity_ensure_zero_gen_exists_alive	lib/flecs/test/api/src/Entity.c	/^void Entity_ensure_zero_gen_exists_alive() {$/;"	f	typeref:typename:void
Entity_entity_array	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_array() {$/;"	f	typeref:typename:void
Entity_entity_id_str	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_id_str() {$/;"	f	typeref:typename:void
Entity_entity_init_w_childof_and_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_entity_init_w_childof_and_scope() {$/;"	f	typeref:typename:void
Entity_entity_init_w_childof_and_scope_and_scoped_name	lib/flecs/test/api/src/Entity.c	/^void Entity_entity_init_w_childof_and_scope_and_scoped_name() {$/;"	f	typeref:typename:void
Entity_entity_init_w_childof_nested_name_twice	lib/flecs/test/api/src/Entity.c	/^void Entity_entity_init_w_childof_nested_name_twice() {$/;"	f	typeref:typename:void
Entity_entity_init_w_childof_twice	lib/flecs/test/api/src/Entity.c	/^void Entity_entity_init_w_childof_twice() {$/;"	f	typeref:typename:void
Entity_entity_init_w_empty_string_name	lib/flecs/test/api/src/Entity.c	/^void Entity_entity_init_w_empty_string_name() {$/;"	f	typeref:typename:void
Entity_entity_init_w_empty_string_symbol	lib/flecs/test/api/src/Entity.c	/^void Entity_entity_init_w_empty_string_symbol() {$/;"	f	typeref:typename:void
Entity_entity_init_w_scope_twice	lib/flecs/test/api/src/Entity.c	/^void Entity_entity_init_w_scope_twice() {$/;"	f	typeref:typename:void
Entity_entity_to_entity_view	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_to_entity_view() {$/;"	f	typeref:typename:void
Entity_entity_view_null_entity	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_view_null_entity() {$/;"	f	typeref:typename:void
Entity_entity_view_null_entity_w_0	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_view_null_entity_w_0() {$/;"	f	typeref:typename:void
Entity_entity_view_null_entity_w_world	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_view_null_entity_w_world() {$/;"	f	typeref:typename:void
Entity_entity_view_null_entity_w_world_w_0	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_view_null_entity_w_world_w_0() {$/;"	f	typeref:typename:void
Entity_entity_view_to_entity_stage	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_view_to_entity_stage() {$/;"	f	typeref:typename:void
Entity_entity_view_to_entity_world	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_view_to_entity_world() {$/;"	f	typeref:typename:void
Entity_entity_w_nested_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_w_nested_type() {$/;"	f	typeref:typename:void
Entity_entity_w_root_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_w_root_name() {$/;"	f	typeref:typename:void
Entity_entity_w_root_name_from_scope	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_w_root_name_from_scope() {$/;"	f	typeref:typename:void
Entity_entity_w_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_w_type() {$/;"	f	typeref:typename:void
Entity_entity_w_type_defer	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_entity_w_type_defer() {$/;"	f	typeref:typename:void
Entity_equals	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_equals() {$/;"	f	typeref:typename:void
Entity_find_id_add_1_comp	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_add_1_comp() {$/;"	f	typeref:typename:void
Entity_find_id_add_2_comp	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_add_2_comp() {$/;"	f	typeref:typename:void
Entity_find_id_name	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_name() {$/;"	f	typeref:typename:void
Entity_find_id_name_match	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_name_match() {$/;"	f	typeref:typename:void
Entity_find_id_name_match_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_name_match_w_scope() {$/;"	f	typeref:typename:void
Entity_find_id_name_mismatch	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_name_mismatch() {$/;"	f	typeref:typename:void
Entity_find_id_name_mismatch_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_name_mismatch_w_scope() {$/;"	f	typeref:typename:void
Entity_find_id_name_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_name_w_scope() {$/;"	f	typeref:typename:void
Entity_find_id_path	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_path() {$/;"	f	typeref:typename:void
Entity_find_id_path_match	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_path_match() {$/;"	f	typeref:typename:void
Entity_find_id_path_match_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_path_match_w_scope() {$/;"	f	typeref:typename:void
Entity_find_id_path_mismatch	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_path_mismatch() {$/;"	f	typeref:typename:void
Entity_find_id_path_mismatch_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_path_mismatch_w_scope() {$/;"	f	typeref:typename:void
Entity_find_id_path_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_find_id_path_w_scope() {$/;"	f	typeref:typename:void
Entity_find_w_existing_id_name	lib/flecs/test/api/src/Entity.c	/^void Entity_find_w_existing_id_name() {$/;"	f	typeref:typename:void
Entity_foce_owned	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_foce_owned() {$/;"	f	typeref:typename:void
Entity_force_owned_2	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_force_owned_2() {$/;"	f	typeref:typename:void
Entity_force_owned_nested	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_force_owned_nested() {$/;"	f	typeref:typename:void
Entity_get_1_component_w_callback	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_1_component_w_callback() {$/;"	f	typeref:typename:void
Entity_get_2_components_w_callback	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_2_components_w_callback() {$/;"	f	typeref:typename:void
Entity_get_generic	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_generic() {$/;"	f	typeref:typename:void
Entity_get_generic_w_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_generic_w_id() {$/;"	f	typeref:typename:void
Entity_get_generic_w_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_generic_w_id_t() {$/;"	f	typeref:typename:void
Entity_get_lambda_from_stage	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_lambda_from_stage() {$/;"	f	typeref:typename:void
Entity_get_mut_generic	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_mut_generic() {$/;"	f	typeref:typename:void
Entity_get_mut_generic_w_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_mut_generic_w_id() {$/;"	f	typeref:typename:void
Entity_get_mut_generic_w_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_mut_generic_w_id_t() {$/;"	f	typeref:typename:void
Entity_get_nonempty_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_nonempty_type() {$/;"	f	typeref:typename:void
Entity_get_null_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_null_name() {$/;"	f	typeref:typename:void
Entity_get_obj_by_template	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_obj_by_template() {$/;"	f	typeref:typename:void
Entity_get_parent	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_parent() {$/;"	f	typeref:typename:void
Entity_get_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_get_type() {$/;"	f	typeref:typename:void
Entity_greater_than	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_greater_than() {$/;"	f	typeref:typename:void
Entity_has_childof	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_childof() {$/;"	f	typeref:typename:void
Entity_has_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_id() {$/;"	f	typeref:typename:void
Entity_has_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_id_t() {$/;"	f	typeref:typename:void
Entity_has_instanceof	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_instanceof() {$/;"	f	typeref:typename:void
Entity_has_instanceof_indirect	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_instanceof_indirect() {$/;"	f	typeref:typename:void
Entity_has_pair_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_pair_id() {$/;"	f	typeref:typename:void
Entity_has_pair_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_pair_id_t() {$/;"	f	typeref:typename:void
Entity_has_pair_id_t_w_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_pair_id_t_w_type() {$/;"	f	typeref:typename:void
Entity_has_pair_id_w_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_pair_id_w_type() {$/;"	f	typeref:typename:void
Entity_has_role	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_role() {$/;"	f	typeref:typename:void
Entity_has_wildcard_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_wildcard_id() {$/;"	f	typeref:typename:void
Entity_has_wildcard_pair_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_has_wildcard_pair_id() {$/;"	f	typeref:typename:void
Entity_id_add_1_comp	lib/flecs/test/api/src/Entity.c	/^void Entity_id_add_1_comp() {$/;"	f	typeref:typename:void
Entity_id_add_2_comp	lib/flecs/test/api/src/Entity.c	/^void Entity_id_add_2_comp() {$/;"	f	typeref:typename:void
Entity_id_default_from_world	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_id_default_from_world() {$/;"	f	typeref:typename:void
Entity_id_from_world	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_id_from_world() {$/;"	f	typeref:typename:void
Entity_id_get_entity	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_id_get_entity() {$/;"	f	typeref:typename:void
Entity_id_get_invalid_entity	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_id_get_invalid_entity() {$/;"	f	typeref:typename:void
Entity_id_pair_from_world	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_id_pair_from_world() {$/;"	f	typeref:typename:void
Entity_id_str_from_entity	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_id_str_from_entity() {$/;"	f	typeref:typename:void
Entity_id_str_from_entity_view	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_id_str_from_entity_view() {$/;"	f	typeref:typename:void
Entity_implicit_name_to_char	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_implicit_name_to_char() {$/;"	f	typeref:typename:void
Entity_implicit_path_to_char	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_implicit_path_to_char() {$/;"	f	typeref:typename:void
Entity_implicit_type_str_to_char	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_implicit_type_str_to_char() {$/;"	f	typeref:typename:void
Entity_init_id	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id() {$/;"	f	typeref:typename:void
Entity_init_id_add_1_comp	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_add_1_comp() {$/;"	f	typeref:typename:void
Entity_init_id_add_2_comp	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_add_2_comp() {$/;"	f	typeref:typename:void
Entity_init_id_name	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_name() {$/;"	f	typeref:typename:void
Entity_init_id_name_1_comp	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_name_1_comp() {$/;"	f	typeref:typename:void
Entity_init_id_name_2_comp	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_name_2_comp() {$/;"	f	typeref:typename:void
Entity_init_id_name_2_comp_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_name_2_comp_w_scope() {$/;"	f	typeref:typename:void
Entity_init_id_name_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_name_w_scope() {$/;"	f	typeref:typename:void
Entity_init_id_path	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_path() {$/;"	f	typeref:typename:void
Entity_init_id_path_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_path_w_scope() {$/;"	f	typeref:typename:void
Entity_init_id_path_w_sep	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_path_w_sep() {$/;"	f	typeref:typename:void
Entity_init_id_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_init_id_w_scope() {$/;"	f	typeref:typename:void
Entity_init_w_childof_name_twice_deferred	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_childof_name_twice_deferred() {$/;"	f	typeref:typename:void
Entity_init_w_childof_nested_name_twice_deferred	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_childof_nested_name_twice_deferred() {$/;"	f	typeref:typename:void
Entity_init_w_core_name	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_core_name() {$/;"	f	typeref:typename:void
Entity_init_w_name_deferred	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_name_deferred() {$/;"	f	typeref:typename:void
Entity_init_w_name_staged	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_name_staged() {$/;"	f	typeref:typename:void
Entity_init_w_name_twice_deferred	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_name_twice_deferred() {$/;"	f	typeref:typename:void
Entity_init_w_nested_name_twice_deferred	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_nested_name_twice_deferred() {$/;"	f	typeref:typename:void
Entity_init_w_scope_name	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_scope_name() {$/;"	f	typeref:typename:void
Entity_init_w_scope_name_twice_deferred	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_scope_name_twice_deferred() {$/;"	f	typeref:typename:void
Entity_init_w_with	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_with() {$/;"	f	typeref:typename:void
Entity_init_w_with_w_name	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_with_w_name() {$/;"	f	typeref:typename:void
Entity_init_w_with_w_name_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_with_w_name_scope() {$/;"	f	typeref:typename:void
Entity_init_w_with_w_scope	lib/flecs/test/api/src/Entity.c	/^void Entity_init_w_with_w_scope() {$/;"	f	typeref:typename:void
Entity_is_0_valid	lib/flecs/test/api/src/Entity.c	/^void Entity_is_0_valid() {$/;"	f	typeref:typename:void
Entity_is_a	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_is_a() {$/;"	f	typeref:typename:void
Entity_is_a_w_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_is_a_w_type() {$/;"	f	typeref:typename:void
Entity_is_component_enabled	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_is_component_enabled() {$/;"	f	typeref:typename:void
Entity_is_disabled_component_enabled	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_is_disabled_component_enabled() {$/;"	f	typeref:typename:void
Entity_is_enabled_component_enabled	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_is_enabled_component_enabled() {$/;"	f	typeref:typename:void
Entity_is_junk_valid	lib/flecs/test/api/src/Entity.c	/^void Entity_is_junk_valid() {$/;"	f	typeref:typename:void
Entity_is_nonzero_gen_valid	lib/flecs/test/api/src/Entity.c	/^void Entity_is_nonzero_gen_valid() {$/;"	f	typeref:typename:void
Entity_is_not_alive_valid	lib/flecs/test/api/src/Entity.c	/^void Entity_is_not_alive_valid() {$/;"	f	typeref:typename:void
Entity_is_recycled_valid	lib/flecs/test/api/src/Entity.c	/^void Entity_is_recycled_valid() {$/;"	f	typeref:typename:void
Entity_is_valid	lib/flecs/test/api/src/Entity.c	/^void Entity_is_valid() {$/;"	f	typeref:typename:void
Entity_is_wildcard	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_is_wildcard() {$/;"	f	typeref:typename:void
Entity_iter_recycled_parent	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_iter_recycled_parent() {$/;"	f	typeref:typename:void
Entity_less_than	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_less_than() {$/;"	f	typeref:typename:void
Entity_new	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new() {$/;"	f	typeref:typename:void
Entity_new_add	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new_add() {$/;"	f	typeref:typename:void
Entity_new_add_2	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new_add_2() {$/;"	f	typeref:typename:void
Entity_new_entity_scoped_twice	lib/flecs/test/api/src/Entity.c	/^void Entity_new_entity_scoped_twice() {$/;"	f	typeref:typename:void
Entity_new_entity_twice	lib/flecs/test/api/src/Entity.c	/^void Entity_new_entity_twice() {$/;"	f	typeref:typename:void
Entity_new_named	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new_named() {$/;"	f	typeref:typename:void
Entity_new_named_from_scope	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new_named_from_scope() {$/;"	f	typeref:typename:void
Entity_new_nested_named_from_nested_scope	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new_nested_named_from_nested_scope() {$/;"	f	typeref:typename:void
Entity_new_nested_named_from_scope	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new_nested_named_from_scope() {$/;"	f	typeref:typename:void
Entity_new_set	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new_set() {$/;"	f	typeref:typename:void
Entity_new_set_2	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_new_set_2() {$/;"	f	typeref:typename:void
Entity_no_recursive_lookup	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_no_recursive_lookup() {$/;"	f	typeref:typename:void
Entity_not_0_or_1	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_not_0_or_1() {$/;"	f	typeref:typename:void
Entity_not_true_or_false	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_not_true_or_false() {$/;"	f	typeref:typename:void
Entity_null_entity	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_null_entity() {$/;"	f	typeref:typename:void
Entity_null_entity_w_0	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_null_entity_w_0() {$/;"	f	typeref:typename:void
Entity_null_entity_w_world	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_null_entity_w_world() {$/;"	f	typeref:typename:void
Entity_null_entity_w_world_w_0	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_null_entity_w_world_w_0() {$/;"	f	typeref:typename:void
Entity_null_string	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_null_string() {$/;"	f	typeref:typename:void
Entity_override	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_override() {$/;"	f	typeref:typename:void
Entity_owns_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_owns_id() {$/;"	f	typeref:typename:void
Entity_owns_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_owns_id_t() {$/;"	f	typeref:typename:void
Entity_owns_pair_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_owns_pair_id() {$/;"	f	typeref:typename:void
Entity_owns_pair_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_owns_pair_id_t() {$/;"	f	typeref:typename:void
Entity_owns_pair_id_t_w_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_owns_pair_id_t_w_type() {$/;"	f	typeref:typename:void
Entity_owns_pair_id_w_type	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_owns_pair_id_w_type() {$/;"	f	typeref:typename:void
Entity_owns_wildcard_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_owns_wildcard_id() {$/;"	f	typeref:typename:void
Entity_owns_wildcard_pair	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_owns_wildcard_pair() {$/;"	f	typeref:typename:void
Entity_pair_id_str	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_pair_id_str() {$/;"	f	typeref:typename:void
Entity_pair_role	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_pair_role() {$/;"	f	typeref:typename:void
Entity_record_find	lib/flecs/test/api/src/Entity.c	/^void Entity_record_find() {$/;"	f	typeref:typename:void
Entity_record_find_for_empty	lib/flecs/test/api/src/Entity.c	/^void Entity_record_find_for_empty() {$/;"	f	typeref:typename:void
Entity_record_find_from_stage	lib/flecs/test/api/src/Entity.c	/^void Entity_record_find_from_stage() {$/;"	f	typeref:typename:void
Entity_remove	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_remove() {$/;"	f	typeref:typename:void
Entity_remove_2	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_remove_2() {$/;"	f	typeref:typename:void
Entity_remove_childof	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_remove_childof() {$/;"	f	typeref:typename:void
Entity_remove_entity	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_remove_entity() {$/;"	f	typeref:typename:void
Entity_remove_instanceof	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_remove_instanceof() {$/;"	f	typeref:typename:void
Entity_remove_role	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_remove_role() {$/;"	f	typeref:typename:void
Entity_role_id_str	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_role_id_str() {$/;"	f	typeref:typename:void
Entity_scope_after_builder_method	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_scope_after_builder_method() {$/;"	f	typeref:typename:void
Entity_scope_before_builder_method	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_scope_before_builder_method() {$/;"	f	typeref:typename:void
Entity_set	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set() {$/;"	f	typeref:typename:void
Entity_set_1_component_w_callback	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_1_component_w_callback() {$/;"	f	typeref:typename:void
Entity_set_2	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_2() {$/;"	f	typeref:typename:void
Entity_set_2_after_fluent	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_2_after_fluent() {$/;"	f	typeref:typename:void
Entity_set_2_after_set_1	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_2_after_set_1() {$/;"	f	typeref:typename:void
Entity_set_2_after_set_2	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_2_after_set_2() {$/;"	f	typeref:typename:void
Entity_set_2_before_fluent	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_2_before_fluent() {$/;"	f	typeref:typename:void
Entity_set_2_components_w_callback	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_2_components_w_callback() {$/;"	f	typeref:typename:void
Entity_set_2_w_on_set	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_2_w_on_set() {$/;"	f	typeref:typename:void
Entity_set_3_components_w_callback	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_3_components_w_callback() {$/;"	f	typeref:typename:void
Entity_set_copy	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_copy() {$/;"	f	typeref:typename:void
Entity_set_deduced	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_deduced() {$/;"	f	typeref:typename:void
Entity_set_doc_brief	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_doc_brief() {$/;"	f	typeref:typename:void
Entity_set_doc_detail	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_doc_detail() {$/;"	f	typeref:typename:void
Entity_set_doc_link	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_doc_link() {$/;"	f	typeref:typename:void
Entity_set_doc_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_doc_name() {$/;"	f	typeref:typename:void
Entity_set_generic	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_generic() {$/;"	f	typeref:typename:void
Entity_set_generic_no_size	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_generic_no_size() {$/;"	f	typeref:typename:void
Entity_set_generic_no_size_w_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_generic_no_size_w_id() {$/;"	f	typeref:typename:void
Entity_set_generic_no_size_w_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_generic_no_size_w_id_t() {$/;"	f	typeref:typename:void
Entity_set_generic_w_id	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_generic_w_id() {$/;"	f	typeref:typename:void
Entity_set_generic_w_id_t	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_generic_w_id_t() {$/;"	f	typeref:typename:void
Entity_set_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_name() {$/;"	f	typeref:typename:void
Entity_set_name_w_0_twice	lib/flecs/test/api/src/Entity.c	/^void Entity_set_name_w_0_twice() {$/;"	f	typeref:typename:void
Entity_set_no_copy	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_no_copy() {$/;"	f	typeref:typename:void
Entity_set_override	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_override() {$/;"	f	typeref:typename:void
Entity_set_override_lvalue	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_override_lvalue() {$/;"	f	typeref:typename:void
Entity_set_scope_w_entity_init_from_stage	lib/flecs/test/api/src/Entity.c	/^void Entity_set_scope_w_entity_init_from_stage() {$/;"	f	typeref:typename:void
Entity_set_template	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_set_template() {$/;"	f	typeref:typename:void
Entity_staged_set_name_n_stages	lib/flecs/test/api/src/Entity.c	/^void Entity_staged_set_name_n_stages() {$/;"	f	typeref:typename:void
Entity_staged_set_symbol_n_stages	lib/flecs/test/api/src/Entity.c	/^void Entity_staged_set_symbol_n_stages() {$/;"	f	typeref:typename:void
Entity_tag_has_size_zero	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_tag_has_size_zero() {$/;"	f	typeref:typename:void
Entity_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Entity_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Entity_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Entity_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Entity_with_after_builder_method	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_after_builder_method() {$/;"	f	typeref:typename:void
Entity_with_before_builder_method	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_before_builder_method() {$/;"	f	typeref:typename:void
Entity_with_relation_self	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_relation_self() {$/;"	f	typeref:typename:void
Entity_with_relation_type_self	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_relation_type_self() {$/;"	f	typeref:typename:void
Entity_with_scope	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_scope() {$/;"	f	typeref:typename:void
Entity_with_scope_nested	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_scope_nested() {$/;"	f	typeref:typename:void
Entity_with_scope_nested_same_name_as_parent	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_scope_nested_same_name_as_parent() {$/;"	f	typeref:typename:void
Entity_with_self	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_self() {$/;"	f	typeref:typename:void
Entity_with_self_nested	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_self_nested() {$/;"	f	typeref:typename:void
Entity_with_self_w_name	lib/flecs/test/cpp_api/src/Entity.cpp	/^void Entity_with_self_w_name() {$/;"	f	typeref:typename:void
Enum	lib/flecs/flecs.h	/^using Enum = EcsEnum;$/;"	t	namespace:flecs	typeref:typename:EcsEnum
Enum	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using Enum = EcsEnum;$/;"	t	namespace:flecs	typeref:typename:EcsEnum
EnumClass	lib/flecs/test/cpp_api/src/Enum.cpp	/^enum class EnumClass {$/;"	g	file:
EnumTypes_enum_1_constant	lib/flecs/test/meta/src/EnumTypes.c	/^void EnumTypes_enum_1_constant() {$/;"	f	typeref:typename:void
EnumTypes_enum_2_constants	lib/flecs/test/meta/src/EnumTypes.c	/^void EnumTypes_enum_2_constants() {$/;"	f	typeref:typename:void
EnumTypes_enum_3_constants	lib/flecs/test/meta/src/EnumTypes.c	/^void EnumTypes_enum_3_constants() {$/;"	f	typeref:typename:void
EnumTypes_enum_3_constants_manual_values	lib/flecs/test/meta/src/EnumTypes.c	/^void EnumTypes_enum_3_constants_manual_values() {$/;"	f	typeref:typename:void
EnumTypes_enum_relation	lib/flecs/test/meta/src/EnumTypes.c	/^void EnumTypes_enum_relation() {$/;"	f	typeref:typename:void
EnumTypes_struct_w_enum	lib/flecs/test/meta/src/EnumTypes.c	/^void EnumTypes_struct_w_enum() {$/;"	f	typeref:typename:void
EnumTypes_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case EnumTypes_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
EnumTypes_zero_initialized	lib/flecs/test/meta/src/EnumTypes.c	/^void EnumTypes_zero_initialized() {$/;"	f	typeref:typename:void
Enum_add_enum_class_constant	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_add_enum_class_constant() {$/;"	f	typeref:typename:void
Enum_add_enum_constant	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_add_enum_constant() {$/;"	f	typeref:typename:void
Enum_add_enum_from_stage	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_add_enum_from_stage() {$/;"	f	typeref:typename:void
Enum_constant_with_num_reflection	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_constant_with_num_reflection() {$/;"	f	typeref:typename:void
Enum_enum_as_component	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_enum_as_component() {$/;"	f	typeref:typename:void
Enum_enum_class_reflection	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_enum_class_reflection() {$/;"	f	typeref:typename:void
Enum_enum_type_from_stage	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_enum_type_from_stage() {$/;"	f	typeref:typename:void
Enum_enum_w_2_worlds	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_enum_w_2_worlds() {$/;"	f	typeref:typename:void
Enum_get_constant_id	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_get_constant_id() {$/;"	f	typeref:typename:void
Enum_get_enum	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_get_enum() {$/;"	f	typeref:typename:void
Enum_has_enum	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_has_enum() {$/;"	f	typeref:typename:void
Enum_has_enum_wildcard	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_has_enum_wildcard() {$/;"	f	typeref:typename:void
Enum_prefixed_enum_reflection	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_prefixed_enum_reflection() {$/;"	f	typeref:typename:void
Enum_query_enum_constant	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_query_enum_constant() {$/;"	f	typeref:typename:void
Enum_query_enum_wildcard	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_query_enum_wildcard() {$/;"	f	typeref:typename:void
Enum_remove_enum	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_remove_enum() {$/;"	f	typeref:typename:void
Enum_remove_wildcard	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_remove_wildcard() {$/;"	f	typeref:typename:void
Enum_replace_enum_constants	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_replace_enum_constants() {$/;"	f	typeref:typename:void
Enum_sparse_enum_reflection	lib/flecs/test/cpp_api/src/Enum.cpp	/^void Enum_sparse_enum_reflection() {$/;"	f	typeref:typename:void
Enum_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Enum_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Error_abort	lib/flecs/test/api/src/Error.c	/^void Error_abort() {$/;"	f	typeref:typename:void
Error_abort_w_param	lib/flecs/test/api/src/Error.c	/^void Error_abort_w_param() {$/;"	f	typeref:typename:void
Error_assert_false	lib/flecs/test/api/src/Error.c	/^void Error_assert_false() {$/;"	f	typeref:typename:void
Error_assert_false_w_param	lib/flecs/test/api/src/Error.c	/^void Error_assert_false_w_param() {$/;"	f	typeref:typename:void
Error_assert_true	lib/flecs/test/api/src/Error.c	/^void Error_assert_true() {$/;"	f	typeref:typename:void
Error_error_codes	lib/flecs/test/api/src/Error.c	/^void Error_error_codes() {$/;"	f	typeref:typename:void
Error_last_error	lib/flecs/test/api/src/Error.c	/^void Error_last_error() {$/;"	f	typeref:typename:void
Error_log_dbg	lib/flecs/test/api/src/Error.c	/^void Error_log_dbg() {$/;"	f	typeref:typename:void
Error_log_error	lib/flecs/test/api/src/Error.c	/^void Error_log_error() {$/;"	f	typeref:typename:void
Error_log_log	lib/flecs/test/api/src/Error.c	/^void Error_log_log() {$/;"	f	typeref:typename:void
Error_log_warning	lib/flecs/test/api/src/Error.c	/^void Error_log_warning() {$/;"	f	typeref:typename:void
Error_override_abort	lib/flecs/test/api/src/Error.c	/^void Error_override_abort() {$/;"	f	typeref:typename:void
Error_setup	lib/flecs/test/api/src/Error.c	/^void Error_setup() {$/;"	f	typeref:typename:void
Error_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Error_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Event	lib/flecs/test/cpp_api/src/Pairs.cpp	/^struct Event {$/;"	s	file:
Event	lib/flecs/test/cpp_api/src/Query.cpp	/^struct Event {$/;"	s	file:
Event_emit_event_case_for_case_id	lib/flecs/test/api/src/Event.c	/^void Event_emit_event_case_for_case_id() {$/;"	f	typeref:typename:void
Event_emit_event_case_for_case_id_wildcard	lib/flecs/test/api/src/Event.c	/^void Event_emit_event_case_for_case_id_wildcard() {$/;"	f	typeref:typename:void
Event_emit_event_case_for_switch_id	lib/flecs/test/api/src/Event.c	/^void Event_emit_event_case_for_switch_id() {$/;"	f	typeref:typename:void
Event_emit_event_for_empty_table	lib/flecs/test/api/src/Event.c	/^void Event_emit_event_for_empty_table() {$/;"	f	typeref:typename:void
Event_emit_event_switch_for_case_id	lib/flecs/test/api/src/Event.c	/^void Event_emit_event_switch_for_case_id() {$/;"	f	typeref:typename:void
Event_emit_event_switch_id	lib/flecs/test/api/src/Event.c	/^void Event_emit_event_switch_id() {$/;"	f	typeref:typename:void
Event_emit_staged	lib/flecs/test/api/src/Event.c	/^void Event_emit_staged() {$/;"	f	typeref:typename:void
Event_emit_table_event	lib/flecs/test/api/src/Event.c	/^void Event_emit_table_event() {$/;"	f	typeref:typename:void
Event_evt_1_component	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_1_component() {$/;"	f	typeref:typename:void
Event_evt_1_id_entity	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_1_id_entity() {$/;"	f	typeref:typename:void
Event_evt_1_id_pair_rel_id_obj_id_entity	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_1_id_pair_rel_id_obj_id_entity() {$/;"	f	typeref:typename:void
Event_evt_1_id_pair_rel_obj_entity	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_1_id_pair_rel_obj_entity() {$/;"	f	typeref:typename:void
Event_evt_1_id_pair_rel_obj_id_entity	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_1_id_pair_rel_obj_id_entity() {$/;"	f	typeref:typename:void
Event_evt_1_id_table	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_1_id_table() {$/;"	f	typeref:typename:void
Event_evt_2_components	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_2_components() {$/;"	f	typeref:typename:void
Event_evt_2_ids_entity	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_2_ids_entity() {$/;"	f	typeref:typename:void
Event_evt_2_ids_table	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_2_ids_table() {$/;"	f	typeref:typename:void
Event_evt_implicit_typed_ctx	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_implicit_typed_ctx() {$/;"	f	typeref:typename:void
Event_evt_type	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_type() {$/;"	f	typeref:typename:void
Event_evt_typed_ctx	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_typed_ctx() {$/;"	f	typeref:typename:void
Event_evt_void_ctx	lib/flecs/test/cpp_api/src/Event.cpp	/^void Event_evt_void_ctx() {$/;"	f	typeref:typename:void
Event_table_1_id_w_observer	lib/flecs/test/api/src/Event.c	/^void Event_table_1_id_w_observer() {$/;"	f	typeref:typename:void
Event_table_1_id_w_trigger	lib/flecs/test/api/src/Event.c	/^void Event_table_1_id_w_trigger() {$/;"	f	typeref:typename:void
Event_table_2_ids_w_observer	lib/flecs/test/api/src/Event.c	/^void Event_table_2_ids_w_observer() {$/;"	f	typeref:typename:void
Event_table_2_ids_w_trigger	lib/flecs/test/api/src/Event.c	/^void Event_table_2_ids_w_trigger() {$/;"	f	typeref:typename:void
Event_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Event_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Event_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Event_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Evt	lib/flecs/test/cpp_api/src/Event.cpp	/^struct Evt { };$/;"	s	file:
EvtData	lib/flecs/test/cpp_api/src/Event.cpp	/^struct EvtData {$/;"	s	file:
Exa	lib/flecs/flecs.h	/^struct Exa { };$/;"	s	struct:flecs::units
Exa	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Exa { };$/;"	s	struct:flecs::units
Exbi	lib/flecs/flecs.h	/^struct Exbi { };$/;"	s	struct:flecs::units
Exbi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Exbi { };$/;"	s	struct:flecs::units
Exclusive	lib/flecs/flecs.h	/^static const flecs::entity_t Exclusive = EcsExclusive;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Exclusive	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Exclusive = EcsExclusive;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Expire	lib/flecs/examples/c/systems/mutate_entity/src/main.c	/^void Expire(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Expired	lib/flecs/examples/c/systems/mutate_entity/src/main.c	/^void Expired(ecs_iter_t *it) {$/;"	f	typeref:typename:void
F32	lib/flecs/flecs.h	/^static const flecs::entity_t F32 = ecs_id(ecs_f32_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
F32	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t F32 = ecs_id(ecs_f32_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
F64	lib/flecs/flecs.h	/^static const flecs::entity_t F64 = ecs_id(ecs_f64_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
F64	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t F64 = ecs_id(ecs_f64_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
FACTS_BAKE_CONFIG_H	lib/flecs/examples/c/rules/facts/include/facts/bake_config.h	/^#define FACTS_BAKE_CONFIG_H$/;"	d
FACTS_BAKE_CONFIG_H	lib/flecs/examples/cpp/rules/facts/include/facts/bake_config.h	/^#define FACTS_BAKE_CONFIG_H$/;"	d
FACTS_H	lib/flecs/examples/c/rules/facts/include/facts.h	/^#define FACTS_H$/;"	d
FACTS_H	lib/flecs/examples/cpp/rules/facts/include/facts.h	/^#define FACTS_H$/;"	d
FINI_CACHE	lib/flecs/flecs.c	/^#define FINI_CACHE(/;"	d	file:
FINI_CACHE	lib/flecs/src/iter.c	/^#define FINI_CACHE(/;"	d	file:
FLECS_API	lib/flecs/flecs.h	/^  #define FLECS_API /;"	d
FLECS_API	lib/flecs/flecs.h	/^  #define FLECS_API$/;"	d
FLECS_API	lib/flecs/include/flecs/bake_config.h	/^  #define FLECS_API /;"	d
FLECS_API	lib/flecs/include/flecs/bake_config.h	/^  #define FLECS_API$/;"	d
FLECS_API_DEFINES_H	lib/flecs/flecs.h	/^#define FLECS_API_DEFINES_H$/;"	d
FLECS_API_DEFINES_H	lib/flecs/include/flecs/private/api_defines.h	/^#define FLECS_API_DEFINES_H$/;"	d
FLECS_API_SUPPORT_H	lib/flecs/flecs.h	/^#define FLECS_API_SUPPORT_H$/;"	d
FLECS_API_SUPPORT_H	lib/flecs/include/flecs/private/api_support.h	/^#define FLECS_API_SUPPORT_H$/;"	d
FLECS_API_TYPES_H	lib/flecs/flecs.h	/^#define FLECS_API_TYPES_H$/;"	d
FLECS_API_TYPES_H	lib/flecs/include/flecs/private/api_types.h	/^#define FLECS_API_TYPES_H$/;"	d
FLECS_APP	lib/flecs/flecs.h	/^#define FLECS_APP /;"	d
FLECS_APP	lib/flecs/include/flecs.h	/^#define FLECS_APP /;"	d
FLECS_APP_H	lib/flecs/flecs.h	/^#define FLECS_APP_H$/;"	d
FLECS_APP_H	lib/flecs/include/flecs/addons/app.h	/^#define FLECS_APP_H$/;"	d
FLECS_BAKE_CONFIG_H	lib/flecs/flecs.h	/^#define FLECS_BAKE_CONFIG_H$/;"	d
FLECS_BAKE_CONFIG_H	lib/flecs/include/flecs/bake_config.h	/^#define FLECS_BAKE_CONFIG_H$/;"	d
FLECS_BITSET_H	lib/flecs/flecs.c	/^#define FLECS_BITSET_H$/;"	d	file:
FLECS_BITSET_H	lib/flecs/include/flecs/private/bitset.h	/^#define FLECS_BITSET_H$/;"	d
FLECS_CONVERSION_ERR	lib/flecs/flecs.c	/^#define FLECS_CONVERSION_ERR(/;"	d	file:
FLECS_CONVERSION_ERR	lib/flecs/src/private_api.h	/^#define FLECS_CONVERSION_ERR(/;"	d
FLECS_COREDOC	lib/flecs/flecs.h	/^#define FLECS_COREDOC /;"	d
FLECS_COREDOC	lib/flecs/include/flecs.h	/^#define FLECS_COREDOC /;"	d
FLECS_COREDOC_H	lib/flecs/flecs.h	/^#define FLECS_COREDOC_H$/;"	d
FLECS_COREDOC_H	lib/flecs/include/flecs/addons/coredoc.h	/^#define FLECS_COREDOC_H$/;"	d
FLECS_CPP	lib/flecs/flecs.h	/^#define FLECS_CPP /;"	d
FLECS_CPP	lib/flecs/include/flecs.h	/^#define FLECS_CPP /;"	d
FLECS_CPP_H	lib/flecs/flecs.h	/^#define FLECS_CPP_H$/;"	d
FLECS_CPP_H	lib/flecs/include/flecs/addons/flecs_cpp.h	/^#define FLECS_CPP_H$/;"	d
FLECS_C_	lib/flecs/flecs.h	/^#define FLECS_C_$/;"	d
FLECS_C_	lib/flecs/include/flecs/addons/flecs_c.h	/^#define FLECS_C_$/;"	d
FLECS_DBG_API	lib/flecs/flecs.h	/^#define FLECS_DBG_API /;"	d
FLECS_DBG_API	lib/flecs/include/flecs/private/api_defines.h	/^#define FLECS_DBG_API /;"	d
FLECS_DELETE	lib/flecs/flecs.h	/^#define FLECS_DELETE(/;"	d
FLECS_DELETE	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^#define FLECS_DELETE(/;"	d
FLECS_DEPRECATED_H	lib/flecs/flecs.h	/^#define FLECS_DEPRECATED_H$/;"	d
FLECS_DEPRECATED_H	lib/flecs/include/flecs/addons/deprecated.h	/^#define FLECS_DEPRECATED_H$/;"	d
FLECS_DEVELOPER_WARNINGS	lib/flecs/CMakeLists.txt	/^option(FLECS_DEVELOPER_WARNINGS "Enable more warnings" OFF)$/;"	D
FLECS_DOC	lib/flecs/flecs.h	/^#define FLECS_DOC /;"	d
FLECS_DOC	lib/flecs/flecs.h	/^#define FLECS_DOC$/;"	d
FLECS_DOC	lib/flecs/include/flecs.h	/^#define FLECS_DOC /;"	d
FLECS_DOC	lib/flecs/include/flecs/addons/coredoc.h	/^#define FLECS_DOC$/;"	d
FLECS_DOC_H	lib/flecs/flecs.h	/^#define FLECS_DOC_H$/;"	d
FLECS_DOC_H	lib/flecs/include/flecs/addons/doc.h	/^#define FLECS_DOC_H$/;"	d
FLECS_ENTITY_INDEX_H	lib/flecs/flecs.c	/^#define FLECS_ENTITY_INDEX_H$/;"	d	file:
FLECS_ENTITY_INDEX_H	lib/flecs/src/datastructures/entity_index.h	/^#define FLECS_ENTITY_INDEX_H$/;"	d
FLECS_ENUM_LAST	lib/flecs/flecs.h	/^#define FLECS_ENUM_LAST(/;"	d
FLECS_ENUM_LAST	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^#define FLECS_ENUM_LAST(/;"	d
FLECS_ENUM_LAST	lib/flecs/test/cpp_api/src/Enum.cpp	/^FLECS_ENUM_LAST(StandardEnum, Blue)$/;"	f
FLECS_ENUM_MAX	lib/flecs/flecs.h	/^#define FLECS_ENUM_MAX(/;"	d
FLECS_ENUM_MAX	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^#define FLECS_ENUM_MAX(/;"	d
FLECS_ENUM_MAX_COUNT	lib/flecs/flecs.h	/^#define FLECS_ENUM_MAX_COUNT /;"	d
FLECS_ENUM_MAX_COUNT	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^#define FLECS_ENUM_MAX_COUNT /;"	d
FLECS_EXPR	lib/flecs/flecs.h	/^#define FLECS_EXPR /;"	d
FLECS_EXPR	lib/flecs/flecs.h	/^#define FLECS_EXPR$/;"	d
FLECS_EXPR	lib/flecs/include/flecs.h	/^#define FLECS_EXPR /;"	d
FLECS_EXPR	lib/flecs/include/flecs/addons/json.h	/^#define FLECS_EXPR$/;"	d
FLECS_EXPR_H	lib/flecs/flecs.h	/^#define FLECS_EXPR_H$/;"	d
FLECS_EXPR_H	lib/flecs/include/flecs/addons/expr.h	/^#define FLECS_EXPR_H$/;"	d
FLECS_FLOAT	lib/flecs/flecs.h	/^#define FLECS_FLOAT /;"	d
FLECS_FLOAT	lib/flecs/include/flecs.h	/^#define FLECS_FLOAT /;"	d
FLECS_FWD	lib/flecs/flecs.h	/^#define FLECS_FWD(/;"	d
FLECS_FWD	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^#define FLECS_FWD(/;"	d
FLECS_H	lib/flecs/flecs.h	/^#define FLECS_H$/;"	d
FLECS_H	lib/flecs/include/flecs.h	/^#define FLECS_H$/;"	d
FLECS_HASHMAP_H	lib/flecs/flecs.h	/^#define FLECS_HASHMAP_H$/;"	d
FLECS_HASHMAP_H	lib/flecs/include/flecs/private/hashmap.h	/^#define FLECS_HASHMAP_H$/;"	d
FLECS_HTTP	lib/flecs/flecs.h	/^#define FLECS_HTTP /;"	d
FLECS_HTTP	lib/flecs/flecs.h	/^#define FLECS_HTTP$/;"	d
FLECS_HTTP	lib/flecs/include/flecs.h	/^#define FLECS_HTTP /;"	d
FLECS_HTTP	lib/flecs/include/flecs/addons/rest.h	/^#define FLECS_HTTP$/;"	d
FLECS_HTTP_H	lib/flecs/flecs.h	/^#define FLECS_HTTP_H$/;"	d
FLECS_HTTP_H	lib/flecs/include/flecs/addons/http.h	/^#define FLECS_HTTP_H$/;"	d
FLECS_IBUILDER	lib/flecs/flecs.h	/^#define FLECS_IBUILDER /;"	d
FLECS_IBUILDER	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^#define FLECS_IBUILDER /;"	d
FLECS_IBUILDER	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^#define FLECS_IBUILDER /;"	d
FLECS_JSON	lib/flecs/flecs.h	/^#define FLECS_JSON /;"	d
FLECS_JSON	lib/flecs/flecs.h	/^#define FLECS_JSON$/;"	d
FLECS_JSON	lib/flecs/include/flecs.h	/^#define FLECS_JSON /;"	d
FLECS_JSON	lib/flecs/include/flecs/addons/rest.h	/^#define FLECS_JSON$/;"	d
FLECS_JSON_H	lib/flecs/flecs.h	/^#define FLECS_JSON_H$/;"	d
FLECS_JSON_H	lib/flecs/include/flecs/addons/json.h	/^#define FLECS_JSON_H$/;"	d
FLECS_LEGACY	lib/flecs/flecs.h	/^#define FLECS_LEGACY$/;"	d
FLECS_LEGACY	lib/flecs/include/flecs/private/api_defines.h	/^#define FLECS_LEGACY$/;"	d
FLECS_LOG	lib/flecs/flecs.h	/^#define FLECS_LOG /;"	d
FLECS_LOG	lib/flecs/include/flecs.h	/^#define FLECS_LOG /;"	d
FLECS_LOG_H	lib/flecs/flecs.h	/^#define FLECS_LOG_H$/;"	d
FLECS_LOG_H	lib/flecs/include/flecs/addons/log.h	/^#define FLECS_LOG_H$/;"	d
FLECS_MAP_H	lib/flecs/flecs.h	/^#define FLECS_MAP_H$/;"	d
FLECS_MAP_H	lib/flecs/include/flecs/private/map.h	/^#define FLECS_MAP_H$/;"	d
FLECS_META	lib/flecs/flecs.h	/^#define FLECS_META /;"	d
FLECS_META	lib/flecs/flecs.h	/^#define FLECS_META$/;"	d
FLECS_META	lib/flecs/include/flecs.h	/^#define FLECS_META /;"	d
FLECS_META	lib/flecs/include/flecs.h	/^#define FLECS_META$/;"	d
FLECS_META	lib/flecs/include/flecs/addons/coredoc.h	/^#define FLECS_META$/;"	d
FLECS_META	lib/flecs/include/flecs/addons/expr.h	/^#define FLECS_META$/;"	d
FLECS_META	lib/flecs/include/flecs/addons/meta_c.h	/^#define FLECS_META$/;"	d
FLECS_META	lib/flecs/include/flecs/addons/units.h	/^#define FLECS_META$/;"	d
FLECS_META_C	lib/flecs/flecs.h	/^#define FLECS_META_C /;"	d
FLECS_META_C	lib/flecs/include/flecs.h	/^#define FLECS_META_C /;"	d
FLECS_META_C_EXPORT	lib/flecs/flecs.h	/^#define FLECS_META_C_EXPORT /;"	d
FLECS_META_C_EXPORT	lib/flecs/include/flecs/addons/meta_c.h	/^#define FLECS_META_C_EXPORT /;"	d
FLECS_META_C_H	lib/flecs/flecs.h	/^#define FLECS_META_C_H$/;"	d
FLECS_META_C_H	lib/flecs/include/flecs/addons/meta_c.h	/^#define FLECS_META_C_H$/;"	d
FLECS_META_C_IMPORT	lib/flecs/flecs.h	/^#define FLECS_META_C_IMPORT /;"	d
FLECS_META_C_IMPORT	lib/flecs/flecs.h	/^#define FLECS_META_C_IMPORT$/;"	d
FLECS_META_C_IMPORT	lib/flecs/include/flecs/addons/meta_c.h	/^#define FLECS_META_C_IMPORT /;"	d
FLECS_META_C_IMPORT	lib/flecs/include/flecs/addons/meta_c.h	/^#define FLECS_META_C_IMPORT$/;"	d
FLECS_META_H	lib/flecs/flecs.h	/^#define FLECS_META_H$/;"	d
FLECS_META_H	lib/flecs/include/flecs/addons/meta.h	/^#define FLECS_META_H$/;"	d
FLECS_META_PRIVATE_H	lib/flecs/flecs.c	/^#define FLECS_META_PRIVATE_H$/;"	d	file:
FLECS_META_PRIVATE_H	lib/flecs/src/addons/meta/meta.h	/^#define FLECS_META_PRIVATE_H$/;"	d
FLECS_MODULE	lib/flecs/flecs.h	/^#define FLECS_MODULE /;"	d
FLECS_MODULE	lib/flecs/flecs.h	/^#define FLECS_MODULE$/;"	d
FLECS_MODULE	lib/flecs/include/flecs.h	/^#define FLECS_MODULE /;"	d
FLECS_MODULE	lib/flecs/include/flecs/addons/doc.h	/^#define FLECS_MODULE$/;"	d
FLECS_MODULE	lib/flecs/include/flecs/addons/meta.h	/^#define FLECS_MODULE$/;"	d
FLECS_MODULE	lib/flecs/include/flecs/addons/pipeline.h	/^#define FLECS_MODULE$/;"	d
FLECS_MODULE	lib/flecs/include/flecs/addons/system.h	/^#define FLECS_MODULE$/;"	d
FLECS_MODULE	lib/flecs/include/flecs/addons/timer.h	/^#define FLECS_MODULE$/;"	d
FLECS_MODULE	lib/flecs/include/flecs/addons/units.h	/^#define FLECS_MODULE$/;"	d
FLECS_MODULE_H	lib/flecs/flecs.h	/^#define FLECS_MODULE_H$/;"	d
FLECS_MODULE_H	lib/flecs/include/flecs/addons/module.h	/^#define FLECS_MODULE_H$/;"	d
FLECS_MOV	lib/flecs/flecs.h	/^#define FLECS_MOV(/;"	d
FLECS_MOV	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^#define FLECS_MOV(/;"	d
FLECS_NAME_INDEX_H	lib/flecs/flecs.c	/^#define FLECS_NAME_INDEX_H$/;"	d	file:
FLECS_NAME_INDEX_H	lib/flecs/src/datastructures/name_index.h	/^#define FLECS_NAME_INDEX_H$/;"	d
FLECS_NEW	lib/flecs/flecs.h	/^#define FLECS_NEW(/;"	d
FLECS_NEW	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^#define FLECS_NEW(/;"	d
FLECS_NO_DEPRECATED_WARNINGS	lib/flecs/flecs.h	/^#define FLECS_NO_DEPRECATED_WARNINGS$/;"	d
FLECS_NO_DEPRECATED_WARNINGS	lib/flecs/include/flecs.h	/^#define FLECS_NO_DEPRECATED_WARNINGS$/;"	d
FLECS_OS_API_BAKE_API	lib/flecs/examples/os_api/bake/include/flecs-os_api-bake/bake_config.h	/^  #define FLECS_OS_API_BAKE_API /;"	d
FLECS_OS_API_BAKE_API	lib/flecs/examples/os_api/bake/include/flecs-os_api-bake/bake_config.h	/^  #define FLECS_OS_API_BAKE_API$/;"	d
FLECS_OS_API_BAKE_BAKE_CONFIG_H	lib/flecs/examples/os_api/bake/include/flecs-os_api-bake/bake_config.h	/^#define FLECS_OS_API_BAKE_BAKE_CONFIG_H$/;"	d
FLECS_OS_API_BAKE_H	lib/flecs/examples/os_api/bake/include/flecs_os_api_bake.h	/^#define FLECS_OS_API_BAKE_H$/;"	d
FLECS_OS_API_H	lib/flecs/flecs.h	/^#define FLECS_OS_API_H$/;"	d
FLECS_OS_API_H	lib/flecs/include/flecs/os_api.h	/^#define FLECS_OS_API_H$/;"	d
FLECS_OS_API_IMPL	lib/flecs/flecs.h	/^#define FLECS_OS_API_IMPL /;"	d
FLECS_OS_API_IMPL	lib/flecs/flecs.h	/^#define FLECS_OS_API_IMPL$/;"	d
FLECS_OS_API_IMPL	lib/flecs/include/flecs.h	/^#define FLECS_OS_API_IMPL /;"	d
FLECS_OS_API_IMPL	lib/flecs/include/flecs/addons/http.h	/^#define FLECS_OS_API_IMPL$/;"	d
FLECS_OS_API_IMPL	lib/flecs/include/flecs/addons/pipeline.h	/^#define FLECS_OS_API_IMPL$/;"	d
FLECS_OS_API_IMPL_H	lib/flecs/flecs.h	/^#define FLECS_OS_API_IMPL_H$/;"	d
FLECS_OS_API_IMPL_H	lib/flecs/include/flecs/addons/os_api_impl.h	/^#define FLECS_OS_API_IMPL_H$/;"	d
FLECS_OS_API_STDCPP_API	lib/flecs/examples/os_api/stdcpp/include/flecs-os_api-stdcpp/bake_config.h	/^  #define FLECS_OS_API_STDCPP_API /;"	d
FLECS_OS_API_STDCPP_API	lib/flecs/examples/os_api/stdcpp/include/flecs-os_api-stdcpp/bake_config.h	/^  #define FLECS_OS_API_STDCPP_API$/;"	d
FLECS_OS_API_STDCPP_BAKE_CONFIG_H	lib/flecs/examples/os_api/stdcpp/include/flecs-os_api-stdcpp/bake_config.h	/^#define FLECS_OS_API_STDCPP_BAKE_CONFIG_H$/;"	d
FLECS_OS_API_STDCPP_H	lib/flecs/examples/os_api/stdcpp/include/flecs_os_api_stdcpp.h	/^#define FLECS_OS_API_STDCPP_H$/;"	d
FLECS_PARSER	lib/flecs/flecs.h	/^#define FLECS_PARSER /;"	d
FLECS_PARSER	lib/flecs/flecs.h	/^#define FLECS_PARSER$/;"	d
FLECS_PARSER	lib/flecs/include/flecs.h	/^#define FLECS_PARSER /;"	d
FLECS_PARSER	lib/flecs/include/flecs/addons/expr.h	/^#define FLECS_PARSER$/;"	d
FLECS_PARSER	lib/flecs/include/flecs/addons/meta_c.h	/^#define FLECS_PARSER$/;"	d
FLECS_PARSER	lib/flecs/include/flecs/addons/plecs.h	/^#define FLECS_PARSER$/;"	d
FLECS_PARSER_H	lib/flecs/flecs.h	/^#define FLECS_PARSER_H$/;"	d
FLECS_PARSER_H	lib/flecs/include/flecs/addons/parser.h	/^#define FLECS_PARSER_H$/;"	d
FLECS_PIC	lib/flecs/CMakeLists.txt	/^option(FLECS_PIC "Compile static flecs lib with position-independent-code (PIC)" ON)$/;"	D
FLECS_PIPELINE	lib/flecs/flecs.h	/^#define FLECS_PIPELINE /;"	d
FLECS_PIPELINE	lib/flecs/flecs.h	/^#define FLECS_PIPELINE$/;"	d
FLECS_PIPELINE	lib/flecs/include/flecs.h	/^#define FLECS_PIPELINE /;"	d
FLECS_PIPELINE	lib/flecs/include/flecs/addons/app.h	/^#define FLECS_PIPELINE$/;"	d
FLECS_PIPELINE	lib/flecs/include/flecs/addons/rest.h	/^#define FLECS_PIPELINE$/;"	d
FLECS_PIPELINE	lib/flecs/include/flecs/addons/timer.h	/^#define FLECS_PIPELINE$/;"	d
FLECS_PIPELINE_H	lib/flecs/flecs.h	/^#define FLECS_PIPELINE_H$/;"	d
FLECS_PIPELINE_H	lib/flecs/include/flecs/addons/pipeline.h	/^#define FLECS_PIPELINE_H$/;"	d
FLECS_PIPELINE_PRIVATE_H	lib/flecs/flecs.c	/^#define FLECS_PIPELINE_PRIVATE_H$/;"	d	file:
FLECS_PIPELINE_PRIVATE_H	lib/flecs/src/addons/pipeline/pipeline.h	/^#define FLECS_PIPELINE_PRIVATE_H$/;"	d
FLECS_PLACEMENT_NEW	lib/flecs/flecs.h	/^#define FLECS_PLACEMENT_NEW(/;"	d
FLECS_PLACEMENT_NEW	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^#define FLECS_PLACEMENT_NEW(/;"	d
FLECS_PLECS	lib/flecs/flecs.h	/^#define FLECS_PLECS /;"	d
FLECS_PLECS	lib/flecs/include/flecs.h	/^#define FLECS_PLECS /;"	d
FLECS_PLECS_H	lib/flecs/flecs.h	/^#define FLECS_PLECS_H$/;"	d
FLECS_PLECS_H	lib/flecs/include/flecs/addons/plecs.h	/^#define FLECS_PLECS_H$/;"	d
FLECS_PRIVATE_H	lib/flecs/flecs.c	/^#define FLECS_PRIVATE_H$/;"	d	file:
FLECS_PRIVATE_H	lib/flecs/src/private_api.h	/^#define FLECS_PRIVATE_H$/;"	d
FLECS_REST	lib/flecs/flecs.h	/^#define FLECS_REST /;"	d
FLECS_REST	lib/flecs/include/flecs.h	/^#define FLECS_REST /;"	d
FLECS_REST_H	lib/flecs/flecs.h	/^#define FLECS_REST_H$/;"	d
FLECS_REST_H	lib/flecs/include/flecs/addons/rest.h	/^#define FLECS_REST_H$/;"	d
FLECS_RULES	lib/flecs/flecs.h	/^#define FLECS_RULES /;"	d
FLECS_RULES	lib/flecs/flecs.h	/^#define FLECS_RULES$/;"	d
FLECS_RULES	lib/flecs/include/flecs.h	/^#define FLECS_RULES /;"	d
FLECS_RULES	lib/flecs/include/flecs/addons/rest.h	/^#define FLECS_RULES$/;"	d
FLECS_RULES_H	lib/flecs/flecs.h	/^#define FLECS_RULES_H$/;"	d
FLECS_RULES_H	lib/flecs/include/flecs/addons/rules.h	/^#define FLECS_RULES_H$/;"	d
FLECS_SANITIZE	lib/flecs/flecs.h	/^#define FLECS_SANITIZE$/;"	d
FLECS_SANITIZE	lib/flecs/include/flecs.h	/^#define FLECS_SANITIZE$/;"	d
FLECS_SHARED_LIBS	lib/flecs/CMakeLists.txt	/^option(FLECS_SHARED_LIBS "Build shared flecs lib" ON)$/;"	D
FLECS_SNAPSHOT	lib/flecs/flecs.h	/^#define FLECS_SNAPSHOT /;"	d
FLECS_SNAPSHOT	lib/flecs/include/flecs.h	/^#define FLECS_SNAPSHOT /;"	d
FLECS_SNAPSHOT_H	lib/flecs/flecs.h	/^#define FLECS_SNAPSHOT_H$/;"	d
FLECS_SNAPSHOT_H	lib/flecs/include/flecs/addons/snapshot.h	/^#define FLECS_SNAPSHOT_H$/;"	d
FLECS_SPARSE_H	lib/flecs/flecs.h	/^#define FLECS_SPARSE_H$/;"	d
FLECS_SPARSE_H	lib/flecs/include/flecs/private/sparse.h	/^#define FLECS_SPARSE_H$/;"	d
FLECS_STATIC_LIBS	lib/flecs/CMakeLists.txt	/^option(FLECS_STATIC_LIBS "Build static flecs lib" ON)$/;"	D
FLECS_STATS	lib/flecs/flecs.h	/^#define FLECS_STATS /;"	d
FLECS_STATS	lib/flecs/include/flecs.h	/^#define FLECS_STATS /;"	d
FLECS_STATS_H	lib/flecs/flecs.h	/^#define FLECS_STATS_H$/;"	d
FLECS_STATS_H	lib/flecs/include/flecs/addons/stats.h	/^#define FLECS_STATS_H$/;"	d
FLECS_STRBUF_H_	lib/flecs/flecs.h	/^#define FLECS_STRBUF_H_$/;"	d
FLECS_STRBUF_H_	lib/flecs/include/flecs/private/strbuf.h	/^#define FLECS_STRBUF_H_$/;"	d
FLECS_SWITCH_LIST_H	lib/flecs/flecs.c	/^#define FLECS_SWITCH_LIST_H$/;"	d	file:
FLECS_SWITCH_LIST_H	lib/flecs/include/flecs/private/switch_list.h	/^#define FLECS_SWITCH_LIST_H$/;"	d
FLECS_SYSTEM	lib/flecs/flecs.h	/^#define FLECS_SYSTEM /;"	d
FLECS_SYSTEM	lib/flecs/flecs.h	/^#define FLECS_SYSTEM$/;"	d
FLECS_SYSTEM	lib/flecs/include/flecs.h	/^#define FLECS_SYSTEM /;"	d
FLECS_SYSTEM	lib/flecs/include/flecs/addons/pipeline.h	/^#define FLECS_SYSTEM$/;"	d
FLECS_SYSTEM_H	lib/flecs/flecs.h	/^#define FLECS_SYSTEM_H$/;"	d
FLECS_SYSTEM_H	lib/flecs/include/flecs/addons/system.h	/^#define FLECS_SYSTEM_H$/;"	d
FLECS_SYSTEM_PRIVATE_H	lib/flecs/flecs.c	/^#define FLECS_SYSTEM_PRIVATE_H$/;"	d	file:
FLECS_SYSTEM_PRIVATE_H	lib/flecs/src/addons/system/system.h	/^#define FLECS_SYSTEM_PRIVATE_H$/;"	d
FLECS_TABLE_CACHE_H_	lib/flecs/flecs.c	/^#define FLECS_TABLE_CACHE_H_$/;"	d	file:
FLECS_TABLE_CACHE_H_	lib/flecs/src/table_cache.h	/^#define FLECS_TABLE_CACHE_H_$/;"	d
FLECS_TARGETS	lib/flecs/CMakeLists.txt	/^set(FLECS_TARGETS "")$/;"	v
FLECS_TBUILDER	lib/flecs/flecs.h	/^#define FLECS_TBUILDER /;"	d
FLECS_TBUILDER	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^#define FLECS_TBUILDER /;"	d
FLECS_TIMER	lib/flecs/flecs.h	/^#define FLECS_TIMER /;"	d
FLECS_TIMER	lib/flecs/include/flecs.h	/^#define FLECS_TIMER /;"	d
FLECS_TIMER_H	lib/flecs/flecs.h	/^#define FLECS_TIMER_H$/;"	d
FLECS_TIMER_H	lib/flecs/include/flecs/addons/timer.h	/^#define FLECS_TIMER_H$/;"	d
FLECS_TYPES_PRIVATE_H	lib/flecs/flecs.c	/^#define FLECS_TYPES_PRIVATE_H$/;"	d	file:
FLECS_TYPES_PRIVATE_H	lib/flecs/src/private_types.h	/^#define FLECS_TYPES_PRIVATE_H$/;"	d
FLECS_UNITS	lib/flecs/flecs.h	/^#define FLECS_UNITS /;"	d
FLECS_UNITS	lib/flecs/include/flecs.h	/^#define FLECS_UNITS /;"	d
FLECS_UNITS_H	lib/flecs/flecs.h	/^#define FLECS_UNITS_H$/;"	d
FLECS_UNITS_H	lib/flecs/include/flecs/addons/units.h	/^#define FLECS_UNITS_H$/;"	d
FLECS_VECTOR_H	lib/flecs/flecs.h	/^#define FLECS_VECTOR_H$/;"	d
FLECS_VECTOR_H	lib/flecs/include/flecs/private/vector.h	/^#define FLECS_VECTOR_H$/;"	d
FLECS__E0	lib/flecs/flecs.h	/^#define FLECS__E0 /;"	d
FLECS__E0	lib/flecs/include/flecs/private/api_support.h	/^#define FLECS__E0 /;"	d
FNV	lib/uthash/tests/hashscan.c	/^#define FNV /;"	d	file:
Fahrenheit	lib/flecs/flecs.h	/^struct Fahrenheit { };$/;"	s	struct:flecs::units::temperature
Fahrenheit	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Fahrenheit { };$/;"	s	struct:flecs::units::temperature
Femto	lib/flecs/flecs.h	/^struct Femto { };$/;"	s	struct:flecs::units
Femto	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Femto { };$/;"	s	struct:flecs::units
Field	lib/flecs/test/cpp_api/src/Type.cpp	/^    int Field;$/;"	m	struct:MyStruct	typeref:typename:int	file:
FilterBuilder_10_terms	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_10_terms() {$/;"	f	typeref:typename:void
FilterBuilder_1_term_to_empty	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_1_term_to_empty() {$/;"	f	typeref:typename:void
FilterBuilder_1_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_1_type() {$/;"	f	typeref:typename:void
FilterBuilder_20_terms	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_20_terms() {$/;"	f	typeref:typename:void
FilterBuilder_2_subsequent_args	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_2_subsequent_args() {$/;"	f	typeref:typename:void
FilterBuilder_2_terms_w_expr	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_2_terms_w_expr() {$/;"	f	typeref:typename:void
FilterBuilder_add_1_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_1_type() {$/;"	f	typeref:typename:void
FilterBuilder_add_1_type_w_1_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_1_type_w_1_type() {$/;"	f	typeref:typename:void
FilterBuilder_add_2_types	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_2_types() {$/;"	f	typeref:typename:void
FilterBuilder_add_2_types_w_1_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_2_types_w_1_type() {$/;"	f	typeref:typename:void
FilterBuilder_add_not	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_not() {$/;"	f	typeref:typename:void
FilterBuilder_add_optional	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_optional() {$/;"	f	typeref:typename:void
FilterBuilder_add_or	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_or() {$/;"	f	typeref:typename:void
FilterBuilder_add_pair	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_pair() {$/;"	f	typeref:typename:void
FilterBuilder_add_pair_w_rel_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_add_pair_w_rel_type() {$/;"	f	typeref:typename:void
FilterBuilder_assert_on_multiple_expr_calls	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_assert_on_multiple_expr_calls() {$/;"	f	typeref:typename:void
FilterBuilder_assert_on_uninitialized_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_assert_on_uninitialized_term() {$/;"	f	typeref:typename:void
FilterBuilder_builder_assign_from_empty	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_builder_assign_from_empty() {$/;"	f	typeref:typename:void
FilterBuilder_builder_assign_same_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_builder_assign_same_type() {$/;"	f	typeref:typename:void
FilterBuilder_builder_assign_to_empty	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_builder_assign_to_empty() {$/;"	f	typeref:typename:void
FilterBuilder_builder_build	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_builder_build() {$/;"	f	typeref:typename:void
FilterBuilder_builder_build_n_statements	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_builder_build_n_statements() {$/;"	f	typeref:typename:void
FilterBuilder_builder_build_to_auto	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_builder_build_to_auto() {$/;"	f	typeref:typename:void
FilterBuilder_builder_force_assign_operator	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_builder_force_assign_operator() {$/;"	f	typeref:typename:void
FilterBuilder_childof_self_superset_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_childof_self_superset_term() {$/;"	f	typeref:typename:void
FilterBuilder_childof_self_superset_term_w_each	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_childof_self_superset_term_w_each() {$/;"	f	typeref:typename:void
FilterBuilder_childof_superset_shortcut	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_childof_superset_shortcut() {$/;"	f	typeref:typename:void
FilterBuilder_childof_superset_shortcut_w_self	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_childof_superset_shortcut_w_self() {$/;"	f	typeref:typename:void
FilterBuilder_childof_superset_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_childof_superset_term() {$/;"	f	typeref:typename:void
FilterBuilder_childof_superset_term_w_each	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_childof_superset_term_w_each() {$/;"	f	typeref:typename:void
FilterBuilder_const_in_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_const_in_term() {$/;"	f	typeref:typename:void
FilterBuilder_const_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_const_type() {$/;"	f	typeref:typename:void
FilterBuilder_create_w_no_template_args	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_create_w_no_template_args() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_object_w_id	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_object_w_id() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_object_w_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_object_w_type() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_subject_w_id	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_subject_w_id() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_subject_w_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_subject_w_type() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_term() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_term_w_id	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_term_w_id() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_term_w_pair_id	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_term_w_pair_id() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_term_w_pair_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_term_w_pair_type() {$/;"	f	typeref:typename:void
FilterBuilder_explicit_term_w_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_explicit_term_w_type() {$/;"	f	typeref:typename:void
FilterBuilder_filter_as_arg	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_filter_as_arg() {$/;"	f	typeref:typename:void
FilterBuilder_filter_as_move_arg	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_filter_as_move_arg() {$/;"	f	typeref:typename:void
FilterBuilder_filter_as_return	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_filter_as_return() {$/;"	f	typeref:typename:void
FilterBuilder_filter_copy	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_filter_copy() {$/;"	f	typeref:typename:void
FilterBuilder_isa_self_superset_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_self_superset_term() {$/;"	f	typeref:typename:void
FilterBuilder_isa_self_superset_term_w_each	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_self_superset_term_w_each() {$/;"	f	typeref:typename:void
FilterBuilder_isa_superset_max_depth_1	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_superset_max_depth_1() {$/;"	f	typeref:typename:void
FilterBuilder_isa_superset_max_depth_2	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_superset_max_depth_2() {$/;"	f	typeref:typename:void
FilterBuilder_isa_superset_min_depth_2	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_superset_min_depth_2() {$/;"	f	typeref:typename:void
FilterBuilder_isa_superset_min_depth_2_max_depth_3	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_superset_min_depth_2_max_depth_3() {$/;"	f	typeref:typename:void
FilterBuilder_isa_superset_shortcut	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_superset_shortcut() {$/;"	f	typeref:typename:void
FilterBuilder_isa_superset_shortcut_w_self	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_superset_shortcut_w_self() {$/;"	f	typeref:typename:void
FilterBuilder_isa_superset_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_superset_term() {$/;"	f	typeref:typename:void
FilterBuilder_isa_superset_term_w_each	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_isa_superset_term_w_each() {$/;"	f	typeref:typename:void
FilterBuilder_name_arg	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_name_arg() {$/;"	f	typeref:typename:void
FilterBuilder_ptr_type	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_ptr_type() {$/;"	f	typeref:typename:void
FilterBuilder_relation	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_relation() {$/;"	f	typeref:typename:void
FilterBuilder_relation_w_object_wildcard	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_relation_w_object_wildcard() {$/;"	f	typeref:typename:void
FilterBuilder_relation_w_predicate_wildcard	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_relation_w_predicate_wildcard() {$/;"	f	typeref:typename:void
FilterBuilder_singleton_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_singleton_term() {$/;"	f	typeref:typename:void
FilterBuilder_string_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_string_term() {$/;"	f	typeref:typename:void
FilterBuilder_template_term	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_template_term() {$/;"	f	typeref:typename:void
FilterBuilder_term_after_arg	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_term_after_arg() {$/;"	f	typeref:typename:void
FilterBuilder_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case FilterBuilder_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
FilterBuilder_world_each_filter_1_component	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_world_each_filter_1_component() {$/;"	f	typeref:typename:void
FilterBuilder_world_each_filter_1_component_no_entity	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_world_each_filter_1_component_no_entity() {$/;"	f	typeref:typename:void
FilterBuilder_world_each_filter_2_components	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_world_each_filter_2_components() {$/;"	f	typeref:typename:void
FilterBuilder_world_each_filter_2_components_no_entity	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^void FilterBuilder_world_each_filter_2_components_no_entity() {$/;"	f	typeref:typename:void
FilterStr_four_terms_three_w_or_inout	lib/flecs/test/api/src/FilterStr.c	/^void FilterStr_four_terms_three_w_or_inout() {$/;"	f	typeref:typename:void
FilterStr_one_term	lib/flecs/test/api/src/FilterStr.c	/^void FilterStr_one_term() {$/;"	f	typeref:typename:void
FilterStr_one_term_w_inout	lib/flecs/test/api/src/FilterStr.c	/^void FilterStr_one_term_w_inout() {$/;"	f	typeref:typename:void
FilterStr_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case FilterStr_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
FilterStr_three_terms_w_or	lib/flecs/test/api/src/FilterStr.c	/^void FilterStr_three_terms_w_or() {$/;"	f	typeref:typename:void
FilterStr_three_terms_w_or_inout	lib/flecs/test/api/src/FilterStr.c	/^void FilterStr_three_terms_w_or_inout() {$/;"	f	typeref:typename:void
FilterStr_two_terms	lib/flecs/test/api/src/FilterStr.c	/^void FilterStr_two_terms() {$/;"	f	typeref:typename:void
FilterStr_two_terms_w_inout	lib/flecs/test/api/src/FilterStr.c	/^void FilterStr_two_terms_w_inout() {$/;"	f	typeref:typename:void
FilterWrapper	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    FilterWrapper(flecs::filter<Components...> f) : f_(f) {}$/;"	f	struct:FilterWrapper	file:
FilterWrapper	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^struct FilterWrapper$/;"	s	file:
Filter_and_term	lib/flecs/test/api/src/Filter.c	/^void Filter_and_term() {$/;"	f	typeref:typename:void
Filter_chain_filter_iter	lib/flecs/test/api/src/Filter.c	/^void Filter_chain_filter_iter() {$/;"	f	typeref:typename:void
Filter_chain_filter_iter_w_term_iter	lib/flecs/test/api/src/Filter.c	/^void Filter_chain_filter_iter_w_term_iter() {$/;"	f	typeref:typename:void
Filter_chain_iter_2_levels	lib/flecs/test/api/src/Filter.c	/^void Filter_chain_iter_2_levels() {$/;"	f	typeref:typename:void
Filter_chain_query_iter	lib/flecs/test/api/src/Filter.c	/^void Filter_chain_query_iter() {$/;"	f	typeref:typename:void
Filter_chain_rule_iter	lib/flecs/test/api/src/Filter.c	/^void Filter_chain_rule_iter() {$/;"	f	typeref:typename:void
Filter_chain_term_iter	lib/flecs/test/api/src/Filter.c	/^void Filter_chain_term_iter() {$/;"	f	typeref:typename:void
Filter_chain_term_iter_w_term_iter	lib/flecs/test/api/src/Filter.c	/^void Filter_chain_term_iter_w_term_iter() {$/;"	f	typeref:typename:void
Filter_chain_w_term_iter_component	lib/flecs/test/api/src/Filter.c	/^void Filter_chain_w_term_iter_component() {$/;"	f	typeref:typename:void
Filter_default_ctor_no_assign	lib/flecs/test/cpp_api/src/Filter.cpp	/^void Filter_default_ctor_no_assign() {$/;"	f	typeref:typename:void
Filter_filter_1_term	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term() {$/;"	f	typeref:typename:void
Filter_filter_1_term_acyclic_reflexive_same_subj_obj	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_acyclic_reflexive_same_subj_obj() {$/;"	f	typeref:typename:void
Filter_filter_1_term_acyclic_reflexive_same_subj_obj_var	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_acyclic_reflexive_same_subj_obj_var() {$/;"	f	typeref:typename:void
Filter_filter_1_term_acyclic_same_subj_obj	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_acyclic_same_subj_obj() {$/;"	f	typeref:typename:void
Filter_filter_1_term_acyclic_same_subj_obj_var	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_acyclic_same_subj_obj_var() {$/;"	f	typeref:typename:void
Filter_filter_1_term_any	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_any() {$/;"	f	typeref:typename:void
Filter_filter_1_term_dont_inherit_default_set	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_dont_inherit_default_set() {$/;"	f	typeref:typename:void
Filter_filter_1_term_dont_inherit_pair_default_set	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_dont_inherit_pair_default_set() {$/;"	f	typeref:typename:void
Filter_filter_1_term_no_alloc	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_no_alloc() {$/;"	f	typeref:typename:void
Filter_filter_1_term_non_acyclic_superset	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_non_acyclic_superset() {$/;"	f	typeref:typename:void
Filter_filter_1_term_same_subj_obj	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_same_subj_obj() {$/;"	f	typeref:typename:void
Filter_filter_1_term_same_subj_obj_var	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_same_subj_obj_var() {$/;"	f	typeref:typename:void
Filter_filter_1_term_wildcard	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_1_term_wildcard() {$/;"	f	typeref:typename:void
Filter_filter_2_terms	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_2_terms() {$/;"	f	typeref:typename:void
Filter_filter_3_terms	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_3_terms() {$/;"	f	typeref:typename:void
Filter_filter_3_terms_w_or	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_3_terms_w_or() {$/;"	f	typeref:typename:void
Filter_filter_4_terms_w_or_at_1	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_4_terms_w_or_at_1() {$/;"	f	typeref:typename:void
Filter_filter_cache_size_terms_no_alloc	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_cache_size_terms_no_alloc() {$/;"	f	typeref:typename:void
Filter_filter_copy	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_copy() {$/;"	f	typeref:typename:void
Filter_filter_filter	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_filter() {$/;"	f	typeref:typename:void
Filter_filter_from_expr_2_terms_err	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_from_expr_2_terms_err() {$/;"	f	typeref:typename:void
Filter_filter_instanced_w_base	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_instanced_w_base() {$/;"	f	typeref:typename:void
Filter_filter_instanced_w_singleton	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_instanced_w_singleton() {$/;"	f	typeref:typename:void
Filter_filter_iter_10_components	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_10_components() {$/;"	f	typeref:typename:void
Filter_filter_iter_10_tags	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_10_tags() {$/;"	f	typeref:typename:void
Filter_filter_iter_1_component	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_1_component() {$/;"	f	typeref:typename:void
Filter_filter_iter_1_not_tag	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_1_not_tag() {$/;"	f	typeref:typename:void
Filter_filter_iter_1_tag	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_1_tag() {$/;"	f	typeref:typename:void
Filter_filter_iter_20_components	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_20_components() {$/;"	f	typeref:typename:void
Filter_filter_iter_20_tags	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_20_tags() {$/;"	f	typeref:typename:void
Filter_filter_iter_2_components	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_2_components() {$/;"	f	typeref:typename:void
Filter_filter_iter_2_components_1_optional	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_2_components_1_optional() {$/;"	f	typeref:typename:void
Filter_filter_iter_2_pair_ids	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_2_pair_ids() {$/;"	f	typeref:typename:void
Filter_filter_iter_2_tags	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_2_tags() {$/;"	f	typeref:typename:void
Filter_filter_iter_2_tags_1_not	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_2_tags_1_not() {$/;"	f	typeref:typename:void
Filter_filter_iter_2_tags_1_optional	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_2_tags_1_optional() {$/;"	f	typeref:typename:void
Filter_filter_iter_2_terms_filter_all	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_2_terms_filter_all() {$/;"	f	typeref:typename:void
Filter_filter_iter_2_terms_filter_all_w_out	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_2_terms_filter_all_w_out() {$/;"	f	typeref:typename:void
Filter_filter_iter_3_tags_2_or	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_3_tags_2_or() {$/;"	f	typeref:typename:void
Filter_filter_iter_childof_pair_0_parent	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_childof_pair_0_parent() {$/;"	f	typeref:typename:void
Filter_filter_iter_frame_offset	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_frame_offset() {$/;"	f	typeref:typename:void
Filter_filter_iter_in_stage	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_in_stage() {$/;"	f	typeref:typename:void
Filter_filter_iter_null	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_null() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_2_pred_obj	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_2_pred_obj() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_id	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_id() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_pred_obj	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_pred_obj() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_w_2_wildcards_1_match	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_w_2_wildcards_1_match() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_w_2_wildcards_2x1_matches	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_w_2_wildcards_2x1_matches() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_w_2_wildcards_2x2_matches	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_w_2_wildcards_2x2_matches() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_w_3_wildcards_2x2x2_matches	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_w_3_wildcards_2x2x2_matches() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_w_obj_wildcard_n_matches	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_w_obj_wildcard_n_matches() {$/;"	f	typeref:typename:void
Filter_filter_iter_pair_w_rel_wildcard_n_matches	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_pair_w_rel_wildcard_n_matches() {$/;"	f	typeref:typename:void
Filter_filter_iter_superset	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_superset() {$/;"	f	typeref:typename:void
Filter_filter_iter_superset_childof	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_superset_childof() {$/;"	f	typeref:typename:void
Filter_filter_iter_type_set	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_type_set() {$/;"	f	typeref:typename:void
Filter_filter_iter_w_2_terms_1_filter	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_w_2_terms_1_filter() {$/;"	f	typeref:typename:void
Filter_filter_iter_w_3_terms_2_filter	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_w_3_terms_2_filter() {$/;"	f	typeref:typename:void
Filter_filter_iter_w_filter_term	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_w_filter_term() {$/;"	f	typeref:typename:void
Filter_filter_iter_w_from_nothing_term	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_w_from_nothing_term() {$/;"	f	typeref:typename:void
Filter_filter_iter_w_readonly_term	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_iter_w_readonly_term() {$/;"	f	typeref:typename:void
Filter_filter_lt_cache_size_terms_no_alloc	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_lt_cache_size_terms_no_alloc() {$/;"	f	typeref:typename:void
Filter_filter_move	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_move() {$/;"	f	typeref:typename:void
Filter_filter_no_instancing_w_base	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_instancing_w_base() {$/;"	f	typeref:typename:void
Filter_filter_no_instancing_w_singleton	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_instancing_w_singleton() {$/;"	f	typeref:typename:void
Filter_filter_no_this_component	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_this_component() {$/;"	f	typeref:typename:void
Filter_filter_no_this_component_1_not	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_this_component_1_not() {$/;"	f	typeref:typename:void
Filter_filter_no_this_component_2_ents	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_this_component_2_ents() {$/;"	f	typeref:typename:void
Filter_filter_no_this_component_2_ents_1_not	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_this_component_2_ents_1_not() {$/;"	f	typeref:typename:void
Filter_filter_no_this_tag	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_this_tag() {$/;"	f	typeref:typename:void
Filter_filter_no_this_tag_2_ents	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_this_tag_2_ents() {$/;"	f	typeref:typename:void
Filter_filter_no_this_tag_2_ents_1_not	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_no_this_tag_2_ents_1_not() {$/;"	f	typeref:typename:void
Filter_filter_w_10_terms	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_10_terms() {$/;"	f	typeref:typename:void
Filter_filter_w_10_terms_copy	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_10_terms_copy() {$/;"	f	typeref:typename:void
Filter_filter_w_10_terms_move	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_10_terms_move() {$/;"	f	typeref:typename:void
Filter_filter_w_and_flag	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_and_flag() {$/;"	f	typeref:typename:void
Filter_filter_w_not_flag	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_not_flag() {$/;"	f	typeref:typename:void
Filter_filter_w_or_flag	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_or_flag() {$/;"	f	typeref:typename:void
Filter_filter_w_pair_id	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_pair_id() {$/;"	f	typeref:typename:void
Filter_filter_w_pred_obj	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_pred_obj() {$/;"	f	typeref:typename:void
Filter_filter_w_recycled_object_and_id	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_recycled_object_and_id() {$/;"	f	typeref:typename:void
Filter_filter_w_resources_copy	lib/flecs/test/api/src/Filter.c	/^void Filter_filter_w_resources_copy() {$/;"	f	typeref:typename:void
Filter_iter_while_creating_components	lib/flecs/test/api/src/Filter.c	/^void Filter_iter_while_creating_components() {$/;"	f	typeref:typename:void
Filter_match_disabled	lib/flecs/test/api/src/Filter.c	/^void Filter_match_disabled() {$/;"	f	typeref:typename:void
Filter_match_empty_tables	lib/flecs/test/api/src/Filter.c	/^void Filter_match_empty_tables() {$/;"	f	typeref:typename:void
Filter_match_prefab	lib/flecs/test/api/src/Filter.c	/^void Filter_match_prefab() {$/;"	f	typeref:typename:void
Filter_match_switch_w_case	lib/flecs/test/api/src/Filter.c	/^void Filter_match_switch_w_case() {$/;"	f	typeref:typename:void
Filter_match_switch_w_case_2_terms	lib/flecs/test/api/src/Filter.c	/^void Filter_match_switch_w_case_2_terms() {$/;"	f	typeref:typename:void
Filter_match_switch_w_switch	lib/flecs/test/api/src/Filter.c	/^void Filter_match_switch_w_switch() {$/;"	f	typeref:typename:void
Filter_move_self	lib/flecs/test/api/src/Filter.c	/^void Filter_move_self() {$/;"	f	typeref:typename:void
Filter_or_term	lib/flecs/test/api/src/Filter.c	/^void Filter_or_term() {$/;"	f	typeref:typename:void
Filter_term_each_component	lib/flecs/test/cpp_api/src/Filter.cpp	/^void Filter_term_each_component() {$/;"	f	typeref:typename:void
Filter_term_each_id	lib/flecs/test/cpp_api/src/Filter.cpp	/^void Filter_term_each_id() {$/;"	f	typeref:typename:void
Filter_term_each_pair_id	lib/flecs/test/cpp_api/src/Filter.cpp	/^void Filter_term_each_pair_id() {$/;"	f	typeref:typename:void
Filter_term_each_pair_object_wildcard	lib/flecs/test/cpp_api/src/Filter.cpp	/^void Filter_term_each_pair_object_wildcard() {$/;"	f	typeref:typename:void
Filter_term_each_pair_relation_wildcard	lib/flecs/test/cpp_api/src/Filter.cpp	/^void Filter_term_each_pair_relation_wildcard() {$/;"	f	typeref:typename:void
Filter_term_each_pair_type	lib/flecs/test/cpp_api/src/Filter.cpp	/^void Filter_term_each_pair_type() {$/;"	f	typeref:typename:void
Filter_term_each_tag	lib/flecs/test/cpp_api/src/Filter.cpp	/^void Filter_term_each_tag() {$/;"	f	typeref:typename:void
Filter_term_iter_component	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_component() {$/;"	f	typeref:typename:void
Filter_term_iter_in_stage	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_in_stage() {$/;"	f	typeref:typename:void
Filter_term_iter_pair	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_pair() {$/;"	f	typeref:typename:void
Filter_term_iter_pair_w_obj_wildcard	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_pair_w_obj_wildcard() {$/;"	f	typeref:typename:void
Filter_term_iter_pair_w_obj_wildcard_n_matches	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_pair_w_obj_wildcard_n_matches() {$/;"	f	typeref:typename:void
Filter_term_iter_pair_w_obj_wildcard_n_matches_w_data	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_pair_w_obj_wildcard_n_matches_w_data() {$/;"	f	typeref:typename:void
Filter_term_iter_pair_w_rel_wildcard	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_pair_w_rel_wildcard() {$/;"	f	typeref:typename:void
Filter_term_iter_pair_w_rel_wildcard_n_matches	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_pair_w_rel_wildcard_n_matches() {$/;"	f	typeref:typename:void
Filter_term_iter_pair_w_rel_wildcard_n_matches_w_data	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_pair_w_rel_wildcard_n_matches_w_data() {$/;"	f	typeref:typename:void
Filter_term_iter_tag	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_tag() {$/;"	f	typeref:typename:void
Filter_term_iter_type_set	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_type_set() {$/;"	f	typeref:typename:void
Filter_term_iter_w_filter_term	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_filter_term() {$/;"	f	typeref:typename:void
Filter_term_iter_w_readonly_term	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_readonly_term() {$/;"	f	typeref:typename:void
Filter_term_iter_w_superset	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_superset() {$/;"	f	typeref:typename:void
Filter_term_iter_w_superset_base_w_2_components	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_superset_base_w_2_components() {$/;"	f	typeref:typename:void
Filter_term_iter_w_superset_childof	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_superset_childof() {$/;"	f	typeref:typename:void
Filter_term_iter_w_superset_pair	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_superset_pair() {$/;"	f	typeref:typename:void
Filter_term_iter_w_superset_pair_obj_wildcard	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_superset_pair_obj_wildcard() {$/;"	f	typeref:typename:void
Filter_term_iter_w_superset_self	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_superset_self() {$/;"	f	typeref:typename:void
Filter_term_iter_w_superset_self_childof	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_superset_self_childof() {$/;"	f	typeref:typename:void
Filter_term_iter_w_superset_tag	lib/flecs/test/api/src/Filter.c	/^void Filter_term_iter_w_superset_tag() {$/;"	f	typeref:typename:void
Filter_term_w_id	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_id() {$/;"	f	typeref:typename:void
Filter_term_w_pair_finalize_twice	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_pair_finalize_twice() {$/;"	f	typeref:typename:void
Filter_term_w_pair_id	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_pair_id() {$/;"	f	typeref:typename:void
Filter_term_w_pred_obj	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_pred_obj() {$/;"	f	typeref:typename:void
Filter_term_w_pred_role	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_pred_role() {$/;"	f	typeref:typename:void
Filter_term_w_role	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_role() {$/;"	f	typeref:typename:void
Filter_term_w_self	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_self() {$/;"	f	typeref:typename:void
Filter_term_w_self_invalid_max_depth	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_self_invalid_max_depth() {$/;"	f	typeref:typename:void
Filter_term_w_self_invalid_min_depth	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_self_invalid_min_depth() {$/;"	f	typeref:typename:void
Filter_term_w_self_invalid_min_max_depth	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_self_invalid_min_max_depth() {$/;"	f	typeref:typename:void
Filter_term_w_self_min_max_depth	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_self_min_max_depth() {$/;"	f	typeref:typename:void
Filter_term_w_self_superset	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_self_superset() {$/;"	f	typeref:typename:void
Filter_term_w_self_superset_custom_relation	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_self_superset_custom_relation() {$/;"	f	typeref:typename:void
Filter_term_w_subset	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_subset() {$/;"	f	typeref:typename:void
Filter_term_w_superset	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_superset() {$/;"	f	typeref:typename:void
Filter_term_w_superset_custom_relation	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_superset_custom_relation() {$/;"	f	typeref:typename:void
Filter_term_w_superset_max_depth	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_superset_max_depth() {$/;"	f	typeref:typename:void
Filter_term_w_superset_min_depth	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_superset_min_depth() {$/;"	f	typeref:typename:void
Filter_term_w_superset_min_max_depth	lib/flecs/test/api/src/Filter.c	/^void Filter_term_w_superset_min_max_depth() {$/;"	f	typeref:typename:void
Filter_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Filter_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Filter_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Filter_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Final	lib/flecs/flecs.h	/^static const flecs::entity_t Final = EcsFinal;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Final	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Final = EcsFinal;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Flecs	lib/flecs/flecs.h	/^static const flecs::entity_t Flecs = EcsFlecs;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Flecs	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Flecs = EcsFlecs;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
FlecsCore	lib/flecs/flecs.h	/^static const flecs::entity_t FlecsCore = EcsFlecsCore;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
FlecsCore	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t FlecsCore = EcsFlecsCore;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
FlecsCoreDocImport	lib/flecs/flecs.c	/^void FlecsCoreDocImport($/;"	f	typeref:typename:void
FlecsCoreDocImport	lib/flecs/src/addons/coredoc.c	/^void FlecsCoreDocImport($/;"	f	typeref:typename:void
FlecsCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    FlecsCtor(flecs::world&, flecs::entity e) : x_(89), e_(e) { }$/;"	f	struct:FlecsCtor
FlecsCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct FlecsCtor {$/;"	s
FlecsCtorDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    FlecsCtorDefaultCtor() : x_(99) { }$/;"	f	struct:FlecsCtorDefaultCtor
FlecsCtorDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    FlecsCtorDefaultCtor(flecs::world&, flecs::entity e) : x_(89), e_(e) { }$/;"	f	struct:FlecsCtorDefaultCtor
FlecsCtorDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct FlecsCtorDefaultCtor {$/;"	s
FlecsCtorValueCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    FlecsCtorValueCtor(flecs::world&, flecs::entity e) : x_(89), e_(e) { }$/;"	f	struct:FlecsCtorValueCtor
FlecsCtorValueCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    FlecsCtorValueCtor(int x) : x_(x) { }$/;"	f	struct:FlecsCtorValueCtor
FlecsCtorValueCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct FlecsCtorValueCtor {$/;"	s
FlecsDocImport	lib/flecs/flecs.c	/^void FlecsDocImport($/;"	f	typeref:typename:void
FlecsDocImport	lib/flecs/src/addons/doc.c	/^void FlecsDocImport($/;"	f	typeref:typename:void
FlecsMetaImport	lib/flecs/flecs.c	/^void FlecsMetaImport($/;"	f	typeref:typename:void
FlecsMetaImport	lib/flecs/src/addons/meta/meta.c	/^void FlecsMetaImport($/;"	f	typeref:typename:void
FlecsPipelineFini	lib/flecs/flecs.c	/^void FlecsPipelineFini($/;"	f	typeref:typename:void	file:
FlecsPipelineFini	lib/flecs/src/addons/pipeline/pipeline.c	/^void FlecsPipelineFini($/;"	f	typeref:typename:void	file:
FlecsPipelineImport	lib/flecs/flecs.c	/^void FlecsPipelineImport($/;"	f	typeref:typename:void
FlecsPipelineImport	lib/flecs/src/addons/pipeline/pipeline.c	/^void FlecsPipelineImport($/;"	f	typeref:typename:void
FlecsRestImport	lib/flecs/flecs.c	/^void FlecsRestImport($/;"	f	typeref:typename:void
FlecsRestImport	lib/flecs/src/addons/rest.c	/^void FlecsRestImport($/;"	f	typeref:typename:void
FlecsSystemImport	lib/flecs/flecs.c	/^void FlecsSystemImport($/;"	f	typeref:typename:void
FlecsSystemImport	lib/flecs/src/addons/system/system.c	/^void FlecsSystemImport($/;"	f	typeref:typename:void
FlecsTimerImport	lib/flecs/flecs.c	/^void FlecsTimerImport($/;"	f	typeref:typename:void
FlecsTimerImport	lib/flecs/src/addons/timer.c	/^void FlecsTimerImport($/;"	f	typeref:typename:void
FlecsUnitsImport	lib/flecs/flecs.c	/^void FlecsUnitsImport($/;"	f	typeref:typename:void
FlecsUnitsImport	lib/flecs/src/addons/units.c	/^void FlecsUnitsImport($/;"	f	typeref:typename:void
FlipP	lib/flecs/test/api/src/Sorting.c	/^void FlipP(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Foo	lib/flecs/test/cpp_api/src/Filter.cpp	/^    struct Foo { };$/;"	s	function:Filter_term_each_tag	file:
Foo	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^namespace Foo {$/;"	n	file:
Foo	lib/flecs/test/cpp_api/src/Paths.cpp	/^    struct Foo {$/;"	s	namespace:test	file:
FooComp	lib/flecs/test/cpp_api/src/World.cpp	/^    struct FooComp {$/;"	s	namespace:ns	file:
FooModule	lib/flecs/test/cpp_api/src/World.cpp	/^    FooModule(flecs::world& world) { $/;"	f	class:FooModule	file:
FooModule	lib/flecs/test/cpp_api/src/World.cpp	/^class FooModule {$/;"	c	file:
FooSys	lib/flecs/test/api/src/Stats.c	/^static void FooSys(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
FooSystem	lib/flecs/test/api/src/SystemMisc.c	/^void FooSystem(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
Force	lib/flecs/flecs.h	/^struct Force { };$/;"	s	struct:flecs::units
Force	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Force { };$/;"	s	struct:flecs::units
Free	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^    Free,$/;"	e	enum:TileStatus	file:
FreightCapacity	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } FreightCapacity;$/;"	t	typeref:struct:__anonfbee6d870308	file:
FreightCapacity	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct FreightCapacity { double value; };$/;"	s	file:
FromScope	lib/flecs/test/cpp_api/src/World.cpp	/^    struct FromScope { };$/;"	s	namespace:Nested	file:
FromScope	lib/flecs/test/cpp_api/src/World.cpp	/^struct FromScope { };$/;"	s	file:
GAMESTATE_H	include/gamestate.h	/^#define GAMESTATE_H$/;"	d
GET_ELEM	lib/flecs/flecs.c	/^#define GET_ELEM(/;"	d	file:
GET_ELEM	lib/flecs/src/datastructures/map.c	/^#define GET_ELEM(/;"	d	file:
GITIGN	lib/uthash/tests/Makefile	/^GITIGN = .gitignore$/;"	m
GameState	include/gamestate.h	/^struct GameState {$/;"	s
GetParentInProgress	lib/flecs/test/api/src/SingleThreadStaging.c	/^void GetParentInProgress(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Get_component_get_1_from_1	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_1_from_1() {$/;"	f	typeref:typename:void
Get_component_get_1_from_2	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_1_from_2() {$/;"	f	typeref:typename:void
Get_component_get_1_from_2_add_in_progress	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_1_from_2_add_in_progress() {$/;"	f	typeref:typename:void
Get_component_get_1_from_2_in_progress_from_main_stage	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_1_from_2_in_progress_from_main_stage() {$/;"	f	typeref:typename:void
Get_component_get_2_from_2	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_2_from_2() {$/;"	f	typeref:typename:void
Get_component_get_2_from_3	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_2_from_3() {$/;"	f	typeref:typename:void
Get_component_get_both_from_2_add_in_progress	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_both_from_2_add_in_progress() {$/;"	f	typeref:typename:void
Get_component_get_both_from_2_add_remove_in_progress	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_both_from_2_add_remove_in_progress() {$/;"	f	typeref:typename:void
Get_component_get_childof_component	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_childof_component() {$/;"	f	typeref:typename:void
Get_component_get_empty	lib/flecs/test/api/src/Get_component.c	/^void Get_component_get_empty() {$/;"	f	typeref:typename:void
Get_component_setup	lib/flecs/test/api/src/Get_component.c	/^void Get_component_setup() {$/;"	f	typeref:typename:void
Get_component_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Get_component_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Gibi	lib/flecs/flecs.h	/^struct Gibi { };$/;"	s	struct:flecs::units
Gibi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Gibi { };$/;"	s	struct:flecs::units
GibiBytes	lib/flecs/flecs.h	/^struct GibiBytes { };$/;"	s	struct:flecs::units::data
GibiBytes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct GibiBytes { };$/;"	s	struct:flecs::units::data
Giga	lib/flecs/flecs.h	/^struct Giga { };$/;"	s	struct:flecs::units
Giga	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Giga { };$/;"	s	struct:flecs::units
GigaBits	lib/flecs/flecs.h	/^struct GigaBits { };$/;"	s	struct:flecs::units::data
GigaBits	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct GigaBits { };$/;"	s	struct:flecs::units::data
GigaBitsPerSecond	lib/flecs/flecs.h	/^struct GigaBitsPerSecond { };$/;"	s	struct:flecs::units::datarate
GigaBitsPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct GigaBitsPerSecond { };$/;"	s	struct:flecs::units::datarate
GigaBytes	lib/flecs/flecs.h	/^struct GigaBytes { };$/;"	s	struct:flecs::units::data
GigaBytes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct GigaBytes { };$/;"	s	struct:flecs::units::data
GigaBytesPerSecond	lib/flecs/flecs.h	/^struct GigaBytesPerSecond { };$/;"	s	struct:flecs::units::datarate
GigaBytesPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct GigaBytesPerSecond { };$/;"	s	struct:flecs::units::datarate
GlobalComponentIds_declare	lib/flecs/test/api/src/GlobalComponentIds.c	/^void GlobalComponentIds_declare() {$/;"	f	typeref:typename:void
GlobalComponentIds_declare_2_world	lib/flecs/test/api/src/GlobalComponentIds.c	/^void GlobalComponentIds_declare_2_world() {    $/;"	f	typeref:typename:void
GlobalComponentIds_declare_entity	lib/flecs/test/api/src/GlobalComponentIds.c	/^void GlobalComponentIds_declare_entity() {$/;"	f	typeref:typename:void
GlobalComponentIds_declare_tag	lib/flecs/test/api/src/GlobalComponentIds.c	/^void GlobalComponentIds_declare_tag() {$/;"	f	typeref:typename:void
GlobalComponentIds_declare_tag_w_entity	lib/flecs/test/api/src/GlobalComponentIds.c	/^void GlobalComponentIds_declare_tag_w_entity() {$/;"	f	typeref:typename:void
GlobalComponentIds_declare_w_entity	lib/flecs/test/api/src/GlobalComponentIds.c	/^void GlobalComponentIds_declare_w_entity() {$/;"	f	typeref:typename:void
GlobalComponentIds_reuse_300_component_ids	lib/flecs/test/api/src/GlobalComponentIds.c	/^void GlobalComponentIds_reuse_300_component_ids() {$/;"	f	typeref:typename:void
GlobalComponentIds_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case GlobalComponentIds_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Grams	lib/flecs/flecs.h	/^struct Grams { };$/;"	s	struct:flecs::units::mass
Grams	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Grams { };$/;"	s	struct:flecs::units::mass
Grass	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^    Grass, $/;"	e	enum:Tile	file:
Grass	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Grass, Sand, Stone$/;"	e	enum:EnumClass	file:
Green	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^    Green,$/;"	e	enum:__anon0f08a1c60103	file:
Green	lib/flecs/examples/cpp/reflection/basics_enum/src/main.cpp	/^    Green,$/;"	e	enum:Color	file:
Green	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_enum_type_w_default_child_component::__anonb7ea1cde0f03	file:
Green	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum::__anonb7ea1cde0203	file:
Green	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_primitive_and_struct::__anonb7ea1cde0703	file:
Green	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_primitive_using_meta::__anonb7ea1cde0603	file:
Green	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_using_meta::__anonb7ea1cde0403	file:
Green	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Red, Green, Blue$/;"	e	enum:StandardEnum	file:
Green	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromExpr_enum::__anon51c88b180103	file:
Green	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromExpr_struct_enum::__anon51c88b180203	file:
Green	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromJson_struct_enum::__anon5d173e531503	file:
Green	lib/flecs/test/meta/src/EnumTypes.c	/^        Red, Blue, Green$/;"	e	enum:EnumTypes_enum_relation::Color	file:
Green	lib/flecs/test/meta/src/SerializeToExpr.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToExpr_enum::__anon35ed1d3e0103	file:
Green	lib/flecs/test/meta/src/SerializeToExpr.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToExpr_struct_enum::__anon35ed1d3e0203	file:
Green	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToJson_struct_enum::__anon413bd0791803	file:
Green	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_enum_component::__anon413bd0792903	file:
Green	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_invalid_enum_component::__anon413bd0792b03	file:
Green	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_struct_and_enum_component::__anon413bd0792a03	file:
Grey	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Black = 1, White = 3, Grey = 5$/;"	e	enum:SparseEnum	file:
HASHDIR	lib/uthash/tests/Makefile	/^HASHDIR = ..\/src$/;"	m
HASHDIR	lib/uthash/tests/threads/Makefile	/^HASHDIR = ..\/..\/src$/;"	m
HASH_ADD	lib/uthash/include/uthash.h	/^#define HASH_ADD(/;"	d
HASH_ADD	lib/uthash/src/uthash.h	/^#define HASH_ADD(/;"	d
HASH_ADD_BYHASHVALUE	lib/uthash/include/uthash.h	/^#define HASH_ADD_BYHASHVALUE(/;"	d
HASH_ADD_BYHASHVALUE	lib/uthash/src/uthash.h	/^#define HASH_ADD_BYHASHVALUE(/;"	d
HASH_ADD_BYHASHVALUE_INORDER	lib/uthash/include/uthash.h	/^#define HASH_ADD_BYHASHVALUE_INORDER(/;"	d
HASH_ADD_BYHASHVALUE_INORDER	lib/uthash/src/uthash.h	/^#define HASH_ADD_BYHASHVALUE_INORDER(/;"	d
HASH_ADD_INORDER	lib/uthash/include/uthash.h	/^#define HASH_ADD_INORDER(/;"	d
HASH_ADD_INORDER	lib/uthash/src/uthash.h	/^#define HASH_ADD_INORDER(/;"	d
HASH_ADD_INT	lib/uthash/include/uthash.h	/^#define HASH_ADD_INT(/;"	d
HASH_ADD_INT	lib/uthash/src/uthash.h	/^#define HASH_ADD_INT(/;"	d
HASH_ADD_KEYPTR	lib/uthash/include/uthash.h	/^#define HASH_ADD_KEYPTR(/;"	d
HASH_ADD_KEYPTR	lib/uthash/src/uthash.h	/^#define HASH_ADD_KEYPTR(/;"	d
HASH_ADD_KEYPTR_BYHASHVALUE	lib/uthash/include/uthash.h	/^#define HASH_ADD_KEYPTR_BYHASHVALUE(/;"	d
HASH_ADD_KEYPTR_BYHASHVALUE	lib/uthash/src/uthash.h	/^#define HASH_ADD_KEYPTR_BYHASHVALUE(/;"	d
HASH_ADD_KEYPTR_BYHASHVALUE_INORDER	lib/uthash/include/uthash.h	/^#define HASH_ADD_KEYPTR_BYHASHVALUE_INORDER(/;"	d
HASH_ADD_KEYPTR_BYHASHVALUE_INORDER	lib/uthash/src/uthash.h	/^#define HASH_ADD_KEYPTR_BYHASHVALUE_INORDER(/;"	d
HASH_ADD_KEYPTR_INORDER	lib/uthash/include/uthash.h	/^#define HASH_ADD_KEYPTR_INORDER(/;"	d
HASH_ADD_KEYPTR_INORDER	lib/uthash/src/uthash.h	/^#define HASH_ADD_KEYPTR_INORDER(/;"	d
HASH_ADD_PTR	lib/uthash/include/uthash.h	/^#define HASH_ADD_PTR(/;"	d
HASH_ADD_PTR	lib/uthash/src/uthash.h	/^#define HASH_ADD_PTR(/;"	d
HASH_ADD_STR	lib/uthash/include/uthash.h	/^#define HASH_ADD_STR(/;"	d
HASH_ADD_STR	lib/uthash/src/uthash.h	/^#define HASH_ADD_STR(/;"	d
HASH_ADD_TO_BKT	lib/uthash/include/uthash.h	/^#define HASH_ADD_TO_BKT(/;"	d
HASH_ADD_TO_BKT	lib/uthash/src/uthash.h	/^#define HASH_ADD_TO_BKT(/;"	d
HASH_ADD_TO_TABLE	lib/uthash/include/uthash.h	/^#define HASH_ADD_TO_TABLE(/;"	d
HASH_ADD_TO_TABLE	lib/uthash/src/uthash.h	/^#define HASH_ADD_TO_TABLE(/;"	d
HASH_AKBI_INNER_LOOP	lib/uthash/include/uthash.h	/^#define HASH_AKBI_INNER_LOOP(/;"	d
HASH_AKBI_INNER_LOOP	lib/uthash/src/uthash.h	/^#define HASH_AKBI_INNER_LOOP(/;"	d
HASH_APPEND_LIST	lib/uthash/include/uthash.h	/^#define HASH_APPEND_LIST(/;"	d
HASH_APPEND_LIST	lib/uthash/src/uthash.h	/^#define HASH_APPEND_LIST(/;"	d
HASH_BER	lib/uthash/include/uthash.h	/^#define HASH_BER(/;"	d
HASH_BER	lib/uthash/src/uthash.h	/^#define HASH_BER(/;"	d
HASH_BKT_CAPACITY_THRESH	lib/uthash/include/uthash.h	/^#define HASH_BKT_CAPACITY_THRESH /;"	d
HASH_BKT_CAPACITY_THRESH	lib/uthash/src/uthash.h	/^#define HASH_BKT_CAPACITY_THRESH /;"	d
HASH_BLOOM	lib/uthash/tests/hashscan.c	/^#define HASH_BLOOM /;"	d	file:
HASH_BLOOM	lib/uthash/tests/test93.c	/^#define HASH_BLOOM /;"	d	file:
HASH_BLOOM_ADD	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_ADD(/;"	d
HASH_BLOOM_ADD	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_ADD(/;"	d
HASH_BLOOM_BITLEN	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_BITLEN /;"	d
HASH_BLOOM_BITLEN	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_BITLEN /;"	d
HASH_BLOOM_BITSET	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_BITSET(/;"	d
HASH_BLOOM_BITSET	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_BITSET(/;"	d
HASH_BLOOM_BITTEST	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_BITTEST(/;"	d
HASH_BLOOM_BITTEST	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_BITTEST(/;"	d
HASH_BLOOM_BYTELEN	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_BYTELEN /;"	d
HASH_BLOOM_BYTELEN	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_BYTELEN /;"	d
HASH_BLOOM_FREE	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_FREE(/;"	d
HASH_BLOOM_FREE	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_FREE(/;"	d
HASH_BLOOM_MAKE	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_MAKE(/;"	d
HASH_BLOOM_MAKE	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_MAKE(/;"	d
HASH_BLOOM_SIGNATURE	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_SIGNATURE /;"	d
HASH_BLOOM_SIGNATURE	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_SIGNATURE /;"	d
HASH_BLOOM_TEST	lib/uthash/include/uthash.h	/^#define HASH_BLOOM_TEST(/;"	d
HASH_BLOOM_TEST	lib/uthash/src/uthash.h	/^#define HASH_BLOOM_TEST(/;"	d
HASH_CLEAR	lib/uthash/include/uthash.h	/^#define HASH_CLEAR(/;"	d
HASH_CLEAR	lib/uthash/src/uthash.h	/^#define HASH_CLEAR(/;"	d
HASH_CNT	lib/uthash/include/uthash.h	/^#define HASH_CNT(/;"	d
HASH_CNT	lib/uthash/src/uthash.h	/^#define HASH_CNT(/;"	d
HASH_COUNT	lib/uthash/include/uthash.h	/^#define HASH_COUNT(/;"	d
HASH_COUNT	lib/uthash/src/uthash.h	/^#define HASH_COUNT(/;"	d
HASH_DEL	lib/uthash/include/uthash.h	/^#define HASH_DEL(/;"	d
HASH_DEL	lib/uthash/src/uthash.h	/^#define HASH_DEL(/;"	d
HASH_DELETE	lib/uthash/include/uthash.h	/^#define HASH_DELETE(/;"	d
HASH_DELETE	lib/uthash/src/uthash.h	/^#define HASH_DELETE(/;"	d
HASH_DELETE_HH	lib/uthash/include/uthash.h	/^#define HASH_DELETE_HH(/;"	d
HASH_DELETE_HH	lib/uthash/src/uthash.h	/^#define HASH_DELETE_HH(/;"	d
HASH_DEL_IN_BKT	lib/uthash/include/uthash.h	/^#define HASH_DEL_IN_BKT(/;"	d
HASH_DEL_IN_BKT	lib/uthash/src/uthash.h	/^#define HASH_DEL_IN_BKT(/;"	d
HASH_EMIT_KEY	lib/uthash/include/uthash.h	/^#define HASH_EMIT_KEY(/;"	d
HASH_EMIT_KEY	lib/uthash/src/uthash.h	/^#define HASH_EMIT_KEY(/;"	d
HASH_EMIT_KEYS	lib/uthash/tests/emit_keys.c	/^#define HASH_EMIT_KEYS /;"	d	file:
HASH_EXPAND_BUCKETS	lib/uthash/include/uthash.h	/^#define HASH_EXPAND_BUCKETS(/;"	d
HASH_EXPAND_BUCKETS	lib/uthash/src/uthash.h	/^#define HASH_EXPAND_BUCKETS(/;"	d
HASH_FIND	lib/uthash/include/uthash.h	/^#define HASH_FIND(/;"	d
HASH_FIND	lib/uthash/src/uthash.h	/^#define HASH_FIND(/;"	d
HASH_FIND_BYHASHVALUE	lib/uthash/include/uthash.h	/^#define HASH_FIND_BYHASHVALUE(/;"	d
HASH_FIND_BYHASHVALUE	lib/uthash/src/uthash.h	/^#define HASH_FIND_BYHASHVALUE(/;"	d
HASH_FIND_INT	lib/uthash/include/uthash.h	/^#define HASH_FIND_INT(/;"	d
HASH_FIND_INT	lib/uthash/src/uthash.h	/^#define HASH_FIND_INT(/;"	d
HASH_FIND_IN_BKT	lib/uthash/include/uthash.h	/^#define HASH_FIND_IN_BKT(/;"	d
HASH_FIND_IN_BKT	lib/uthash/src/uthash.h	/^#define HASH_FIND_IN_BKT(/;"	d
HASH_FIND_PTR	lib/uthash/include/uthash.h	/^#define HASH_FIND_PTR(/;"	d
HASH_FIND_PTR	lib/uthash/src/uthash.h	/^#define HASH_FIND_PTR(/;"	d
HASH_FIND_STR	lib/uthash/include/uthash.h	/^#define HASH_FIND_STR(/;"	d
HASH_FIND_STR	lib/uthash/src/uthash.h	/^#define HASH_FIND_STR(/;"	d
HASH_FNV	lib/uthash/include/uthash.h	/^#define HASH_FNV(/;"	d
HASH_FNV	lib/uthash/src/uthash.h	/^#define HASH_FNV(/;"	d
HASH_FSCK	lib/uthash/include/uthash.h	/^#define HASH_FSCK(/;"	d
HASH_FSCK	lib/uthash/src/uthash.h	/^#define HASH_FSCK(/;"	d
HASH_FUNCTION	lib/uthash/include/uthash.h	/^#define HASH_FUNCTION(/;"	d
HASH_FUNCTION	lib/uthash/src/uthash.h	/^#define HASH_FUNCTION(/;"	d
HASH_FUNCTION	lib/uthash/tests/test62.c	/^#define HASH_FUNCTION(/;"	d	file:
HASH_FUNCTION	lib/uthash/tests/test96.c	/^#define HASH_FUNCTION(/;"	d	file:
HASH_INITIAL_NUM_BUCKETS	lib/uthash/include/uthash.h	/^#define HASH_INITIAL_NUM_BUCKETS /;"	d
HASH_INITIAL_NUM_BUCKETS	lib/uthash/src/uthash.h	/^#define HASH_INITIAL_NUM_BUCKETS /;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	lib/uthash/include/uthash.h	/^#define HASH_INITIAL_NUM_BUCKETS_LOG2 /;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	lib/uthash/src/uthash.h	/^#define HASH_INITIAL_NUM_BUCKETS_LOG2 /;"	d
HASH_ITER	lib/uthash/include/uthash.h	/^#define HASH_ITER(/;"	d
HASH_ITER	lib/uthash/src/uthash.h	/^#define HASH_ITER(/;"	d
HASH_JEN	lib/uthash/include/uthash.h	/^#define HASH_JEN(/;"	d
HASH_JEN	lib/uthash/src/uthash.h	/^#define HASH_JEN(/;"	d
HASH_JEN_MIX	lib/uthash/include/uthash.h	/^#define HASH_JEN_MIX(/;"	d
HASH_JEN_MIX	lib/uthash/src/uthash.h	/^#define HASH_JEN_MIX(/;"	d
HASH_KEYCMP	lib/uthash/include/uthash.h	/^#define HASH_KEYCMP(/;"	d
HASH_KEYCMP	lib/uthash/src/uthash.h	/^#define HASH_KEYCMP(/;"	d
HASH_KEYCMP	lib/uthash/tests/test6.c	/^#define HASH_KEYCMP(/;"	d	file:
HASH_KEYCMP	lib/uthash/tests/test88.c	/^#define HASH_KEYCMP(/;"	d	file:
HASH_KEYCMP	lib/uthash/tests/test96.c	/^#define HASH_KEYCMP(/;"	d	file:
HASH_LITTLE_ENDIAN	lib/flecs/flecs.c	/^# define HASH_LITTLE_ENDIAN /;"	d	file:
HASH_LITTLE_ENDIAN	lib/flecs/src/datastructures/hash.c	/^# define HASH_LITTLE_ENDIAN /;"	d	file:
HASH_MAKE_TABLE	lib/uthash/include/uthash.h	/^#define HASH_MAKE_TABLE(/;"	d
HASH_MAKE_TABLE	lib/uthash/src/uthash.h	/^#define HASH_MAKE_TABLE(/;"	d
HASH_NONFATAL_OOM	lib/uthash/include/uthash.h	/^#define HASH_NONFATAL_OOM /;"	d
HASH_NONFATAL_OOM	lib/uthash/src/uthash.h	/^#define HASH_NONFATAL_OOM /;"	d
HASH_NONFATAL_OOM	lib/uthash/tests/test92.c	/^#define HASH_NONFATAL_OOM /;"	d	file:
HASH_OAT	lib/uthash/include/uthash.h	/^#define HASH_OAT(/;"	d
HASH_OAT	lib/uthash/src/uthash.h	/^#define HASH_OAT(/;"	d
HASH_OOPS	lib/uthash/include/uthash.h	/^#define HASH_OOPS(/;"	d
HASH_OOPS	lib/uthash/src/uthash.h	/^#define HASH_OOPS(/;"	d
HASH_OVERHEAD	lib/uthash/include/uthash.h	/^#define HASH_OVERHEAD(/;"	d
HASH_OVERHEAD	lib/uthash/src/uthash.h	/^#define HASH_OVERHEAD(/;"	d
HASH_RECORD_OOM	lib/uthash/include/uthash.h	/^#define HASH_RECORD_OOM(/;"	d
HASH_RECORD_OOM	lib/uthash/src/uthash.h	/^#define HASH_RECORD_OOM(/;"	d
HASH_REPLACE	lib/uthash/include/uthash.h	/^#define HASH_REPLACE(/;"	d
HASH_REPLACE	lib/uthash/src/uthash.h	/^#define HASH_REPLACE(/;"	d
HASH_REPLACE_BYHASHVALUE	lib/uthash/include/uthash.h	/^#define HASH_REPLACE_BYHASHVALUE(/;"	d
HASH_REPLACE_BYHASHVALUE	lib/uthash/src/uthash.h	/^#define HASH_REPLACE_BYHASHVALUE(/;"	d
HASH_REPLACE_BYHASHVALUE_INORDER	lib/uthash/include/uthash.h	/^#define HASH_REPLACE_BYHASHVALUE_INORDER(/;"	d
HASH_REPLACE_BYHASHVALUE_INORDER	lib/uthash/src/uthash.h	/^#define HASH_REPLACE_BYHASHVALUE_INORDER(/;"	d
HASH_REPLACE_INORDER	lib/uthash/include/uthash.h	/^#define HASH_REPLACE_INORDER(/;"	d
HASH_REPLACE_INORDER	lib/uthash/src/uthash.h	/^#define HASH_REPLACE_INORDER(/;"	d
HASH_REPLACE_INT	lib/uthash/include/uthash.h	/^#define HASH_REPLACE_INT(/;"	d
HASH_REPLACE_INT	lib/uthash/src/uthash.h	/^#define HASH_REPLACE_INT(/;"	d
HASH_REPLACE_PTR	lib/uthash/include/uthash.h	/^#define HASH_REPLACE_PTR(/;"	d
HASH_REPLACE_PTR	lib/uthash/src/uthash.h	/^#define HASH_REPLACE_PTR(/;"	d
HASH_REPLACE_STR	lib/uthash/include/uthash.h	/^#define HASH_REPLACE_STR(/;"	d
HASH_REPLACE_STR	lib/uthash/src/uthash.h	/^#define HASH_REPLACE_STR(/;"	d
HASH_ROLLBACK_BKT	lib/uthash/include/uthash.h	/^#define HASH_ROLLBACK_BKT(/;"	d
HASH_ROLLBACK_BKT	lib/uthash/src/uthash.h	/^#define HASH_ROLLBACK_BKT(/;"	d
HASH_SAX	lib/uthash/include/uthash.h	/^#define HASH_SAX(/;"	d
HASH_SAX	lib/uthash/src/uthash.h	/^#define HASH_SAX(/;"	d
HASH_SELECT	lib/uthash/include/uthash.h	/^#define HASH_SELECT(/;"	d
HASH_SELECT	lib/uthash/src/uthash.h	/^#define HASH_SELECT(/;"	d
HASH_SFH	lib/uthash/include/uthash.h	/^#define HASH_SFH(/;"	d
HASH_SFH	lib/uthash/src/uthash.h	/^#define HASH_SFH(/;"	d
HASH_SIGNATURE	lib/uthash/include/uthash.h	/^#define HASH_SIGNATURE /;"	d
HASH_SIGNATURE	lib/uthash/src/uthash.h	/^#define HASH_SIGNATURE /;"	d
HASH_SORT	lib/uthash/include/uthash.h	/^#define HASH_SORT(/;"	d
HASH_SORT	lib/uthash/src/uthash.h	/^#define HASH_SORT(/;"	d
HASH_SRT	lib/uthash/include/uthash.h	/^#define HASH_SRT(/;"	d
HASH_SRT	lib/uthash/src/uthash.h	/^#define HASH_SRT(/;"	d
HASH_TO_BKT	lib/uthash/include/uthash.h	/^#define HASH_TO_BKT(/;"	d
HASH_TO_BKT	lib/uthash/src/uthash.h	/^#define HASH_TO_BKT(/;"	d
HASH_VALUE	lib/uthash/include/uthash.h	/^#define HASH_VALUE(/;"	d
HASH_VALUE	lib/uthash/src/uthash.h	/^#define HASH_VALUE(/;"	d
HEAD	lib/flecs/test/api/include/api.h	/^#define HEAD$/;"	d
HEAD	lib/flecs/test/api/src/Plecs.c	/^#define HEAD$/;"	d	file:
HEAD	lib/flecs/test/meta/include/meta.h	/^#define HEAD$/;"	d
HELLO_WORLD_BAKE_CONFIG_H	lib/flecs/examples/c/hello_world/include/hello_world/bake_config.h	/^#define HELLO_WORLD_BAKE_CONFIG_H$/;"	d
HELLO_WORLD_BAKE_CONFIG_H	lib/flecs/examples/cpp/hello_world/include/hello_world/bake_config.h	/^#define HELLO_WORLD_BAKE_CONFIG_H$/;"	d
HELLO_WORLD_H	lib/flecs/examples/c/hello_world/include/hello_world.h	/^#define HELLO_WORLD_H$/;"	d
HELLO_WORLD_H	lib/flecs/examples/cpp/hello_world/include/hello_world.h	/^#define HELLO_WORLD_H$/;"	d
HH_FROM_ELMT	lib/uthash/include/uthash.h	/^#define HH_FROM_ELMT(/;"	d
HH_FROM_ELMT	lib/uthash/src/uthash.h	/^#define HH_FROM_ELMT(/;"	d
HIERARCHIES_BAKE_CONFIG_H	lib/flecs/examples/c/queries/hierarchies/include/hierarchies/bake_config.h	/^#define HIERARCHIES_BAKE_CONFIG_H$/;"	d
HIERARCHIES_H	lib/flecs/examples/c/queries/hierarchies/include/hierarchies.h	/^#define HIERARCHIES_H$/;"	d
HIERARCHY_BAKE_CONFIG_H	lib/flecs/examples/c/entities/hierarchy/include/hierarchy/bake_config.h	/^#define HIERARCHY_BAKE_CONFIG_H$/;"	d
HIERARCHY_BAKE_CONFIG_H	lib/flecs/examples/cpp/entities/hierarchy/include/hierarchy/bake_config.h	/^#define HIERARCHY_BAKE_CONFIG_H$/;"	d
HIERARCHY_BAKE_CONFIG_H	lib/flecs/examples/cpp/queries/hierarchy/include/hierarchy/bake_config.h	/^#define HIERARCHY_BAKE_CONFIG_H$/;"	d
HIERARCHY_H	lib/flecs/examples/c/entities/hierarchy/include/hierarchy.h	/^#define HIERARCHY_H$/;"	d
HIERARCHY_H	lib/flecs/examples/cpp/entities/hierarchy/include/hierarchy.h	/^#define HIERARCHY_H$/;"	d
HIERARCHY_H	lib/flecs/examples/cpp/queries/hierarchy/include/hierarchy.h	/^#define HIERARCHY_H$/;"	d
HS_BIT_TEST	lib/uthash/tests/hashscan.c	/^#define HS_BIT_TEST(/;"	d	file:
HTML	lib/uthash/doc/Makefile	/^HTML=$(patsubst %.txt,%.html,$(wildcard *.txt))$/;"	m
HasFTL	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct HasFTL { };$/;"	s	file:
Has_1_of_0	lib/flecs/test/api/src/Has.c	/^void Has_1_of_0() {$/;"	f	typeref:typename:void
Has_1_of_1	lib/flecs/test/api/src/Has.c	/^void Has_1_of_1() {$/;"	f	typeref:typename:void
Has_1_of_2	lib/flecs/test/api/src/Has.c	/^void Has_1_of_2() {$/;"	f	typeref:typename:void
Has_1_of_empty	lib/flecs/test/api/src/Has.c	/^void Has_1_of_empty() {$/;"	f	typeref:typename:void
Has_has_entity	lib/flecs/test/api/src/Has.c	/^void Has_has_entity() {$/;"	f	typeref:typename:void
Has_has_entity_0	lib/flecs/test/api/src/Has.c	/^void Has_has_entity_0() {$/;"	f	typeref:typename:void
Has_has_entity_0_component	lib/flecs/test/api/src/Has.c	/^void Has_has_entity_0_component() {$/;"	f	typeref:typename:void
Has_has_entity_owned	lib/flecs/test/api/src/Has.c	/^void Has_has_entity_owned() {$/;"	f	typeref:typename:void
Has_has_entity_owned_0	lib/flecs/test/api/src/Has.c	/^void Has_has_entity_owned_0() {$/;"	f	typeref:typename:void
Has_has_entity_owned_0_component	lib/flecs/test/api/src/Has.c	/^void Has_has_entity_owned_0_component() {$/;"	f	typeref:typename:void
Has_has_in_progress	lib/flecs/test/api/src/Has.c	/^void Has_has_in_progress() {$/;"	f	typeref:typename:void
Has_has_of_zero	lib/flecs/test/api/src/Has.c	/^void Has_has_of_zero() {$/;"	f	typeref:typename:void
Has_has_wildcard	lib/flecs/test/api/src/Has.c	/^void Has_has_wildcard() {$/;"	f	typeref:typename:void
Has_has_wildcard_pair	lib/flecs/test/api/src/Has.c	/^void Has_has_wildcard_pair() {$/;"	f	typeref:typename:void
Has_owns	lib/flecs/test/api/src/Has.c	/^void Has_owns() {$/;"	f	typeref:typename:void
Has_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Has_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Has_zero	lib/flecs/test/api/src/Has.c	/^void Has_zero() {$/;"	f	typeref:typename:void
Health	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Health {        $/;"	s	file:
Healthy	lib/flecs/examples/cpp/rules/basics/src/main.cpp	/^struct Healthy { };$/;"	s	file:
Hecto	lib/flecs/flecs.h	/^struct Hecto { };$/;"	s	struct:flecs::units
Hecto	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Hecto { };$/;"	s	struct:flecs::units
Hero	include/ecs/components.h	/^} Hero;$/;"	t	typeref:struct:__anon1ffac85e0508
Hierarchies_add_child_after_delete_tree	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_child_after_delete_tree() {$/;"	f	typeref:typename:void
Hierarchies_add_child_to_recycled_parent	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_child_to_recycled_parent() {$/;"	f	typeref:typename:void
Hierarchies_add_path_depth_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_path_depth_0() {$/;"	f	typeref:typename:void
Hierarchies_add_path_depth_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_path_depth_1() {$/;"	f	typeref:typename:void
Hierarchies_add_path_depth_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_path_depth_2() {$/;"	f	typeref:typename:void
Hierarchies_add_path_existing_depth_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_path_existing_depth_0() {$/;"	f	typeref:typename:void
Hierarchies_add_path_existing_depth_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_path_existing_depth_1() {$/;"	f	typeref:typename:void
Hierarchies_add_path_existing_depth_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_path_existing_depth_2() {$/;"	f	typeref:typename:void
Hierarchies_add_path_from_scope	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_path_from_scope() {$/;"	f	typeref:typename:void
Hierarchies_add_path_from_scope_new_entity	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_add_path_from_scope_new_entity() {$/;"	f	typeref:typename:void
Hierarchies_cascade_after_recycled_parent_change	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_cascade_after_recycled_parent_change() {$/;"	f	typeref:typename:void
Hierarchies_delete_2_children	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_2_children() {$/;"	f	typeref:typename:void
Hierarchies_delete_2_children_different_type	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_2_children_different_type() {$/;"	f	typeref:typename:void
Hierarchies_delete_child	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_child() {$/;"	f	typeref:typename:void
Hierarchies_delete_children	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_children() {$/;"	f	typeref:typename:void
Hierarchies_delete_tree_2_levels	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_tree_2_levels() {$/;"	f	typeref:typename:void
Hierarchies_delete_tree_3_levels	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_tree_3_levels() {$/;"	f	typeref:typename:void
Hierarchies_delete_tree_count_tables	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_tree_count_tables() {$/;"	f	typeref:typename:void
Hierarchies_delete_tree_empty_table	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_tree_empty_table() {$/;"	f	typeref:typename:void
Hierarchies_delete_tree_recreate	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_tree_recreate() {$/;"	f	typeref:typename:void
Hierarchies_delete_tree_staged	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_tree_staged() {$/;"	f	typeref:typename:void
Hierarchies_delete_tree_w_dtor	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_tree_w_dtor() {$/;"	f	typeref:typename:ECS_DTOR (Position,ptr,{ dtor_count ++; })void	file:
Hierarchies_delete_tree_w_onremove	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_delete_tree_w_onremove() {$/;"	f	typeref:typename:void
Hierarchies_empty_scope	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_empty_scope() {$/;"	f	typeref:typename:void
Hierarchies_ensure_1_parent_after_adding_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_ensure_1_parent_after_adding_2() {$/;"	f	typeref:typename:void
Hierarchies_ensure_child_alive_after_deleting_prev_parent	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_ensure_child_alive_after_deleting_prev_parent() {$/;"	f	typeref:typename:void
Hierarchies_fullpath_for_core	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_fullpath_for_core() {$/;"	f	typeref:typename:void
Hierarchies_get_child_count	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_get_child_count() {$/;"	f	typeref:typename:void
Hierarchies_get_child_count_2_tables	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_get_child_count_2_tables() {$/;"	f	typeref:typename:void
Hierarchies_get_child_count_no_children	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_get_child_count_no_children() {$/;"	f	typeref:typename:void
Hierarchies_get_object_from_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_get_object_from_0() {$/;"	f	typeref:typename:void
Hierarchies_get_parent	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_get_parent() {$/;"	f	typeref:typename:void
Hierarchies_get_parent_from_nested	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_get_parent_from_nested() {$/;"	f	typeref:typename:void
Hierarchies_get_parent_from_nested_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_get_parent_from_nested_2() {$/;"	f	typeref:typename:void
Hierarchies_get_type_after_recycled_parent_add	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_get_type_after_recycled_parent_add() {$/;"	f	typeref:typename:void
Hierarchies_long_name_depth_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_long_name_depth_0() {$/;"	f	typeref:typename:void
Hierarchies_long_name_depth_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_long_name_depth_1() {$/;"	f	typeref:typename:void
Hierarchies_long_name_depth_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_long_name_depth_2() {$/;"	f	typeref:typename:void
Hierarchies_lookup_after_clear_from_parent	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_after_clear_from_parent() {$/;"	f	typeref:typename:void
Hierarchies_lookup_after_clear_from_root	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_after_clear_from_root() {$/;"	f	typeref:typename:void
Hierarchies_lookup_after_delete_from_parent	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_after_delete_from_parent() {$/;"	f	typeref:typename:void
Hierarchies_lookup_after_delete_from_root	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_after_delete_from_root() {$/;"	f	typeref:typename:void
Hierarchies_lookup_after_parent_to_parent_move	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_after_parent_to_parent_move() {$/;"	f	typeref:typename:void
Hierarchies_lookup_after_parent_to_root_move	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_after_parent_to_root_move() {$/;"	f	typeref:typename:void
Hierarchies_lookup_after_root_to_parent_move	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_after_root_to_parent_move() {$/;"	f	typeref:typename:void
Hierarchies_lookup_custom_prefix	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_custom_prefix() {$/;"	f	typeref:typename:void
Hierarchies_lookup_custom_prefix_from_root	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_custom_prefix_from_root() {$/;"	f	typeref:typename:void
Hierarchies_lookup_custom_sep	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_custom_sep() {$/;"	f	typeref:typename:void
Hierarchies_lookup_depth_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_depth_0() {$/;"	f	typeref:typename:void
Hierarchies_lookup_depth_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_depth_1() {$/;"	f	typeref:typename:void
Hierarchies_lookup_depth_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_depth_2() {$/;"	f	typeref:typename:void
Hierarchies_lookup_in_parent_from_scope	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_in_parent_from_scope() {$/;"	f	typeref:typename:void
Hierarchies_lookup_in_root_from_scope	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_in_root_from_scope() {$/;"	f	typeref:typename:void
Hierarchies_lookup_number	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_number() {$/;"	f	typeref:typename:void
Hierarchies_lookup_rel_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_rel_0() {$/;"	f	typeref:typename:void
Hierarchies_lookup_rel_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_rel_1() {$/;"	f	typeref:typename:void
Hierarchies_lookup_rel_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_rel_2() {$/;"	f	typeref:typename:void
Hierarchies_lookup_self	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_lookup_self() {$/;"	f	typeref:typename:void
Hierarchies_new_from_path_depth_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_new_from_path_depth_0() {$/;"	f	typeref:typename:void
Hierarchies_new_from_path_depth_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_new_from_path_depth_1() {$/;"	f	typeref:typename:void
Hierarchies_new_from_path_depth_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_new_from_path_depth_2() {$/;"	f	typeref:typename:void
Hierarchies_new_from_path_existing_depth_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_new_from_path_existing_depth_0() {$/;"	f	typeref:typename:void
Hierarchies_new_from_path_existing_depth_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_new_from_path_existing_depth_1() {$/;"	f	typeref:typename:void
Hierarchies_new_from_path_existing_depth_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_new_from_path_existing_depth_2() {$/;"	f	typeref:typename:void
Hierarchies_new_w_child_in_root	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_new_w_child_in_root() {$/;"	f	typeref:typename:void
Hierarchies_path_any_w_empty_prefix	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_any_w_empty_prefix() {$/;"	f	typeref:typename:void
Hierarchies_path_core	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_core() {$/;"	f	typeref:typename:void
Hierarchies_path_core_w_empty_prefix	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_core_w_empty_prefix() {$/;"	f	typeref:typename:void
Hierarchies_path_core_w_prefix	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_core_w_prefix() {$/;"	f	typeref:typename:void
Hierarchies_path_custom_prefix	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_custom_prefix() {$/;"	f	typeref:typename:void
Hierarchies_path_custom_sep	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_custom_sep() {$/;"	f	typeref:typename:void
Hierarchies_path_depth_0	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_depth_0() {$/;"	f	typeref:typename:void
Hierarchies_path_depth_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_depth_1() {$/;"	f	typeref:typename:void
Hierarchies_path_depth_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_depth_2() {$/;"	f	typeref:typename:void
Hierarchies_path_prefix_rel_match	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_prefix_rel_match() {$/;"	f	typeref:typename:void
Hierarchies_path_prefix_rel_no_match	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_prefix_rel_no_match() {$/;"	f	typeref:typename:void
Hierarchies_path_this_w_empty_prefix	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_this_w_empty_prefix() {$/;"	f	typeref:typename:void
Hierarchies_path_w_number	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_w_number() {$/;"	f	typeref:typename:void
Hierarchies_path_wildcard_w_empty_prefix	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_path_wildcard_w_empty_prefix() {$/;"	f	typeref:typename:void
Hierarchies_rel_path_depth_1	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_rel_path_depth_1() {$/;"	f	typeref:typename:void
Hierarchies_rel_path_depth_2	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_rel_path_depth_2() {$/;"	f	typeref:typename:void
Hierarchies_rel_path_from_root	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_rel_path_from_root() {$/;"	f	typeref:typename:void
Hierarchies_rel_path_from_self	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_rel_path_from_self() {$/;"	f	typeref:typename:void
Hierarchies_rel_path_no_match	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_rel_path_no_match() {$/;"	f	typeref:typename:void
Hierarchies_rematch_after_add_to_recycled_parent	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_rematch_after_add_to_recycled_parent() {$/;"	f	typeref:typename:void
Hierarchies_scope_component	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_scope_component() {$/;"	f	typeref:typename:void
Hierarchies_scope_component_no_macro	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_scope_component_no_macro() {$/;"	f	typeref:typename:void
Hierarchies_scope_iter_after_delete_tree	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_scope_iter_after_delete_tree() {$/;"	f	typeref:typename:void
Hierarchies_scope_set	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_scope_set() {$/;"	f	typeref:typename:void
Hierarchies_scope_set_again	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_scope_set_again() {$/;"	f	typeref:typename:void
Hierarchies_scope_set_w_lookup	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_scope_set_w_lookup() {$/;"	f	typeref:typename:void
Hierarchies_scope_set_w_new	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_scope_set_w_new() {$/;"	f	typeref:typename:void
Hierarchies_scope_set_w_new_staged	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_scope_set_w_new_staged() {$/;"	f	typeref:typename:void
Hierarchies_setup	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_setup() {$/;"	f	typeref:typename:void
Hierarchies_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Hierarchies_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Hierarchies_tree_iter_1_table	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_tree_iter_1_table() {$/;"	f	typeref:typename:void
Hierarchies_tree_iter_2_tables	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_tree_iter_2_tables() {$/;"	f	typeref:typename:void
Hierarchies_tree_iter_empty	lib/flecs/test/api/src/Hierarchies.c	/^void Hierarchies_tree_iter_empty() {$/;"	f	typeref:typename:void
Hours	lib/flecs/flecs.h	/^struct Hours { };$/;"	s	struct:flecs::units::duration
Hours	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Hours { };$/;"	s	struct:flecs::units::duration
HttpFragState	lib/flecs/flecs.c	/^} HttpFragState;$/;"	t	typeref:enum:__anona642c0050903	file:
HttpFragState	lib/flecs/src/addons/http.c	/^} HttpFragState;$/;"	t	typeref:enum:__anonc2d932d70103	file:
HttpFragStateBegin	lib/flecs/flecs.c	/^    HttpFragStateBegin,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateBegin	lib/flecs/src/addons/http.c	/^    HttpFragStateBegin,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateBody	lib/flecs/flecs.c	/^    HttpFragStateBody,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateBody	lib/flecs/src/addons/http.c	/^    HttpFragStateBody,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateCR	lib/flecs/flecs.c	/^    HttpFragStateCR,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateCR	lib/flecs/src/addons/http.c	/^    HttpFragStateCR,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateCRLF	lib/flecs/flecs.c	/^    HttpFragStateCRLF,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateCRLF	lib/flecs/src/addons/http.c	/^    HttpFragStateCRLF,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateCRLFCR	lib/flecs/flecs.c	/^    HttpFragStateCRLFCR,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateCRLFCR	lib/flecs/src/addons/http.c	/^    HttpFragStateCRLFCR,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateDone	lib/flecs/flecs.c	/^    HttpFragStateDone$/;"	e	enum:__anona642c0050903	file:
HttpFragStateDone	lib/flecs/src/addons/http.c	/^    HttpFragStateDone$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateHeaderName	lib/flecs/flecs.c	/^    HttpFragStateHeaderName,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateHeaderName	lib/flecs/src/addons/http.c	/^    HttpFragStateHeaderName,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateHeaderStart	lib/flecs/flecs.c	/^    HttpFragStateHeaderStart,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateHeaderStart	lib/flecs/src/addons/http.c	/^    HttpFragStateHeaderStart,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateHeaderValue	lib/flecs/flecs.c	/^    HttpFragStateHeaderValue,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateHeaderValue	lib/flecs/src/addons/http.c	/^    HttpFragStateHeaderValue,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateHeaderValueStart	lib/flecs/flecs.c	/^    HttpFragStateHeaderValueStart,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateHeaderValueStart	lib/flecs/src/addons/http.c	/^    HttpFragStateHeaderValueStart,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateMethod	lib/flecs/flecs.c	/^    HttpFragStateMethod,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateMethod	lib/flecs/src/addons/http.c	/^    HttpFragStateMethod,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStatePath	lib/flecs/flecs.c	/^    HttpFragStatePath,$/;"	e	enum:__anona642c0050903	file:
HttpFragStatePath	lib/flecs/src/addons/http.c	/^    HttpFragStatePath,$/;"	e	enum:__anonc2d932d70103	file:
HttpFragStateVersion	lib/flecs/flecs.c	/^    HttpFragStateVersion,$/;"	e	enum:__anona642c0050903	file:
HttpFragStateVersion	lib/flecs/src/addons/http.c	/^    HttpFragStateVersion,$/;"	e	enum:__anonc2d932d70103	file:
Http_stop_start	lib/flecs/test/api/src/Http.c	/^void Http_stop_start() {$/;"	f	typeref:typename:void
Http_stop_start_stresstest	lib/flecs/test/api/src/Http.c	/^void Http_stop_start_stresstest() {$/;"	f	typeref:typename:void
Http_stop_start_stresstest_w_0_sleep	lib/flecs/test/api/src/Http.c	/^void Http_stop_start_stresstest_w_0_sleep() {$/;"	f	typeref:typename:void
Http_stop_start_stresstest_w_100ns_sleep	lib/flecs/test/api/src/Http.c	/^void Http_stop_start_stresstest_w_100ns_sleep() {$/;"	f	typeref:typename:void
Http_stop_start_stresstest_w_100us_sleep	lib/flecs/test/api/src/Http.c	/^void Http_stop_start_stresstest_w_100us_sleep() {$/;"	f	typeref:typename:void
Http_stop_start_stresstest_w_10ms_sleep	lib/flecs/test/api/src/Http.c	/^void Http_stop_start_stresstest_w_10ms_sleep() {$/;"	f	typeref:typename:void
Http_teardown	lib/flecs/test/api/src/Http.c	/^void Http_teardown() {$/;"	f	typeref:typename:void
Http_teardown_started	lib/flecs/test/api/src/Http.c	/^void Http_teardown_started() {$/;"	f	typeref:typename:void
Http_teardown_stopped	lib/flecs/test/api/src/Http.c	/^void Http_teardown_stopped() {$/;"	f	typeref:typename:void
Http_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Http_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Human	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^struct Human { };$/;"	s	file:
I16	lib/flecs/flecs.h	/^static const flecs::entity_t I16 = ecs_id(ecs_i16_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
I16	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t I16 = ecs_id(ecs_i16_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
I32	lib/flecs/flecs.h	/^static const flecs::entity_t I32 = ecs_id(ecs_i32_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
I32	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t I32 = ecs_id(ecs_i32_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
I64	lib/flecs/flecs.h	/^static const flecs::entity_t I64 = ecs_id(ecs_i64_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
I64	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t I64 = ecs_id(ecs_i64_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
I8	lib/flecs/flecs.h	/^static const flecs::entity_t I8 = ecs_id(ecs_i8_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
I8	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t I8 = ecs_id(ecs_i8_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
IBase	lib/flecs/flecs.h	/^    using IBase = IBuilder<Base, Components ...>;$/;"	t	struct:flecs::_::builder	typeref:typename:IBuilder<Base,Components...>
IBase	lib/flecs/flecs.h	/^    using IBase = IBuilder<Base, Components ...>;$/;"	t	struct:flecs::_::node_builder	typeref:typename:IBuilder<Base,Components...>
IBase	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    using IBase = IBuilder<Base, Components ...>;$/;"	t	struct:flecs::_::builder	typeref:typename:IBuilder<Base,Components...>
IBase	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    using IBase = IBuilder<Base, Components ...>;$/;"	t	struct:flecs::_::node_builder	typeref:typename:IBuilder<Base,Components...>
IF_HASH_NONFATAL_OOM	lib/uthash/include/uthash.h	/^#define IF_HASH_NONFATAL_OOM(/;"	d
IF_HASH_NONFATAL_OOM	lib/uthash/src/uthash.h	/^#define IF_HASH_NONFATAL_OOM(/;"	d
IF_NO_DECLTYPE	lib/uthash/include/utlist.h	/^#define IF_NO_DECLTYPE(/;"	d
IF_NO_DECLTYPE	lib/uthash/src/utlist.h	/^#define IF_NO_DECLTYPE(/;"	d
INIT_CACHE	lib/flecs/flecs.c	/^#define INIT_CACHE(/;"	d	file:
INIT_CACHE	lib/flecs/src/iter.c	/^#define INIT_CACHE(/;"	d	file:
INIT_FONT_SZ	src/main.c	/^#define INIT_FONT_SZ /;"	d	file:
INIT_TERM_HEIGHT	src/main.c	/^#define INIT_TERM_HEIGHT /;"	d	file:
INIT_TERM_WIDTH	src/main.c	/^#define INIT_TERM_WIDTH /;"	d	file:
INSTANCING_BAKE_CONFIG_H	lib/flecs/examples/c/queries/instancing/include/instancing/bake_config.h	/^#define INSTANCING_BAKE_CONFIG_H$/;"	d
INSTANCING_BAKE_CONFIG_H	lib/flecs/examples/cpp/queries/instancing/include/instancing/bake_config.h	/^#define INSTANCING_BAKE_CONFIG_H$/;"	d
INSTANCING_H	lib/flecs/examples/c/queries/instancing/include/instancing.h	/^#define INSTANCING_H$/;"	d
INSTANCING_H	lib/flecs/examples/cpp/queries/instancing/include/instancing.h	/^#define INSTANCING_H$/;"	d
INT64_MAX_F	lib/flecs/flecs.c	/^#define INT64_MAX_F /;"	d	file:
INT64_MAX_F	lib/flecs/src/datastructures/strbuf.c	/^#define INT64_MAX_F /;"	d	file:
INVENTORY_SYSTEM_BAKE_CONFIG_H	lib/flecs/examples/cpp/game_mechanics/inventory_system/include/inventory_system/bake_config.h	/^#define INVENTORY_SYSTEM_BAKE_CONFIG_H$/;"	d
INVENTORY_SYSTEM_H	lib/flecs/examples/cpp/game_mechanics/inventory_system/include/inventory_system.h	/^#define INVENTORY_SYSTEM_H$/;"	d
IS_DISCOVERED	include/mapping/map.h	/^#define IS_DISCOVERED(/;"	d
IS_VISIBLE	include/mapping/map.h	/^#define IS_VISIBLE(/;"	d
IS_WALKABLE	include/mapping/map.h	/^#define IS_WALKABLE(/;"	d
ITERATE_COMPONENTS_BAKE_CONFIG_H	lib/flecs/examples/c/entities/iterate_components/include/iterate_components/bake_config.h	/^#define ITERATE_COMPONENTS_BAKE_CONFIG_H$/;"	d
ITERATE_COMPONENTS_BAKE_CONFIG_H	lib/flecs/examples/cpp/entities/iterate_components/include/iterate_components/bake_config.h	/^#define ITERATE_COMPONENTS_BAKE_CONFIG_H$/;"	d
ITERATE_COMPONENTS_H	lib/flecs/examples/c/entities/iterate_components/include/iterate_components.h	/^#define ITERATE_COMPONENTS_H$/;"	d
ITERATE_COMPONENTS_H	lib/flecs/examples/cpp/entities/iterate_components/include/iterate_components.h	/^#define ITERATE_COMPONENTS_H$/;"	d
ITER_BAKE_CONFIG_H	lib/flecs/examples/cpp/queries/iter/include/iter/bake_config.h	/^#define ITER_BAKE_CONFIG_H$/;"	d
ITER_H	lib/flecs/examples/cpp/queries/iter/include/iter.h	/^#define ITER_H$/;"	d
ITER_MAX_ENTITIES	lib/flecs/test/api/include/api.h	/^#define ITER_MAX_ENTITIES /;"	d
ITER_MAX_TERMS	lib/flecs/test/api/include/api.h	/^#define ITER_MAX_TERMS /;"	d
ITER_MAX_VARIABLES	lib/flecs/test/api/include/api.h	/^#define ITER_MAX_VARIABLES /;"	d
IdA	lib/flecs/test/cpp_api/src/Event.cpp	/^struct IdA { };$/;"	s	file:
IdArray	lib/flecs/flecs.h	/^    using IdArray = flecs::array<id_t, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
IdArray	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    using IdArray = flecs::array<id_t, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
IdB	lib/flecs/test/cpp_api/src/Event.cpp	/^struct IdB { };$/;"	s	file:
Identifier	lib/flecs/flecs.h	/^using Identifier = EcsIdentifier;$/;"	t	namespace:flecs	typeref:typename:EcsIdentifier
Identifier	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using Identifier = EcsIdentifier;$/;"	t	namespace:flecs	typeref:typename:EcsIdentifier
ImplicitComponents_add	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_add() {$/;"	f	typeref:typename:void
ImplicitComponents_add_pair	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_add_pair() {$/;"	f	typeref:typename:void
ImplicitComponents_first_use_in_system	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_first_use_in_system() {$/;"	f	typeref:typename:void
ImplicitComponents_first_use_tag_in_system	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_first_use_tag_in_system() {$/;"	f	typeref:typename:void
ImplicitComponents_get	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_get() {$/;"	f	typeref:typename:void
ImplicitComponents_has	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_has() {$/;"	f	typeref:typename:void
ImplicitComponents_implicit_base	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_implicit_base() {$/;"	f	typeref:typename:void
ImplicitComponents_implicit_const	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_implicit_const() {$/;"	f	typeref:typename:void
ImplicitComponents_implicit_const_ref	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_implicit_const_ref() {$/;"	f	typeref:typename:void
ImplicitComponents_implicit_name	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_implicit_name() {$/;"	f	typeref:typename:void
ImplicitComponents_implicit_ptr	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_implicit_ptr() {$/;"	f	typeref:typename:void
ImplicitComponents_implicit_ref	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_implicit_ref() {$/;"	f	typeref:typename:void
ImplicitComponents_module	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_module() {$/;"	f	typeref:typename:void
ImplicitComponents_query	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_query() {$/;"	f	typeref:typename:void
ImplicitComponents_reinit	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_reinit() {$/;"	f	typeref:typename:void
ImplicitComponents_reinit_scoped	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_reinit_scoped() {$/;"	f	typeref:typename:void
ImplicitComponents_reinit_w_lifecycle	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_reinit_w_lifecycle() {$/;"	f	typeref:typename:ECS_CTOR (Position,ptr,{ position_ctor_invoked ++; })void
ImplicitComponents_remove	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_remove() {$/;"	f	typeref:typename:void
ImplicitComponents_remove_pair	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_remove_pair() {$/;"	f	typeref:typename:void
ImplicitComponents_set	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_set() {$/;"	f	typeref:typename:void
ImplicitComponents_system	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_system() {$/;"	f	typeref:typename:void
ImplicitComponents_system_const	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_system_const() {$/;"	f	typeref:typename:void
ImplicitComponents_system_optional	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_system_optional() {$/;"	f	typeref:typename:void
ImplicitComponents_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case ImplicitComponents_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
ImplicitComponents_use_const	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_use_const() {$/;"	f	typeref:typename:void
ImplicitComponents_use_const_w_stage	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_use_const_w_stage() {$/;"	f	typeref:typename:void
ImplicitComponents_use_const_w_threads	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^void ImplicitComponents_use_const_w_threads() {$/;"	f	typeref:typename:void
Import	lib/flecs/templates/c/flecs-module/src/main.c	/^void ${id pascalcase}Import($/;"	f
ImpulseSpeed	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } ImpulseSpeed;$/;"	t	typeref:struct:__anonfbee6d870408	file:
ImpulseSpeed	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct ImpulseSpeed { double value; };$/;"	s	file:
In	lib/flecs/flecs.h	/^    In = EcsIn,$/;"	e	enum:flecs::inout_kind_t
In	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    In = EcsIn,$/;"	e	enum:flecs::inout_kind_t
InOut	lib/flecs/flecs.h	/^    InOut = EcsInOut,$/;"	e	enum:flecs::inout_kind_t
InOut	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    InOut = EcsInOut,$/;"	e	enum:flecs::inout_kind_t
InOutDefault	lib/flecs/flecs.h	/^    InOutDefault = EcsInOutDefault,$/;"	e	enum:flecs::inout_kind_t
InOutDefault	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    InOutDefault = EcsInOutDefault,$/;"	e	enum:flecs::inout_kind_t
InOutFilter	lib/flecs/flecs.h	/^    InOutFilter = EcsInOutFilter,$/;"	e	enum:flecs::inout_kind_t
InOutFilter	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    InOutFilter = EcsInOutFilter,$/;"	e	enum:flecs::inout_kind_t
Inactive	lib/flecs/flecs.h	/^static const flecs::entity_t Inactive = EcsInactive;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Inactive	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Inactive = EcsInactive;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
IncSingleton	lib/flecs/test/api/src/Singleton.c	/^void IncSingleton(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Init	lib/flecs/test/api/src/TriggerOnAdd.c	/^void Init(ecs_iter_t *it) {$/;"	f	typeref:typename:void
InitMass	lib/flecs/test/api/src/System_w_FromSystem.c	/^void InitMass(ecs_iter_t *it) {$/;"	f	typeref:typename:void
InitVelocity	lib/flecs/test/api/src/MultiThreadStaging.c	/^void InitVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
InitVelocity	lib/flecs/test/api/src/System_w_FromSystem.c	/^void InitVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Inner	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Inner { };$/;"	s	struct:Outer	file:
InstantiateInProgress	lib/flecs/test/api/src/Prefab.c	/^void InstantiateInProgress(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Internals_activate_deactivate_activate_other	lib/flecs/test/api/src/Internals.c	/^void Internals_activate_deactivate_activate_other() {$/;"	f	typeref:typename:void
Internals_activate_deactivate_reactive	lib/flecs/test/api/src/Internals.c	/^void Internals_activate_deactivate_reactive() {$/;"	f	typeref:typename:void
Internals_activate_deactivate_table	lib/flecs/test/api/src/Internals.c	/^void Internals_activate_deactivate_table() {$/;"	f	typeref:typename:void
Internals_activate_table	lib/flecs/test/api/src/Internals.c	/^void Internals_activate_table() {$/;"	f	typeref:typename:void
Internals_create_65k_tables	lib/flecs/test/api/src/Internals.c	/^void Internals_create_65k_tables() {$/;"	f	typeref:typename:void
Internals_deactivate_table	lib/flecs/test/api/src/Internals.c	/^void Internals_deactivate_table() {$/;"	f	typeref:typename:void
Internals_no_double_system_table_after_merge	lib/flecs/test/api/src/Internals.c	/^void Internals_no_double_system_table_after_merge() {$/;"	f	typeref:typename:void
Internals_no_duplicate_root_table_id	lib/flecs/test/api/src/Internals.c	/^void Internals_no_duplicate_root_table_id() {$/;"	f	typeref:typename:void
Internals_override_os_api_w_addon	lib/flecs/test/api/src/Internals.c	/^void Internals_override_os_api_w_addon() {$/;"	f	typeref:typename:void
Internals_recreate_deleted_table	lib/flecs/test/api/src/Internals.c	/^void Internals_recreate_deleted_table() {$/;"	f	typeref:typename:void
Internals_setup	lib/flecs/test/api/src/Internals.c	/^void Internals_setup() {$/;"	f	typeref:typename:void
Internals_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Internals_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Interrupt	lib/flecs/test/api/src/Run.c	/^void Interrupt(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Inventory	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Inventory { };   \/\/ Inventory tag$/;"	s	file:
Invoker	lib/flecs/flecs.h	/^        using Invoker = typename _::each_invoker<$/;"	t	function:flecs::_::node_builder::each	typeref:typename:_::each_invoker<typename std::decay<Func>::type,Components...>
Invoker	lib/flecs/flecs.h	/^        using Invoker = typename _::iter_invoker<$/;"	t	function:flecs::_::node_builder::iter	typeref:typename:_::iter_invoker<typename std::decay<Func>::type,Components...>
Invoker	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^        using Invoker = typename _::each_invoker<$/;"	t	function:flecs::_::node_builder::each	typeref:typename:_::each_invoker<typename std::decay<Func>::type,Components...>
Invoker	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^        using Invoker = typename _::iter_invoker<$/;"	t	function:flecs::_::node_builder::iter	typeref:typename:_::iter_invoker<typename std::decay<Func>::type,Components...>
Iptr	lib/flecs/flecs.h	/^static const flecs::entity_t Iptr = ecs_id(ecs_iptr_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Iptr	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t Iptr = ecs_id(ecs_iptr_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
IronArmor	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct IronArmor { };$/;"	s	file:
IronSword	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct IronSword { };$/;"	s	file:
IsA	lib/flecs/flecs.h	/^static const flecs::entity_t IsA = EcsIsA;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
IsA	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t IsA = EcsIsA;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
IsInvoked	lib/flecs/test/api/src/SystemMisc.c	/^void IsInvoked(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Item	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Item { };        \/\/ Base item type$/;"	s	file:
Iter	lib/flecs/test/api/src/Internals.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/Prefab.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/Run.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/SystemCascade.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/SystemManual.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/SystemPeriodic.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/System_w_Empty.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/System_w_FromEntity.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/System_w_FromParent.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter	lib/flecs/test/api/src/System_w_FromSystem.c	/^void Iter(ecs_iter_t *it) {$/;"	f	typeref:typename:void
IterData	lib/flecs/test/api/include/api.h	/^typedef struct IterData {$/;"	s
IterData	lib/flecs/test/api/include/api.h	/^} IterData;$/;"	t	typeref:struct:IterData
IterFunc	lib/flecs/test/cpp_api/src/Query.cpp	/^void IterFunc(flecs::iter& it, Position* p) {$/;"	f	typeref:typename:void
IterOnly	lib/flecs/flecs.h	/^    static constexpr bool IterOnly = arity<Func>::value == 1;$/;"	m	struct:flecs::_::iter_invoker	typeref:typename:bool
IterOnly	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static constexpr bool IterOnly = arity<Func>::value == 1;$/;"	m	struct:flecs::_::iter_invoker	typeref:typename:bool
IterSame	lib/flecs/test/api/src/System_w_FromParent.c	/^void IterSame(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Iter_2_shared	lib/flecs/test/api/src/System_w_FromParent.c	/^void Iter_2_shared(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Iter_iter_1_term_no_alloc	lib/flecs/test/api/src/Iter.c	/^void Iter_iter_1_term_no_alloc() {$/;"	f	typeref:typename:void
Iter_iter_cache_size_terms_no_alloc	lib/flecs/test/api/src/Iter.c	/^void Iter_iter_cache_size_terms_no_alloc() {$/;"	f	typeref:typename:void
Iter_iter_lt_cache_size_terms_alloc	lib/flecs/test/api/src/Iter.c	/^void Iter_iter_lt_cache_size_terms_alloc() {$/;"	f	typeref:typename:void
Iter_page_iter_0_0	lib/flecs/test/api/src/Iter.c	/^void Iter_page_iter_0_0() {$/;"	f	typeref:typename:void
Iter_page_iter_0_1	lib/flecs/test/api/src/Iter.c	/^void Iter_page_iter_0_1() {$/;"	f	typeref:typename:void
Iter_page_iter_0_n	lib/flecs/test/api/src/Iter.c	/^void Iter_page_iter_0_n() {$/;"	f	typeref:typename:void
Iter_page_iter_1_0	lib/flecs/test/api/src/Iter.c	/^void Iter_page_iter_1_0() {$/;"	f	typeref:typename:void
Iter_page_iter_m_n	lib/flecs/test/api/src/Iter.c	/^void Iter_page_iter_m_n() {$/;"	f	typeref:typename:void
Iter_page_iter_n_0	lib/flecs/test/api/src/Iter.c	/^void Iter_page_iter_n_0() {$/;"	f	typeref:typename:void
Iter_page_iter_skip_1_table	lib/flecs/test/api/src/Iter.c	/^void Iter_page_iter_skip_1_table() {$/;"	f	typeref:typename:void
Iter_page_iter_skip_2_tables	lib/flecs/test/api/src/Iter.c	/^void Iter_page_iter_skip_2_tables() {$/;"	f	typeref:typename:void
Iter_paged_iter_w_shared_comp	lib/flecs/test/api/src/Iter.c	/^void Iter_paged_iter_w_shared_comp() {$/;"	f	typeref:typename:void
Iter_paged_iter_w_singleton	lib/flecs/test/api/src/Iter.c	/^void Iter_paged_iter_w_singleton() {$/;"	f	typeref:typename:void
Iter_paged_iter_w_singleton_instanced	lib/flecs/test/api/src/Iter.c	/^void Iter_paged_iter_w_singleton_instanced() {$/;"	f	typeref:typename:void
Iter_paged_iter_w_task_query	lib/flecs/test/api/src/Iter.c	/^void Iter_paged_iter_w_task_query() {$/;"	f	typeref:typename:void
Iter_reactive	lib/flecs/test/api/src/System_w_FromSystem.c	/^void Iter_reactive(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Iter_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Iter_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Iter_worker_iter_1	lib/flecs/test/api/src/Iter.c	/^void Iter_worker_iter_1() {$/;"	f	typeref:typename:void
Iter_worker_iter_2	lib/flecs/test/api/src/Iter.c	/^void Iter_worker_iter_2() {$/;"	f	typeref:typename:void
Iter_worker_iter_3	lib/flecs/test/api/src/Iter.c	/^void Iter_worker_iter_3() {$/;"	f	typeref:typename:void
Iter_worker_iter_4	lib/flecs/test/api/src/Iter.c	/^void Iter_worker_iter_4() {$/;"	f	typeref:typename:void
Iter_worker_iter_w_shared_comp	lib/flecs/test/api/src/Iter.c	/^void Iter_worker_iter_w_shared_comp() {$/;"	f	typeref:typename:void
Iter_worker_iter_w_singleton	lib/flecs/test/api/src/Iter.c	/^void Iter_worker_iter_w_singleton() {$/;"	f	typeref:typename:void
Iter_worker_iter_w_singleton_instanced	lib/flecs/test/api/src/Iter.c	/^void Iter_worker_iter_w_singleton_instanced() {$/;"	f	typeref:typename:void
Iter_worker_iter_w_task_query	lib/flecs/test/api/src/Iter.c	/^void Iter_worker_iter_w_task_query() {$/;"	f	typeref:typename:void
Iterable_page_each	lib/flecs/test/cpp_api/src/Iterable.cpp	/^void Iterable_page_each() {$/;"	f	typeref:typename:void
Iterable_page_iter	lib/flecs/test/cpp_api/src/Iterable.cpp	/^void Iterable_page_iter() {$/;"	f	typeref:typename:void
Iterable_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Iterable_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Iterable_worker_each	lib/flecs/test/cpp_api/src/Iterable.cpp	/^void Iterable_worker_each() {$/;"	f	typeref:typename:void
Iterable_worker_iter	lib/flecs/test/cpp_api/src/Iterable.cpp	/^void Iterable_worker_iter() {$/;"	f	typeref:typename:void
JEN	lib/uthash/tests/hashscan.c	/^#define JEN /;"	d	file:
KEY_MAX_LENGTH	lib/uthash/tests/lru_cache/cache.c	/^#define KEY_MAX_LENGTH	/;"	d	file:
KEY_SIZE	lib/flecs/flecs.c	/^#define KEY_SIZE /;"	d	file:
KEY_SIZE	lib/flecs/src/datastructures/map.c	/^#define KEY_SIZE /;"	d	file:
Kelvin	lib/flecs/flecs.h	/^struct Kelvin { };$/;"	s	struct:flecs::units::temperature
Kelvin	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Kelvin { };$/;"	s	struct:flecs::units::temperature
Kibi	lib/flecs/flecs.h	/^struct Kibi { };$/;"	s	struct:flecs::units
Kibi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Kibi { };$/;"	s	struct:flecs::units
KibiBytes	lib/flecs/flecs.h	/^struct KibiBytes { };$/;"	s	struct:flecs::units::data
KibiBytes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KibiBytes { };$/;"	s	struct:flecs::units::data
Kilo	lib/flecs/flecs.h	/^struct Kilo { };$/;"	s	struct:flecs::units
Kilo	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Kilo { };$/;"	s	struct:flecs::units
KiloBits	lib/flecs/flecs.h	/^struct KiloBits { };$/;"	s	struct:flecs::units::data
KiloBits	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KiloBits { };$/;"	s	struct:flecs::units::data
KiloBitsPerSecond	lib/flecs/flecs.h	/^struct KiloBitsPerSecond { };$/;"	s	struct:flecs::units::datarate
KiloBitsPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KiloBitsPerSecond { };$/;"	s	struct:flecs::units::datarate
KiloBytes	lib/flecs/flecs.h	/^struct KiloBytes { };$/;"	s	struct:flecs::units::data
KiloBytes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KiloBytes { };$/;"	s	struct:flecs::units::data
KiloBytesPerSecond	lib/flecs/flecs.h	/^struct KiloBytesPerSecond { };$/;"	s	struct:flecs::units::datarate
KiloBytesPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KiloBytesPerSecond { };$/;"	s	struct:flecs::units::datarate
KiloGrams	lib/flecs/flecs.h	/^struct KiloGrams { };$/;"	s	struct:flecs::units::mass
KiloGrams	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KiloGrams { };$/;"	s	struct:flecs::units::mass
KiloMeters	lib/flecs/flecs.h	/^struct KiloMeters { };$/;"	s	struct:flecs::units::length
KiloMeters	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KiloMeters { };$/;"	s	struct:flecs::units::length
KiloMetersPerHour	lib/flecs/flecs.h	/^struct KiloMetersPerHour { };$/;"	s	struct:flecs::units::speed
KiloMetersPerHour	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KiloMetersPerHour { };$/;"	s	struct:flecs::units::speed
KiloMetersPerSecond	lib/flecs/flecs.h	/^struct KiloMetersPerSecond { };$/;"	s	struct:flecs::units::speed
KiloMetersPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct KiloMetersPerSecond { };$/;"	s	struct:flecs::units::speed
LAYERS_H	include/layers.h	/^#define LAYERS_H$/;"	d
LAYER_ACTOR	include/layers.h	/^#define LAYER_ACTOR /;"	d
LAYER_DOODAD	include/layers.h	/^#define LAYER_DOODAD /;"	d
LAYER_HAZARDS	include/layers.h	/^#define LAYER_HAZARDS /;"	d
LAYER_ITEM	include/layers.h	/^#define LAYER_ITEM /;"	d
LAYER_MAP	include/layers.h	/^#define LAYER_MAP /;"	d
LDECLTYPE	lib/uthash/include/utlist.h	/^#define LDECLTYPE(/;"	d
LDECLTYPE	lib/uthash/src/utlist.h	/^#define LDECLTYPE(/;"	d
LESS	lib/flecs/flecs.c	/^    #define LESS(/;"	d	file:
LESS	lib/flecs/src/datastructures/qsort.c	/^    #define LESS(/;"	d	file:
LFFALSE	lib/libflint/include/lfbool.h	/^#define LFFALSE /;"	d
LFTRUE	lib/libflint/include/lfbool.h	/^#define LFTRUE /;"	d
LIBFLINT_BINARY_TREE_H	lib/libflint/include/lfbinarytree.h	/^#define LIBFLINT_BINARY_TREE_H$/;"	d
LIBFLINT_BOOL_H	lib/libflint/include/lfbool.h	/^#define LIBFLINT_BOOL_H$/;"	d
LIBFLINT_H_MATH	lib/libflint/include/lfmath.h	/^#define LIBFLINT_H_MATH$/;"	d
LIBFLINT_INPUT_H	lib/libflint/include/lfinput.h	/^#define LIBFLINT_INPUT_H$/;"	d
LIBFLINT_LL_H	lib/libflint/include/lflinkedlist.h	/^#define LIBFLINT_LL_H$/;"	d
LIBFLINT_SET_H	lib/libflint/include/lfset.h	/^#define LIBFLINT_SET_H$/;"	d
LIBFLINT_STACK_H	lib/libflint/include/lfstack.h	/^#define LIBFLINT_STACK_H$/;"	d
LINE	lib/flecs/test/api/include/api.h	/^#define LINE /;"	d
LINE	lib/flecs/test/api/src/Plecs.c	/^#define LINE /;"	d	file:
LINE	lib/flecs/test/meta/include/meta.h	/^#define LINE /;"	d
LL_APPEND	lib/uthash/include/utlist.h	/^#define LL_APPEND(/;"	d
LL_APPEND	lib/uthash/src/utlist.h	/^#define LL_APPEND(/;"	d
LL_APPEND2	lib/uthash/include/utlist.h	/^#define LL_APPEND2(/;"	d
LL_APPEND2	lib/uthash/src/utlist.h	/^#define LL_APPEND2(/;"	d
LL_APPEND_ELEM	lib/uthash/include/utlist.h	/^#define LL_APPEND_ELEM(/;"	d
LL_APPEND_ELEM	lib/uthash/src/utlist.h	/^#define LL_APPEND_ELEM(/;"	d
LL_APPEND_ELEM2	lib/uthash/include/utlist.h	/^#define LL_APPEND_ELEM2(/;"	d
LL_APPEND_ELEM2	lib/uthash/src/utlist.h	/^#define LL_APPEND_ELEM2(/;"	d
LL_CONCAT	lib/uthash/include/utlist.h	/^#define LL_CONCAT(/;"	d
LL_CONCAT	lib/uthash/src/utlist.h	/^#define LL_CONCAT(/;"	d
LL_CONCAT2	lib/uthash/include/utlist.h	/^#define LL_CONCAT2(/;"	d
LL_CONCAT2	lib/uthash/src/utlist.h	/^#define LL_CONCAT2(/;"	d
LL_COUNT	lib/uthash/include/utlist.h	/^#define LL_COUNT(/;"	d
LL_COUNT	lib/uthash/src/utlist.h	/^#define LL_COUNT(/;"	d
LL_COUNT2	lib/uthash/include/utlist.h	/^#define LL_COUNT2(/;"	d
LL_COUNT2	lib/uthash/src/utlist.h	/^#define LL_COUNT2(/;"	d
LL_DELETE	lib/uthash/include/utlist.h	/^#define LL_DELETE(/;"	d
LL_DELETE	lib/uthash/src/utlist.h	/^#define LL_DELETE(/;"	d
LL_DELETE2	lib/uthash/include/utlist.h	/^#define LL_DELETE2(/;"	d
LL_DELETE2	lib/uthash/src/utlist.h	/^#define LL_DELETE2(/;"	d
LL_FOREACH	lib/uthash/include/utlist.h	/^#define LL_FOREACH(/;"	d
LL_FOREACH	lib/uthash/src/utlist.h	/^#define LL_FOREACH(/;"	d
LL_FOREACH2	lib/uthash/include/utlist.h	/^#define LL_FOREACH2(/;"	d
LL_FOREACH2	lib/uthash/src/utlist.h	/^#define LL_FOREACH2(/;"	d
LL_FOREACH_SAFE	lib/uthash/include/utlist.h	/^#define LL_FOREACH_SAFE(/;"	d
LL_FOREACH_SAFE	lib/uthash/src/utlist.h	/^#define LL_FOREACH_SAFE(/;"	d
LL_FOREACH_SAFE2	lib/uthash/include/utlist.h	/^#define LL_FOREACH_SAFE2(/;"	d
LL_FOREACH_SAFE2	lib/uthash/src/utlist.h	/^#define LL_FOREACH_SAFE2(/;"	d
LL_INSERT_INORDER	lib/uthash/include/utlist.h	/^#define LL_INSERT_INORDER(/;"	d
LL_INSERT_INORDER	lib/uthash/src/utlist.h	/^#define LL_INSERT_INORDER(/;"	d
LL_INSERT_INORDER2	lib/uthash/include/utlist.h	/^#define LL_INSERT_INORDER2(/;"	d
LL_INSERT_INORDER2	lib/uthash/src/utlist.h	/^#define LL_INSERT_INORDER2(/;"	d
LL_LOWER_BOUND	lib/uthash/include/utlist.h	/^#define LL_LOWER_BOUND(/;"	d
LL_LOWER_BOUND	lib/uthash/src/utlist.h	/^#define LL_LOWER_BOUND(/;"	d
LL_LOWER_BOUND2	lib/uthash/include/utlist.h	/^#define LL_LOWER_BOUND2(/;"	d
LL_LOWER_BOUND2	lib/uthash/src/utlist.h	/^#define LL_LOWER_BOUND2(/;"	d
LL_PREPEND	lib/uthash/include/utlist.h	/^#define LL_PREPEND(/;"	d
LL_PREPEND	lib/uthash/src/utlist.h	/^#define LL_PREPEND(/;"	d
LL_PREPEND2	lib/uthash/include/utlist.h	/^#define LL_PREPEND2(/;"	d
LL_PREPEND2	lib/uthash/src/utlist.h	/^#define LL_PREPEND2(/;"	d
LL_PREPEND_ELEM	lib/uthash/include/utlist.h	/^#define LL_PREPEND_ELEM(/;"	d
LL_PREPEND_ELEM	lib/uthash/src/utlist.h	/^#define LL_PREPEND_ELEM(/;"	d
LL_PREPEND_ELEM2	lib/uthash/include/utlist.h	/^#define LL_PREPEND_ELEM2(/;"	d
LL_PREPEND_ELEM2	lib/uthash/src/utlist.h	/^#define LL_PREPEND_ELEM2(/;"	d
LL_REPLACE_ELEM	lib/uthash/include/utlist.h	/^#define LL_REPLACE_ELEM(/;"	d
LL_REPLACE_ELEM	lib/uthash/src/utlist.h	/^#define LL_REPLACE_ELEM(/;"	d
LL_REPLACE_ELEM2	lib/uthash/include/utlist.h	/^#define LL_REPLACE_ELEM2(/;"	d
LL_REPLACE_ELEM2	lib/uthash/src/utlist.h	/^#define LL_REPLACE_ELEM2(/;"	d
LL_SEARCH	lib/uthash/include/utlist.h	/^#define LL_SEARCH(/;"	d
LL_SEARCH	lib/uthash/src/utlist.h	/^#define LL_SEARCH(/;"	d
LL_SEARCH2	lib/uthash/include/utlist.h	/^#define LL_SEARCH2(/;"	d
LL_SEARCH2	lib/uthash/src/utlist.h	/^#define LL_SEARCH2(/;"	d
LL_SEARCH_SCALAR	lib/uthash/include/utlist.h	/^#define LL_SEARCH_SCALAR(/;"	d
LL_SEARCH_SCALAR	lib/uthash/src/utlist.h	/^#define LL_SEARCH_SCALAR(/;"	d
LL_SEARCH_SCALAR2	lib/uthash/include/utlist.h	/^#define LL_SEARCH_SCALAR2(/;"	d
LL_SEARCH_SCALAR2	lib/uthash/src/utlist.h	/^#define LL_SEARCH_SCALAR2(/;"	d
LL_SORT	lib/uthash/include/utlist.h	/^#define LL_SORT(/;"	d
LL_SORT	lib/uthash/src/utlist.h	/^#define LL_SORT(/;"	d
LL_SORT2	lib/uthash/include/utlist.h	/^#define LL_SORT2(/;"	d
LL_SORT2	lib/uthash/src/utlist.h	/^#define LL_SORT2(/;"	d
LOAD_FACTOR	lib/flecs/flecs.c	/^#define LOAD_FACTOR /;"	d	file:
LOAD_FACTOR	lib/flecs/src/datastructures/map.c	/^#define LOAD_FACTOR /;"	d	file:
LOG_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/log/include/log/bake_config.h	/^#define LOG_BAKE_CONFIG_H$/;"	d
LOG_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/log/include/log/bake_config.h	/^#define LOG_BAKE_CONFIG_H$/;"	d
LOG_H	lib/flecs/test/custom_builds/c/log/include/log.h	/^#define LOG_H$/;"	d
LOG_H	lib/flecs/test/custom_builds/cpp/log/include/log.h	/^#define LOG_H$/;"	d
LOOPS	lib/uthash/tests/threads/test1.c	/^#define LOOPS /;"	d	file:
LOOPS	lib/uthash/tests/threads/test2.c	/^#define LOOPS /;"	d	file:
Length	lib/flecs/flecs.h	/^struct Length { };$/;"	s	struct:flecs::units
Length	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Length { };$/;"	s	struct:flecs::units
Lettuce	lib/flecs/examples/c/reflection/basics_bitmask/src/main.c	/^static const uint32_t Lettuce = 0x2;$/;"	v	typeref:typename:const uint32_t	file:
Lettuce	lib/flecs/examples/cpp/reflection/basics_bitmask/src/main.cpp	/^    static constexpr uint32_t Lettuce = 0x2;$/;"	m	struct:Toppings	typeref:typename:uint32_t	file:
Likes	lib/flecs/examples/cpp/rules/cyclic_variables/src/main.cpp	/^struct Likes { };$/;"	s	file:
Likes	lib/flecs/examples/cpp/rules/facts/src/main.cpp	/^struct Likes { };$/;"	s	file:
Likes	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Likes { };$/;"	s	function:Entity_with_after_builder_method	file:
Likes	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Likes { };$/;"	s	function:Entity_with_before_builder_method	file:
Likes	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Likes { };$/;"	s	function:Entity_with_relation_type_self	file:
Likes	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    struct Likes { };$/;"	s	function:FilterBuilder_add_pair_w_rel_type	file:
Likes	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    struct Likes { };$/;"	s	function:FilterBuilder_explicit_term_w_pair_type	file:
Likes	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    struct Likes { };$/;"	s	function:Pairs_has_tag_w_object	file:
Likes	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Likes { };$/;"	s	function:QueryBuilder_add_pair_w_rel_type	file:
Likes	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Likes { };$/;"	s	function:QueryBuilder_explicit_term_w_pair_type	file:
Likes	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Likes { };$/;"	s	function:RuleBuilder_2_pair_terms_w_var	file:
Likes	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Likes { };$/;"	s	function:RuleBuilder_pair_term_w_var	file:
Likes	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Likes { };$/;"	s	function:RuleBuilder_set_2_vars	file:
Likes	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Likes { };$/;"	s	function:RuleBuilder_set_2_vars_by_name	file:
Likes	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Likes { };$/;"	s	function:RuleBuilder_set_var	file:
Likes	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Likes { };$/;"	s	function:RuleBuilder_set_var_by_name	file:
Likes	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Likes { };$/;"	s	function:RuleBuilder_type_pair_term	file:
Likes	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Likes { };$/;"	s	function:World_with_relation_object_type	file:
Likes	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Likes { };$/;"	s	function:World_with_relation_type	file:
Line	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^} Line;$/;"	t	typeref:struct:__anonab3664440208	file:
Line	lib/flecs/examples/cpp/reflection/nested_set_member/src/main.cpp	/^struct Line {$/;"	s	file:
Line	lib/flecs/examples/cpp/reflection/nested_struct/src/main.cpp	/^struct Line {$/;"	s	file:
Line	lib/flecs/test/api/src/Plecs.c	/^    } Line;$/;"	t	function:Plecs_struct_type_w_default_child_component_nested_member	typeref:struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08	file:
Line	lib/flecs/test/api/src/Plecs.c	/^    } Line;$/;"	t	function:Plecs_type_and_assign_in_plecs_nested_member	typeref:struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808	file:
Link	lib/flecs/flecs.h	/^static const flecs::entity_t Link = EcsDocLink;$/;"	v	namespace:flecs::doc	typeref:typename:const flecs::entity_t
Link	lib/flecs/include/flecs/addons/cpp/mixins/doc/decl.hpp	/^static const flecs::entity_t Link = EcsDocLink;$/;"	v	namespace:flecs::doc	typeref:typename:const flecs::entity_t
List	lib/libflint/include/lflinkedlist.h	/^} List;$/;"	t	typeref:struct:__anoncabdecbc0108
ListNode	lib/libflint/include/lflinkedlist.h	/^typedef struct ListNode {$/;"	s
ListNode	lib/libflint/include/lflinkedlist.h	/^} ListNode;$/;"	t	typeref:struct:ListNode
Local	lib/flecs/examples/cpp/queries/hierarchy/src/main.cpp	/^struct Local { };$/;"	s	file:
LocatedIn	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^struct LocatedIn { };$/;"	s	file:
Lookup_change_name_of_existing	lib/flecs/test/api/src/Lookup.c	/^void Lookup_change_name_of_existing() {$/;"	f	typeref:typename:void
Lookup_defer_set_name	lib/flecs/test/api/src/Lookup.c	/^void Lookup_defer_set_name() {$/;"	f	typeref:typename:void
Lookup_defer_set_same_name	lib/flecs/test/api/src/Lookup.c	/^void Lookup_defer_set_same_name() {$/;"	f	typeref:typename:void
Lookup_define_duplicate_alias	lib/flecs/test/api/src/Lookup.c	/^void Lookup_define_duplicate_alias() {$/;"	f	typeref:typename:void
Lookup_get_name	lib/flecs/test/api/src/Lookup.c	/^void Lookup_get_name() {$/;"	f	typeref:typename:void
Lookup_get_name_from_empty	lib/flecs/test/api/src/Lookup.c	/^void Lookup_get_name_from_empty() {$/;"	f	typeref:typename:void
Lookup_get_name_no_name	lib/flecs/test/api/src/Lookup.c	/^void Lookup_get_name_no_name() {$/;"	f	typeref:typename:void
Lookup_lookup	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup() {$/;"	f	typeref:typename:void
Lookup_lookup_alias	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_alias() {$/;"	f	typeref:typename:void
Lookup_lookup_any	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_any() {$/;"	f	typeref:typename:void
Lookup_lookup_by_id	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_by_id() {$/;"	f	typeref:typename:void
Lookup_lookup_child	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_child() {$/;"	f	typeref:typename:void
Lookup_lookup_component	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_component() {$/;"	f	typeref:typename:void
Lookup_lookup_core	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_core() {$/;"	f	typeref:typename:void
Lookup_lookup_core_from_stage	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_core_from_stage() {$/;"	f	typeref:typename:void
Lookup_lookup_custom_search_path	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_custom_search_path() {$/;"	f	typeref:typename:void
Lookup_lookup_custom_search_path_from_stage	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_custom_search_path_from_stage() {$/;"	f	typeref:typename:void
Lookup_lookup_custom_search_path_n_elems	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_custom_search_path_n_elems() {$/;"	f	typeref:typename:void
Lookup_lookup_from_scope_staged	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_from_scope_staged() {$/;"	f	typeref:typename:void
Lookup_lookup_name_w_digit	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_name_w_digit() {$/;"	f	typeref:typename:void
Lookup_lookup_not_found	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_not_found() {$/;"	f	typeref:typename:void
Lookup_lookup_null	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_null() {$/;"	f	typeref:typename:void
Lookup_lookup_path_this	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_path_this() {$/;"	f	typeref:typename:void
Lookup_lookup_path_this_from_scope	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_path_this_from_scope() {$/;"	f	typeref:typename:void
Lookup_lookup_path_w_digit	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_path_w_digit() {$/;"	f	typeref:typename:void
Lookup_lookup_path_wildcard	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_path_wildcard() {$/;"	f	typeref:typename:void
Lookup_lookup_path_wildcard_from_scope	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_path_wildcard_from_scope() {$/;"	f	typeref:typename:void
Lookup_lookup_recycled_by_id	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_recycled_by_id() {$/;"	f	typeref:typename:void
Lookup_lookup_scoped_alias	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_scoped_alias() {$/;"	f	typeref:typename:void
Lookup_lookup_symbol_by_id	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_symbol_by_id() {$/;"	f	typeref:typename:void
Lookup_lookup_symbol_null	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_symbol_null() {$/;"	f	typeref:typename:void
Lookup_lookup_symbol_w_digit	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_symbol_w_digit() {$/;"	f	typeref:typename:void
Lookup_lookup_this	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_this() {$/;"	f	typeref:typename:void
Lookup_lookup_w_null_name	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_w_null_name() {$/;"	f	typeref:typename:void
Lookup_lookup_wildcard	lib/flecs/test/api/src/Lookup.c	/^void Lookup_lookup_wildcard() {$/;"	f	typeref:typename:void
Lookup_resolve_builtin_symbols	lib/flecs/test/api/src/Lookup.c	/^void Lookup_resolve_builtin_symbols() {$/;"	f	typeref:typename:void
Lookup_set_name_of_existing	lib/flecs/test/api/src/Lookup.c	/^void Lookup_set_name_of_existing() {$/;"	f	typeref:typename:void
Lookup_set_same_name	lib/flecs/test/api/src/Lookup.c	/^void Lookup_set_same_name() {$/;"	f	typeref:typename:void
Lookup_setup	lib/flecs/test/api/src/Lookup.c	/^void Lookup_setup() {$/;"	f	typeref:typename:void
Lookup_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Lookup_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
LuminousIntensity	lib/flecs/flecs.h	/^struct LuminousIntensity { };$/;"	s	struct:flecs::units
LuminousIntensity	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct LuminousIntensity { };$/;"	s	struct:flecs::units
MAINMENU_SCREEN_H	include/screens/mainmenu.h	/^#define MAINMENU_SCREEN_H$/;"	d
MAPPING_GENERATORS_H	include/mapping/generators.h	/^#define MAPPING_GENERATORS_H$/;"	d
MAPPING_MAP_H	include/mapping/map.h	/^#define MAPPING_MAP_H$/;"	d
MAPTYPE_TEST	include/mapping/map.h	/^    MAPTYPE_TEST,$/;"	e	enum:MapType
MAX_CACHE_SIZE	lib/uthash/tests/test65.c	/^#define MAX_CACHE_SIZE /;"	d	file:
MAX_ENTITIES	lib/flecs/test/api/include/api.h	/^#define MAX_ENTITIES /;"	d
MAX_INVOCATIONS	lib/flecs/test/api/include/api.h	/^#define MAX_INVOCATIONS /;"	d
MAX_PRECISION	lib/flecs/flecs.c	/^#define MAX_PRECISION	/;"	d	file:
MAX_PRECISION	lib/flecs/src/datastructures/strbuf.c	/^#define MAX_PRECISION	/;"	d	file:
MAX_RANDOM_ENTRIES	lib/uthash/tests/lru_cache/main.c	/^#define MAX_RANDOM_ENTRIES	/;"	d	file:
MAX_SYS_COLUMNS	lib/flecs/test/api/include/api.h	/^#define MAX_SYS_COLUMNS /;"	d
MESSAGE_LOG_HEIGHT	src/screens/gamescreen.c	/^#define MESSAGE_LOG_HEIGHT /;"	d	file:
MESSAGE_LOG_Y_START	src/screens/gamescreen.c	/^#define MESSAGE_LOG_Y_START /;"	d	file:
META_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/meta/include/meta/bake_config.h	/^#define META_BAKE_CONFIG_H$/;"	d
META_BAKE_CONFIG_H	lib/flecs/test/meta/include/meta/bake_config.h	/^#define META_BAKE_CONFIG_H$/;"	d
META_C_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/meta_c/include/meta_c/bake_config.h	/^#define META_C_BAKE_CONFIG_H$/;"	d
META_C_H	lib/flecs/test/custom_builds/c/meta_c/include/meta_c.h	/^#define META_C_H$/;"	d
META_H	lib/flecs/test/custom_builds/c/meta/include/meta.h	/^#define META_H$/;"	d
META_H	lib/flecs/test/meta/include/meta.h	/^#define META_H$/;"	d
MKGITIGN	lib/uthash/tests/Makefile	/^MKGITIGN = [ -f "$(GITIGN)" ] || echo "$(GITIGN)" > $(GITIGN); grep -q '^\\$@$$' $(GITIGN) || ec/;"	m
MODE	lib/uthash/tests/keystat.c	/^#define MODE /;"	d	file:
MODULE_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/module/include/module/bake_config.h	/^#define MODULE_BAKE_CONFIG_H$/;"	d
MODULE_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/module/include/module/bake_config.h	/^#define MODULE_BAKE_CONFIG_H$/;"	d
MODULE_H	lib/flecs/test/custom_builds/c/module/include/module.h	/^#define MODULE_H$/;"	d
MODULE_H	lib/flecs/test/custom_builds/cpp/module/include/module.h	/^#define MODULE_H$/;"	d
MUTATE_ENTITY_BAKE_CONFIG_H	lib/flecs/examples/c/systems/mutate_entity/include/mutate_entity/bake_config.h	/^#define MUTATE_ENTITY_BAKE_CONFIG_H$/;"	d
MUTATE_ENTITY_BAKE_CONFIG_H	lib/flecs/examples/cpp/systems/mutate_entity/include/mutate_entity/bake_config.h	/^#define MUTATE_ENTITY_BAKE_CONFIG_H$/;"	d
MUTATE_ENTITY_H	lib/flecs/examples/c/systems/mutate_entity/include/mutate_entity.h	/^#define MUTATE_ENTITY_H$/;"	d
MUTATE_ENTITY_H	lib/flecs/examples/cpp/systems/mutate_entity/include/mutate_entity.h	/^#define MUTATE_ENTITY_H$/;"	d
MUTATE_ENTITY_HANDLE_BAKE_CONFIG_H	lib/flecs/examples/cpp/systems/mutate_entity_handle/include/mutate_entity_handle/bake_config.h	/^#define MUTATE_ENTITY_HANDLE_BAKE_CONFIG_H$/;"	d
MUTATE_ENTITY_HANDLE_H	lib/flecs/examples/cpp/systems/mutate_entity_handle/include/mutate_entity_handle.h	/^#define MUTATE_ENTITY_HANDLE_H$/;"	d
ManualSystem	lib/flecs/test/api/src/Internals.c	/^void ManualSystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Map	include/mapping/map.h	/^struct Map {$/;"	s
MapType	include/mapping/map.h	/^enum MapType {$/;"	g
Map_count	lib/flecs/test/collections/src/Map.c	/^void Map_count() {$/;"	f	typeref:typename:void
Map_count_empty	lib/flecs/test/collections/src/Map.c	/^void Map_count_empty() {$/;"	f	typeref:typename:void
Map_ensure	lib/flecs/test/collections/src/Map.c	/^void Map_ensure() {$/;"	f	typeref:typename:void
Map_get	lib/flecs/test/collections/src/Map.c	/^void Map_get() {$/;"	f	typeref:typename:void
Map_get_all	lib/flecs/test/collections/src/Map.c	/^void Map_get_all() {$/;"	f	typeref:typename:void
Map_get_empty	lib/flecs/test/collections/src/Map.c	/^void Map_get_empty() {$/;"	f	typeref:typename:void
Map_get_unknown	lib/flecs/test/collections/src/Map.c	/^void Map_get_unknown() {$/;"	f	typeref:typename:void
Map_grow	lib/flecs/test/collections/src/Map.c	/^void Map_grow() {$/;"	f	typeref:typename:void
Map_iter	lib/flecs/test/collections/src/Map.c	/^void Map_iter() {$/;"	f	typeref:typename:void
Map_iter_empty	lib/flecs/test/collections/src/Map.c	/^void Map_iter_empty() {$/;"	f	typeref:typename:void
Map_iter_null	lib/flecs/test/collections/src/Map.c	/^void Map_iter_null() {$/;"	f	typeref:typename:void
Map_iter_zero_buckets	lib/flecs/test/collections/src/Map.c	/^void Map_iter_zero_buckets() {$/;"	f	typeref:typename:void
Map_remove	lib/flecs/test/collections/src/Map.c	/^void Map_remove() {$/;"	f	typeref:typename:void
Map_remove_1_from_n_in_bucket	lib/flecs/test/collections/src/Map.c	/^void Map_remove_1_from_n_in_bucket() {$/;"	f	typeref:typename:void
Map_remove_empty	lib/flecs/test/collections/src/Map.c	/^void Map_remove_empty() {$/;"	f	typeref:typename:void
Map_remove_empty_no_buckets	lib/flecs/test/collections/src/Map.c	/^void Map_remove_empty_no_buckets() {$/;"	f	typeref:typename:void
Map_remove_from_empty_bucket	lib/flecs/test/collections/src/Map.c	/^void Map_remove_from_empty_bucket() {$/;"	f	typeref:typename:void
Map_remove_unknown	lib/flecs/test/collections/src/Map.c	/^void Map_remove_unknown() {$/;"	f	typeref:typename:void
Map_set_overwrite	lib/flecs/test/collections/src/Map.c	/^void Map_set_overwrite() {$/;"	f	typeref:typename:void
Map_set_rehash	lib/flecs/test/collections/src/Map.c	/^void Map_set_rehash() {$/;"	f	typeref:typename:void
Map_set_size	lib/flecs/test/collections/src/Map.c	/^void Map_set_size() {$/;"	f	typeref:typename:void
Map_set_size_0	lib/flecs/test/collections/src/Map.c	/^void Map_set_size_0() {$/;"	f	typeref:typename:void
Map_set_zero_buckets	lib/flecs/test/collections/src/Map.c	/^void Map_set_zero_buckets() {$/;"	f	typeref:typename:void
Map_setup	lib/flecs/test/collections/src/Map.c	/^void Map_setup() {$/;"	f	typeref:typename:void
Map_testcases	lib/flecs/test/collections/src/main.c	/^bake_test_case Map_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Marksman	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^struct Marksman : RangedUnit { };$/;"	s	file:
Marksman	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct Marksman : RangedUnit { };$/;"	s	file:
Mass	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^} Mass;$/;"	t	typeref:struct:__anon7b79ffa80208	file:
Mass	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^} Mass;$/;"	t	typeref:struct:__anon70a3d52e0208	file:
Mass	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^struct Mass {$/;"	s	file:
Mass	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^struct Mass {$/;"	s	file:
Mass	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^struct Mass {$/;"	s	file:
Mass	lib/flecs/flecs.h	/^struct Mass { };$/;"	s	struct:flecs::units
Mass	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Mass { };$/;"	s	struct:flecs::units
Mass	lib/flecs/test/api/include/api.h	/^typedef float Mass;$/;"	t	typeref:typename:float
Mass	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct Mass {$/;"	s
Mass	lib/flecs/test/meta/include/meta.h	/^} Mass;$/;"	t	typeref:struct:__anon8e06701c0208
MatchSwitch	lib/flecs/test/api/src/Switch.c	/^void MatchSwitch(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Mebi	lib/flecs/flecs.h	/^struct Mebi { };$/;"	s	struct:flecs::units
Mebi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Mebi { };$/;"	s	struct:flecs::units
MebiBytes	lib/flecs/flecs.h	/^struct MebiBytes { };$/;"	s	struct:flecs::units::data
MebiBytes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MebiBytes { };$/;"	s	struct:flecs::units::data
Mega	lib/flecs/flecs.h	/^struct Mega { };$/;"	s	struct:flecs::units
Mega	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Mega { };$/;"	s	struct:flecs::units
MegaBits	lib/flecs/flecs.h	/^struct MegaBits { };$/;"	s	struct:flecs::units::data
MegaBits	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MegaBits { };$/;"	s	struct:flecs::units::data
MegaBitsPerSecond	lib/flecs/flecs.h	/^struct MegaBitsPerSecond { };$/;"	s	struct:flecs::units::datarate
MegaBitsPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MegaBitsPerSecond { };$/;"	s	struct:flecs::units::datarate
MegaBytes	lib/flecs/flecs.h	/^struct MegaBytes { };$/;"	s	struct:flecs::units::data
MegaBytes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MegaBytes { };$/;"	s	struct:flecs::units::data
MegaBytesPerSecond	lib/flecs/flecs.h	/^struct MegaBytesPerSecond { };$/;"	s	struct:flecs::units::datarate
MegaBytesPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MegaBytesPerSecond { };$/;"	s	struct:flecs::units::datarate
MeleeUnit	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^struct MeleeUnit : CombatUnit { };$/;"	s	file:
MeleeUnit	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct MeleeUnit : CombatUnit { };$/;"	s	file:
Member	lib/flecs/flecs.h	/^using Member = EcsMember;$/;"	t	namespace:flecs	typeref:typename:EcsMember
Member	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using Member = EcsMember;$/;"	t	namespace:flecs	typeref:typename:EcsMember
MetaType	lib/flecs/flecs.h	/^using MetaType = EcsMetaType;$/;"	t	namespace:flecs	typeref:typename:EcsMetaType
MetaType	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using MetaType = EcsMetaType;$/;"	t	namespace:flecs	typeref:typename:EcsMetaType
MetaTypeSerialized	lib/flecs/flecs.h	/^using MetaTypeSerialized = EcsMetaTypeSerialized;$/;"	t	namespace:flecs	typeref:typename:EcsMetaTypeSerialized
MetaTypeSerialized	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using MetaTypeSerialized = EcsMetaTypeSerialized;$/;"	t	namespace:flecs	typeref:typename:EcsMetaTypeSerialized
MetaUtils_enum_nospace	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_enum_nospace() {$/;"	f	typeref:typename:void
MetaUtils_struct_nospace	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_nospace() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_2_array_3_i32	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_2_array_3_i32() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_2_bool	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_2_bool() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_2_char	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_2_char() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_2_f32	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_2_f32() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_2_f64	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_2_f64() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_2_i32	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_2_i32() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_2_string	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_2_string() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_3_entities	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_3_entities() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_3_enum	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_3_enum() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_3_enum_multiline	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_3_enum_multiline() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_3_enum_w_assignment	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_3_enum_w_assignment() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_4_bitmask	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_4_bitmask() {$/;"	f	typeref:typename:void
MetaUtils_struct_w_nested	lib/flecs/test/meta/src/MetaUtils.c	/^void MetaUtils_struct_w_nested() {$/;"	f	typeref:typename:void
MetaUtils_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case MetaUtils_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Meta_nested_struct	lib/flecs/test/cpp_api/src/Meta.cpp	/^void Meta_nested_struct() {$/;"	f	typeref:typename:void
Meta_struct	lib/flecs/test/cpp_api/src/Meta.cpp	/^void Meta_struct() {$/;"	f	typeref:typename:void
Meta_struct_w_portable_type	lib/flecs/test/cpp_api/src/Meta.cpp	/^void Meta_struct_w_portable_type() {$/;"	f	typeref:typename:void
Meta_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Meta_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Meta_unit_w_over	lib/flecs/test/cpp_api/src/Meta.cpp	/^void Meta_unit_w_over() {$/;"	f	typeref:typename:void
Meta_unit_w_prefix	lib/flecs/test/cpp_api/src/Meta.cpp	/^void Meta_unit_w_prefix() {$/;"	f	typeref:typename:void
Meta_unit_w_quantity	lib/flecs/test/cpp_api/src/Meta.cpp	/^void Meta_unit_w_quantity() {$/;"	f	typeref:typename:void
Meta_units	lib/flecs/test/cpp_api/src/Meta.cpp	/^void Meta_units() {$/;"	f	typeref:typename:void
Meters	lib/flecs/flecs.h	/^struct Meters { };$/;"	s	struct:flecs::units::length
Meters	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Meters { };$/;"	s	struct:flecs::units::length
MetersPerSecond	lib/flecs/flecs.h	/^struct MetersPerSecond { };$/;"	s	struct:flecs::units::speed
MetersPerSecond	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MetersPerSecond { };$/;"	s	struct:flecs::units::speed
Micro	lib/flecs/flecs.h	/^struct Micro { };$/;"	s	struct:flecs::units
Micro	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Micro { };$/;"	s	struct:flecs::units
MicroMeters	lib/flecs/flecs.h	/^struct MicroMeters { };$/;"	s	struct:flecs::units::length
MicroMeters	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MicroMeters { };$/;"	s	struct:flecs::units::length
MicroSeconds	lib/flecs/flecs.h	/^struct MicroSeconds { };$/;"	s	struct:flecs::units::duration
MicroSeconds	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MicroSeconds { };$/;"	s	struct:flecs::units::duration
Miles	lib/flecs/flecs.h	/^struct Miles { };$/;"	s	struct:flecs::units::length
Miles	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Miles { };$/;"	s	struct:flecs::units::length
MilesPerHour	lib/flecs/flecs.h	/^struct MilesPerHour { };$/;"	s	struct:flecs::units::speed
MilesPerHour	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MilesPerHour { };$/;"	s	struct:flecs::units::speed
Milli	lib/flecs/flecs.h	/^struct Milli { };$/;"	s	struct:flecs::units
Milli	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Milli { };$/;"	s	struct:flecs::units
MilliMeters	lib/flecs/flecs.h	/^struct MilliMeters { };$/;"	s	struct:flecs::units::length
MilliMeters	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MilliMeters { };$/;"	s	struct:flecs::units::length
MilliSeconds	lib/flecs/flecs.h	/^struct MilliSeconds { };$/;"	s	struct:flecs::units::duration
MilliSeconds	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct MilliSeconds { };$/;"	s	struct:flecs::units::duration
Minutes	lib/flecs/flecs.h	/^struct Minutes { };$/;"	s	struct:flecs::units::duration
Minutes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Minutes { };$/;"	s	struct:flecs::units::duration
Misc_app_run	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_app_run() {$/;"	f	typeref:typename:void
Misc_app_run_target_fps	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_app_run_target_fps() {$/;"	f	typeref:typename:void
Misc_c_macros	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_c_macros() {$/;"	f	typeref:typename:void
Misc_nullptr_string_compare	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_nullptr_string_compare() {$/;"	f	typeref:typename:void
Misc_nullptr_string_compare_nullptr	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_nullptr_string_compare_nullptr() {$/;"	f	typeref:typename:void
Misc_setup	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_setup() {$/;"	f	typeref:typename:void
Misc_string_compare_nullptr	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_string_compare_nullptr() {$/;"	f	typeref:typename:void
Misc_string_compare_w_char_ptr	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_string_compare_w_char_ptr() {$/;"	f	typeref:typename:void
Misc_string_compare_w_char_ptr_length_diff	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_string_compare_w_char_ptr_length_diff() {$/;"	f	typeref:typename:void
Misc_string_compare_w_string	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_string_compare_w_string() {$/;"	f	typeref:typename:void
Misc_string_view_compare_w_char_ptr	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_string_view_compare_w_char_ptr() {$/;"	f	typeref:typename:void
Misc_string_view_compare_w_string	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Misc_string_view_compare_w_string() {$/;"	f	typeref:typename:void
Misc_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Misc_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
MixinIterable_iter_filter	lib/flecs/test/api/src/MixinIterable.c	/^void MixinIterable_iter_filter() {$/;"	f	typeref:typename:void
MixinIterable_iter_filter_w_filter	lib/flecs/test/api/src/MixinIterable.c	/^void MixinIterable_iter_filter_w_filter() {$/;"	f	typeref:typename:void
MixinIterable_iter_query	lib/flecs/test/api/src/MixinIterable.c	/^void MixinIterable_iter_query() {$/;"	f	typeref:typename:void
MixinIterable_iter_query_w_filter	lib/flecs/test/api/src/MixinIterable.c	/^void MixinIterable_iter_query_w_filter() {$/;"	f	typeref:typename:void
MixinIterable_iter_rule	lib/flecs/test/api/src/MixinIterable.c	/^void MixinIterable_iter_rule() {$/;"	f	typeref:typename:void
MixinIterable_iter_rule_w_filter	lib/flecs/test/api/src/MixinIterable.c	/^void MixinIterable_iter_rule_w_filter() {$/;"	f	typeref:typename:void
MixinIterable_iter_world	lib/flecs/test/api/src/MixinIterable.c	/^void MixinIterable_iter_world() {$/;"	f	typeref:typename:void
MixinIterable_iter_world_w_filter	lib/flecs/test/api/src/MixinIterable.c	/^void MixinIterable_iter_world_w_filter() {$/;"	f	typeref:typename:void
MixinIterable_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case MixinIterable_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Module	lib/flecs/flecs.h	/^static const flecs::entity_t Module = EcsModule;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Module	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Module = EcsModule;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Module_component_redefinition_outside_module	lib/flecs/test/cpp_api/src/Module.cpp	/^void Module_component_redefinition_outside_module() {$/;"	f	typeref:typename:void
Module_dtor_on_fini	lib/flecs/test/cpp_api/src/Module.cpp	/^void Module_dtor_on_fini() {$/;"	f	typeref:typename:void
Module_import	lib/flecs/test/cpp_api/src/Module.cpp	/^void Module_import() {$/;"	f	typeref:typename:void
Module_lookup_from_scope	lib/flecs/test/cpp_api/src/Module.cpp	/^void Module_lookup_from_scope() {$/;"	f	typeref:typename:void
Module_module_tag_on_namespace	lib/flecs/test/cpp_api/src/Module.cpp	/^void Module_module_tag_on_namespace() {$/;"	f	typeref:typename:void
Module_nested_module	lib/flecs/test/cpp_api/src/Module.cpp	/^void Module_nested_module() {$/;"	f	typeref:typename:void
Module_nested_type_module	lib/flecs/test/cpp_api/src/Module.cpp	/^void Module_nested_type_module() {$/;"	f	typeref:typename:void
Module_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Module_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Module_w_dtor	lib/flecs/test/cpp_api/src/Module.cpp	/^    Module_w_dtor(flecs::world& world) {$/;"	f	class:Module_w_dtor	file:
Module_w_dtor	lib/flecs/test/cpp_api/src/Module.cpp	/^class Module_w_dtor {$/;"	c	file:
Modules_import_again	lib/flecs/test/api/src/Modules.c	/^void Modules_import_again() {$/;"	f	typeref:typename:void
Modules_import_module_from_system	lib/flecs/test/api/src/Modules.c	/^void Modules_import_module_from_system() {$/;"	f	typeref:typename:void
Modules_lookup_by_symbol	lib/flecs/test/api/src/Modules.c	/^void Modules_lookup_by_symbol() {$/;"	f	typeref:typename:void
Modules_module_tag_on_namespace	lib/flecs/test/api/src/Modules.c	/^void Modules_module_tag_on_namespace() {$/;"	f	typeref:typename:void
Modules_module_tag_on_namespace_on_add	lib/flecs/test/api/src/Modules.c	/^void Modules_module_tag_on_namespace_on_add() {$/;"	f	typeref:typename:void
Modules_module_tag_on_namespace_on_add_2_levels	lib/flecs/test/api/src/Modules.c	/^void Modules_module_tag_on_namespace_on_add_2_levels() {$/;"	f	typeref:typename:void
Modules_name_prefix_component	lib/flecs/test/api/src/Modules.c	/^void Modules_name_prefix_component() {$/;"	f	typeref:typename:void
Modules_name_prefix_entity	lib/flecs/test/api/src/Modules.c	/^void Modules_name_prefix_entity() {$/;"	f	typeref:typename:void
Modules_name_prefix_pipeline	lib/flecs/test/api/src/Modules.c	/^void Modules_name_prefix_pipeline() {$/;"	f	typeref:typename:void
Modules_name_prefix_prefab	lib/flecs/test/api/src/Modules.c	/^void Modules_name_prefix_prefab() {$/;"	f	typeref:typename:void
Modules_name_prefix_system	lib/flecs/test/api/src/Modules.c	/^void Modules_name_prefix_system() {$/;"	f	typeref:typename:void
Modules_name_prefix_tag	lib/flecs/test/api/src/Modules.c	/^void Modules_name_prefix_tag() {$/;"	f	typeref:typename:void
Modules_name_prefix_trigger	lib/flecs/test/api/src/Modules.c	/^void Modules_name_prefix_trigger() {$/;"	f	typeref:typename:void
Modules_name_prefix_underscore	lib/flecs/test/api/src/Modules.c	/^void Modules_name_prefix_underscore() {$/;"	f	typeref:typename:void
Modules_nested_module	lib/flecs/test/api/src/Modules.c	/^void Modules_nested_module() {$/;"	f	typeref:typename:void
Modules_scoped_component	lib/flecs/test/api/src/Modules.c	/^void Modules_scoped_component() {$/;"	f	typeref:typename:void
Modules_scoped_entity	lib/flecs/test/api/src/Modules.c	/^void Modules_scoped_entity() {$/;"	f	typeref:typename:void
Modules_scoped_system	lib/flecs/test/api/src/Modules.c	/^void Modules_scoped_system() {$/;"	f	typeref:typename:void
Modules_scoped_tag	lib/flecs/test/api/src/Modules.c	/^void Modules_scoped_tag() {$/;"	f	typeref:typename:void
Modules_setup	lib/flecs/test/api/src/Modules.c	/^void Modules_setup() {$/;"	f	typeref:typename:void
Modules_simple_module	lib/flecs/test/api/src/Modules.c	/^void Modules_simple_module() {$/;"	f	typeref:typename:void
Modules_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Modules_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Mole	lib/flecs/flecs.h	/^struct Mole { };$/;"	s	struct:flecs::units::amount
Mole	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Mole { };$/;"	s	struct:flecs::units::amount
Monitor	lib/flecs/flecs.h	/^static const flecs::entity_t Monitor = EcsMonitor;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Monitor	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Monitor = EcsMonitor;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Monitor	lib/flecs/test/api/src/Monitor.c	/^static void Monitor(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Monitor_1_comp	lib/flecs/test/api/src/Monitor.c	/^void Monitor_1_comp() {$/;"	f	typeref:typename:void
Monitor_1_comp_1_not	lib/flecs/test/api/src/Monitor.c	/^void Monitor_1_comp_1_not() {$/;"	f	typeref:typename:void
Monitor_1_comp_1_parent	lib/flecs/test/api/src/Monitor.c	/^void Monitor_1_comp_1_parent() {$/;"	f	typeref:typename:void
Monitor_1_comp_prefab_add	lib/flecs/test/api/src/Monitor.c	/^void Monitor_1_comp_prefab_add() {$/;"	f	typeref:typename:void
Monitor_1_comp_prefab_new	lib/flecs/test/api/src/Monitor.c	/^void Monitor_1_comp_prefab_new() {$/;"	f	typeref:typename:void
Monitor_1_parent	lib/flecs/test/api/src/Monitor.c	/^void Monitor_1_parent() {$/;"	f	typeref:typename:void
Monitor_2_comps	lib/flecs/test/api/src/Monitor.c	/^void Monitor_2_comps() {$/;"	f	typeref:typename:void
Monitor_monitor_at_fini	lib/flecs/test/api/src/Monitor.c	/^void Monitor_monitor_at_fini() {$/;"	f	typeref:typename:void
Monitor_monitor_w_and	lib/flecs/test/api/src/Monitor.c	/^void Monitor_monitor_w_and() {$/;"	f	typeref:typename:void
Monitor_monitor_w_not	lib/flecs/test/api/src/Monitor.c	/^void Monitor_monitor_w_not() {$/;"	f	typeref:typename:void
Monitor_monitor_w_optional	lib/flecs/test/api/src/Monitor.c	/^void Monitor_monitor_w_optional() {$/;"	f	typeref:typename:void
Monitor_monitor_w_or	lib/flecs/test/api/src/Monitor.c	/^void Monitor_monitor_w_or() {$/;"	f	typeref:typename:void
Monitor_monitor_w_self_superset	lib/flecs/test/api/src/Monitor.c	/^void Monitor_monitor_w_self_superset() {$/;"	f	typeref:typename:void
Monitor_monitor_w_superset	lib/flecs/test/api/src/Monitor.c	/^void Monitor_monitor_w_superset() {$/;"	f	typeref:typename:void
Monitor_monitor_w_wildcard	lib/flecs/test/api/src/Monitor.c	/^void Monitor_monitor_w_wildcard() {$/;"	f	typeref:typename:void
Monitor_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Monitor_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Moon	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^struct Moon { };$/;"	s	file:
Move	lib/flecs/examples/c/hello_world/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Move	lib/flecs/examples/c/systems/basics/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Move	lib/flecs/examples/c/systems/pipeline/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Move	lib/flecs/examples/c/systems/sync_point/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Move	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Move	lib/flecs/test/api/src/Modules.c	/^void Move(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
Move	lib/flecs/test/api/src/Prefab.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Move	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Move	lib/flecs/test/api/src/World.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Move	lib/flecs/test/custom_builds/c/pipeline/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Move	lib/flecs/test/custom_builds/c/pipeline_w_system/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Move	lib/flecs/test/custom_builds/c/system/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Move	lib/flecs/test/custom_builds/c/timer/src/main.c	/^void Move(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Movement	include/ecs/components.h	/^} Movement;$/;"	t	typeref:struct:__anon1ffac85e0208
Movement	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Movement { };$/;"	s	function:QueryBuilder_role	file:
Movement	lib/flecs/test/cpp_api/src/Switch.cpp	/^struct Movement {$/;"	s	file:
MtTask	lib/flecs/test/api/src/MultiThread.c	/^void MtTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
MultiThreadStaging_2_threads_add_to_current	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_2_threads_add_to_current() {$/;"	f	typeref:typename:void
MultiThreadStaging_2_threads_on_add	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_2_threads_on_add() {$/;"	f	typeref:typename:void
MultiThreadStaging_3_threads_add_to_current	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_3_threads_add_to_current() {$/;"	f	typeref:typename:void
MultiThreadStaging_4_threads_add_to_current	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_4_threads_add_to_current() {$/;"	f	typeref:typename:void
MultiThreadStaging_5_threads_add_to_current	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_5_threads_add_to_current() {$/;"	f	typeref:typename:void
MultiThreadStaging_6_threads_add_to_current	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_6_threads_add_to_current() {$/;"	f	typeref:typename:void
MultiThreadStaging_custom_thread_auto_merge	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_custom_thread_auto_merge() {$/;"	f	typeref:typename:void
MultiThreadStaging_custom_thread_manual_merge	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_custom_thread_manual_merge() {$/;"	f	typeref:typename:void
MultiThreadStaging_custom_thread_partial_manual_merge	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_custom_thread_partial_manual_merge() {$/;"	f	typeref:typename:void
MultiThreadStaging_new_w_count	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_new_w_count() {$/;"	f	typeref:typename:void
MultiThreadStaging_setup	lib/flecs/test/api/src/MultiThreadStaging.c	/^void MultiThreadStaging_setup() {$/;"	f	typeref:typename:void
MultiThreadStaging_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case MultiThreadStaging_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
MultiThread_2_thread_10_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_10_entity() {$/;"	f	typeref:typename:void
MultiThread_2_thread_10_entity_instanced	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_10_entity_instanced() {$/;"	f	typeref:typename:void
MultiThread_2_thread_1_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_1_entity() {$/;"	f	typeref:typename:void
MultiThread_2_thread_1_entity_instanced	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_1_entity_instanced() {$/;"	f	typeref:typename:void
MultiThread_2_thread_2_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_2_entity() {$/;"	f	typeref:typename:void
MultiThread_2_thread_5_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_5_entity() {$/;"	f	typeref:typename:void
MultiThread_2_thread_5_entity_instanced	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_5_entity_instanced() {$/;"	f	typeref:typename:void
MultiThread_2_thread_test_combs_100_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_test_combs_100_entity() {$/;"	f	typeref:typename:void
MultiThread_2_thread_test_combs_100_entity_2_types	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_test_combs_100_entity_2_types() {$/;"	f	typeref:typename:void
MultiThread_2_thread_test_combs_100_entity_w_next_worker	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_thread_test_combs_100_entity_w_next_worker() {$/;"	f	typeref:typename:void
MultiThread_2_threads_single_threaded_system	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_2_threads_single_threaded_system() {$/;"	f	typeref:typename:void
MultiThread_3_thread_10_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_3_thread_10_entity() {$/;"	f	typeref:typename:void
MultiThread_3_thread_1_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_3_thread_1_entity() {$/;"	f	typeref:typename:void
MultiThread_3_thread_2_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_3_thread_2_entity() {$/;"	f	typeref:typename:void
MultiThread_3_thread_5_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_3_thread_5_entity() {$/;"	f	typeref:typename:void
MultiThread_3_thread_test_combs_100_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_3_thread_test_combs_100_entity() {$/;"	f	typeref:typename:void
MultiThread_3_thread_test_combs_100_entity_2_types	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_3_thread_test_combs_100_entity_2_types() {$/;"	f	typeref:typename:void
MultiThread_4_thread_10_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_4_thread_10_entity() {$/;"	f	typeref:typename:void
MultiThread_4_thread_1_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_4_thread_1_entity() {$/;"	f	typeref:typename:void
MultiThread_4_thread_2_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_4_thread_2_entity() {$/;"	f	typeref:typename:void
MultiThread_4_thread_5_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_4_thread_5_entity() {$/;"	f	typeref:typename:void
MultiThread_4_thread_test_combs_100_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_4_thread_test_combs_100_entity() {$/;"	f	typeref:typename:void
MultiThread_4_thread_test_combs_100_entity_2_types	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_4_thread_test_combs_100_entity_2_types() {$/;"	f	typeref:typename:void
MultiThread_5_thread_10_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_5_thread_10_entity() {$/;"	f	typeref:typename:void
MultiThread_5_thread_1_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_5_thread_1_entity() {$/;"	f	typeref:typename:void
MultiThread_5_thread_2_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_5_thread_2_entity() {$/;"	f	typeref:typename:void
MultiThread_5_thread_5_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_5_thread_5_entity() {$/;"	f	typeref:typename:void
MultiThread_5_thread_test_combs_100_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_5_thread_test_combs_100_entity() {$/;"	f	typeref:typename:void
MultiThread_5_thread_test_combs_100_entity_2_types	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_5_thread_test_combs_100_entity_2_types() {$/;"	f	typeref:typename:void
MultiThread_6_thread_10_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_6_thread_10_entity() {$/;"	f	typeref:typename:void
MultiThread_6_thread_1_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_6_thread_1_entity() {$/;"	f	typeref:typename:void
MultiThread_6_thread_2_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_6_thread_2_entity() {$/;"	f	typeref:typename:void
MultiThread_6_thread_5_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_6_thread_5_entity() {$/;"	f	typeref:typename:void
MultiThread_6_thread_test_combs_100_entity	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_6_thread_test_combs_100_entity() {$/;"	f	typeref:typename:void
MultiThread_6_thread_test_combs_100_entity_2_types	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_6_thread_test_combs_100_entity_2_types() {$/;"	f	typeref:typename:void
MultiThread_change_thread_count	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_change_thread_count() {$/;"	f	typeref:typename:void
MultiThread_fini_after_set_threads	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_fini_after_set_threads() {$/;"	f	typeref:typename:void
MultiThread_multithread_quit	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_multithread_quit() {$/;"	f	typeref:typename:void
MultiThread_reactive_system	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_reactive_system() {    $/;"	f	typeref:typename:void
MultiThread_schedule_w_tasks	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_schedule_w_tasks() {$/;"	f	typeref:typename:void
MultiThread_setup	lib/flecs/test/api/src/MultiThread.c	/^void MultiThread_setup() {$/;"	f	typeref:typename:void
MultiThread_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case MultiThread_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
MutableTest	lib/flecs/test/api/src/SingleThreadStaging.c	/^void MutableTest(ecs_iter_t *it) {$/;"	f	typeref:typename:void
MutableTest_w_Add	lib/flecs/test/api/src/SingleThreadStaging.c	/^void MutableTest_w_Add(ecs_iter_t *it) {$/;"	f	typeref:typename:void
MyBool	lib/flecs/test/api/src/SingleThreadStaging.c	/^typedef bool MyBool;$/;"	t	typeref:typename:bool	file:
MyModule	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^    MyModule(flecs::world& ecs) {$/;"	f	class:MyModule	file:
MyModule	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^class MyModule {$/;"	c	file:
MyModuleImport	lib/flecs/test/custom_builds/c/module/src/main.c	/^void MyModuleImport(ecs_world_t *world) {$/;"	f	typeref:typename:void
MyStruct	lib/flecs/test/cpp_api/src/Type.cpp	/^struct MyStruct {$/;"	s	file:
MyTag	lib/flecs/test/cpp_api/src/Entity.cpp	/^struct MyTag { };$/;"	s	file:
MyTag	lib/flecs/test/cpp_api/src/System.cpp	/^struct MyTag { };$/;"	s	file:
MyTag	lib/flecs/test/cpp_api/src/Trigger.cpp	/^struct MyTag { };$/;"	s	file:
N1	lib/flecs/test/meta/src/ArrayTypes.c	/^    } N1;$/;"	t	function:ArrayTypes_array_struct_array_bool_3	typeref:struct:ArrayTypes_array_struct_array_bool_3::__anon98b8c2480d08	file:
N1	lib/flecs/test/meta/src/ArrayTypes.c	/^    } N1;$/;"	t	function:ArrayTypes_array_struct_bool_3	typeref:struct:ArrayTypes_array_struct_bool_3::__anon98b8c2480908	file:
N1	lib/flecs/test/meta/src/ArrayTypes.c	/^    } N1;$/;"	t	function:ArrayTypes_array_struct_bool_3_before_i32_member	typeref:struct:ArrayTypes_array_struct_bool_3_before_i32_member::__anon98b8c2480b08	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    typedef int32_t N1[2];$/;"	t	function:Cursor_struct_w_2_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    typedef int32_t N1[2];$/;"	t	function:Cursor_struct_w_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_2_nested_1_i32_2_i32	typeref:struct:Cursor_struct_2_nested_1_i32_2_i32::__anon23e81c320a08	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_2_nested_1_i32_i32_2_i32_i32	typeref:struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32::__anon23e81c320c08	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members	typeref:struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320e08	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_member_2_nested_i32_i32	typeref:struct:Cursor_struct_member_2_nested_i32_i32::__anon23e81c322008	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_member_2_nested_i32_i32_reverse	typeref:struct:Cursor_struct_member_2_nested_i32_i32_reverse::__anon23e81c322208	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_member_nested_i32_i32	typeref:struct:Cursor_struct_member_nested_i32_i32::__anon23e81c321e08	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_nested_i32	typeref:struct:Cursor_struct_nested_i32::__anon23e81c320808	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_set_2_array_w_struct_i32	typeref:struct:Cursor_struct_set_2_array_w_struct_i32::__anon23e81c321508	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_set_2_array_w_struct_w_array_i32	typeref:struct:Cursor_struct_set_2_array_w_struct_w_array_i32::__anon23e81c321908	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_set_array_w_struct_i32	typeref:struct:Cursor_struct_set_array_w_struct_i32::__anon23e81c321308	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_set_array_w_struct_w_array_i32	typeref:struct:Cursor_struct_set_array_w_struct_w_array_i32::__anon23e81c321708	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_w_2_array_type_struct	typeref:struct:Cursor_struct_w_2_array_type_struct::__anon23e81c322808	file:
N1	lib/flecs/test/meta/src/Cursor.c	/^    } N1;$/;"	t	function:Cursor_struct_w_array_type_struct	typeref:struct:Cursor_struct_w_array_type_struct::__anon23e81c322508	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef int32_t N1[2];$/;"	t	function:DeserializeFromExpr_struct_w_2_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef int32_t N1[2];$/;"	t	function:DeserializeFromExpr_struct_w_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_2_nested_i32_i32	typeref:struct:DeserializeFromExpr_struct_2_nested_i32_i32::__anon51c88b180c08	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_member_2_nested_i32_i32	typeref:struct:DeserializeFromExpr_struct_member_2_nested_i32_i32::__anon51c88b181408	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse	typeref:struct:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse::__anon51c88b181608	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_member_nested_i32	typeref:struct:DeserializeFromExpr_struct_member_nested_i32::__anon51c88b181008	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_member_nested_i32_i32	typeref:struct:DeserializeFromExpr_struct_member_nested_i32_i32::__anon51c88b181208	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_nested_i32	typeref:struct:DeserializeFromExpr_struct_nested_i32::__anon51c88b180808	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_nested_i32_i32	typeref:struct:DeserializeFromExpr_struct_nested_i32_i32::__anon51c88b180a08	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_struct_i32_array_3	typeref:struct:DeserializeFromExpr_struct_struct_i32_array_3::__anon51c88b181908	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_struct_i32_i32_array_3	typeref:struct:DeserializeFromExpr_struct_struct_i32_i32_array_3::__anon51c88b181b08	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_w_2_array_type_struct	typeref:struct:DeserializeFromExpr_struct_w_2_array_type_struct::__anon51c88b182108	file:
N1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } N1;$/;"	t	function:DeserializeFromExpr_struct_w_array_type_struct	typeref:struct:DeserializeFromExpr_struct_w_array_type_struct::__anon51c88b181f08	file:
N1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef int32_t N1[2];$/;"	t	function:DeserializeFromJson_struct_w_2_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef int32_t N1[2];$/;"	t	function:DeserializeFromJson_struct_w_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } N1;$/;"	t	function:DeserializeFromJson_struct_2_nested_i32_i32	typeref:struct:DeserializeFromJson_struct_2_nested_i32_i32::__anon5d173e531d08	file:
N1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } N1;$/;"	t	function:DeserializeFromJson_struct_nested_i32	typeref:struct:DeserializeFromJson_struct_nested_i32::__anon5d173e531908	file:
N1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } N1;$/;"	t	function:DeserializeFromJson_struct_nested_i32_i32	typeref:struct:DeserializeFromJson_struct_nested_i32_i32::__anon5d173e531b08	file:
N1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } N1;$/;"	t	function:DeserializeFromJson_struct_struct_i32_array_3	typeref:struct:DeserializeFromJson_struct_struct_i32_array_3::__anon5d173e532008	file:
N1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } N1;$/;"	t	function:DeserializeFromJson_struct_struct_i32_i32_array_3	typeref:struct:DeserializeFromJson_struct_struct_i32_i32_array_3::__anon5d173e532208	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool	typeref:struct:NestedStructTypes_1_bool::__anon3cdfa8510108	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_2_bool	typeref:struct:NestedStructTypes_1_bool_2_bool::__anon3cdfa8510f08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_2_bool_bool	typeref:struct:NestedStructTypes_1_bool_2_bool_bool::__anon3cdfa8511708	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_2_i32	typeref:struct:NestedStructTypes_1_bool_2_i32::__anon3cdfa8511108	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_2_same	typeref:struct:NestedStructTypes_1_bool_2_same::__anon3cdfa8510d08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_bool_2_bool	typeref:struct:NestedStructTypes_1_bool_bool_2_bool::__anon3cdfa8511a08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_bool_2_bool_bool	typeref:struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8511f08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_bool_2_same	typeref:struct:NestedStructTypes_1_bool_bool_2_same::__anon3cdfa8511d08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_w_bool_member	typeref:struct:NestedStructTypes_1_bool_w_bool_member::__anon3cdfa8510508	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_bool_w_int32_member	typeref:struct:NestedStructTypes_1_bool_w_int32_member::__anon3cdfa8510708	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_i32_2_bool	typeref:struct:NestedStructTypes_1_i32_2_bool::__anon3cdfa8511408	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_i32_2_i32	typeref:struct:NestedStructTypes_1_i32_2_i32::__anon3cdfa8512408	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_i32_2_i32_i32	typeref:struct:NestedStructTypes_1_i32_2_i32_i32::__anon3cdfa8512708	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_i32_2_same	typeref:struct:NestedStructTypes_1_i32_2_same::__anon3cdfa8512208	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_i32_i32_2_i32	typeref:struct:NestedStructTypes_1_i32_i32_2_i32::__anon3cdfa8512a08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_i32_i32_2_i32_i32	typeref:struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8512f08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_i32_i32_2_same	typeref:struct:NestedStructTypes_1_i32_i32_2_same::__anon3cdfa8512d08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_int32	typeref:struct:NestedStructTypes_1_int32::__anon3cdfa8510308	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_int32_w_bool_member	typeref:struct:NestedStructTypes_1_int32_w_bool_member::__anon3cdfa8510908	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_1_int32_w_int32_member	typeref:struct:NestedStructTypes_1_int32_w_int32_member::__anon3cdfa8510b08	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_2_lvls_bool	typeref:struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513408	file:
N1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N1;$/;"	t	function:NestedStructTypes_2_lvls_bool_bool	typeref:struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513908	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef int32_t N1[2];$/;"	t	function:SerializeToExpr_struct_w_2_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef int32_t N1[2];$/;"	t	function:SerializeToExpr_struct_w_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } N1;$/;"	t	function:SerializeToExpr_struct_2_nested_i32_i32	typeref:struct:SerializeToExpr_struct_2_nested_i32_i32::__anon35ed1d3e0d08	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } N1;$/;"	t	function:SerializeToExpr_struct_nested_i32	typeref:struct:SerializeToExpr_struct_nested_i32::__anon35ed1d3e0908	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } N1;$/;"	t	function:SerializeToExpr_struct_nested_i32_i32	typeref:struct:SerializeToExpr_struct_nested_i32_i32::__anon35ed1d3e0b08	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } N1;$/;"	t	function:SerializeToExpr_struct_struct_i32_array_3	typeref:struct:SerializeToExpr_struct_struct_i32_array_3::__anon35ed1d3e1008	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } N1;$/;"	t	function:SerializeToExpr_struct_struct_i32_i32_array_3	typeref:struct:SerializeToExpr_struct_struct_i32_i32_array_3::__anon35ed1d3e1208	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } N1;$/;"	t	function:SerializeToExpr_struct_w_2_array_type_struct	typeref:struct:SerializeToExpr_struct_w_2_array_type_struct::__anon35ed1d3e1808	file:
N1	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } N1;$/;"	t	function:SerializeToExpr_struct_w_array_type_struct	typeref:struct:SerializeToExpr_struct_w_array_type_struct::__anon35ed1d3e1608	file:
N1	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef int32_t N1[2];$/;"	t	function:SerializeToJson_struct_w_2_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef int32_t N1[2];$/;"	t	function:SerializeToJson_struct_w_array_type_i32_i32	typeref:typename:int32_t[2]	file:
N1	lib/flecs/test/meta/src/SerializeToJson.c	/^    } N1;$/;"	t	function:SerializeToJson_struct_2_nested_i32_i32	typeref:struct:SerializeToJson_struct_2_nested_i32_i32::__anon413bd0792008	file:
N1	lib/flecs/test/meta/src/SerializeToJson.c	/^    } N1;$/;"	t	function:SerializeToJson_struct_nested_i32	typeref:struct:SerializeToJson_struct_nested_i32::__anon413bd0791c08	file:
N1	lib/flecs/test/meta/src/SerializeToJson.c	/^    } N1;$/;"	t	function:SerializeToJson_struct_nested_i32_i32	typeref:struct:SerializeToJson_struct_nested_i32_i32::__anon413bd0791e08	file:
N1	lib/flecs/test/meta/src/SerializeToJson.c	/^    } N1;$/;"	t	function:SerializeToJson_struct_struct_i32_array_3	typeref:struct:SerializeToJson_struct_struct_i32_array_3::__anon413bd0792308	file:
N1	lib/flecs/test/meta/src/SerializeToJson.c	/^    } N1;$/;"	t	function:SerializeToJson_struct_struct_i32_i32_array_3	typeref:struct:SerializeToJson_struct_struct_i32_i32_array_3::__anon413bd0792508	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003108	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003608	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_2_lvls_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002208	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_2_lvls_bool_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002708	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002c08	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_bool	typeref:struct:Serialized_ops_nested_struct_1_bool::__anond4af8f000708	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_bool_2_bool	typeref:struct:Serialized_ops_nested_struct_1_bool_2_bool::__anond4af8f000f08	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32	typeref:struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001708	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool	typeref:struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001d08	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_bool_w_bool_member	typeref:struct:Serialized_ops_nested_struct_1_bool_w_bool_member::__anond4af8f000b08	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_bool_w_i32_member	typeref:struct:Serialized_ops_nested_struct_1_bool_w_i32_member::__anond4af8f000d08	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_i32	typeref:struct:Serialized_ops_nested_struct_1_i32::__anond4af8f000908	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_i32_2_bool	typeref:struct:Serialized_ops_nested_struct_1_i32_2_bool::__anond4af8f001108	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32	typeref:struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001a08	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool	typeref:struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001408	file:
N1	lib/flecs/test/meta/src/Serialized.c	/^    } N1;$/;"	t	function:Serialized_ops_struct_array_struct_bool_3_w_i32_after	typeref:struct:Serialized_ops_struct_array_struct_bool_3_w_i32_after::__anond4af8f003f08	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_bool_2_bool_bool	typeref:struct:NestedStructTypes_1_bool_2_bool_bool::__anon3cdfa8511808	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_bool_2_i32	typeref:struct:NestedStructTypes_1_bool_2_i32::__anon3cdfa8511208	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_bool_bool_2_bool	typeref:struct:NestedStructTypes_1_bool_bool_2_bool::__anon3cdfa8511b08	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_bool_bool_2_bool_bool	typeref:struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8512008	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_i32_2_bool	typeref:struct:NestedStructTypes_1_i32_2_bool::__anon3cdfa8511508	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_i32_2_i32	typeref:struct:NestedStructTypes_1_i32_2_i32::__anon3cdfa8512508	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_i32_2_i32_i32	typeref:struct:NestedStructTypes_1_i32_2_i32_i32::__anon3cdfa8512808	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_i32_i32_2_i32	typeref:struct:NestedStructTypes_1_i32_i32_2_i32::__anon3cdfa8512b08	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_1_i32_i32_2_i32_i32	typeref:struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8513008	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_2_lvls_bool	typeref:struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513508	file:
N2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } N2;$/;"	t	function:NestedStructTypes_2_lvls_bool_bool	typeref:struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513a08	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003208	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003708	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_2_lvls_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002308	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_2_lvls_bool_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002808	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002d08	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32	typeref:struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001808	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool	typeref:struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001e08	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_struct_1_i32_2_bool	typeref:struct:Serialized_ops_nested_struct_1_i32_2_bool::__anond4af8f001208	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32	typeref:struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001b08	file:
N2	lib/flecs/test/meta/src/Serialized.c	/^    } N2;$/;"	t	function:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool	typeref:struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001508	file:
NESTED_SET_MEMBER_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/nested_set_member/include/nested_set_member/bake_config.h	/^#define NESTED_SET_MEMBER_BAKE_CONFIG_H$/;"	d
NESTED_SET_MEMBER_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/nested_set_member/include/nested_set_member/bake_config.h	/^#define NESTED_SET_MEMBER_BAKE_CONFIG_H$/;"	d
NESTED_SET_MEMBER_H	lib/flecs/examples/c/reflection/nested_set_member/include/nested_set_member.h	/^#define NESTED_SET_MEMBER_H$/;"	d
NESTED_SET_MEMBER_H	lib/flecs/examples/cpp/reflection/nested_set_member/include/nested_set_member.h	/^#define NESTED_SET_MEMBER_H$/;"	d
NESTED_STRUCT_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/nested_struct/include/nested_struct/bake_config.h	/^#define NESTED_STRUCT_BAKE_CONFIG_H$/;"	d
NESTED_STRUCT_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/nested_struct/include/nested_struct/bake_config.h	/^#define NESTED_STRUCT_BAKE_CONFIG_H$/;"	d
NESTED_STRUCT_H	lib/flecs/examples/c/reflection/nested_struct/include/nested_struct.h	/^#define NESTED_STRUCT_H$/;"	d
NESTED_STRUCT_H	lib/flecs/examples/cpp/reflection/nested_struct/include/nested_struct.h	/^#define NESTED_STRUCT_H$/;"	d
NN1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } NN1;$/;"	t	function:NestedStructTypes_2_lvls_bool	typeref:struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513208	file:
NN1	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } NN1;$/;"	t	function:NestedStructTypes_2_lvls_bool_bool	typeref:struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513708	file:
NN1	lib/flecs/test/meta/src/Serialized.c	/^    } NN1;$/;"	t	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f002f08	file:
NN1	lib/flecs/test/meta/src/Serialized.c	/^    } NN1;$/;"	t	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003408	file:
NN1	lib/flecs/test/meta/src/Serialized.c	/^    } NN1;$/;"	t	function:Serialized_ops_nested_2_lvls_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002008	file:
NN1	lib/flecs/test/meta/src/Serialized.c	/^    } NN1;$/;"	t	function:Serialized_ops_nested_2_lvls_bool_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002508	file:
NN1	lib/flecs/test/meta/src/Serialized.c	/^    } NN1;$/;"	t	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002a08	file:
NN2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } NN2;$/;"	t	function:NestedStructTypes_2_lvls_bool	typeref:struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513308	file:
NN2	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } NN2;$/;"	t	function:NestedStructTypes_2_lvls_bool_bool	typeref:struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513808	file:
NN2	lib/flecs/test/meta/src/Serialized.c	/^    } NN2;$/;"	t	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003008	file:
NN2	lib/flecs/test/meta/src/Serialized.c	/^    } NN2;$/;"	t	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003508	file:
NN2	lib/flecs/test/meta/src/Serialized.c	/^    } NN2;$/;"	t	function:Serialized_ops_nested_2_lvls_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002108	file:
NN2	lib/flecs/test/meta/src/Serialized.c	/^    } NN2;$/;"	t	function:Serialized_ops_nested_2_lvls_bool_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002608	file:
NN2	lib/flecs/test/meta/src/Serialized.c	/^    } NN2;$/;"	t	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002b08	file:
NO_ADDONS_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/no_addons/include/no_addons/bake_config.h	/^#define NO_ADDONS_BAKE_CONFIG_H$/;"	d
NO_ADDONS_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/no_addons/include/no_addons/bake_config.h	/^#define NO_ADDONS_BAKE_CONFIG_H$/;"	d
NO_ADDONS_H	lib/flecs/test/custom_builds/c/no_addons/include/no_addons.h	/^#define NO_ADDONS_H$/;"	d
NO_ADDONS_H	lib/flecs/test/custom_builds/cpp/no_addons/include/no_addons.h	/^#define NO_ADDONS_H$/;"	d
NO_DECLTYPE	lib/uthash/include/uthash.h	/^#define NO_DECLTYPE$/;"	d
NO_DECLTYPE	lib/uthash/include/utlist.h	/^#define NO_DECLTYPE$/;"	d
NO_DECLTYPE	lib/uthash/src/uthash.h	/^#define NO_DECLTYPE$/;"	d
NO_DECLTYPE	lib/uthash/src/utlist.h	/^#define NO_DECLTYPE$/;"	d
NTHREADS	lib/uthash/tests/threads/test2.c	/^#define NTHREADS /;"	d	file:
NULL	lib/flecs/flecs.h	/^#define NULL /;"	d
NULL	lib/flecs/include/flecs/private/api_defines.h	/^#define NULL /;"	d
NUM	lib/flecs/test/api/src/OnDelete.c	/^    #define NUM /;"	d	file:
NUM_HASH_FUNCS	lib/uthash/tests/hashscan.c	/^#define NUM_HASH_FUNCS /;"	d	file:
Name	lib/flecs/flecs.h	/^static const flecs::entity_t Name = EcsName;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Name	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Name = EcsName;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
NamePair	lib/flecs/test/api/src/Prefab.c	/^static ecs_id_t NamePair;$/;"	v	typeref:typename:ecs_id_t	file:
Nano	lib/flecs/flecs.h	/^struct Nano { };$/;"	s	struct:flecs::units
Nano	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Nano { };$/;"	s	struct:flecs::units
NanoMeters	lib/flecs/flecs.h	/^struct NanoMeters { };$/;"	s	struct:flecs::units::length
NanoMeters	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct NanoMeters { };$/;"	s	struct:flecs::units::length
NanoSeconds	lib/flecs/flecs.h	/^struct NanoSeconds { };$/;"	s	struct:flecs::units::duration
NanoSeconds	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct NanoSeconds { };$/;"	s	struct:flecs::units::duration
Nested	lib/flecs/test/cpp_api/src/Meta.cpp	/^    struct Nested {$/;"	s	function:Meta_nested_struct	file:
Nested	lib/flecs/test/cpp_api/src/World.cpp	/^namespace Nested { $/;"	n	file:
NestedComponent	lib/flecs/test/api/src/Modules.c	/^typedef struct NestedComponent {$/;"	s	file:
NestedComponent	lib/flecs/test/api/src/Modules.c	/^} NestedComponent;$/;"	t	typeref:struct:NestedComponent	file:
NestedModule	lib/flecs/test/cpp_api/src/Module.cpp	/^    NestedModule(flecs::world& world) {$/;"	f	class:ns::NestedModule	file:
NestedModule	lib/flecs/test/cpp_api/src/Module.cpp	/^class NestedModule {$/;"	c	namespace:ns	file:
NestedModuleImport	lib/flecs/test/api/src/Modules.c	/^void NestedModuleImport($/;"	f	typeref:typename:void
NestedNameSpaceType	lib/flecs/test/cpp_api/src/Module.cpp	/^struct NestedNameSpaceType { };$/;"	s	namespace:ns	file:
NestedStructTypes_1_bool	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_2_bool	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_2_bool() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_2_bool_bool	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_2_bool_bool() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_2_i32	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_2_i32() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_2_same	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_2_same() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_bool_2_bool	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_bool_2_bool() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_bool_2_bool_bool	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_bool_2_bool_bool() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_bool_2_same	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_bool_2_same() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_w_bool_member	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_w_bool_member() {$/;"	f	typeref:typename:void
NestedStructTypes_1_bool_w_int32_member	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_bool_w_int32_member() {$/;"	f	typeref:typename:void
NestedStructTypes_1_i32_2_bool	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_i32_2_bool() {$/;"	f	typeref:typename:void
NestedStructTypes_1_i32_2_i32	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_i32_2_i32() {$/;"	f	typeref:typename:void
NestedStructTypes_1_i32_2_i32_i32	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_i32_2_i32_i32() {$/;"	f	typeref:typename:void
NestedStructTypes_1_i32_2_same	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_i32_2_same() {$/;"	f	typeref:typename:void
NestedStructTypes_1_i32_i32_2_i32	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_i32_i32_2_i32() {$/;"	f	typeref:typename:void
NestedStructTypes_1_i32_i32_2_i32_i32	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_i32_i32_2_i32_i32() {$/;"	f	typeref:typename:void
NestedStructTypes_1_i32_i32_2_same	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_i32_i32_2_same() {$/;"	f	typeref:typename:void
NestedStructTypes_1_int32	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_int32() {$/;"	f	typeref:typename:void
NestedStructTypes_1_int32_w_bool_member	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_int32_w_bool_member() {$/;"	f	typeref:typename:void
NestedStructTypes_1_int32_w_int32_member	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_1_int32_w_int32_member() {$/;"	f	typeref:typename:void
NestedStructTypes_2_lvls_bool	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_2_lvls_bool() {$/;"	f	typeref:typename:void
NestedStructTypes_2_lvls_bool_bool	lib/flecs/test/meta/src/NestedStructTypes.c	/^void NestedStructTypes_2_lvls_bool_bool() {$/;"	f	typeref:typename:void
NestedStructTypes_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case NestedStructTypes_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
NestedTrigger	lib/flecs/test/api/src/Trigger.c	/^static void NestedTrigger(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
NestedType	lib/flecs/test/cpp_api/src/Module.cpp	/^    struct NestedType { };$/;"	s	class:ns::NestedTypeModule	file:
NestedTypeModule	lib/flecs/test/cpp_api/src/Module.cpp	/^    NestedTypeModule(flecs::world& world) {$/;"	f	class:ns::NestedTypeModule	file:
NestedTypeModule	lib/flecs/test/cpp_api/src/Module.cpp	/^class NestedTypeModule {$/;"	c	namespace:ns	file:
NewEmpty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void NewEmpty(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
NewEmpty_w_count	lib/flecs/test/api/src/SingleThreadStaging.c	/^void NewEmpty_w_count(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
NewInProgress	lib/flecs/test/api/src/Prefab.c	/^void NewInProgress(ecs_iter_t *it) {$/;"	f	typeref:typename:void
NewPrefab_w_count	lib/flecs/test/api/src/Prefab.c	/^void NewPrefab_w_count(ecs_iter_t *it) {$/;"	f	typeref:typename:void
NewWithPosition	lib/flecs/test/api/src/TriggerOnAdd.c	/^void NewWithPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void
New_component	lib/flecs/test/api/src/New.c	/^void New_component() {$/;"	f	typeref:typename:void
New_create_w_explicit_id_2_worlds	lib/flecs/test/api/src/New.c	/^void New_create_w_explicit_id_2_worlds() {$/;"	f	typeref:typename:void
New_empty	lib/flecs/test/api/src/New.c	/^void New_empty() {$/;"	f	typeref:typename:void
New_new_component_id	lib/flecs/test/api/src/New.c	/^void New_new_component_id() {$/;"	f	typeref:typename:void
New_new_component_id_skip_to_hi_id	lib/flecs/test/api/src/New.c	/^void New_new_component_id_skip_to_hi_id() {$/;"	f	typeref:typename:void
New_new_component_id_skip_used	lib/flecs/test/api/src/New.c	/^void New_new_component_id_skip_used() {$/;"	f	typeref:typename:void
New_new_hi_component_id	lib/flecs/test/api/src/New.c	/^void New_new_hi_component_id() {$/;"	f	typeref:typename:void
New_new_id	lib/flecs/test/api/src/New.c	/^void New_new_id() {$/;"	f	typeref:typename:void
New_new_w_entity_0	lib/flecs/test/api/src/New.c	/^void New_new_w_entity_0() {$/;"	f	typeref:typename:void
New_new_w_id_0_w_with	lib/flecs/test/api/src/New.c	/^void New_new_w_id_0_w_with() {$/;"	f	typeref:typename:void
New_new_w_id_w_with	lib/flecs/test/api/src/New.c	/^void New_new_w_id_w_with() {$/;"	f	typeref:typename:void
New_new_w_id_w_with_defer	lib/flecs/test/api/src/New.c	/^void New_new_w_id_w_with_defer() {$/;"	f	typeref:typename:void
New_new_w_id_w_with_defer_w_scope	lib/flecs/test/api/src/New.c	/^void New_new_w_id_w_with_defer_w_scope() {$/;"	f	typeref:typename:void
New_new_w_id_w_with_w_scope	lib/flecs/test/api/src/New.c	/^void New_new_w_id_w_with_w_scope() {$/;"	f	typeref:typename:void
New_new_w_type_0_w_with	lib/flecs/test/api/src/New.c	/^void New_new_w_type_0_w_with() {$/;"	f	typeref:typename:void
New_new_w_type_w_with	lib/flecs/test/api/src/New.c	/^void New_new_w_type_w_with() {$/;"	f	typeref:typename:void
New_new_w_type_w_with_defer	lib/flecs/test/api/src/New.c	/^void New_new_w_type_w_with_defer() {$/;"	f	typeref:typename:void
New_new_w_type_w_with_defer_w_scope	lib/flecs/test/api/src/New.c	/^void New_new_w_type_w_with_defer_w_scope() {$/;"	f	typeref:typename:void
New_new_w_type_w_with_w_scope	lib/flecs/test/api/src/New.c	/^void New_new_w_type_w_with_w_scope() {$/;"	f	typeref:typename:void
New_recycle_empty_staged_delete	lib/flecs/test/api/src/New.c	/^void New_recycle_empty_staged_delete() {$/;"	f	typeref:typename:void
New_recycle_id_empty	lib/flecs/test/api/src/New.c	/^void New_recycle_id_empty() {$/;"	f	typeref:typename:void
New_recycle_id_w_entity	lib/flecs/test/api/src/New.c	/^void New_recycle_id_w_entity() {$/;"	f	typeref:typename:void
New_recycle_staged_delete	lib/flecs/test/api/src/New.c	/^void New_recycle_staged_delete() {$/;"	f	typeref:typename:void
New_redefine_component	lib/flecs/test/api/src/New.c	/^void New_redefine_component() {$/;"	f	typeref:typename:void
New_setup	lib/flecs/test/api/src/New.c	/^void New_setup() {$/;"	f	typeref:typename:void
New_tag	lib/flecs/test/api/src/New.c	/^void New_tag() {$/;"	f	typeref:typename:void
New_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case New_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
New_w_Count_bulk_init_1_component	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_1_component() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_1_component_w_value	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_1_component_w_value() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_1_tag	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_1_tag() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_1_tag_w_entities	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_1_tag_w_entities() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_2_components	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_2_components() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_2_components_tag_w_value	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_2_components_tag_w_value() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_2_components_w_value	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_2_components_w_value() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_2_tags	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_2_tags() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_empty	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_empty() {$/;"	f	typeref:typename:void
New_w_Count_bulk_init_empty_w_entities	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_bulk_init_empty_w_entities() {$/;"	f	typeref:typename:void
New_w_Count_component	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_component() {$/;"	f	typeref:typename:void
New_w_Count_empty	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_empty() {$/;"	f	typeref:typename:void
New_w_Count_tag	lib/flecs/test/api/src/New_w_Count.c	/^void New_w_Count_tag() {$/;"	f	typeref:typename:void
New_w_Count_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case New_w_Count_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
New_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void New_w_component(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
New_w_component_w_count	lib/flecs/test/api/src/SingleThreadStaging.c	/^void New_w_component_w_count(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
New_w_count	lib/flecs/test/api/src/MultiThreadStaging.c	/^void New_w_count(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Newton	lib/flecs/flecs.h	/^struct Newton { };$/;"	s	struct:flecs::units::force
Newton	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Newton { };$/;"	s	struct:flecs::units::force
Next	lib/uthash/tests/test78.c	/^    struct el *Next, *Prev;$/;"	m	struct:el	typeref:struct:el *	file:
NoCopy	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoCopy() : x_(99) { }$/;"	f	struct:NoCopy
NoCopy	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoCopy(int x) : x_(x) { }$/;"	f	struct:NoCopy
NoCopy	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct NoCopy {$/;"	s
NoCopyAssign	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoCopyAssign() : x_(99) { }$/;"	f	struct:NoCopyAssign
NoCopyAssign	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoCopyAssign(int x) : x_(x) { }$/;"	f	struct:NoCopyAssign
NoCopyAssign	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct NoCopyAssign {$/;"	s
NoCopyCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoCopyCtor() : x_(99) { }$/;"	f	struct:NoCopyCtor
NoCopyCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoCopyCtor(int x) : x_(x) { }$/;"	f	struct:NoCopyCtor
NoCopyCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct NoCopyCtor {$/;"	s
NoDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoDefaultCtor(int x) : x_(x) { }$/;"	f	struct:NoDefaultCtor
NoDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct NoDefaultCtor {$/;"	s
NoDtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoDtor() : x_(99) { }$/;"	f	struct:NoDtor
NoDtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoDtor(int x) : x_(x) { }$/;"	f	struct:NoDtor
NoDtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct NoDtor {$/;"	s
NoMove	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoMove() : x_(99) { }$/;"	f	struct:NoMove
NoMove	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoMove(int x) : x_(x) { }$/;"	f	struct:NoMove
NoMove	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct NoMove {$/;"	s
NoMoveAssign	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoMoveAssign() : x_(99) { }$/;"	f	struct:NoMoveAssign
NoMoveAssign	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoMoveAssign(int x) : x_(x) { }$/;"	f	struct:NoMoveAssign
NoMoveAssign	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct NoMoveAssign {$/;"	s
NoMoveCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoMoveCtor() : x_(99) { }$/;"	f	struct:NoMoveCtor
NoMoveCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    NoMoveCtor(int x) : x_(x) { }$/;"	f	struct:NoMoveCtor
NoMoveCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct NoMoveCtor {$/;"	s
NormalSystem	lib/flecs/test/api/src/SystemManual.c	/^void NormalSystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
NormalSystem	lib/flecs/test/api/src/SystemPeriodic.c	/^void NormalSystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
NormalSystem2	lib/flecs/test/api/src/SystemPeriodic.c	/^void NormalSystem2(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
NormalSystem3	lib/flecs/test/api/src/SystemPeriodic.c	/^void NormalSystem3(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Not	lib/flecs/flecs.h	/^    Not = EcsNot,$/;"	e	enum:flecs::oper_kind_t
Not	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    Not = EcsNot,$/;"	e	enum:flecs::oper_kind_t
NotFrom	lib/flecs/flecs.h	/^    NotFrom = EcsNotFrom$/;"	e	enum:flecs::oper_kind_t
NotFrom	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    NotFrom = EcsNotFrom$/;"	e	enum:flecs::oper_kind_t
NotWritten	lib/flecs/flecs.c	/^    NotWritten = 0,$/;"	e	enum:ComponentWriteState	file:
NotWritten	lib/flecs/src/addons/pipeline/pipeline.c	/^    NotWritten = 0,$/;"	e	enum:ComponentWriteState	file:
Nothing	lib/flecs/flecs.h	/^static const uint8_t Nothing = EcsNothing;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Nothing	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const uint8_t Nothing = EcsNothing;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
NsTag	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^    struct NsTag { };$/;"	s	namespace:ns	file:
Num1	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Num1,$/;"	e	enum:ConstantsWithNum	file:
Num2	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Num2,$/;"	e	enum:ConstantsWithNum	file:
Num3	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Num3,$/;"	e	enum:ConstantsWithNum	file:
OAT	lib/uthash/tests/hashscan.c	/^#define OAT /;"	d	file:
OFFSET	lib/flecs/flecs.c	/^#define OFFSET(/;"	d	file:
OFFSET	lib/flecs/src/datastructures/sparse.c	/^#define OFFSET(/;"	d	file:
Obj	lib/flecs/test/api/src/Pairs.c	/^typedef struct Obj {$/;"	s	file:
Obj	lib/flecs/test/api/src/Pairs.c	/^} Obj;$/;"	t	typeref:struct:Obj	file:
Obj	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Obj { };$/;"	s	function:Entity_each_in_stage	file:
Obj	lib/flecs/test/cpp_api/src/Filter.cpp	/^    struct Obj { };$/;"	s	function:Filter_term_each_pair_type	file:
Obj	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Obj { };$/;"	s	function:World_delete_with_pair_type	file:
ObjA	lib/flecs/test/cpp_api/src/World.cpp	/^    struct ObjA { };$/;"	s	function:World_remove_all_pair_type	file:
ObjB	lib/flecs/test/cpp_api/src/World.cpp	/^    struct ObjB { };$/;"	s	function:World_remove_all_pair_type	file:
Obs	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Obs(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Observer	lib/flecs/flecs.h	/^using Observer = EcsObserver;$/;"	t	namespace:flecs	typeref:typename:EcsObserver
Observer	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using Observer = EcsObserver;$/;"	t	namespace:flecs	typeref:typename:EcsObserver
Observer	lib/flecs/test/api/src/Observer.c	/^void Observer(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ObserverReadonly	lib/flecs/test/api/src/Observer.c	/^void ObserverReadonly(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Observer_10_terms	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_10_terms() {$/;"	f	typeref:typename:void
Observer_20_terms	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_20_terms() {$/;"	f	typeref:typename:void
Observer_2_entities_each	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_2_entities_each() {$/;"	f	typeref:typename:void
Observer_2_entities_iter	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_2_entities_iter() {$/;"	f	typeref:typename:void
Observer_2_entities_table_column	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_2_entities_table_column() {$/;"	f	typeref:typename:void
Observer_2_pair_terms_w_on_add	lib/flecs/test/api/src/Observer.c	/^void Observer_2_pair_terms_w_on_add() {$/;"	f	typeref:typename:void
Observer_2_pair_terms_w_on_remove	lib/flecs/test/api/src/Observer.c	/^void Observer_2_pair_terms_w_on_remove() {$/;"	f	typeref:typename:void
Observer_2_terms_1_filter	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_1_filter() {$/;"	f	typeref:typename:void
Observer_2_terms_1_not_w_on_add	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_1_not_w_on_add() {$/;"	f	typeref:typename:void
Observer_2_terms_1_not_w_on_remove	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_1_not_w_on_remove() {$/;"	f	typeref:typename:void
Observer_2_terms_on_add	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_2_terms_on_add() {$/;"	f	typeref:typename:void
Observer_2_terms_on_remove	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_2_terms_on_remove() {$/;"	f	typeref:typename:void
Observer_2_terms_on_remove_on_clear	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_on_remove_on_clear() {$/;"	f	typeref:typename:void
Observer_2_terms_on_remove_on_delete	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_on_remove_on_delete() {$/;"	f	typeref:typename:void
Observer_2_terms_on_set	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_2_terms_on_set() {$/;"	f	typeref:typename:void
Observer_2_terms_un_set	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_2_terms_un_set() {$/;"	f	typeref:typename:void
Observer_2_terms_w_from_entity_on_add	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_from_entity_on_add() {$/;"	f	typeref:typename:void
Observer_2_terms_w_on_add	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_on_add() {$/;"	f	typeref:typename:void
Observer_2_terms_w_on_add_2nd	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_on_add_2nd() {$/;"	f	typeref:typename:void
Observer_2_terms_w_on_remove	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_on_remove() {$/;"	f	typeref:typename:void
Observer_2_terms_w_on_remove_2nd	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_on_remove_2nd() {$/;"	f	typeref:typename:void
Observer_2_terms_w_on_remove_value	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_on_remove_value() {$/;"	f	typeref:typename:void
Observer_2_terms_w_on_set	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_on_set() {$/;"	f	typeref:typename:void
Observer_2_terms_w_on_set_value	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_on_set_value() {$/;"	f	typeref:typename:void
Observer_2_terms_w_un_set	lib/flecs/test/api/src/Observer.c	/^void Observer_2_terms_w_un_set() {$/;"	f	typeref:typename:void
Observer_2_wildcard_pair_terms_w_on_add	lib/flecs/test/api/src/Observer.c	/^void Observer_2_wildcard_pair_terms_w_on_add() {$/;"	f	typeref:typename:void
Observer_2_wildcard_pair_terms_w_on_add_2_matching	lib/flecs/test/api/src/Observer.c	/^void Observer_2_wildcard_pair_terms_w_on_add_2_matching() {$/;"	f	typeref:typename:void
Observer_2_wildcard_pair_terms_w_on_add_3_matching	lib/flecs/test/api/src/Observer.c	/^void Observer_2_wildcard_pair_terms_w_on_add_3_matching() {$/;"	f	typeref:typename:void
Observer_2_wildcard_pair_terms_w_on_remove	lib/flecs/test/api/src/Observer.c	/^void Observer_2_wildcard_pair_terms_w_on_remove() {$/;"	f	typeref:typename:void
Observer_3_terms_2_filter	lib/flecs/test/api/src/Observer.c	/^void Observer_3_terms_2_filter() {$/;"	f	typeref:typename:void
Observer_3_terms_2_or_on_add	lib/flecs/test/api/src/Observer.c	/^void Observer_3_terms_2_or_on_add() {$/;"	f	typeref:typename:void
Observer_3_terms_2_or_on_remove	lib/flecs/test/api/src/Observer.c	/^void Observer_3_terms_2_or_on_remove() {$/;"	f	typeref:typename:void
Observer_add_after_delete_observer	lib/flecs/test/api/src/Observer.c	/^void Observer_add_after_delete_observer() {$/;"	f	typeref:typename:void
Observer_and_from	lib/flecs/test/api/src/Observer.c	/^void Observer_and_from() {$/;"	f	typeref:typename:void
Observer_create_w_no_template_args	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_create_w_no_template_args() {$/;"	f	typeref:typename:void
Observer_custom_run_action	lib/flecs/test/api/src/Observer.c	/^void Observer_custom_run_action() {$/;"	f	typeref:typename:void
Observer_custom_run_action_w_iter_next	lib/flecs/test/api/src/Observer.c	/^void Observer_custom_run_action_w_iter_next() {$/;"	f	typeref:typename:void
Observer_delete_observer_w_ctx	lib/flecs/test/api/src/Observer.c	/^void Observer_delete_observer_w_ctx() {$/;"	f	typeref:typename:void
Observer_filter_term	lib/flecs/test/api/src/Observer.c	/^void Observer_filter_term() {$/;"	f	typeref:typename:void
Observer_filter_w_strings	lib/flecs/test/api/src/Observer.c	/^void Observer_filter_w_strings() {$/;"	f	typeref:typename:void
Observer_iter_type_set	lib/flecs/test/api/src/Observer.c	/^void Observer_iter_type_set() {$/;"	f	typeref:typename:void
Observer_match_base_w_id_at_offset	lib/flecs/test/api/src/Observer.c	/^void Observer_match_base_w_id_at_offset() {$/;"	f	typeref:typename:void
Observer_mixed_on_set_w_tag	lib/flecs/test/api/src/Observer.c	/^void Observer_mixed_on_set_w_tag() {$/;"	f	typeref:typename:void
Observer_mixed_un_set_w_tag	lib/flecs/test/api/src/Observer.c	/^void Observer_mixed_un_set_w_tag() {$/;"	f	typeref:typename:void
Observer_notify_propagated_twice	lib/flecs/test/api/src/Observer.c	/^void Observer_notify_propagated_twice() {$/;"	f	typeref:typename:void
Observer_observer_superset_wildcard	lib/flecs/test/api/src/Observer.c	/^void Observer_observer_superset_wildcard() {$/;"	f	typeref:typename:void
Observer_observer_superset_wildcard_add_isa	lib/flecs/test/api/src/Observer.c	/^void Observer_observer_superset_wildcard_add_isa() {$/;"	f	typeref:typename:void
Observer_observer_superset_wildcard_add_isa_at_offset	lib/flecs/test/api/src/Observer.c	/^void Observer_observer_superset_wildcard_add_isa_at_offset() {$/;"	f	typeref:typename:void
Observer_observer_w_self	lib/flecs/test/api/src/Observer.c	/^void Observer_observer_w_self() {$/;"	f	typeref:typename:void
Observer_observer_w_self	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_observer_w_self() {$/;"	f	typeref:typename:void
Observer_on_add_yield_existing	lib/flecs/test/api/src/Observer.c	/^void Observer_on_add_yield_existing() {$/;"	f	typeref:typename:void
Observer_on_add_yield_existing_2_tables	lib/flecs/test/api/src/Observer.c	/^void Observer_on_add_yield_existing_2_tables() {$/;"	f	typeref:typename:void
Observer_on_add_yield_existing_2_terms	lib/flecs/test/api/src/Observer.c	/^void Observer_on_add_yield_existing_2_terms() {$/;"	f	typeref:typename:void
Observer_on_set_n_entities	lib/flecs/test/api/src/Observer.c	/^void Observer_on_set_n_entities() {$/;"	f	typeref:typename:void
Observer_on_set_n_entities_2_comp	lib/flecs/test/api/src/Observer.c	/^void Observer_on_set_n_entities_2_comp() {$/;"	f	typeref:typename:void
Observer_on_set_w_tag	lib/flecs/test/api/src/Observer.c	/^void Observer_on_set_w_tag() {$/;"	f	typeref:typename:void
Observer_or_from	lib/flecs/test/api/src/Observer.c	/^void Observer_or_from() {$/;"	f	typeref:typename:void
Observer_overlapping_unset_systems	lib/flecs/test/api/src/Observer.c	/^void Observer_overlapping_unset_systems() {$/;"	f	typeref:typename:void
Observer_readonly_term	lib/flecs/test/api/src/Observer.c	/^void Observer_readonly_term() {$/;"	f	typeref:typename:void
Observer_remove_after_delete_observer	lib/flecs/test/api/src/Observer.c	/^void Observer_remove_after_delete_observer() {$/;"	f	typeref:typename:void
Observer_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Observer_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Observer_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Observer_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Observer_trigger_on_disabled	lib/flecs/test/api/src/Observer.c	/^void Observer_trigger_on_disabled() {$/;"	f	typeref:typename:void
Observer_trigger_on_prefab	lib/flecs/test/api/src/Observer.c	/^void Observer_trigger_on_prefab() {$/;"	f	typeref:typename:void
Observer_unset_1_of_1	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_1_of_1() {$/;"	f	typeref:typename:void
Observer_unset_1_of_2	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_1_of_2() {$/;"	f	typeref:typename:void
Observer_unset_1_of_3	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_1_of_3() {$/;"	f	typeref:typename:void
Observer_unset_move_to_nonempty_table	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_move_to_nonempty_table() {$/;"	f	typeref:typename:void
Observer_unset_on_delete_1	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_on_delete_1() {$/;"	f	typeref:typename:void
Observer_unset_on_delete_2	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_on_delete_2() {$/;"	f	typeref:typename:void
Observer_unset_on_delete_3	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_on_delete_3() {$/;"	f	typeref:typename:void
Observer_unset_on_fini_1	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_on_fini_1() {$/;"	f	typeref:typename:void
Observer_unset_on_fini_2	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_on_fini_2() {$/;"	f	typeref:typename:void
Observer_unset_on_fini_3	lib/flecs/test/api/src/Observer.c	/^void Observer_unset_on_fini_3() {$/;"	f	typeref:typename:void
Observer_w_1_filter_term	lib/flecs/test/api/src/Observer.c	/^void Observer_w_1_filter_term(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Observer_w_2_filter_terms	lib/flecs/test/api/src/Observer.c	/^void Observer_w_2_filter_terms(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Observer_w_filter_term	lib/flecs/test/api/src/Observer.c	/^void Observer_w_filter_term(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Observer_w_self	lib/flecs/test/api/src/Observer.c	/^void Observer_w_self(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Observer_w_value	lib/flecs/test/api/src/Observer.c	/^void Observer_w_value(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Observer_wildcard_pair_w_obj_component	lib/flecs/test/api/src/Observer.c	/^void Observer_wildcard_pair_w_obj_component() {$/;"	f	typeref:typename:void
Observer_wildcard_pair_w_pred_component	lib/flecs/test/api/src/Observer.c	/^void Observer_wildcard_pair_w_pred_component() {$/;"	f	typeref:typename:void
Observer_write_in_unset	lib/flecs/test/api/src/Observer.c	/^void Observer_write_in_unset() {$/;"	f	typeref:typename:void
Observer_yield_existing	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_yield_existing() {$/;"	f	typeref:typename:void
Observer_yield_existing_2_terms	lib/flecs/test/cpp_api/src/Observer.cpp	/^void Observer_yield_existing_2_terms() {$/;"	f	typeref:typename:void
Occupied	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^    Occupied,$/;"	e	enum:TileStatus	file:
OnAdd	lib/flecs/flecs.h	/^static const flecs::entity_t OnAdd = EcsOnAdd;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnAdd	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t OnAdd = EcsOnAdd;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnAdd	lib/flecs/test/api/src/Set.c	/^void OnAdd(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnAdd	lib/flecs/test/api/src/SingleThreadStaging.c	/^void OnAdd(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnAddEntity	lib/flecs/test/api/src/Prefab.c	/^void OnAddEntity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnAddRemove	lib/flecs/test/api/src/Set.c	/^void OnAddRemove(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnAdd_check_order	lib/flecs/test/api/src/TriggerOnSet.c	/^void OnAdd_check_order(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnDelete	lib/flecs/flecs.h	/^static const flecs::entity_t OnDelete = EcsOnDelete;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnDelete	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t OnDelete = EcsOnDelete;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnDeleteObject	lib/flecs/flecs.h	/^static const flecs::entity_t OnDeleteObject = EcsOnDeleteObject;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnDeleteObject	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t OnDeleteObject = EcsOnDeleteObject;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnDelete_deep_clean_256	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_deep_clean_256() {$/;"	f	typeref:typename:void
OnDelete_deep_clean_64	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_deep_clean_64() {$/;"	f	typeref:typename:void
OnDelete_delete_all_with_entity	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_all_with_entity() {$/;"	f	typeref:typename:void
OnDelete_delete_child_of_delete_with	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_child_of_delete_with() {$/;"	f	typeref:typename:void
OnDelete_delete_other_in_on_remove_during_fini	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_other_in_on_remove_during_fini() {$/;"	f	typeref:typename:void
OnDelete_delete_table_in_on_remove_during_fini	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_table_in_on_remove_during_fini() {$/;"	f	typeref:typename:void
OnDelete_delete_with_component	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_with_component() {$/;"	f	typeref:typename:void
OnDelete_delete_with_object_wildcard	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_with_object_wildcard() {$/;"	f	typeref:typename:void
OnDelete_delete_with_pair	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_with_pair() {$/;"	f	typeref:typename:void
OnDelete_delete_with_relation_wildcard	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_with_relation_wildcard() {$/;"	f	typeref:typename:void
OnDelete_delete_with_tag	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_delete_with_tag() {$/;"	f	typeref:typename:void
OnDelete_on_delete_component_throw	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_component_throw() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_id_default	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_id_default() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_id_delete	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_id_delete() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_id_delete_both	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_id_delete_both() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_id_remove	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_id_remove() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_id_remove_both	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_id_remove_both() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_object_default	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_object_default() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_object_delete	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_object_delete() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_object_mixed	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_object_mixed() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_object_remove	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_object_remove() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_overlapping_new_tables	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_overlapping_new_tables() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_overlapping_table	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_overlapping_table() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_relation_default	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_relation_default() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_relation_delete	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_relation_delete() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_relation_delete_both	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_relation_delete_both() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_relation_remove	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_relation_remove() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_relation_remove_both	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_relation_remove_both() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_set_empty	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_set_empty() {$/;"	f	typeref:typename:void
OnDelete_on_delete_cyclic_storage_table	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_cyclic_storage_table() {$/;"	f	typeref:typename:void
OnDelete_on_delete_delete_recursive	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_delete_recursive() {$/;"	f	typeref:typename:void
OnDelete_on_delete_empty_table_w_on_remove	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_empty_table_w_on_remove() {$/;"	f	typeref:typename:void
OnDelete_on_delete_flags	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_flags() {$/;"	f	typeref:typename:void
OnDelete_on_delete_id_default	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_id_default() {$/;"	f	typeref:typename:void
OnDelete_on_delete_id_delete	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_id_delete() {$/;"	f	typeref:typename:void
OnDelete_on_delete_id_delete_no_instances	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_id_delete_no_instances() {$/;"	f	typeref:typename:void
OnDelete_on_delete_id_remove	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_id_remove() {$/;"	f	typeref:typename:void
OnDelete_on_delete_id_remove_no_instances	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_id_remove_no_instances() {$/;"	f	typeref:typename:void
OnDelete_on_delete_id_throw	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_id_throw() {$/;"	f	typeref:typename:void
OnDelete_on_delete_id_throw_no_instances	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_id_throw_no_instances() {$/;"	f	typeref:typename:void
OnDelete_on_delete_merge_pair_component	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_merge_pair_component() {$/;"	f	typeref:typename:void
OnDelete_on_delete_object_default	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_object_default() {$/;"	f	typeref:typename:void
OnDelete_on_delete_object_delete	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_object_delete() {$/;"	f	typeref:typename:void
OnDelete_on_delete_object_mixed	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_object_mixed() {$/;"	f	typeref:typename:void
OnDelete_on_delete_object_remove	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_object_remove() {$/;"	f	typeref:typename:void
OnDelete_on_delete_object_throw	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_object_throw() {$/;"	f	typeref:typename:void
OnDelete_on_delete_relation_default	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_relation_default() {$/;"	f	typeref:typename:void
OnDelete_on_delete_relation_delete	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_relation_delete() {$/;"	f	typeref:typename:void
OnDelete_on_delete_relation_remove	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_relation_remove() {$/;"	f	typeref:typename:void
OnDelete_on_delete_relation_throw	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_relation_throw() {$/;"	f	typeref:typename:void
OnDelete_on_delete_remove_2_comps	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_remove_2_comps() {$/;"	f	typeref:typename:void
OnDelete_on_delete_remove_2_comps_to_existing_table	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_remove_2_comps_to_existing_table() {$/;"	f	typeref:typename:void
OnDelete_on_delete_remove_2_relations	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_remove_2_relations() {$/;"	f	typeref:typename:void
OnDelete_on_delete_remove_id_w_role	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_remove_id_w_role() {$/;"	f	typeref:typename:void
OnDelete_on_delete_remove_object_w_2_relations	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_remove_object_w_2_relations() {$/;"	f	typeref:typename:void
OnDelete_on_delete_remove_object_w_50_relations	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_remove_object_w_50_relations() {$/;"	f	typeref:typename:void
OnDelete_on_delete_remove_object_w_50_relations_3_tables	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_remove_object_w_50_relations_3_tables() {$/;"	f	typeref:typename:void
OnDelete_on_delete_remove_object_w_5_relations	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_on_delete_remove_object_w_5_relations() {$/;"	f	typeref:typename:void
OnDelete_remove_childof_entity	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_remove_childof_entity() {$/;"	f	typeref:typename:void
OnDelete_remove_childof_wildcard	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_remove_childof_wildcard() {$/;"	f	typeref:typename:void
OnDelete_remove_id_and_relation	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_remove_id_and_relation() {$/;"	f	typeref:typename:void
OnDelete_remove_id_and_relation_from_2_tables	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_remove_id_and_relation_from_2_tables() {$/;"	f	typeref:typename:void
OnDelete_remove_id_from_2_tables	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_remove_id_from_2_tables() {$/;"	f	typeref:typename:void
OnDelete_remove_object_from_2_tables	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_remove_object_from_2_tables() {$/;"	f	typeref:typename:void
OnDelete_remove_relation_from_2_tables	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_remove_relation_from_2_tables() {$/;"	f	typeref:typename:void
OnDelete_stresstest_many_objects	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_stresstest_many_objects() {$/;"	f	typeref:typename:void
OnDelete_stresstest_many_objects_on_delete	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_stresstest_many_objects_on_delete() {$/;"	f	typeref:typename:void
OnDelete_stresstest_many_relations	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_stresstest_many_relations() {$/;"	f	typeref:typename:void
OnDelete_stresstest_many_relations_on_delete	lib/flecs/test/api/src/OnDelete.c	/^void OnDelete_stresstest_many_relations_on_delete() {$/;"	f	typeref:typename:void
OnDelete_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case OnDelete_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
OnLoad	lib/flecs/flecs.h	/^static const flecs::entity_t OnLoad = EcsOnLoad;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnLoad	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t OnLoad = EcsOnLoad;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnLoadTask	lib/flecs/test/api/src/Tasks.c	/^void OnLoadTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnPeriodSystem	lib/flecs/test/api/src/SystemPeriodic.c	/^void OnPeriodSystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnPosition	lib/flecs/test/api/src/Monitor.c	/^void OnPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnPosition	lib/flecs/test/api/src/SystemOnSet.c	/^void OnPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnRemove	lib/flecs/flecs.h	/^static const flecs::entity_t OnRemove = EcsOnRemove;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnRemove	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t OnRemove = EcsOnRemove;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnRemoveHasTag	lib/flecs/test/api/src/TriggerOnRemove.c	/^void OnRemoveHasTag(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnRemoveSystem	lib/flecs/test/api/src/Delete.c	/^void OnRemoveSystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnRequest	lib/flecs/test/api/src/Http.c	/^static bool OnRequest($/;"	f	typeref:typename:bool	file:
OnSet	lib/flecs/flecs.h	/^static const flecs::entity_t OnSet = EcsOnSet;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnSet	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t OnSet = EcsOnSet;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnSet	lib/flecs/test/api/src/TriggerOnSet.c	/^void OnSet(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnSetPosition	lib/flecs/test/api/src/Set.c	/^void OnSetPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void
OnSetPosition	lib/flecs/test/api/src/TriggerOnAdd.c	/^void OnSetPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnSetShared	lib/flecs/test/api/src/TriggerOnSet.c	/^void OnSetShared(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnSetVelocity	lib/flecs/test/api/src/DeferredActions.c	/^void OnSetVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnSetVelocity	lib/flecs/test/api/src/Prefab.c	/^void OnSetVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnSet_check_order	lib/flecs/test/api/src/TriggerOnSet.c	/^void OnSet_check_order(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnStore	lib/flecs/flecs.h	/^static const flecs::entity_t OnStore = EcsOnStore;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnStore	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t OnStore = EcsOnStore;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnStoreTask	lib/flecs/test/api/src/Tasks.c	/^void OnStoreTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnUpdate	lib/flecs/flecs.h	/^static const flecs::entity_t OnUpdate = EcsOnUpdate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnUpdate	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t OnUpdate = EcsOnUpdate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnUpdate	lib/flecs/test/cpp_api/src/System.cpp	/^    struct OnUpdate { };$/;"	s	struct:PipelineType	file:
OnUpdatePipeline	lib/flecs/flecs.c	/^void OnUpdatePipeline($/;"	f	typeref:typename:void	file:
OnUpdatePipeline	lib/flecs/src/addons/pipeline/pipeline.c	/^void OnUpdatePipeline($/;"	f	typeref:typename:void	file:
OnUpdateTask	lib/flecs/test/api/src/Tasks.c	/^void OnUpdateTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OnValidate	lib/flecs/flecs.h	/^static const flecs::entity_t OnValidate = EcsOnValidate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnValidate	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t OnValidate = EcsOnValidate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OnValidateTask	lib/flecs/test/api/src/Tasks.c	/^void OnValidateTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
On_PV	lib/flecs/test/api/src/SingleThreadStaging.c	/^void On_PV(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
On_PV	lib/flecs/test/api/src/SystemOnSet.c	/^void On_PV(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
On_V	lib/flecs/test/api/src/SingleThreadStaging.c	/^void On_V(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Optional	lib/flecs/flecs.h	/^    Optional = EcsOptional,$/;"	e	enum:flecs::oper_kind_t
Optional	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    Optional = EcsOptional,$/;"	e	enum:flecs::oper_kind_t
Or	lib/flecs/flecs.h	/^    Or = EcsOr,$/;"	e	enum:flecs::oper_kind_t
Or	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    Or = EcsOr,$/;"	e	enum:flecs::oper_kind_t
OrFrom	lib/flecs/flecs.h	/^    OrFrom = EcsOrFrom,$/;"	e	enum:flecs::oper_kind_t
OrFrom	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    OrFrom = EcsOrFrom,$/;"	e	enum:flecs::oper_kind_t
Other	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^struct Other {$/;"	s	file:
Other	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^struct Other {$/;"	s	file:
Out	lib/flecs/flecs.h	/^    Out = EcsOut$/;"	e	enum:flecs::inout_kind_t
Out	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    Out = EcsOut$/;"	e	enum:flecs::inout_kind_t
Outer	lib/flecs/test/cpp_api/src/World.cpp	/^struct Outer$/;"	s	file:
Override	lib/flecs/flecs.h	/^static const flecs::entity_t Override = ECS_OVERRIDE;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Override	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Override = ECS_OVERRIDE;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
OverrideAfterRemove	lib/flecs/test/api/src/SingleThreadStaging.c	/^void OverrideAfterRemove(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
OwnedOr	lib/flecs/test/api/src/SystemPeriodic.c	/^void OwnedOr(ecs_iter_t *it) {$/;"	f	typeref:typename:void
PIPELINE_BAKE_CONFIG_H	lib/flecs/examples/c/systems/pipeline/include/pipeline/bake_config.h	/^#define PIPELINE_BAKE_CONFIG_H$/;"	d
PIPELINE_BAKE_CONFIG_H	lib/flecs/examples/cpp/systems/pipeline/include/pipeline/bake_config.h	/^#define PIPELINE_BAKE_CONFIG_H$/;"	d
PIPELINE_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/pipeline/include/pipeline/bake_config.h	/^#define PIPELINE_BAKE_CONFIG_H$/;"	d
PIPELINE_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/pipeline_w_system/include/pipeline/bake_config.h	/^#define PIPELINE_BAKE_CONFIG_H$/;"	d
PIPELINE_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/pipeline/include/pipeline/bake_config.h	/^#define PIPELINE_BAKE_CONFIG_H$/;"	d
PIPELINE_H	lib/flecs/examples/c/systems/pipeline/include/pipeline.h	/^#define PIPELINE_H$/;"	d
PIPELINE_H	lib/flecs/examples/cpp/systems/pipeline/include/pipeline.h	/^#define PIPELINE_H$/;"	d
PIPELINE_H	lib/flecs/test/custom_builds/c/pipeline/include/pipeline.h	/^#define PIPELINE_H$/;"	d
PIPELINE_H	lib/flecs/test/custom_builds/cpp/pipeline/include/pipeline.h	/^#define PIPELINE_H$/;"	d
PIPELINE_W_SYSTEM_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/pipeline_w_system/include/pipeline_w_system/bake_config.h	/^#define PIPELINE_W_SYSTEM_BAKE_CONFIG_H$/;"	d
PIPELINE_W_SYSTEM_H	lib/flecs/test/custom_builds/c/pipeline_w_system/include/pipeline_w_system.h	/^#define PIPELINE_W_SYSTEM_H$/;"	d
PLAT_UTILS	lib/uthash/tests/Makefile	/^    PLAT_UTILS = hashscan sleep_test$/;"	m
PLAT_UTILS	lib/uthash/tests/Makefile	/^  PLAT_UTILS = hashscan sleep_test$/;"	m
PLECS_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/plecs/include/plecs/bake_config.h	/^#define PLECS_BAKE_CONFIG_H$/;"	d
PLECS_H	lib/flecs/test/custom_builds/c/plecs/include/plecs.h	/^#define PLECS_H$/;"	d
PLECS_W_PARSER_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/plecs_w_parser/include/plecs_w_parser/bake_config.h	/^#define PLECS_W_PARSER_BAKE_CONFIG_H$/;"	d
PLECS_W_PARSER_H	lib/flecs/test/custom_builds/c/plecs_w_parser/include/plecs_w_parser.h	/^#define PLECS_W_PARSER_H$/;"	d
PORTABLE_TYPE_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/portable_type/include/portable_type/bake_config.h	/^#define PORTABLE_TYPE_BAKE_CONFIG_H$/;"	d
PORTABLE_TYPE_H	lib/flecs/examples/cpp/reflection/portable_type/include/portable_type.h	/^#define PORTABLE_TYPE_H$/;"	d
PREFAB_BAKE_CONFIG_H	lib/flecs/examples/c/entities/prefab/include/prefab/bake_config.h	/^#define PREFAB_BAKE_CONFIG_H$/;"	d
PREFAB_BAKE_CONFIG_H	lib/flecs/examples/cpp/entities/prefab/include/prefab/bake_config.h	/^#define PREFAB_BAKE_CONFIG_H$/;"	d
PREFAB_H	lib/flecs/examples/c/entities/prefab/include/prefab.h	/^#define PREFAB_H$/;"	d
PREFAB_H	lib/flecs/examples/cpp/entities/prefab/include/prefab.h	/^#define PREFAB_H$/;"	d
PROGS	lib/uthash/tests/Makefile	/^PROGS = test1 test2 test3 test4 test5 test6 test7 test8 test9   \\$/;"	m
PROGS	lib/uthash/tests/threads/Makefile	/^PROGS = test1 test2$/;"	m
PTRACE_ATTACH	lib/uthash/tests/hashscan.c	/^#define PTRACE_ATTACH /;"	d	file:
PTRACE_DETACH	lib/uthash/tests/hashscan.c	/^#define PTRACE_DETACH /;"	d	file:
Pair	lib/flecs/flecs.h	/^static const flecs::entity_t Pair = ECS_PAIR;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Pair	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Pair = ECS_PAIR;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Pair	lib/flecs/test/api/src/ComponentLifecycle.c	/^typedef struct Pair {$/;"	s	file:
Pair	lib/flecs/test/api/src/ComponentLifecycle.c	/^} Pair;$/;"	t	typeref:struct:Pair	file:
Pair	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^struct Pair {$/;"	s	file:
Pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^typedef struct Pair {$/;"	s	file:
Pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^} Pair;$/;"	t	typeref:struct:Pair	file:
Pair	lib/flecs/test/cpp_api/src/Query.cpp	/^struct Pair {$/;"	s	file:
PairTrigger	lib/flecs/test/api/src/Pairs.c	/^void PairTrigger(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
PairTriggerPosition	lib/flecs/test/api/src/Pairs.c	/^void PairTriggerPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
PairTriggerVelocity	lib/flecs/test/api/src/Pairs.c	/^void PairTriggerVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Pairs_2_with	lib/flecs/test/api/src/Pairs.c	/^void Pairs_2_with() {$/;"	f	typeref:typename:void
Pairs_2_with_relation	lib/flecs/test/api/src/Pairs.c	/^void Pairs_2_with_relation() {$/;"	f	typeref:typename:void
Pairs_65k_relations	lib/flecs/test/api/src/Pairs.c	/^void Pairs_65k_relations() {$/;"	f	typeref:typename:void
Pairs_add_component_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_add_component_pair() {$/;"	f	typeref:typename:void
Pairs_add_exclusive_non_empty_table	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_exclusive_non_empty_table() {$/;"	f	typeref:typename:void
Pairs_add_exclusive_non_empty_table_w_pairs	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_exclusive_non_empty_table_w_pairs() {$/;"	f	typeref:typename:void
Pairs_add_exclusive_non_trivial_edge	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_exclusive_non_trivial_edge() {$/;"	f	typeref:typename:void
Pairs_add_exclusive_relation_twice	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_exclusive_relation_twice() {$/;"	f	typeref:typename:void
Pairs_add_existing_exclusive_pair_after_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_existing_exclusive_pair_after_pair() {$/;"	f	typeref:typename:void
Pairs_add_not_alive_relation	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_not_alive_relation() {$/;"	f	typeref:typename:void
Pairs_add_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_pair() {$/;"	f	typeref:typename:void
Pairs_add_pair_to_entity_w_exclusive_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_pair_to_entity_w_exclusive_pair() {$/;"	f	typeref:typename:void
Pairs_add_pair_to_entity_w_scope	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_pair_to_entity_w_scope() {$/;"	f	typeref:typename:void
Pairs_add_pair_type	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_add_pair_type() {$/;"	f	typeref:typename:void
Pairs_add_same_exclusive_relation_twice	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_same_exclusive_relation_twice() {$/;"	f	typeref:typename:void
Pairs_add_symmetric_exclusive_relation	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_symmetric_exclusive_relation() {$/;"	f	typeref:typename:void
Pairs_add_symmetric_relation	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_symmetric_relation() {$/;"	f	typeref:typename:void
Pairs_add_tag_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_add_tag_pair() {$/;"	f	typeref:typename:void
Pairs_add_tag_pair_for_component	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_tag_pair_for_component() {$/;"	f	typeref:typename:void
Pairs_add_tag_pair_for_tag	lib/flecs/test/api/src/Pairs.c	/^void Pairs_add_tag_pair_for_tag() {$/;"	f	typeref:typename:void
Pairs_add_tag_pair_to_tag	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_add_tag_pair_to_tag() {$/;"	f	typeref:typename:void
Pairs_api_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_api_pair() {$/;"	f	typeref:typename:void
Pairs_api_pair_w_both_wildcard	lib/flecs/test/api/src/Pairs.c	/^void Pairs_api_pair_w_both_wildcard() {$/;"	f	typeref:typename:void
Pairs_api_pair_w_explicit_subj	lib/flecs/test/api/src/Pairs.c	/^void Pairs_api_pair_w_explicit_subj() {$/;"	f	typeref:typename:void
Pairs_api_pair_w_explicit_subj_this	lib/flecs/test/api/src/Pairs.c	/^void Pairs_api_pair_w_explicit_subj_this() {$/;"	f	typeref:typename:void
Pairs_api_pair_w_obj_wildcard	lib/flecs/test/api/src/Pairs.c	/^void Pairs_api_pair_w_obj_wildcard() {$/;"	f	typeref:typename:void
Pairs_api_pair_w_pred_wildcard	lib/flecs/test/api/src/Pairs.c	/^void Pairs_api_pair_w_pred_wildcard() {$/;"	f	typeref:typename:void
Pairs_delete_entity_w_symmetric_relation	lib/flecs/test/api/src/Pairs.c	/^void Pairs_delete_entity_w_symmetric_relation() {$/;"	f	typeref:typename:void
Pairs_dont_inherit	lib/flecs/test/api/src/Pairs.c	/^void Pairs_dont_inherit() {$/;"	f	typeref:typename:void
Pairs_dsl_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_dsl_pair() {$/;"	f	typeref:typename:void
Pairs_dsl_pair_w_both_wildcard	lib/flecs/test/api/src/Pairs.c	/^void Pairs_dsl_pair_w_both_wildcard() {$/;"	f	typeref:typename:void
Pairs_dsl_pair_w_explicit_subj	lib/flecs/test/api/src/Pairs.c	/^void Pairs_dsl_pair_w_explicit_subj() {$/;"	f	typeref:typename:void
Pairs_dsl_pair_w_explicit_subj_this	lib/flecs/test/api/src/Pairs.c	/^void Pairs_dsl_pair_w_explicit_subj_this() {$/;"	f	typeref:typename:void
Pairs_dsl_pair_w_obj_wildcard	lib/flecs/test/api/src/Pairs.c	/^void Pairs_dsl_pair_w_obj_wildcard() {$/;"	f	typeref:typename:void
Pairs_dsl_pair_w_pred_wildcard	lib/flecs/test/api/src/Pairs.c	/^void Pairs_dsl_pair_w_pred_wildcard() {$/;"	f	typeref:typename:void
Pairs_each	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_each() {$/;"	f	typeref:typename:void
Pairs_each_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_each_pair() {$/;"	f	typeref:typename:void
Pairs_each_pair_by_type	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_each_pair_by_type() {$/;"	f	typeref:typename:void
Pairs_each_pair_w_isa	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_each_pair_w_isa() {$/;"	f	typeref:typename:void
Pairs_each_pair_w_recycled_obj	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_each_pair_w_recycled_obj() {$/;"	f	typeref:typename:void
Pairs_each_pair_w_recycled_rel	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_each_pair_w_recycled_rel() {$/;"	f	typeref:typename:void
Pairs_get_1_object	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_1_object() {$/;"	f	typeref:typename:void
Pairs_get_1_object_not_found	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_1_object_not_found() {$/;"	f	typeref:typename:void
Pairs_get_1_pair_arg	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_1_pair_arg() {$/;"	f	typeref:typename:void
Pairs_get_2_pair_arg	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_2_pair_arg() {$/;"	f	typeref:typename:void
Pairs_get_R_obj	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_R_obj() {$/;"	f	typeref:typename:void
Pairs_get_R_obj_id	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_R_obj_id() {$/;"	f	typeref:typename:void
Pairs_get_R_obj_id_t	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_R_obj_id_t() {$/;"	f	typeref:typename:void
Pairs_get_inline_pair_type	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_inline_pair_type() {$/;"	f	typeref:typename:void
Pairs_get_mut_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_mut_pair() {$/;"	f	typeref:typename:void
Pairs_get_mut_pair_existing	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_mut_pair_existing() {$/;"	f	typeref:typename:void
Pairs_get_mut_pair_tag	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_mut_pair_tag() {$/;"	f	typeref:typename:void
Pairs_get_mut_pair_tag_existing	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_mut_pair_tag_existing() {$/;"	f	typeref:typename:void
Pairs_get_n_objects	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_n_objects() {$/;"	f	typeref:typename:void
Pairs_get_object_for_id_base	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_object_for_id_base() {$/;"	f	typeref:typename:void
Pairs_get_object_for_id_from_base	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_object_for_id_from_base() {$/;"	f	typeref:typename:void
Pairs_get_object_for_id_from_nested_base	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_object_for_id_from_nested_base() {$/;"	f	typeref:typename:void
Pairs_get_object_for_id_from_self	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_object_for_id_from_self() {$/;"	f	typeref:typename:void
Pairs_get_object_for_id_not_found	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_object_for_id_not_found() {$/;"	f	typeref:typename:void
Pairs_get_object_for_id_not_found	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_object_for_id_not_found() {$/;"	f	typeref:typename:void
Pairs_get_object_for_id_self	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_object_for_id_self() {$/;"	f	typeref:typename:void
Pairs_get_object_for_type_base	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_object_for_type_base() {$/;"	f	typeref:typename:void
Pairs_get_object_for_type_self	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_object_for_type_self() {$/;"	f	typeref:typename:void
Pairs_get_object_for_wildcard_from_base	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_object_for_wildcard_from_base() {$/;"	f	typeref:typename:void
Pairs_get_object_for_wildcard_from_nested_base	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_object_for_wildcard_from_nested_base() {$/;"	f	typeref:typename:void
Pairs_get_object_for_wildcard_from_self	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_object_for_wildcard_from_self() {$/;"	f	typeref:typename:void
Pairs_get_pair_type_object	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_pair_type_object() {$/;"	f	typeref:typename:void
Pairs_get_recycled_object_from_id	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_recycled_object_from_id() {$/;"	f	typeref:typename:void
Pairs_get_recycled_relation_from_id	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_recycled_relation_from_id() {$/;"	f	typeref:typename:void
Pairs_get_rel_obj	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_rel_obj() {$/;"	f	typeref:typename:void
Pairs_get_rel_obj_id	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_rel_obj_id() {$/;"	f	typeref:typename:void
Pairs_get_rel_obj_id_t	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_rel_obj_id_t() {$/;"	f	typeref:typename:void
Pairs_get_relation_from_id	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_relation_from_id() {$/;"	f	typeref:typename:void
Pairs_get_tag_pair_w_obj_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_tag_pair_w_obj_comp() {$/;"	f	typeref:typename:void
Pairs_get_tag_pair_w_rel_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_tag_pair_w_rel_comp() {$/;"	f	typeref:typename:void
Pairs_get_tag_pair_w_rel_obj_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_tag_pair_w_rel_obj_comp() {$/;"	f	typeref:typename:void
Pairs_get_typeid_w_recycled_obj	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_typeid_w_recycled_obj() {$/;"	f	typeref:typename:void
Pairs_get_typeid_w_recycled_rel	lib/flecs/test/api/src/Pairs.c	/^void Pairs_get_typeid_w_recycled_rel() {$/;"	f	typeref:typename:void
Pairs_get_w_object	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_w_object() {$/;"	f	typeref:typename:void
Pairs_get_w_object_from_id	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_w_object_from_id() {$/;"	f	typeref:typename:void
Pairs_get_w_object_id	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_w_object_id() {$/;"	f	typeref:typename:void
Pairs_get_w_object_id_t	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_get_w_object_id_t() {$/;"	f	typeref:typename:void
Pairs_has_pair_type	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_has_pair_type() {$/;"	f	typeref:typename:void
Pairs_has_pair_wildcard_w_tag	lib/flecs/test/api/src/Pairs.c	/^void Pairs_has_pair_wildcard_w_tag() {$/;"	f	typeref:typename:void
Pairs_has_tag_w_object	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_has_tag_w_object() {$/;"	f	typeref:typename:void
Pairs_has_w_object_tag	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_has_w_object_tag() {$/;"	f	typeref:typename:void
Pairs_has_wildcard_w_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_has_wildcard_w_pair() {$/;"	f	typeref:typename:void
Pairs_id_str_w_recycled_obj	lib/flecs/test/api/src/Pairs.c	/^void Pairs_id_str_w_recycled_obj() {$/;"	f	typeref:typename:void
Pairs_id_str_w_recycled_rel	lib/flecs/test/api/src/Pairs.c	/^void Pairs_id_str_w_recycled_rel() {$/;"	f	typeref:typename:void
Pairs_ignore_childof_from_base	lib/flecs/test/api/src/Pairs.c	/^void Pairs_ignore_childof_from_base() {$/;"	f	typeref:typename:void
Pairs_inherit_exclusive	lib/flecs/test/api/src/Pairs.c	/^void Pairs_inherit_exclusive() {    $/;"	f	typeref:typename:void
Pairs_match_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_match_pair() {$/;"	f	typeref:typename:void
Pairs_match_pair_both_wildcard	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_match_pair_both_wildcard() {$/;"	f	typeref:typename:void
Pairs_match_pair_obj_wildcard	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_match_pair_obj_wildcard() {$/;"	f	typeref:typename:void
Pairs_match_pair_rel_wildcard	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_match_pair_rel_wildcard() {$/;"	f	typeref:typename:void
Pairs_nested_with	lib/flecs/test/api/src/Pairs.c	/^void Pairs_nested_with() {$/;"	f	typeref:typename:void
Pairs_nested_with_relation	lib/flecs/test/api/src/Pairs.c	/^void Pairs_nested_with_relation() {$/;"	f	typeref:typename:void
Pairs_on_add_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_on_add_pair() {$/;"	f	typeref:typename:void
Pairs_on_add_pair_tag	lib/flecs/test/api/src/Pairs.c	/^void Pairs_on_add_pair_tag() {$/;"	f	typeref:typename:void
Pairs_on_remove_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_on_remove_pair() {$/;"	f	typeref:typename:void
Pairs_on_remove_pair_on_delete	lib/flecs/test/api/src/Pairs.c	/^void Pairs_on_remove_pair_on_delete() {$/;"	f	typeref:typename:void
Pairs_on_remove_pair_tag	lib/flecs/test/api/src/Pairs.c	/^void Pairs_on_remove_pair_tag() {$/;"	f	typeref:typename:void
Pairs_on_remove_pair_tag_on_delete	lib/flecs/test/api/src/Pairs.c	/^void Pairs_on_remove_pair_tag_on_delete() {$/;"	f	typeref:typename:void
Pairs_override_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_override_pair() {$/;"	f	typeref:typename:void
Pairs_override_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_override_pair() {$/;"	f	typeref:typename:void
Pairs_override_tag_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_override_tag_pair() {$/;"	f	typeref:typename:void
Pairs_override_tag_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_override_tag_pair() {$/;"	f	typeref:typename:void
Pairs_pair_w_component_query	lib/flecs/test/api/src/Pairs.c	/^void Pairs_pair_w_component_query() {$/;"	f	typeref:typename:void
Pairs_query_2_pairs	lib/flecs/test/api/src/Pairs.c	/^void Pairs_query_2_pairs() {$/;"	f	typeref:typename:void
Pairs_query_2_pairs_2_instances_per_type	lib/flecs/test/api/src/Pairs.c	/^void Pairs_query_2_pairs_2_instances_per_type() {$/;"	f	typeref:typename:void
Pairs_query_not_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_query_not_pair() {$/;"	f	typeref:typename:void
Pairs_query_pair_or_component	lib/flecs/test/api/src/Pairs.c	/^void Pairs_query_pair_or_component() {$/;"	f	typeref:typename:void
Pairs_query_pair_or_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_query_pair_or_pair() {$/;"	f	typeref:typename:void
Pairs_remove_component_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_remove_component_pair() {$/;"	f	typeref:typename:void
Pairs_remove_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_remove_pair() {$/;"	f	typeref:typename:void
Pairs_remove_pair_type	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_remove_pair_type() {$/;"	f	typeref:typename:void
Pairs_remove_relation_wildcard	lib/flecs/test/api/src/Pairs.c	/^void Pairs_remove_relation_wildcard() {$/;"	f	typeref:typename:void
Pairs_remove_symmetric_relation	lib/flecs/test/api/src/Pairs.c	/^void Pairs_remove_symmetric_relation() {$/;"	f	typeref:typename:void
Pairs_remove_tag_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_remove_tag_pair() {$/;"	f	typeref:typename:void
Pairs_remove_tag_pair_to_tag	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_remove_tag_pair_to_tag() {$/;"	f	typeref:typename:void
Pairs_remove_wildcard	lib/flecs/test/api/src/Pairs.c	/^void Pairs_remove_wildcard() {$/;"	f	typeref:typename:void
Pairs_remove_wildcard_all	lib/flecs/test/api/src/Pairs.c	/^void Pairs_remove_wildcard_all() {$/;"	f	typeref:typename:void
Pairs_set_1_pair_arg	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_set_1_pair_arg() {$/;"	f	typeref:typename:void
Pairs_set_2_pair_arg	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_set_2_pair_arg() {$/;"	f	typeref:typename:void
Pairs_set_component_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_set_component_pair() {$/;"	f	typeref:typename:void
Pairs_set_exclusive_relation_twice	lib/flecs/test/api/src/Pairs.c	/^void Pairs_set_exclusive_relation_twice() {$/;"	f	typeref:typename:void
Pairs_set_get_w_object_variants	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_set_get_w_object_variants() {$/;"	f	typeref:typename:void
Pairs_set_inline_pair_type	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_set_inline_pair_type() {$/;"	f	typeref:typename:void
Pairs_set_object_w_zero_sized_rel_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_set_object_w_zero_sized_rel_comp() {$/;"	f	typeref:typename:void
Pairs_set_pair_type	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_set_pair_type() {$/;"	f	typeref:typename:void
Pairs_set_pair_type_object	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_set_pair_type_object() {$/;"	f	typeref:typename:void
Pairs_set_tag_pair	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_set_tag_pair() {$/;"	f	typeref:typename:void
Pairs_system_1_pair_instance	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_system_1_pair_instance() {$/;"	f	typeref:typename:void
Pairs_system_2_pair_instances	lib/flecs/test/cpp_api/src/Pairs.cpp	/^void Pairs_system_2_pair_instances() {$/;"	f	typeref:typename:void
Pairs_tag_pair_w_childof_w_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_tag_pair_w_childof_w_comp() {$/;"	f	typeref:typename:void
Pairs_tag_pair_w_isa_w_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_tag_pair_w_isa_w_comp() {$/;"	f	typeref:typename:void
Pairs_tag_pair_w_obj_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_tag_pair_w_obj_comp() {$/;"	f	typeref:typename:void
Pairs_tag_pair_w_rel_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_tag_pair_w_rel_comp() {$/;"	f	typeref:typename:void
Pairs_tag_pair_w_rel_obj_comp	lib/flecs/test/api/src/Pairs.c	/^void Pairs_tag_pair_w_rel_obj_comp() {$/;"	f	typeref:typename:void
Pairs_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Pairs_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Pairs_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Pairs_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Pairs_type_w_one_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_type_w_one_pair() {$/;"	f	typeref:typename:void
Pairs_type_w_two_pairs	lib/flecs/test/api/src/Pairs.c	/^void Pairs_type_w_two_pairs() {$/;"	f	typeref:typename:void
Pairs_typeid_from_component	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_component() {$/;"	f	typeref:typename:void
Pairs_typeid_from_pair	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_pair() {$/;"	f	typeref:typename:void
Pairs_typeid_from_pair_w_obj_type	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_pair_w_obj_type() {$/;"	f	typeref:typename:void
Pairs_typeid_from_pair_w_rel_0_obj_0_type	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_pair_w_rel_0_obj_0_type() {$/;"	f	typeref:typename:void
Pairs_typeid_from_pair_w_rel_0_obj_type	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_pair_w_rel_0_obj_type() {$/;"	f	typeref:typename:void
Pairs_typeid_from_pair_w_rel_obj_0_type	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_pair_w_rel_obj_0_type() {$/;"	f	typeref:typename:void
Pairs_typeid_from_pair_w_rel_obj_type	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_pair_w_rel_obj_type() {$/;"	f	typeref:typename:void
Pairs_typeid_from_pair_w_rel_type	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_pair_w_rel_type() {$/;"	f	typeref:typename:void
Pairs_typeid_from_pair_with_0_obj	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_pair_with_0_obj() {$/;"	f	typeref:typename:void
Pairs_typeid_from_tag	lib/flecs/test/api/src/Pairs.c	/^void Pairs_typeid_from_tag() {$/;"	f	typeref:typename:void
Pairs_with	lib/flecs/test/api/src/Pairs.c	/^void Pairs_with() {$/;"	f	typeref:typename:void
Pairs_with_relation	lib/flecs/test/api/src/Pairs.c	/^void Pairs_with_relation() {$/;"	f	typeref:typename:void
Param	lib/flecs/test/api/src/MultiThread.c	/^typedef struct Param {$/;"	s	file:
Param	lib/flecs/test/api/src/MultiThread.c	/^} Param;$/;"	t	typeref:struct:Param	file:
Param	lib/flecs/test/api/src/Run.c	/^typedef struct Param {$/;"	s	file:
Param	lib/flecs/test/api/src/Run.c	/^} Param;$/;"	t	typeref:struct:Param	file:
Parent	lib/flecs/flecs.h	/^static const uint8_t Parent = EcsParent;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Parent	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const uint8_t Parent = EcsParent;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Parent	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Parent { };$/;"	s	function:Entity_child_of_w_type	file:
Parent	lib/flecs/test/cpp_api/src/Entity.cpp	/^struct Parent {$/;"	s	file:
Parent	lib/flecs/test/cpp_api/src/World.cpp	/^struct Parent {$/;"	s	file:
ParentScope	lib/flecs/test/cpp_api/src/World.cpp	/^struct ParentScope { };$/;"	s	file:
Parser_0	lib/flecs/test/api/src/Parser.c	/^void Parser_0() {$/;"	f	typeref:typename:void
Parser_1_digit_pair_explicit_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_1_digit_pair_explicit_subj() {$/;"	f	typeref:typename:void
Parser_1_digit_pair_implicit_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_1_digit_pair_implicit_subj() {$/;"	f	typeref:typename:void
Parser_1_digit_pred_explicit_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_1_digit_pred_explicit_subj() {$/;"	f	typeref:typename:void
Parser_1_digit_pred_implicit_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_1_digit_pred_implicit_subj() {$/;"	f	typeref:typename:void
Parser_1_digit_pred_no_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_1_digit_pred_no_subj() {$/;"	f	typeref:typename:void
Parser_2_component_not	lib/flecs/test/api/src/Parser.c	/^void Parser_2_component_not() {$/;"	f	typeref:typename:void
Parser_2_component_not_no_space	lib/flecs/test/api/src/Parser.c	/^void Parser_2_component_not_no_space() {$/;"	f	typeref:typename:void
Parser_2_component_optional	lib/flecs/test/api/src/Parser.c	/^void Parser_2_component_optional() {$/;"	f	typeref:typename:void
Parser_2_component_optional_no_space	lib/flecs/test/api/src/Parser.c	/^void Parser_2_component_optional_no_space() {$/;"	f	typeref:typename:void
Parser_2_newlines	lib/flecs/test/api/src/Parser.c	/^void Parser_2_newlines() {$/;"	f	typeref:typename:void
Parser_2_or_pair_explicit_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_2_or_pair_explicit_subj() {$/;"	f	typeref:typename:void
Parser_2_or_pair_implicit_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_2_or_pair_implicit_subj() {$/;"	f	typeref:typename:void
Parser_2_or_pred_explicit_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_2_or_pred_explicit_subj() {$/;"	f	typeref:typename:void
Parser_2_or_pred_implicit_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_2_or_pred_implicit_subj() {$/;"	f	typeref:typename:void
Parser_2_or_pred_inout	lib/flecs/test/api/src/Parser.c	/^void Parser_2_or_pred_inout() {$/;"	f	typeref:typename:void
Parser_2_pair_explicit_subj_role	lib/flecs/test/api/src/Parser.c	/^void Parser_2_pair_explicit_subj_role() {$/;"	f	typeref:typename:void
Parser_2_pair_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_2_pair_explicit_subject() {$/;"	f	typeref:typename:void
Parser_2_pair_implicit_subj_role	lib/flecs/test/api/src/Parser.c	/^void Parser_2_pair_implicit_subj_role() {$/;"	f	typeref:typename:void
Parser_2_pair_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_2_pair_implicit_subject() {$/;"	f	typeref:typename:void
Parser_2_pred_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_2_pred_explicit_subject() {$/;"	f	typeref:typename:void
Parser_2_pred_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_2_pred_implicit_subject() {$/;"	f	typeref:typename:void
Parser_2_pred_no_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_2_pred_no_subject() {$/;"	f	typeref:typename:void
Parser_2_pred_role	lib/flecs/test/api/src/Parser.c	/^void Parser_2_pred_role() {$/;"	f	typeref:typename:void
Parser_2_spaces	lib/flecs/test/api/src/Parser.c	/^void Parser_2_spaces() {$/;"	f	typeref:typename:void
Parser_2_trailing_newlines	lib/flecs/test/api/src/Parser.c	/^void Parser_2_trailing_newlines() {$/;"	f	typeref:typename:void
Parser_2_trailing_spaces	lib/flecs/test/api/src/Parser.c	/^void Parser_2_trailing_spaces() {$/;"	f	typeref:typename:void
Parser_3_newlines	lib/flecs/test/api/src/Parser.c	/^void Parser_3_newlines() {$/;"	f	typeref:typename:void
Parser_case_pair	lib/flecs/test/api/src/Parser.c	/^void Parser_case_pair() {$/;"	f	typeref:typename:void
Parser_case_w_missing_obj	lib/flecs/test/api/src/Parser.c	/^void Parser_case_w_missing_obj() {$/;"	f	typeref:typename:void
Parser_component_explicit_no_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_component_explicit_no_subject() {$/;"	f	typeref:typename:void
Parser_component_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_component_explicit_subject() {$/;"	f	typeref:typename:void
Parser_component_explicit_subject_any	lib/flecs/test/api/src/Parser.c	/^void Parser_component_explicit_subject_any() {$/;"	f	typeref:typename:void
Parser_component_explicit_subject_this	lib/flecs/test/api/src/Parser.c	/^void Parser_component_explicit_subject_this() {$/;"	f	typeref:typename:void
Parser_component_explicit_subject_this_by_name	lib/flecs/test/api/src/Parser.c	/^void Parser_component_explicit_subject_this_by_name() {$/;"	f	typeref:typename:void
Parser_component_explicit_subject_wildcard	lib/flecs/test/api/src/Parser.c	/^void Parser_component_explicit_subject_wildcard() {$/;"	f	typeref:typename:void
Parser_component_implicit_no_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_component_implicit_no_subject() {$/;"	f	typeref:typename:void
Parser_component_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_component_implicit_subject() {$/;"	f	typeref:typename:void
Parser_component_not	lib/flecs/test/api/src/Parser.c	/^void Parser_component_not() {$/;"	f	typeref:typename:void
Parser_component_optional	lib/flecs/test/api/src/Parser.c	/^void Parser_component_optional() {$/;"	f	typeref:typename:void
Parser_component_singleton	lib/flecs/test/api/src/Parser.c	/^void Parser_component_singleton() {$/;"	f	typeref:typename:void
Parser_escaped_all_caps_multi_char	lib/flecs/test/api/src/Parser.c	/^void Parser_escaped_all_caps_multi_char() {$/;"	f	typeref:typename:void
Parser_escaped_all_caps_single_char	lib/flecs/test/api/src/Parser.c	/^void Parser_escaped_all_caps_single_char() {$/;"	f	typeref:typename:void
Parser_expr_w_newline	lib/flecs/test/api/src/Parser.c	/^void Parser_expr_w_newline() {$/;"	f	typeref:typename:void
Parser_expr_w_symbol	lib/flecs/test/api/src/Parser.c	/^void Parser_expr_w_symbol() {$/;"	f	typeref:typename:void
Parser_from_and	lib/flecs/test/api/src/Parser.c	/^void Parser_from_and() {$/;"	f	typeref:typename:void
Parser_from_not	lib/flecs/test/api/src/Parser.c	/^void Parser_from_not() {$/;"	f	typeref:typename:void
Parser_from_or	lib/flecs/test/api/src/Parser.c	/^void Parser_from_or() {$/;"	f	typeref:typename:void
Parser_in_component_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_in_component_explicit_subject() {$/;"	f	typeref:typename:void
Parser_in_component_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_in_component_implicit_subject() {$/;"	f	typeref:typename:void
Parser_in_pair_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_in_pair_explicit_subject() {$/;"	f	typeref:typename:void
Parser_in_pair_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_in_pair_implicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_component_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_component_explicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_component_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_component_implicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_filter_component	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_filter_component() {$/;"	f	typeref:typename:void
Parser_inout_pair_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_pair_explicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_pair_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_pair_implicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_role_pair_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_role_pair_explicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_role_pair_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_role_pair_implicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_role_pred_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_role_pred_explicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_role_pred_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_role_pred_implicit_subject() {$/;"	f	typeref:typename:void
Parser_inout_role_pred_no_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_inout_role_pred_no_subject() {$/;"	f	typeref:typename:void
Parser_newline	lib/flecs/test/api/src/Parser.c	/^void Parser_newline() {$/;"	f	typeref:typename:void
Parser_not_alive_obj	lib/flecs/test/api/src/Parser.c	/^void Parser_not_alive_obj() {$/;"	f	typeref:typename:void
Parser_not_alive_pred	lib/flecs/test/api/src/Parser.c	/^void Parser_not_alive_pred() {$/;"	f	typeref:typename:void
Parser_not_alive_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_not_alive_subj() {$/;"	f	typeref:typename:void
Parser_obj_entity_w_explicit_self	lib/flecs/test/api/src/Parser.c	/^void Parser_obj_entity_w_explicit_self() {$/;"	f	typeref:typename:void
Parser_obj_entity_w_explicit_self_superset	lib/flecs/test/api/src/Parser.c	/^void Parser_obj_entity_w_explicit_self_superset() {$/;"	f	typeref:typename:void
Parser_obj_entity_w_explicit_self_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_obj_entity_w_explicit_self_superset_relation() {$/;"	f	typeref:typename:void
Parser_obj_entity_w_explicit_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_obj_entity_w_explicit_superset_relation() {$/;"	f	typeref:typename:void
Parser_out_component_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_out_component_explicit_subject() {$/;"	f	typeref:typename:void
Parser_out_component_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_out_component_implicit_subject() {$/;"	f	typeref:typename:void
Parser_out_pair_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_out_pair_explicit_subject() {$/;"	f	typeref:typename:void
Parser_out_pair_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_out_pair_implicit_subject() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_0_object	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_0_object() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_not	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_not() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_optional	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_optional() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_this	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_this() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_this_by_name	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_this_by_name() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_w_role	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_w_role() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_wildcard_obj	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_wildcard_obj() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_wildcard_pred	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_wildcard_pred() {$/;"	f	typeref:typename:void
Parser_pair_explicit_subject_wildcard_subj	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_explicit_subject_wildcard_subj() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_0_object	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_0_object() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_any_obj	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_any_obj() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_any_pred	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_any_pred() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_not	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_not() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_optional	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_optional() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_this_obj	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_this_obj() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_this_pred	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_this_pred() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_w_role	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_w_role() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_wildcard_obj	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_wildcard_obj() {$/;"	f	typeref:typename:void
Parser_pair_implicit_subject_wildcard_pred	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_implicit_subject_wildcard_pred() {$/;"	f	typeref:typename:void
Parser_pair_no_subject	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_no_subject() {$/;"	f	typeref:typename:void
Parser_pair_w_invalid_role	lib/flecs/test/api/src/Parser.c	/^void Parser_pair_w_invalid_role() {$/;"	f	typeref:typename:void
Parser_pred_entity_no_args_2_terms_w_explicit_self	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_no_args_2_terms_w_explicit_self() {$/;"	f	typeref:typename:void
Parser_pred_entity_no_args_2_terms_w_explicit_self_superset	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_no_args_2_terms_w_explicit_self_superset() {$/;"	f	typeref:typename:void
Parser_pred_entity_no_args_2_terms_w_explicit_self_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_no_args_2_terms_w_explicit_self_superset_relation() {$/;"	f	typeref:typename:void
Parser_pred_entity_no_args_2_terms_w_explicit_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_no_args_2_terms_w_explicit_superset_relation() {$/;"	f	typeref:typename:void
Parser_pred_entity_no_args_w_explicit_self	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_no_args_w_explicit_self() {$/;"	f	typeref:typename:void
Parser_pred_entity_no_args_w_explicit_self_superset	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_no_args_w_explicit_self_superset() {$/;"	f	typeref:typename:void
Parser_pred_entity_no_args_w_explicit_self_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_no_args_w_explicit_self_superset_relation() {$/;"	f	typeref:typename:void
Parser_pred_entity_no_args_w_explicit_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_no_args_w_explicit_superset_relation() {$/;"	f	typeref:typename:void
Parser_pred_entity_w_explicit_self	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_w_explicit_self() {$/;"	f	typeref:typename:void
Parser_pred_entity_w_explicit_self_superset	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_w_explicit_self_superset() {$/;"	f	typeref:typename:void
Parser_pred_entity_w_explicit_self_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_w_explicit_self_superset_relation() {$/;"	f	typeref:typename:void
Parser_pred_entity_w_explicit_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_entity_w_explicit_superset_relation() {$/;"	f	typeref:typename:void
Parser_pred_explicit_subject_w_role	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_explicit_subject_w_role() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_cascade_superset_childof	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_cascade_superset_childof() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_implicit_superset_cascade	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_implicit_superset_cascade() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_implicit_superset_cascade_w_rel	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_implicit_superset_cascade_w_rel() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_implicit_superset_inclusive_cascade	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_implicit_superset_inclusive_cascade() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_implicit_superset_inclusive_cascade_w_rel	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_implicit_superset_inclusive_cascade_w_rel() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_self	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_self() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_subset	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_subset() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_subset_cascade	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_subset_cascade() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_subset_depth_1_digit	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_subset_depth_1_digit() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_subset_depth_2_digits	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_subset_depth_2_digits() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_subset_inclusive	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_subset_inclusive() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_subset_inclusive_cascade	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_subset_inclusive_cascade() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset_cascade	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset_cascade() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset_cascade_childof	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset_cascade_childof() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset_cascade_childof_optional	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset_cascade_childof_optional() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset_childof	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset_childof() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset_depth_1_digit	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset_depth_1_digit() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset_depth_2_digits	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset_depth_2_digits() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset_inclusive	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset_inclusive() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_superset_inclusive_cascade	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_superset_inclusive_cascade() {$/;"	f	typeref:typename:void
Parser_pred_implicit_subject_w_role	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_subject_w_role() {$/;"	f	typeref:typename:void
Parser_pred_implicit_superset_childof_min_max_depth	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_superset_childof_min_max_depth() {$/;"	f	typeref:typename:void
Parser_pred_implicit_superset_min_max_depth	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_implicit_superset_min_max_depth() {$/;"	f	typeref:typename:void
Parser_pred_no_subject_w_role	lib/flecs/test/api/src/Parser.c	/^void Parser_pred_no_subject_w_role() {$/;"	f	typeref:typename:void
Parser_predicate_w_parens	lib/flecs/test/api/src/Parser.c	/^void Parser_predicate_w_parens() {$/;"	f	typeref:typename:void
Parser_resolve_any	lib/flecs/test/api/src/Parser.c	/^void Parser_resolve_any() {$/;"	f	typeref:typename:void
Parser_resolve_is_a	lib/flecs/test/api/src/Parser.c	/^void Parser_resolve_is_a() {$/;"	f	typeref:typename:void
Parser_resolve_this	lib/flecs/test/api/src/Parser.c	/^void Parser_resolve_this() {$/;"	f	typeref:typename:void
Parser_resolve_wildcard	lib/flecs/test/api/src/Parser.c	/^void Parser_resolve_wildcard() {$/;"	f	typeref:typename:void
Parser_space	lib/flecs/test/api/src/Parser.c	/^void Parser_space() {$/;"	f	typeref:typename:void
Parser_subj_entity_w_explicit_self	lib/flecs/test/api/src/Parser.c	/^void Parser_subj_entity_w_explicit_self() {$/;"	f	typeref:typename:void
Parser_subj_entity_w_explicit_self_superset	lib/flecs/test/api/src/Parser.c	/^void Parser_subj_entity_w_explicit_self_superset() {$/;"	f	typeref:typename:void
Parser_subj_entity_w_explicit_self_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_subj_entity_w_explicit_self_superset_relation() {$/;"	f	typeref:typename:void
Parser_subj_entity_w_explicit_superset_relation	lib/flecs/test/api/src/Parser.c	/^void Parser_subj_entity_w_explicit_superset_relation() {$/;"	f	typeref:typename:void
Parser_switch_id	lib/flecs/test/api/src/Parser.c	/^void Parser_switch_id() {$/;"	f	typeref:typename:void
Parser_template_type	lib/flecs/test/api/src/Parser.c	/^void Parser_template_type() {$/;"	f	typeref:typename:void
Parser_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Parser_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Parser_this_as_object	lib/flecs/test/api/src/Parser.c	/^void Parser_this_as_object() {$/;"	f	typeref:typename:void
Parser_this_as_predicate	lib/flecs/test/api/src/Parser.c	/^void Parser_this_as_predicate() {$/;"	f	typeref:typename:void
Parser_this_singleton	lib/flecs/test/api/src/Parser.c	/^void Parser_this_singleton() {$/;"	f	typeref:typename:void
Parser_trailing_newline	lib/flecs/test/api/src/Parser.c	/^void Parser_trailing_newline() {$/;"	f	typeref:typename:void
Parser_trailing_space	lib/flecs/test/api/src/Parser.c	/^void Parser_trailing_space() {$/;"	f	typeref:typename:void
Parser_variable_multi_char	lib/flecs/test/api/src/Parser.c	/^void Parser_variable_multi_char() {$/;"	f	typeref:typename:void
Parser_variable_multi_char_not_allcaps	lib/flecs/test/api/src/Parser.c	/^void Parser_variable_multi_char_not_allcaps() {$/;"	f	typeref:typename:void
Parser_variable_multi_char_w_number	lib/flecs/test/api/src/Parser.c	/^void Parser_variable_multi_char_w_number() {$/;"	f	typeref:typename:void
Parser_variable_multi_char_w_underscore	lib/flecs/test/api/src/Parser.c	/^void Parser_variable_multi_char_w_underscore() {$/;"	f	typeref:typename:void
Parser_variable_single_char	lib/flecs/test/api/src/Parser.c	/^void Parser_variable_single_char() {$/;"	f	typeref:typename:void
Pascal	lib/flecs/flecs.h	/^struct Pascal { };$/;"	s	struct:flecs::units::pressure
Pascal	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Pascal { };$/;"	s	struct:flecs::units::pressure
PassEntity	lib/flecs/flecs.h	/^    static constexpr bool PassEntity = $/;"	m	struct:flecs::_::each_invoker	typeref:typename:bool
PassEntity	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static constexpr bool PassEntity = $/;"	m	struct:flecs::_::each_invoker	typeref:typename:bool
PassIter	lib/flecs/flecs.h	/^    static constexpr bool PassIter = $/;"	m	struct:flecs::_::each_invoker	typeref:typename:bool
PassIter	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static constexpr bool PassIter = $/;"	m	struct:flecs::_::each_invoker	typeref:typename:bool
Paths_alias_component	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_alias_component() {$/;"	f	typeref:typename:void
Paths_alias_entity	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_alias_entity() {$/;"	f	typeref:typename:void
Paths_alias_entity_by_name	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_alias_entity_by_name() {$/;"	f	typeref:typename:void
Paths_alias_entity_by_scoped_name	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_alias_entity_by_scoped_name() {$/;"	f	typeref:typename:void
Paths_alias_scoped_component	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_alias_scoped_component() {$/;"	f	typeref:typename:void
Paths_alias_scoped_component_w_name	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_alias_scoped_component_w_name() {$/;"	f	typeref:typename:void
Paths_entity_lookup_depth_1	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_entity_lookup_depth_1() {$/;"	f	typeref:typename:void
Paths_entity_lookup_depth_2	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_entity_lookup_depth_2() {$/;"	f	typeref:typename:void
Paths_entity_lookup_name	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_entity_lookup_name() {$/;"	f	typeref:typename:void
Paths_name	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_name() {$/;"	f	typeref:typename:void
Paths_path_depth_1	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_path_depth_1() {$/;"	f	typeref:typename:void
Paths_path_depth_2	lib/flecs/test/cpp_api/src/Paths.cpp	/^void Paths_path_depth_2() {$/;"	f	typeref:typename:void
Paths_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Paths_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Pears	lib/flecs/examples/cpp/queries/wildcards/src/main.cpp	/^struct Pears { };$/;"	s	file:
Pears	lib/flecs/test/cpp_api/src/Pairs.cpp	/^struct Pears { };$/;"	s	file:
Pears	lib/flecs/test/cpp_api/src/Query.cpp	/^struct Pears { };$/;"	s	file:
Pears	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Pears { };$/;"	s	function:RuleBuilder_2_pair_terms_w_var	file:
Pears	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Pears { };$/;"	s	function:RuleBuilder_pair_term_w_var	file:
Pears	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    struct Pears { };$/;"	s	function:RuleBuilder_type_pair_term	file:
Pears	lib/flecs/test/cpp_api/src/Type.cpp	/^    struct Pears {};$/;"	s	function:Type_has_pair_type	file:
Pebi	lib/flecs/flecs.h	/^struct Pebi { };$/;"	s	struct:flecs::units
Pebi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Pebi { };$/;"	s	struct:flecs::units
Percentage	lib/flecs/flecs.h	/^struct Percentage { };$/;"	s	struct:flecs::units
Percentage	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Percentage { };$/;"	s	struct:flecs::units
PeriodicDummySystem	lib/flecs/test/api/src/MultiThread.c	/^void PeriodicDummySystem(ecs_iter_t * it) {$/;"	f	typeref:typename:void	file:
Person	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^struct Person { };$/;"	s	file:
Peta	lib/flecs/flecs.h	/^struct Peta { };$/;"	s	struct:flecs::units
Peta	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Peta { };$/;"	s	struct:flecs::units
Pico	lib/flecs/flecs.h	/^struct Pico { };$/;"	s	struct:flecs::units
Pico	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Pico { };$/;"	s	struct:flecs::units
PicoMeters	lib/flecs/flecs.h	/^struct PicoMeters { };$/;"	s	struct:flecs::units::length
PicoMeters	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct PicoMeters { };$/;"	s	struct:flecs::units::length
PicoSeconds	lib/flecs/flecs.h	/^struct PicoSeconds { };$/;"	s	struct:flecs::units::duration
PicoSeconds	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct PicoSeconds { };$/;"	s	struct:flecs::units::duration
Pipeline	lib/flecs/flecs.h	/^static const flecs::entity_t Pipeline = EcsPipeline;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Pipeline	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Pipeline = EcsPipeline;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PipelineType	lib/flecs/test/cpp_api/src/System.cpp	/^struct PipelineType {$/;"	s	file:
Pipeline_3_systems_3_types	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_3_systems_3_types() {$/;"	f	typeref:typename:void
Pipeline_activate_after_add	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_activate_after_add() {$/;"	f	typeref:typename:void
Pipeline_get_pipeline_from_stage	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_get_pipeline_from_stage() {$/;"	f	typeref:typename:void
Pipeline_merge_after_not_out	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_merge_after_not_out() {$/;"	f	typeref:typename:void
Pipeline_merge_after_staged_in_out	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_merge_after_staged_in_out() {$/;"	f	typeref:typename:void
Pipeline_merge_after_staged_inout_main_implicit_inout	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_merge_after_staged_inout_main_implicit_inout() {$/;"	f	typeref:typename:void
Pipeline_merge_after_staged_inout_main_inout	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_merge_after_staged_inout_main_inout() {$/;"	f	typeref:typename:void
Pipeline_merge_after_staged_out	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_merge_after_staged_out() {$/;"	f	typeref:typename:void
Pipeline_merge_after_staged_out_before_owned	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_merge_after_staged_out_before_owned() {$/;"	f	typeref:typename:void
Pipeline_mixed_multithreaded	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_mixed_multithreaded() {$/;"	f	typeref:typename:void
Pipeline_mixed_staging	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_mixed_staging() {$/;"	f	typeref:typename:void
Pipeline_multi_threaded_pipeline_change	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_multi_threaded_pipeline_change() {$/;"	f	typeref:typename:void
Pipeline_no_merge_after_main_out	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_no_merge_after_main_out() {$/;"	f	typeref:typename:void
Pipeline_no_staging_system_create_query	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_no_staging_system_create_query() {$/;"	f	typeref:typename:void
Pipeline_random_in_after_random_inout_after_random_out	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_random_in_after_random_inout_after_random_out() {$/;"	f	typeref:typename:void
Pipeline_random_read_after_random_write_inout_in	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_random_read_after_random_write_inout_in() {$/;"	f	typeref:typename:void
Pipeline_random_read_after_random_write_inout_inout	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_random_read_after_random_write_inout_inout() {$/;"	f	typeref:typename:void
Pipeline_random_read_after_random_write_out_in	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_random_read_after_random_write_out_in() {$/;"	f	typeref:typename:void
Pipeline_random_read_after_random_write_out_inout	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_random_read_after_random_write_out_inout() {$/;"	f	typeref:typename:void
Pipeline_random_read_after_random_write_w_not_read	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_random_read_after_random_write_w_not_read() {$/;"	f	typeref:typename:void
Pipeline_random_read_after_random_write_w_not_write	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_random_read_after_random_write_w_not_write() {$/;"	f	typeref:typename:void
Pipeline_random_read_after_random_write_w_wildcard	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_random_read_after_random_write_w_wildcard() {$/;"	f	typeref:typename:void
Pipeline_run_pipeline	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_run_pipeline() {$/;"	f	typeref:typename:void
Pipeline_setup	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_setup() {$/;"	f	typeref:typename:void
Pipeline_single_threaded_pipeline_change	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_single_threaded_pipeline_change() {$/;"	f	typeref:typename:void
Pipeline_stage_write_before_read	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_stage_write_before_read() {$/;"	f	typeref:typename:void
Pipeline_switch_pipeline	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_switch_pipeline() {$/;"	f	typeref:typename:void
Pipeline_system_order_after_new_system_higher_id	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_after_new_system_higher_id() {$/;"	f	typeref:typename:void
Pipeline_system_order_after_new_system_inbetween_id	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_after_new_system_inbetween_id() {$/;"	f	typeref:typename:void
Pipeline_system_order_after_new_system_lower_id	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_after_new_system_lower_id() {$/;"	f	typeref:typename:void
Pipeline_system_order_different_phase	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_different_phase() {$/;"	f	typeref:typename:void
Pipeline_system_order_different_phase_after_activate	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_different_phase_after_activate() {$/;"	f	typeref:typename:void
Pipeline_system_order_different_phase_after_disable	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_different_phase_after_disable() {$/;"	f	typeref:typename:void
Pipeline_system_order_same_phase	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_same_phase() {$/;"	f	typeref:typename:void
Pipeline_system_order_same_phase_after_activate	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_same_phase_after_activate() {    $/;"	f	typeref:typename:void
Pipeline_system_order_same_phase_after_disable	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_order_same_phase_after_disable() {$/;"	f	typeref:typename:void
Pipeline_system_reverse_order_by_phase_custom_pipeline	lib/flecs/test/api/src/Pipeline.c	/^void Pipeline_system_reverse_order_by_phase_custom_pipeline() {$/;"	f	typeref:typename:void
Pipeline_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Pipeline_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Planet	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^struct Planet { };$/;"	s	file:
Planet	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^struct Planet { };$/;"	s	file:
Platoon	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct Platoon { };$/;"	s	file:
PlatoonsPerPlayer	lib/flecs/examples/c/rules/setting_variables/src/main.c	/^static const int PlatoonsPerPlayer = 3;$/;"	v	typeref:typename:const int	file:
PlatoonsPerPlayer	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^static const int PlatoonsPerPlayer = 3;$/;"	v	typeref:typename:const int	file:
Player	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct Player { };$/;"	s	file:
PlayerCount	lib/flecs/examples/c/rules/setting_variables/src/main.c	/^static const int PlayerCount = 100;$/;"	v	typeref:typename:const int	file:
PlayerCount	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^static const int PlayerCount = 100;$/;"	v	typeref:typename:const int	file:
Plecs_2_entities	lib/flecs/test/api/src/Plecs.c	/^void Plecs_2_entities() {$/;"	f	typeref:typename:void
Plecs_2_entities_w_entities	lib/flecs/test/api/src/Plecs.c	/^void Plecs_2_entities_w_entities() {$/;"	f	typeref:typename:void
Plecs_2_stmts_in_scope_w_no_parent	lib/flecs/test/api/src/Plecs.c	/^void Plecs_2_stmts_in_scope_w_no_parent() {$/;"	f	typeref:typename:void
Plecs_2_using_in_different_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_2_using_in_different_scope() {$/;"	f	typeref:typename:void
Plecs_2_using_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_2_using_scope() {$/;"	f	typeref:typename:void
Plecs_3_entities_w_pairs	lib/flecs/test/api/src/Plecs.c	/^void Plecs_3_entities_w_pairs() {$/;"	f	typeref:typename:void
Plecs_assign_2_component_values	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_2_component_values() {$/;"	f	typeref:typename:void
Plecs_assign_2_component_values_in_assign_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_2_component_values_in_assign_scope() {$/;"	f	typeref:typename:void
Plecs_assign_after_inherit	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_after_inherit() {$/;"	f	typeref:typename:void
Plecs_assign_component_to_parent	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_component_to_parent() {$/;"	f	typeref:typename:void
Plecs_assign_component_value	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_component_value() {$/;"	f	typeref:typename:void
Plecs_assign_component_value_in_assign_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_component_value_in_assign_scope() {$/;"	f	typeref:typename:void
Plecs_assign_pair_component	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_pair_component() {$/;"	f	typeref:typename:void
Plecs_assign_pair_component_in_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_pair_component_in_scope() {$/;"	f	typeref:typename:void
Plecs_assign_tag_to_parent	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_tag_to_parent() {$/;"	f	typeref:typename:void
Plecs_assign_to_parent_pair_w_existing_entities_in_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_to_parent_pair_w_existing_entities_in_scope() {$/;"	f	typeref:typename:void
Plecs_assign_to_parent_pair_w_new_entities_in_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assign_to_parent_pair_w_new_entities_in_scope() {$/;"	f	typeref:typename:void
Plecs_assignment_to_non_component	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assignment_to_non_component() {$/;"	f	typeref:typename:void
Plecs_assignment_w_1	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assignment_w_1() {$/;"	f	typeref:typename:void
Plecs_assignment_w_2	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assignment_w_2() {$/;"	f	typeref:typename:void
Plecs_assignment_w_invalid_subject	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assignment_w_invalid_subject() {$/;"	f	typeref:typename:void
Plecs_assignment_w_invalid_with	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assignment_w_invalid_with() {$/;"	f	typeref:typename:void
Plecs_assignment_w_pair	lib/flecs/test/api/src/Plecs.c	/^void Plecs_assignment_w_pair() {$/;"	f	typeref:typename:void
Plecs_comma_separated_pred	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comma_separated_pred() {$/;"	f	typeref:typename:void
Plecs_comma_separated_pred_trailing_comma	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comma_separated_pred_trailing_comma() {$/;"	f	typeref:typename:void
Plecs_comma_separated_pred_trailing_comma_newline	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comma_separated_pred_trailing_comma_newline() {$/;"	f	typeref:typename:void
Plecs_comma_separated_pred_trailing_comma_newline_multiline	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comma_separated_pred_trailing_comma_newline_multiline() {$/;"	f	typeref:typename:void
Plecs_comma_separated_pred_w_subj	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comma_separated_pred_w_subj() {$/;"	f	typeref:typename:void
Plecs_comma_separated_pred_w_subj_obj	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comma_separated_pred_w_subj_obj() {$/;"	f	typeref:typename:void
Plecs_comment_after_newline_before_scope_open	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comment_after_newline_before_scope_open() {$/;"	f	typeref:typename:void
Plecs_comment_as_brief_doc	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comment_as_brief_doc() {$/;"	f	typeref:typename:void
Plecs_comment_as_brief_doc_2_stmts	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comment_as_brief_doc_2_stmts() {$/;"	f	typeref:typename:void
Plecs_comment_as_brief_doc_after_using	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comment_as_brief_doc_after_using() {$/;"	f	typeref:typename:void
Plecs_comment_before_scope_open	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comment_before_scope_open() {$/;"	f	typeref:typename:void
Plecs_comment_type	lib/flecs/test/api/src/Plecs.c	/^void Plecs_comment_type() {$/;"	f	typeref:typename:void
Plecs_create_in_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_create_in_scope() {$/;"	f	typeref:typename:void
Plecs_create_subject_in_root_scope_w_resolvable_id	lib/flecs/test/api/src/Plecs.c	/^void Plecs_create_subject_in_root_scope_w_resolvable_id() {$/;"	f	typeref:typename:void
Plecs_create_subject_in_scope_w_resolvable_id	lib/flecs/test/api/src/Plecs.c	/^void Plecs_create_subject_in_scope_w_resolvable_id() {$/;"	f	typeref:typename:void
Plecs_create_subject_in_scope_w_resolvable_id_using	lib/flecs/test/api/src/Plecs.c	/^void Plecs_create_subject_in_scope_w_resolvable_id_using() {$/;"	f	typeref:typename:void
Plecs_default_child_component	lib/flecs/test/api/src/Plecs.c	/^void Plecs_default_child_component() {$/;"	f	typeref:typename:void
Plecs_default_child_component_w_assign	lib/flecs/test/api/src/Plecs.c	/^void Plecs_default_child_component_w_assign() {$/;"	f	typeref:typename:void
Plecs_default_type_from_with	lib/flecs/test/api/src/Plecs.c	/^void Plecs_default_type_from_with() {$/;"	f	typeref:typename:void
Plecs_empty	lib/flecs/test/api/src/Plecs.c	/^void Plecs_empty() {$/;"	f	typeref:typename:void
Plecs_empty_assignment	lib/flecs/test/api/src/Plecs.c	/^void Plecs_empty_assignment() {$/;"	f	typeref:typename:void
Plecs_empty_assignment_before_end_of_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_empty_assignment_before_end_of_scope() {$/;"	f	typeref:typename:void
Plecs_empty_doc_comment	lib/flecs/test/api/src/Plecs.c	/^void Plecs_empty_doc_comment() {$/;"	f	typeref:typename:void
Plecs_empty_scope_after_using	lib/flecs/test/api/src/Plecs.c	/^void Plecs_empty_scope_after_using() {$/;"	f	typeref:typename:void
Plecs_entity	lib/flecs/test/api/src/Plecs.c	/^void Plecs_entity() {$/;"	f	typeref:typename:void
Plecs_entity_after_hierarchy	lib/flecs/test/api/src/Plecs.c	/^void Plecs_entity_after_hierarchy() {$/;"	f	typeref:typename:void
Plecs_entity_after_hierarchy_custom_relation	lib/flecs/test/api/src/Plecs.c	/^void Plecs_entity_after_hierarchy_custom_relation() {$/;"	f	typeref:typename:void
Plecs_entity_after_hierarchy_custom_relation_2_levels	lib/flecs/test/api/src/Plecs.c	/^void Plecs_entity_after_hierarchy_custom_relation_2_levels() {$/;"	f	typeref:typename:void
Plecs_entity_w_entity	lib/flecs/test/api/src/Plecs.c	/^void Plecs_entity_w_entity() {$/;"	f	typeref:typename:void
Plecs_entity_w_pair	lib/flecs/test/api/src/Plecs.c	/^void Plecs_entity_w_pair() {$/;"	f	typeref:typename:void
Plecs_enum_type_w_default_child_component	lib/flecs/test/api/src/Plecs.c	/^void Plecs_enum_type_w_default_child_component() {$/;"	f	typeref:typename:void
Plecs_hierarchy_1_child	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_1_child() {$/;"	f	typeref:typename:void
Plecs_hierarchy_1_child_same_line	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_1_child_same_line() {$/;"	f	typeref:typename:void
Plecs_hierarchy_2_children	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_2_children() {$/;"	f	typeref:typename:void
Plecs_hierarchy_2_children_same_line	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_2_children_same_line() {$/;"	f	typeref:typename:void
Plecs_hierarchy_2_levels	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_2_levels() {$/;"	f	typeref:typename:void
Plecs_hierarchy_2_levels_2_subtrees	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_2_levels_2_subtrees() {$/;"	f	typeref:typename:void
Plecs_hierarchy_custom_relation	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_custom_relation() {$/;"	f	typeref:typename:void
Plecs_hierarchy_custom_relation_2_levels	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_custom_relation_2_levels() {$/;"	f	typeref:typename:void
Plecs_hierarchy_custom_relation_apply_to_object	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_custom_relation_apply_to_object() {$/;"	f	typeref:typename:void
Plecs_hierarchy_custom_relation_apply_to_object_2_levels	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_custom_relation_apply_to_object_2_levels() {$/;"	f	typeref:typename:void
Plecs_hierarchy_w_pred_subj	lib/flecs/test/api/src/Plecs.c	/^void Plecs_hierarchy_w_pred_subj() {$/;"	f	typeref:typename:void
Plecs_inherit_from_multiple	lib/flecs/test/api/src/Plecs.c	/^void Plecs_inherit_from_multiple() {$/;"	f	typeref:typename:void
Plecs_inherit_w_colon	lib/flecs/test/api/src/Plecs.c	/^void Plecs_inherit_w_colon() {    $/;"	f	typeref:typename:void
Plecs_inherit_w_colon_w_assign	lib/flecs/test/api/src/Plecs.c	/^void Plecs_inherit_w_colon_w_assign() {$/;"	f	typeref:typename:void
Plecs_inherit_w_colon_w_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_inherit_w_colon_w_scope() {$/;"	f	typeref:typename:void
Plecs_invalid_2_identifiers_separated_by_space	lib/flecs/test/api/src/Plecs.c	/^void Plecs_invalid_2_identifiers_separated_by_space() {$/;"	f	typeref:typename:void
Plecs_invalid_nested_assignment	lib/flecs/test/api/src/Plecs.c	/^void Plecs_invalid_nested_assignment() {$/;"	f	typeref:typename:void
Plecs_invalid_partial_pair_assignment	lib/flecs/test/api/src/Plecs.c	/^void Plecs_invalid_partial_pair_assignment() {$/;"	f	typeref:typename:void
Plecs_line_comment	lib/flecs/test/api/src/Plecs.c	/^void Plecs_line_comment() {$/;"	f	typeref:typename:void
Plecs_line_comment_after_stmt	lib/flecs/test/api/src/Plecs.c	/^void Plecs_line_comment_after_stmt() {$/;"	f	typeref:typename:void
Plecs_line_comment_after_stmt_same_line	lib/flecs/test/api/src/Plecs.c	/^void Plecs_line_comment_after_stmt_same_line() {$/;"	f	typeref:typename:void
Plecs_line_comment_before_stmt	lib/flecs/test/api/src/Plecs.c	/^void Plecs_line_comment_before_stmt() {$/;"	f	typeref:typename:void
Plecs_line_comment_between_stmt	lib/flecs/test/api/src/Plecs.c	/^void Plecs_line_comment_between_stmt() {$/;"	f	typeref:typename:void
Plecs_missing_end_of_predicate_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_missing_end_of_predicate_scope() {$/;"	f	typeref:typename:void
Plecs_missing_end_of_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_missing_end_of_scope() {$/;"	f	typeref:typename:void
Plecs_multiple_assignments_single_line	lib/flecs/test/api/src/Plecs.c	/^void Plecs_multiple_assignments_single_line() {$/;"	f	typeref:typename:void
Plecs_multiple_line_comment	lib/flecs/test/api/src/Plecs.c	/^void Plecs_multiple_line_comment() {$/;"	f	typeref:typename:void
Plecs_multiple_trailing_newlines	lib/flecs/test/api/src/Plecs.c	/^void Plecs_multiple_trailing_newlines() {$/;"	f	typeref:typename:void
Plecs_newline_after_doc_comment	lib/flecs/test/api/src/Plecs.c	/^void Plecs_newline_after_doc_comment() {$/;"	f	typeref:typename:void
Plecs_newline_before_scope_open	lib/flecs/test/api/src/Plecs.c	/^void Plecs_newline_before_scope_open() {$/;"	f	typeref:typename:void
Plecs_newline_trailing_space	lib/flecs/test/api/src/Plecs.c	/^void Plecs_newline_trailing_space() {$/;"	f	typeref:typename:void
Plecs_newline_trailing_spaces	lib/flecs/test/api/src/Plecs.c	/^void Plecs_newline_trailing_spaces() {$/;"	f	typeref:typename:void
Plecs_null	lib/flecs/test/api/src/Plecs.c	/^void Plecs_null() {$/;"	f	typeref:typename:void
Plecs_open_scope_no_parent	lib/flecs/test/api/src/Plecs.c	/^void Plecs_open_scope_no_parent() {$/;"	f	typeref:typename:void
Plecs_pred_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_pred_scope() {$/;"	f	typeref:typename:void
Plecs_pred_scope_2_levels	lib/flecs/test/api/src/Plecs.c	/^void Plecs_pred_scope_2_levels() {$/;"	f	typeref:typename:void
Plecs_pred_scope_inside_with	lib/flecs/test/api/src/Plecs.c	/^void Plecs_pred_scope_inside_with() {$/;"	f	typeref:typename:void
Plecs_pred_scope_nested_w_subj_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_pred_scope_nested_w_subj_scope() {$/;"	f	typeref:typename:void
Plecs_scope_after_assign	lib/flecs/test/api/src/Plecs.c	/^void Plecs_scope_after_assign() {$/;"	f	typeref:typename:void
Plecs_scope_after_assign_1_tag	lib/flecs/test/api/src/Plecs.c	/^void Plecs_scope_after_assign_1_tag() {$/;"	f	typeref:typename:void
Plecs_scope_after_assign_2_tags	lib/flecs/test/api/src/Plecs.c	/^void Plecs_scope_after_assign_2_tags() {$/;"	f	typeref:typename:void
Plecs_scope_inside_with_inside_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_scope_inside_with_inside_scope() {$/;"	f	typeref:typename:void
Plecs_scope_w_1_subj_and_2_pairs	lib/flecs/test/api/src/Plecs.c	/^void Plecs_scope_w_1_subj_and_2_pairs() {$/;"	f	typeref:typename:void
Plecs_set_entity_names	lib/flecs/test/api/src/Plecs.c	/^void Plecs_set_entity_names() {$/;"	f	typeref:typename:void
Plecs_space	lib/flecs/test/api/src/Plecs.c	/^void Plecs_space() {$/;"	f	typeref:typename:void
Plecs_space_newline	lib/flecs/test/api/src/Plecs.c	/^void Plecs_space_newline() {$/;"	f	typeref:typename:void
Plecs_struct_type_w_default_child_component	lib/flecs/test/api/src/Plecs.c	/^void Plecs_struct_type_w_default_child_component() {$/;"	f	typeref:typename:void
Plecs_struct_type_w_default_child_component_nested_member	lib/flecs/test/api/src/Plecs.c	/^void Plecs_struct_type_w_default_child_component_nested_member() {$/;"	f	typeref:typename:void
Plecs_struct_w_member_w_assignment_to_empty_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_struct_w_member_w_assignment_to_empty_scope() {$/;"	f	typeref:typename:void
Plecs_struct_w_member_w_assignment_to_nothing	lib/flecs/test/api/src/Plecs.c	/^void Plecs_struct_w_member_w_assignment_to_nothing() {$/;"	f	typeref:typename:void
Plecs_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Plecs_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Plecs_three_empty_newlines	lib/flecs/test/api/src/Plecs.c	/^void Plecs_three_empty_newlines() {$/;"	f	typeref:typename:void
Plecs_two_empty_newlines	lib/flecs/test/api/src/Plecs.c	/^void Plecs_two_empty_newlines() {$/;"	f	typeref:typename:void
Plecs_type_and_assign_in_plecs	lib/flecs/test/api/src/Plecs.c	/^void Plecs_type_and_assign_in_plecs() {$/;"	f	typeref:typename:void
Plecs_type_and_assign_in_plecs_nested_member	lib/flecs/test/api/src/Plecs.c	/^void Plecs_type_and_assign_in_plecs_nested_member() {$/;"	f	typeref:typename:void
Plecs_type_and_assign_in_plecs_w_2_members	lib/flecs/test/api/src/Plecs.c	/^void Plecs_type_and_assign_in_plecs_w_2_members() {$/;"	f	typeref:typename:void
Plecs_type_and_assign_in_plecs_w_3_members	lib/flecs/test/api/src/Plecs.c	/^void Plecs_type_and_assign_in_plecs_w_3_members() {$/;"	f	typeref:typename:void
Plecs_type_and_assign_in_plecs_w_enum	lib/flecs/test/api/src/Plecs.c	/^void Plecs_type_and_assign_in_plecs_w_enum() {$/;"	f	typeref:typename:void
Plecs_type_and_assign_in_plecs_w_enum_primitive_and_struct	lib/flecs/test/api/src/Plecs.c	/^void Plecs_type_and_assign_in_plecs_w_enum_primitive_and_struct() {$/;"	f	typeref:typename:void
Plecs_type_and_assign_in_plecs_w_enum_primitive_using_meta	lib/flecs/test/api/src/Plecs.c	/^void Plecs_type_and_assign_in_plecs_w_enum_primitive_using_meta() {$/;"	f	typeref:typename:void
Plecs_type_and_assign_in_plecs_w_enum_using_meta	lib/flecs/test/api/src/Plecs.c	/^void Plecs_type_and_assign_in_plecs_w_enum_using_meta() {$/;"	f	typeref:typename:void
Plecs_using_nested_in_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_using_nested_in_scope() {$/;"	f	typeref:typename:void
Plecs_using_nested_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_using_nested_scope() {$/;"	f	typeref:typename:void
Plecs_using_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_using_scope() {$/;"	f	typeref:typename:void
Plecs_using_w_entity_ref_in_value_2_members	lib/flecs/test/api/src/Plecs.c	/^void Plecs_using_w_entity_ref_in_value_2_members() {$/;"	f	typeref:typename:void
Plecs_using_w_entity_ref_in_value_3_members	lib/flecs/test/api/src/Plecs.c	/^void Plecs_using_w_entity_ref_in_value_3_members() {$/;"	f	typeref:typename:void
Plecs_using_with_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_using_with_scope() {$/;"	f	typeref:typename:void
Plecs_with_after_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_after_scope() {$/;"	f	typeref:typename:void
Plecs_with_after_with	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_after_with() {$/;"	f	typeref:typename:void
Plecs_with_inside_scope	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_inside_scope() {$/;"	f	typeref:typename:void
Plecs_with_n_tags	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_n_tags() {$/;"	f	typeref:typename:void
Plecs_with_n_tags_2_levels	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_n_tags_2_levels() {$/;"	f	typeref:typename:void
Plecs_with_tag	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_tag() {$/;"	f	typeref:typename:void
Plecs_with_tag_2_entities	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_tag_2_entities() {$/;"	f	typeref:typename:void
Plecs_with_tag_2_entities_same_line	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_tag_2_entities_same_line() {$/;"	f	typeref:typename:void
Plecs_with_tag_2_levels	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_tag_2_levels() {$/;"	f	typeref:typename:void
Plecs_with_tag_2_levels_2_subtrees	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_tag_2_levels_2_subtrees() {$/;"	f	typeref:typename:void
Plecs_with_tag_same_line	lib/flecs/test/api/src/Plecs.c	/^void Plecs_with_tag_same_line() {$/;"	f	typeref:typename:void
Pod	lib/flecs/test/cpp_api/include/cpp_api.h	/^    Pod() {$/;"	f	class:Pod
Pod	lib/flecs/test/cpp_api/include/cpp_api.h	/^    Pod(Pod&& obj) {$/;"	f	class:Pod
Pod	lib/flecs/test/cpp_api/include/cpp_api.h	/^    Pod(const Pod& obj) {$/;"	f	class:Pod
Pod	lib/flecs/test/cpp_api/include/cpp_api.h	/^    Pod(int v) {$/;"	f	class:Pod
Pod	lib/flecs/test/cpp_api/include/cpp_api.h	/^class Pod {$/;"	c
Point	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^} Point;$/;"	t	typeref:struct:__anonab3664440108	file:
Point	lib/flecs/examples/cpp/reflection/nested_set_member/src/main.cpp	/^struct Point {$/;"	s	file:
Point	lib/flecs/examples/cpp/reflection/nested_struct/src/main.cpp	/^struct Point {$/;"	s	file:
PortableType	lib/flecs/examples/cpp/reflection/portable_type/src/main.cpp	/^struct PortableType {$/;"	s	file:
Position	include/ecs/components.h	/^} Position;$/;"	t	typeref:struct:__anon1ffac85e0108
Position	lib/flecs/examples/c/entities/basics/src/main.c	/^} Position;$/;"	t	typeref:struct:__anona30c816c0108	file:
Position	lib/flecs/examples/c/entities/hierarchy/src/main.c	/^} Position;$/;"	t	typeref:struct:__anonf9264af60108	file:
Position	lib/flecs/examples/c/entities/iterate_components/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon91bc140a0108	file:
Position	lib/flecs/examples/c/entities/prefab/src/main.c	/^} Position;$/;"	t	typeref:struct:__anonfbee6d870508	file:
Position	lib/flecs/examples/c/hello_world/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anond3e263be0108	file:
Position	lib/flecs/examples/c/queries/basics/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon1360c0250108	file:
Position	lib/flecs/examples/c/queries/change_tracking/src/main.c	/^} Position;$/;"	t	typeref:struct:__anon3f4b18880208	file:
Position	lib/flecs/examples/c/queries/hierarchies/src/main.c	/^} Position;$/;"	t	typeref:struct:__anon95319c370108	file:
Position	lib/flecs/examples/c/queries/instancing/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon12ad033e0108	file:
Position	lib/flecs/examples/c/queries/sorting/src/main.c	/^} Position;$/;"	t	typeref:struct:__anonb97f8f360108	file:
Position	lib/flecs/examples/c/reflection/basics/src/main.c	/^} Position;$/;"	t	typeref:struct:__anon07ccd2f20108	file:
Position	lib/flecs/examples/c/reflection/basics_deserialize/src/main.c	/^} Position;$/;"	t	typeref:struct:__anon3b8ee5220108	file:
Position	lib/flecs/examples/c/reflection/basics_json/src/main.c	/^} Position;$/;"	t	typeref:struct:__anonbc680b0b0108	file:
Position	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon7b79ffa80108	file:
Position	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon70a3d52e0108	file:
Position	lib/flecs/examples/c/systems/basics/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon9c840e7f0108	file:
Position	lib/flecs/examples/c/systems/pipeline/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anone425e6800108	file:
Position	lib/flecs/examples/c/systems/sync_point/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anonc203dd100108	file:
Position	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon263776a20108	file:
Position	lib/flecs/examples/cpp/entities/basics/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct Position { double x = 0; double y = 0; };$/;"	s	file:
Position	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/queries/ad_hoc_query/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/queries/hierarchy/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/queries/instancing/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/examples/cpp/queries/sorting/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/reflection/basics/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/reflection/basics_deserialize/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/reflection/basics_json/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^struct Position {$/;"	s	file:
Position	lib/flecs/examples/cpp/systems/basics/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/test/api/include/api.h	/^typedef struct Position {$/;"	s
Position	lib/flecs/test/api/include/api.h	/^} Position;$/;"	t	typeref:struct:Position
Position	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct Position {$/;"	s
Position	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^    struct Position {$/;"	s	namespace:Foo	file:
Position	lib/flecs/test/custom_builds/c/pipeline/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon09f76fa60108	file:
Position	lib/flecs/test/custom_builds/c/pipeline_w_system/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon6ce82e000108	file:
Position	lib/flecs/test/custom_builds/c/system/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon8c3501f50108	file:
Position	lib/flecs/test/custom_builds/c/timer/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon7ef2bd910108	file:
Position	lib/flecs/test/custom_builds/cpp/pipeline/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/test/custom_builds/cpp/system/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/test/custom_builds/cpp/timer/src/main.cpp	/^struct Position { $/;"	s	file:
Position	lib/flecs/test/meta/include/meta.h	/^} Position, Velocity;$/;"	t	typeref:struct:__anon8e06701c0108
Position3D	lib/flecs/test/api/src/Plecs.c	/^    } Position3D;$/;"	t	function:Plecs_type_and_assign_in_plecs_w_3_members	typeref:struct:Plecs_type_and_assign_in_plecs_w_3_members::__anonb7ea1cde0108	file:
Position3D	lib/flecs/test/api/src/Plecs.c	/^    } Position3D;$/;"	t	function:Plecs_using_w_entity_ref_in_value_3_members	typeref:struct:Plecs_using_w_entity_ref_in_value_3_members::__anonb7ea1cde0b08	file:
PositionDerived	lib/flecs/test/cpp_api/src/World.cpp	/^    PositionDerived() { }$/;"	f	struct:PositionDerived	file:
PositionDerived	lib/flecs/test/cpp_api/src/World.cpp	/^    PositionDerived(float x, float y) : Position{x, y} { }$/;"	f	struct:PositionDerived	file:
PositionDerived	lib/flecs/test/cpp_api/src/World.cpp	/^struct PositionDerived : Position {$/;"	s	file:
PositionInitialized	lib/flecs/test/cpp_api/src/Entity.cpp	/^    PositionInitialized() { }$/;"	f	struct:PositionInitialized	file:
PositionInitialized	lib/flecs/test/cpp_api/src/Entity.cpp	/^    PositionInitialized(float x_, float y_) : x(x_), y(y_) { }$/;"	f	struct:PositionInitialized	file:
PositionInitialized	lib/flecs/test/cpp_api/src/Entity.cpp	/^struct PositionInitialized { $/;"	s	file:
Position_1	lib/flecs/test/api/src/SystemPeriodic.c	/^typedef Position Position_1;$/;"	t	typeref:typename:Position	file:
Position_2	lib/flecs/test/api/src/SystemPeriodic.c	/^typedef Position Position_2;$/;"	t	typeref:typename:Position	file:
PostFrame	lib/flecs/flecs.h	/^static const flecs::entity_t PostFrame = EcsPostFrame;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PostFrame	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t PostFrame = EcsPostFrame;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PostLoad	lib/flecs/flecs.h	/^static const flecs::entity_t PostLoad = EcsPostLoad;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PostLoad	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t PostLoad = EcsPostLoad;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PostLoadTask	lib/flecs/test/api/src/Tasks.c	/^void PostLoadTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
PostUpdate	lib/flecs/flecs.h	/^static const flecs::entity_t PostUpdate = EcsPostUpdate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PostUpdate	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t PostUpdate = EcsPostUpdate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PostUpdateTask	lib/flecs/test/api/src/Tasks.c	/^void PostUpdateTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
PreFrame	lib/flecs/flecs.h	/^static const flecs::entity_t PreFrame = EcsPreFrame;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PreFrame	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t PreFrame = EcsPreFrame;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PreStore	lib/flecs/flecs.h	/^static const flecs::entity_t PreStore = EcsPreStore;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PreStore	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t PreStore = EcsPreStore;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PreStoreTask	lib/flecs/test/api/src/Tasks.c	/^void PreStoreTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
PreUpdate	lib/flecs/flecs.h	/^static const flecs::entity_t PreUpdate = EcsPreUpdate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PreUpdate	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^static const flecs::entity_t PreUpdate = EcsPreUpdate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
PreUpdate	lib/flecs/test/cpp_api/src/System.cpp	/^    struct PreUpdate { };$/;"	s	struct:PipelineType	file:
PreUpdateTask	lib/flecs/test/api/src/Tasks.c	/^void PreUpdateTask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Prefab	lib/flecs/flecs.h	/^static const flecs::entity_t Prefab = EcsPrefab;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Prefab	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Prefab = EcsPrefab;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Prefab	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Prefab { };$/;"	s	function:Entity_is_a_w_type	file:
PrefabReactiveTest	lib/flecs/test/api/src/Prefab.c	/^void PrefabReactiveTest(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Prefab_add_prefab	lib/flecs/test/api/src/Prefab.c	/^void Prefab_add_prefab() {$/;"	f	typeref:typename:void
Prefab_add_recycled_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_add_recycled_base() {$/;"	f	typeref:typename:void
Prefab_add_tag_w_low_id_to_instance	lib/flecs/test/api/src/Prefab.c	/^void Prefab_add_tag_w_low_id_to_instance() {$/;"	f	typeref:typename:void
Prefab_add_to_empty_base_in_system	lib/flecs/test/api/src/Prefab.c	/^void Prefab_add_to_empty_base_in_system() {$/;"	f	typeref:typename:void
Prefab_child_of_instance	lib/flecs/test/api/src/Prefab.c	/^void Prefab_child_of_instance() {$/;"	f	typeref:typename:void
Prefab_clone_after_inherit_in_on_add	lib/flecs/test/api/src/Prefab.c	/^void Prefab_clone_after_inherit_in_on_add() {$/;"	f	typeref:typename:void
Prefab_copy_from_prefab_first_instance_in_progress	lib/flecs/test/api/src/Prefab.c	/^void Prefab_copy_from_prefab_first_instance_in_progress() {$/;"	f	typeref:typename:void
Prefab_copy_from_prefab_in_progress	lib/flecs/test/api/src/Prefab.c	/^void Prefab_copy_from_prefab_in_progress() {$/;"	f	typeref:typename:void
Prefab_create_multiple_nested_w_on_set	lib/flecs/test/api/src/Prefab.c	/^void Prefab_create_multiple_nested_w_on_set() {$/;"	f	typeref:typename:void
Prefab_create_multiple_nested_w_on_set_in_progress	lib/flecs/test/api/src/Prefab.c	/^void Prefab_create_multiple_nested_w_on_set_in_progress() {$/;"	f	typeref:typename:void
Prefab_dont_copy_children_for_non_prefab_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_dont_copy_children_for_non_prefab_base() {$/;"	f	typeref:typename:void
Prefab_dont_inherit_disabled	lib/flecs/test/api/src/Prefab.c	/^void Prefab_dont_inherit_disabled() {$/;"	f	typeref:typename:void
Prefab_dont_match_prefab	lib/flecs/test/api/src/Prefab.c	/^void Prefab_dont_match_prefab() {$/;"	f	typeref:typename:void
Prefab_empty_prefab	lib/flecs/test/api/src/Prefab.c	/^void Prefab_empty_prefab() {$/;"	f	typeref:typename:void
Prefab_fail_on_override_final	lib/flecs/test/api/src/Prefab.c	/^void Prefab_fail_on_override_final() {$/;"	f	typeref:typename:void
Prefab_force_owned	lib/flecs/test/api/src/Prefab.c	/^void Prefab_force_owned() {$/;"	f	typeref:typename:void
Prefab_force_owned_2	lib/flecs/test/api/src/Prefab.c	/^void Prefab_force_owned_2() {$/;"	f	typeref:typename:void
Prefab_force_owned_nested	lib/flecs/test/api/src/Prefab.c	/^void Prefab_force_owned_nested() {$/;"	f	typeref:typename:void
Prefab_get_component_from_1st_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_from_1st_base() {$/;"	f	typeref:typename:void
Prefab_get_component_from_1st_base_of_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_from_1st_base_of_base() {$/;"	f	typeref:typename:void
Prefab_get_component_from_1st_base_of_base_prefab_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_from_1st_base_of_base_prefab_base() {$/;"	f	typeref:typename:void
Prefab_get_component_from_1st_base_prefab_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_from_1st_base_prefab_base() {$/;"	f	typeref:typename:void
Prefab_get_component_from_2nd_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_from_2nd_base() {$/;"	f	typeref:typename:void
Prefab_get_component_from_2nd_base_of_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_from_2nd_base_of_base() {$/;"	f	typeref:typename:void
Prefab_get_component_from_2nd_base_of_base_prefab_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_from_2nd_base_of_base_prefab_base() {$/;"	f	typeref:typename:void
Prefab_get_component_from_2nd_base_prefab_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_from_2nd_base_prefab_base() {$/;"	f	typeref:typename:void
Prefab_get_component_pair_from_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_pair_from_base() {$/;"	f	typeref:typename:void
Prefab_get_component_pair_from_prefab_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_component_pair_from_prefab_base() {$/;"	f	typeref:typename:void
Prefab_get_from_recycled_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_from_recycled_base() {$/;"	f	typeref:typename:void
Prefab_get_ptr_from_prefab_from_new_table_in_progress	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_ptr_from_prefab_from_new_table_in_progress() {    $/;"	f	typeref:typename:void
Prefab_get_ptr_prefab	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_ptr_prefab() {$/;"	f	typeref:typename:void
Prefab_get_tag_from_2nd_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_tag_from_2nd_base() {$/;"	f	typeref:typename:void
Prefab_get_type_after_base_add	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_type_after_base_add() {$/;"	f	typeref:typename:void
Prefab_get_type_after_recycled_base_add	lib/flecs/test/api/src/Prefab.c	/^void Prefab_get_type_after_recycled_base_add() {$/;"	f	typeref:typename:void
Prefab_ignore_on_add	lib/flecs/test/api/src/Prefab.c	/^void Prefab_ignore_on_add() {$/;"	f	typeref:typename:void
Prefab_ignore_on_remove	lib/flecs/test/api/src/Prefab.c	/^void Prefab_ignore_on_remove() {$/;"	f	typeref:typename:void
Prefab_ignore_on_set	lib/flecs/test/api/src/Prefab.c	/^void Prefab_ignore_on_set() {$/;"	f	typeref:typename:void
Prefab_ignore_prefab_parent_component	lib/flecs/test/api/src/Prefab.c	/^void Prefab_ignore_prefab_parent_component() {$/;"	f	typeref:typename:void
Prefab_instanceof_0	lib/flecs/test/api/src/Prefab.c	/^void Prefab_instanceof_0() {$/;"	f	typeref:typename:void
Prefab_instantiate_emptied_child_table	lib/flecs/test/api/src/Prefab.c	/^void Prefab_instantiate_emptied_child_table() {$/;"	f	typeref:typename:void
Prefab_instantiate_empty_child_table	lib/flecs/test/api/src/Prefab.c	/^void Prefab_instantiate_empty_child_table() {$/;"	f	typeref:typename:void
Prefab_instantiate_in_progress	lib/flecs/test/api/src/Prefab.c	/^void Prefab_instantiate_in_progress() {$/;"	f	typeref:typename:void
Prefab_instantiate_tree_from_recycled_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_instantiate_tree_from_recycled_base() {$/;"	f	typeref:typename:void
Prefab_instantiate_tree_once	lib/flecs/test/api/src/Prefab.c	/^void Prefab_instantiate_tree_once() {$/;"	f	typeref:typename:void
Prefab_iterate_w_prefab_shared	lib/flecs/test/api/src/Prefab.c	/^void Prefab_iterate_w_prefab_shared() {$/;"	f	typeref:typename:void
Prefab_match_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_match_base() {$/;"	f	typeref:typename:void
Prefab_match_base_after_add_in_prev_phase	lib/flecs/test/api/src/Prefab.c	/^void Prefab_match_base_after_add_in_prev_phase() {$/;"	f	typeref:typename:void
Prefab_match_entity_prefab_w_system_optional	lib/flecs/test/api/src/Prefab.c	/^void Prefab_match_entity_prefab_w_system_optional() {$/;"	f	typeref:typename:void
Prefab_match_table_created_in_progress	lib/flecs/test/api/src/Prefab.c	/^void Prefab_match_table_created_in_progress() {$/;"	f	typeref:typename:void
Prefab_nested_prefab_in_progress_w_count	lib/flecs/test/api/src/Prefab.c	/^void Prefab_nested_prefab_in_progress_w_count() {$/;"	f	typeref:typename:void
Prefab_nested_prefab_in_progress_w_count_set_after_override	lib/flecs/test/api/src/Prefab.c	/^void Prefab_nested_prefab_in_progress_w_count_set_after_override() {$/;"	f	typeref:typename:void
Prefab_nested_prefab_w_named_children	lib/flecs/test/api/src/Prefab.c	/^void Prefab_nested_prefab_w_named_children() {$/;"	f	typeref:typename:void
Prefab_new_type_w_1_override	lib/flecs/test/api/src/Prefab.c	/^void Prefab_new_type_w_1_override() {$/;"	f	typeref:typename:void
Prefab_new_type_w_2_overrides	lib/flecs/test/api/src/Prefab.c	/^void Prefab_new_type_w_2_overrides() {$/;"	f	typeref:typename:void
Prefab_new_w_count_prefab	lib/flecs/test/api/src/Prefab.c	/^void Prefab_new_w_count_prefab() {$/;"	f	typeref:typename:void
Prefab_new_w_count_w_override	lib/flecs/test/api/src/Prefab.c	/^void Prefab_new_w_count_w_override() {$/;"	f	typeref:typename:void
Prefab_new_w_prefab	lib/flecs/test/api/src/Prefab.c	/^void Prefab_new_w_prefab() {$/;"	f	typeref:typename:void
Prefab_new_w_recycled_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_new_w_recycled_base() {$/;"	f	typeref:typename:void
Prefab_new_w_type_w_prefab	lib/flecs/test/api/src/Prefab.c	/^void Prefab_new_w_type_w_prefab() {$/;"	f	typeref:typename:void
Prefab_no_instantiate_on_2nd_add	lib/flecs/test/api/src/Prefab.c	/^void Prefab_no_instantiate_on_2nd_add() {$/;"	f	typeref:typename:void
Prefab_no_instantiate_on_2nd_add_in_progress	lib/flecs/test/api/src/Prefab.c	/^void Prefab_no_instantiate_on_2nd_add_in_progress() {$/;"	f	typeref:typename:void
Prefab_no_overwrite_on_2nd_add	lib/flecs/test/api/src/Prefab.c	/^void Prefab_no_overwrite_on_2nd_add() {$/;"	f	typeref:typename:void
Prefab_no_overwrite_on_2nd_add_in_progress	lib/flecs/test/api/src/Prefab.c	/^void Prefab_no_overwrite_on_2nd_add_in_progress() {$/;"	f	typeref:typename:void
Prefab_on_set_on_instance	lib/flecs/test/api/src/Prefab.c	/^void Prefab_on_set_on_instance() {$/;"	f	typeref:typename:void
Prefab_override_2_components_different_size	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_2_components_different_size() {$/;"	f	typeref:typename:void
Prefab_override_2_of_3_components_1_self	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_2_of_3_components_1_self() {$/;"	f	typeref:typename:void
Prefab_override_2_prefabs	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_2_prefabs() {$/;"	f	typeref:typename:void
Prefab_override_component	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_component() {$/;"	f	typeref:typename:void
Prefab_override_dont_inherit	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_dont_inherit() {$/;"	f	typeref:typename:void
Prefab_override_from_nested	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_from_nested() {$/;"	f	typeref:typename:void
Prefab_override_from_recycled_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_from_recycled_base() {$/;"	f	typeref:typename:void
Prefab_override_remove_component	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_remove_component() {$/;"	f	typeref:typename:void
Prefab_override_tag	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_tag() {$/;"	f	typeref:typename:void
Prefab_override_watched_prefab	lib/flecs/test/api/src/Prefab.c	/^void Prefab_override_watched_prefab() {$/;"	f	typeref:typename:void
Prefab_prefab_auto_override_child_component	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_auto_override_child_component() {$/;"	f	typeref:typename:void
Prefab_prefab_in_system_expr	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_in_system_expr() {$/;"	f	typeref:typename:void
Prefab_prefab_instanceof_hierarchy	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_instanceof_hierarchy() {$/;"	f	typeref:typename:void
Prefab_prefab_tree_1_2_1	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_tree_1_2_1() {$/;"	f	typeref:typename:void
Prefab_prefab_w_1_child	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_w_1_child() {$/;"	f	typeref:typename:void
Prefab_prefab_w_2_children	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_w_2_children() {$/;"	f	typeref:typename:void
Prefab_prefab_w_base_w_child	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_w_base_w_child() {$/;"	f	typeref:typename:void
Prefab_prefab_w_child_new_w_count	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_w_child_new_w_count() {$/;"	f	typeref:typename:void
Prefab_prefab_w_child_w_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_w_child_w_base() {$/;"	f	typeref:typename:void
Prefab_prefab_w_child_w_base_w_children	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_w_child_w_base_w_children() {$/;"	f	typeref:typename:void
Prefab_prefab_w_grandchild	lib/flecs/test/api/src/Prefab.c	/^void Prefab_prefab_w_grandchild() {$/;"	f	typeref:typename:void
Prefab_ref_after_realloc	lib/flecs/test/api/src/Prefab.c	/^void Prefab_ref_after_realloc() {$/;"	f	typeref:typename:void
Prefab_rematch_after_add_instanceof_to_parent	lib/flecs/test/api/src/Prefab.c	/^void Prefab_rematch_after_add_instanceof_to_parent() {$/;"	f	typeref:typename:void
Prefab_rematch_after_add_to_recycled_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_rematch_after_add_to_recycled_base() {$/;"	f	typeref:typename:void
Prefab_rematch_after_prefab_delete	lib/flecs/test/api/src/Prefab.c	/^void Prefab_rematch_after_prefab_delete() {$/;"	f	typeref:typename:void
Prefab_rematch_twice	lib/flecs/test/api/src/Prefab.c	/^void Prefab_rematch_twice() {$/;"	f	typeref:typename:void
Prefab_remove_override_from_recycled_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_remove_override_from_recycled_base() {$/;"	f	typeref:typename:void
Prefab_remove_prefab_after_add	lib/flecs/test/api/src/Prefab.c	/^void Prefab_remove_prefab_after_add() {$/;"	f	typeref:typename:void
Prefab_remove_prefab_after_new	lib/flecs/test/api/src/Prefab.c	/^void Prefab_remove_prefab_after_new() {$/;"	f	typeref:typename:void
Prefab_remove_recycled_base	lib/flecs/test/api/src/Prefab.c	/^void Prefab_remove_recycled_base() {$/;"	f	typeref:typename:void
Prefab_revalidate_ref_w_mixed_table_refs	lib/flecs/test/api/src/Prefab.c	/^void Prefab_revalidate_ref_w_mixed_table_refs() {$/;"	f	typeref:typename:void
Prefab_setup	lib/flecs/test/api/src/Prefab.c	/^void Prefab_setup() {$/;"	f	typeref:typename:void
Prefab_single_on_set_on_child_w_override	lib/flecs/test/api/src/Prefab.c	/^void Prefab_single_on_set_on_child_w_override() {$/;"	f	typeref:typename:void
Prefab_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Prefab_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Prefab_w_shared	lib/flecs/test/api/src/Prefab.c	/^void Prefab_w_shared(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
PrefixEnum	lib/flecs/test/cpp_api/src/Enum.cpp	/^enum PrefixEnum {$/;"	g	file:
PrefixEnumBar	lib/flecs/test/cpp_api/src/Enum.cpp	/^    PrefixEnumFoo, PrefixEnumBar$/;"	e	enum:PrefixEnum	file:
PrefixEnumFoo	lib/flecs/test/cpp_api/src/Enum.cpp	/^    PrefixEnumFoo, PrefixEnumBar$/;"	e	enum:PrefixEnum	file:
Prefixes	lib/flecs/flecs.h	/^struct Prefixes { };$/;"	s	struct:flecs::units
Prefixes	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Prefixes { };$/;"	s	struct:flecs::units
Pressure	lib/flecs/flecs.h	/^struct Pressure { };$/;"	s	struct:flecs::units
Pressure	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Pressure { };$/;"	s	struct:flecs::units
Prev	lib/uthash/tests/test78.c	/^    struct el *Next, *Prev;$/;"	m	struct:el	typeref:struct:el *	file:
Primitive	lib/flecs/flecs.h	/^using Primitive = EcsPrimitive;$/;"	t	namespace:flecs	typeref:typename:EcsPrimitive
Primitive	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using Primitive = EcsPrimitive;$/;"	t	namespace:flecs	typeref:typename:EcsPrimitive
PrimitiveTypes_builtin_bool	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_bool() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_byte	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_byte() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_char	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_char() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_double	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_double() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_entity	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_entity() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_float	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_float() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_i16	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_i16() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_i32	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_i32() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_i64	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_i64() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_i8	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_i8() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_iptr	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_iptr() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_string	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_string() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_u16	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_u16() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_u32	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_u32() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_u64	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_u64() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_u8	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_u8() {$/;"	f	typeref:typename:void
PrimitiveTypes_builtin_uptr	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_builtin_uptr() {$/;"	f	typeref:typename:void
PrimitiveTypes_byte	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_byte() {$/;"	f	typeref:typename:void
PrimitiveTypes_char	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_char() {$/;"	f	typeref:typename:void
PrimitiveTypes_double	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_double() {$/;"	f	typeref:typename:void
PrimitiveTypes_entity	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_entity() {$/;"	f	typeref:typename:void
PrimitiveTypes_float	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_float() {$/;"	f	typeref:typename:void
PrimitiveTypes_i16	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_i16() {$/;"	f	typeref:typename:void
PrimitiveTypes_i32	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_i32() {$/;"	f	typeref:typename:void
PrimitiveTypes_i64	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_i64() {$/;"	f	typeref:typename:void
PrimitiveTypes_i8	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_i8() {$/;"	f	typeref:typename:void
PrimitiveTypes_iptr	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_iptr() {$/;"	f	typeref:typename:void
PrimitiveTypes_primitive_init	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_primitive_init() {$/;"	f	typeref:typename:void
PrimitiveTypes_string	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_string() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_bool	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_bool() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_byte	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_byte() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_char	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_char() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_double	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_double() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_entity	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_entity() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_float	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_float() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_i16	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_i16() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_i32	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_i32() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_i64	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_i64() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_i8	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_i8() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_iptr	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_iptr() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_string	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_string() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_u16	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_u16() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_u32	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_u32() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_u64	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_u64() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_u8	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_u8() {$/;"	f	typeref:typename:void
PrimitiveTypes_struct_w_uptr	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_struct_w_uptr() {$/;"	f	typeref:typename:void
PrimitiveTypes_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case PrimitiveTypes_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
PrimitiveTypes_u16	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_u16() {$/;"	f	typeref:typename:void
PrimitiveTypes_u32	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_u32() {$/;"	f	typeref:typename:void
PrimitiveTypes_u64	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_u64() {$/;"	f	typeref:typename:void
PrimitiveTypes_u8	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_u8() {$/;"	f	typeref:typename:void
PrimitiveTypes_uptr	lib/flecs/test/meta/src/PrimitiveTypes.c	/^void PrimitiveTypes_uptr() {$/;"	f	typeref:typename:void
PrintDeltaTime	lib/flecs/examples/c/systems/delta_time/src/main.c	/^void PrintDeltaTime(ecs_iter_t *it) {$/;"	f	typeref:typename:void
PrintDeltaTime	lib/flecs/examples/c/systems/target_fps/src/main.c	/^void PrintDeltaTime(ecs_iter_t *it) {$/;"	f	typeref:typename:void
PrintExpire	lib/flecs/examples/c/systems/mutate_entity/src/main.c	/^void PrintExpire(ecs_iter_t *it) {$/;"	f	typeref:typename:void
PrintPosition	lib/flecs/examples/c/systems/pipeline/src/main.c	/^void PrintPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void
PrintPosition	lib/flecs/examples/c/systems/sync_point/src/main.c	/^void PrintPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void
PrintPosition	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^void PrintPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Private	lib/flecs/flecs.h	/^static const flecs::entity_t Private = EcsPrivate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Private	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Private = EcsPrivate;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Probe	lib/flecs/test/api/include/api.h	/^typedef struct Probe {$/;"	s
Probe	lib/flecs/test/api/include/api.h	/^} Probe;$/;"	t	typeref:struct:Probe
ProcessPairTags	lib/flecs/test/api/src/Pairs.c	/^void ProcessPairTags(ecs_iter_t *it) {$/;"	f	typeref:typename:void
ProcessPairs	lib/flecs/test/api/src/Pairs.c	/^void ProcessPairs(ecs_iter_t *it) {$/;"	f	typeref:typename:void
ProcessTwoPairs	lib/flecs/test/api/src/Pairs.c	/^void ProcessTwoPairs(ecs_iter_t *it) {$/;"	f	typeref:typename:void
ProcessValuePairs	lib/flecs/test/api/src/Pairs.c	/^void ProcessValuePairs(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Progress	lib/flecs/test/api/src/MultiThread.c	/^void Progress(ecs_iter_t *it) {$/;"	f	typeref:typename:void
ProgressRateFilters	lib/flecs/flecs.c	/^void ProgressRateFilters(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ProgressRateFilters	lib/flecs/src/addons/timer.c	/^void ProgressRateFilters(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ProgressTickSource	lib/flecs/flecs.c	/^void ProgressTickSource(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ProgressTickSource	lib/flecs/src/addons/timer.c	/^void ProgressTickSource(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ProgressTimers	lib/flecs/flecs.c	/^void ProgressTimers(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ProgressTimers	lib/flecs/src/addons/timer.c	/^void ProgressTimers(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
PtrArray	lib/flecs/flecs.h	/^    using PtrArray = flecs::array<void*, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
PtrArray	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    using PtrArray = flecs::array<void*, sizeof...(Args)>;$/;"	t	struct:flecs::_::entity_with_invoker_impl
QSORT	lib/flecs/flecs.c	/^#define QSORT(/;"	d	file:
QSORT	lib/flecs/src/datastructures/qsort.h	/^#define QSORT(/;"	d
QSORT_H	lib/flecs/flecs.c	/^#define QSORT_H$/;"	d	file:
QSORT_H	lib/flecs/src/datastructures/qsort.h	/^#define QSORT_H$/;"	d
QUERY_TO_CUSTOM_JSON_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/query_to_custom_json/include/query_to_custom_json/bake_config.h	/^#define QUERY_TO_CUSTOM_JSON_BAKE_CONFIG_H$/;"	d
QUERY_TO_CUSTOM_JSON_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/query_to_custom_json/include/query_to_custom_json/bake_config.h	/^#define QUERY_TO_CUSTOM_JSON_BAKE_CONFIG_H$/;"	d
QUERY_TO_CUSTOM_JSON_H	lib/flecs/examples/c/reflection/query_to_custom_json/include/query_to_custom_json.h	/^#define QUERY_TO_CUSTOM_JSON_H$/;"	d
QUERY_TO_CUSTOM_JSON_H	lib/flecs/examples/cpp/reflection/query_to_custom_json/include/query_to_custom_json.h	/^#define QUERY_TO_CUSTOM_JSON_H$/;"	d
QUERY_TO_JSON_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/query_to_json/include/query_to_json/bake_config.h	/^#define QUERY_TO_JSON_BAKE_CONFIG_H$/;"	d
QUERY_TO_JSON_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/query_to_json/include/query_to_json/bake_config.h	/^#define QUERY_TO_JSON_BAKE_CONFIG_H$/;"	d
QUERY_TO_JSON_H	lib/flecs/examples/c/reflection/query_to_json/include/query_to_json.h	/^#define QUERY_TO_JSON_H$/;"	d
QUERY_TO_JSON_H	lib/flecs/examples/cpp/reflection/query_to_json/include/query_to_json.h	/^#define QUERY_TO_JSON_H$/;"	d
Q_INSERTION_SORT	lib/flecs/flecs.c	/^#define Q_INSERTION_SORT(/;"	d	file:
Q_INSERTION_SORT	lib/flecs/src/datastructures/qsort.h	/^#define Q_INSERTION_SORT(/;"	d
Q_LOOP	lib/flecs/flecs.c	/^#define Q_LOOP(/;"	d	file:
Q_LOOP	lib/flecs/src/datastructures/qsort.h	/^#define Q_LOOP(/;"	d
Q_PARTITION	lib/flecs/flecs.c	/^#define Q_PARTITION(/;"	d	file:
Q_PARTITION	lib/flecs/src/datastructures/qsort.h	/^#define Q_PARTITION(/;"	d
Q_SORT3	lib/flecs/flecs.c	/^#define Q_SORT3(/;"	d	file:
Q_SORT3	lib/flecs/src/datastructures/qsort.h	/^#define Q_SORT3(/;"	d
Q_SUBFILES	lib/flecs/flecs.c	/^#define Q_SUBFILES(/;"	d	file:
Q_SUBFILES	lib/flecs/src/datastructures/qsort.h	/^#define Q_SUBFILES(/;"	d
Q_THRESH	lib/flecs/flecs.c	/^#define Q_THRESH /;"	d	file:
Q_THRESH	lib/flecs/src/datastructures/qsort.h	/^#define Q_THRESH /;"	d
Quantity	lib/flecs/flecs.h	/^static const flecs::entity_t Quantity = EcsQuantity;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Quantity	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t Quantity = EcsQuantity;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Query	lib/flecs/flecs.h	/^using Query = EcsQuery;$/;"	t	namespace:flecs	typeref:typename:EcsQuery
Query	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using Query = EcsQuery;$/;"	t	namespace:flecs	typeref:typename:EcsQuery
QueryBuilder_10_terms	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_10_terms() {$/;"	f	typeref:typename:void
QueryBuilder_1_term_to_empty	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_1_term_to_empty() {$/;"	f	typeref:typename:void
QueryBuilder_1_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_1_type() {$/;"	f	typeref:typename:void
QueryBuilder_20_terms	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_20_terms() {$/;"	f	typeref:typename:void
QueryBuilder_2_subsequent_args	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_2_subsequent_args() {$/;"	f	typeref:typename:void
QueryBuilder_add_1_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_1_type() {$/;"	f	typeref:typename:void
QueryBuilder_add_1_type_w_1_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_1_type_w_1_type() {$/;"	f	typeref:typename:void
QueryBuilder_add_2_types	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_2_types() {$/;"	f	typeref:typename:void
QueryBuilder_add_2_types_w_1_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_2_types_w_1_type() {$/;"	f	typeref:typename:void
QueryBuilder_add_not	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_not() {$/;"	f	typeref:typename:void
QueryBuilder_add_optional	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_optional() {$/;"	f	typeref:typename:void
QueryBuilder_add_or	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_or() {$/;"	f	typeref:typename:void
QueryBuilder_add_pair	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_pair() {$/;"	f	typeref:typename:void
QueryBuilder_add_pair_w_rel_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_add_pair_w_rel_type() {$/;"	f	typeref:typename:void
QueryBuilder_builder_assign_from_empty	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_builder_assign_from_empty() {$/;"	f	typeref:typename:void
QueryBuilder_builder_assign_same_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_builder_assign_same_type() {$/;"	f	typeref:typename:void
QueryBuilder_builder_assign_to_empty	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_builder_assign_to_empty() {$/;"	f	typeref:typename:void
QueryBuilder_builder_build	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_builder_build() {$/;"	f	typeref:typename:void
QueryBuilder_builder_build_n_statements	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_builder_build_n_statements() {$/;"	f	typeref:typename:void
QueryBuilder_builder_build_to_auto	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_builder_build_to_auto() {$/;"	f	typeref:typename:void
QueryBuilder_childof_self_superset_term	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_childof_self_superset_term() {$/;"	f	typeref:typename:void
QueryBuilder_childof_self_superset_term_w_each	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_childof_self_superset_term_w_each() {$/;"	f	typeref:typename:void
QueryBuilder_childof_superset_shortcut	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_childof_superset_shortcut() {$/;"	f	typeref:typename:void
QueryBuilder_childof_superset_shortcut_w_self	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_childof_superset_shortcut_w_self() {$/;"	f	typeref:typename:void
QueryBuilder_childof_superset_term	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_childof_superset_term() {$/;"	f	typeref:typename:void
QueryBuilder_childof_superset_term_w_each	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_childof_superset_term_w_each() {$/;"	f	typeref:typename:void
QueryBuilder_const_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_const_type() {$/;"	f	typeref:typename:void
QueryBuilder_create_w_no_template_args	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_create_w_no_template_args() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_object_w_id	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_object_w_id() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_object_w_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_object_w_type() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_subject_w_id	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_subject_w_id() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_subject_w_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_subject_w_type() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_term	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_term() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_term_w_id	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_term_w_id() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_term_w_pair_id	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_term_w_pair_id() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_term_w_pair_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_term_w_pair_type() {$/;"	f	typeref:typename:void
QueryBuilder_explicit_term_w_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_explicit_term_w_type() {$/;"	f	typeref:typename:void
QueryBuilder_group_by_raw	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_group_by_raw() {$/;"	f	typeref:typename:void
QueryBuilder_group_by_template	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_group_by_template() {$/;"	f	typeref:typename:void
QueryBuilder_isa_self_superset_term	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_self_superset_term() {$/;"	f	typeref:typename:void
QueryBuilder_isa_self_superset_term_w_each	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_self_superset_term_w_each() {$/;"	f	typeref:typename:void
QueryBuilder_isa_superset_max_depth_1	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_superset_max_depth_1() {$/;"	f	typeref:typename:void
QueryBuilder_isa_superset_max_depth_2	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_superset_max_depth_2() {$/;"	f	typeref:typename:void
QueryBuilder_isa_superset_min_depth_2	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_superset_min_depth_2() {$/;"	f	typeref:typename:void
QueryBuilder_isa_superset_min_depth_2_max_depth_3	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_superset_min_depth_2_max_depth_3() {$/;"	f	typeref:typename:void
QueryBuilder_isa_superset_shortcut	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_superset_shortcut() {$/;"	f	typeref:typename:void
QueryBuilder_isa_superset_shortcut_w_self	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_superset_shortcut_w_self() {$/;"	f	typeref:typename:void
QueryBuilder_isa_superset_term	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_superset_term() {$/;"	f	typeref:typename:void
QueryBuilder_isa_superset_term_w_each	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_isa_superset_term_w_each() {$/;"	f	typeref:typename:void
QueryBuilder_optional_tag_is_set	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_optional_tag_is_set() {$/;"	f	typeref:typename:void
QueryBuilder_ptr_type	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_ptr_type() {$/;"	f	typeref:typename:void
QueryBuilder_relation	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_relation() {$/;"	f	typeref:typename:void
QueryBuilder_relation_w_object_wildcard	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_relation_w_object_wildcard() {$/;"	f	typeref:typename:void
QueryBuilder_relation_w_predicate_wildcard	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_relation_w_predicate_wildcard() {$/;"	f	typeref:typename:void
QueryBuilder_role	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_role() {$/;"	f	typeref:typename:void
QueryBuilder_singleton_term	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_singleton_term() {$/;"	f	typeref:typename:void
QueryBuilder_string_term	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_string_term() {$/;"	f	typeref:typename:void
QueryBuilder_string_term_w_expr	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_string_term_w_expr() {$/;"	f	typeref:typename:void
QueryBuilder_template_term	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^void QueryBuilder_template_term() {$/;"	f	typeref:typename:void
QueryBuilder_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case QueryBuilder_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
QueryComponent	lib/flecs/test/cpp_api/src/Query.cpp	/^    struct QueryComponent {$/;"	s	function:Query_query_each_from_component	file:
QueryComponent	lib/flecs/test/cpp_api/src/Query.cpp	/^    struct QueryComponent {$/;"	s	function:Query_query_iter_from_component	file:
Query_2_terms_1_filter	lib/flecs/test/api/src/Query.c	/^void Query_2_terms_1_filter() {$/;"	f	typeref:typename:void
Query_3_terms_2_filter	lib/flecs/test/api/src/Query.c	/^void Query_3_terms_2_filter() {$/;"	f	typeref:typename:void
Query_action	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_action() {$/;"	f	typeref:typename:void
Query_action_const	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_action_const() {$/;"	f	typeref:typename:void
Query_action_optional	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_action_optional() {$/;"	f	typeref:typename:void
Query_action_shared	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_action_shared() {$/;"	f	typeref:typename:void
Query_add_singleton_after_query	lib/flecs/test/api/src/Query.c	/^void Query_add_singleton_after_query() {$/;"	f	typeref:typename:void
Query_change_tracking	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_change_tracking() {$/;"	f	typeref:typename:void
Query_changed	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_changed() {$/;"	f	typeref:typename:void
Query_comp_to_str	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_comp_to_str() {$/;"	f	typeref:typename:void
Query_compare_term_id	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_compare_term_id() {$/;"	f	typeref:typename:void
Query_create_query_while_pending	lib/flecs/test/api/src/Query.c	/^void Query_create_query_while_pending() {$/;"	f	typeref:typename:void
Query_default_ctor	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_default_ctor() {$/;"	f	typeref:typename:void
Query_default_ctor_no_assign	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_default_ctor_no_assign() {$/;"	f	typeref:typename:void
Query_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_each() {$/;"	f	typeref:typename:void
Query_each_const	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_each_const() {$/;"	f	typeref:typename:void
Query_each_no_entity_1_comp	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_each_no_entity_1_comp() {$/;"	f	typeref:typename:void
Query_each_no_entity_2_comps	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_each_no_entity_2_comps() {$/;"	f	typeref:typename:void
Query_each_optional	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_each_optional() {$/;"	f	typeref:typename:void
Query_each_pair_object	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_each_pair_object() {$/;"	f	typeref:typename:void
Query_each_pair_type	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_each_pair_type() {$/;"	f	typeref:typename:void
Query_each_shared	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_each_shared() {$/;"	f	typeref:typename:void
Query_explicit_delete	lib/flecs/test/api/src/Query.c	/^void Query_explicit_delete() {$/;"	f	typeref:typename:void
Query_expr_w_template	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_expr_w_template() {$/;"	f	typeref:typename:void
Query_filter_term	lib/flecs/test/api/src/Query.c	/^void Query_filter_term() {$/;"	f	typeref:typename:void
Query_get_column_size	lib/flecs/test/api/src/Query.c	/^void Query_get_column_size() {$/;"	f	typeref:typename:void
Query_get_filter	lib/flecs/test/api/src/Query.c	/^void Query_get_filter() {$/;"	f	typeref:typename:void
Query_get_owned_tag	lib/flecs/test/api/src/Query.c	/^void Query_get_owned_tag() {$/;"	f	typeref:typename:void
Query_get_shared_tag	lib/flecs/test/api/src/Query.c	/^void Query_get_shared_tag() {$/;"	f	typeref:typename:void
Query_group_by	lib/flecs/test/api/src/Query.c	/^void Query_group_by() {$/;"	f	typeref:typename:void
Query_group_by_w_ctx	lib/flecs/test/api/src/Query.c	/^void Query_group_by_w_ctx() {$/;"	f	typeref:typename:void
Query_group_by_w_sort_reverse_group_creation	lib/flecs/test/api/src/Query.c	/^void Query_group_by_w_sort_reverse_group_creation() {$/;"	f	typeref:typename:void
Query_inspect_terms	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_inspect_terms() {$/;"	f	typeref:typename:void
Query_inspect_terms_w_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_inspect_terms_w_each() {$/;"	f	typeref:typename:void
Query_instanced_query_w_base_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_instanced_query_w_base_each() {$/;"	f	typeref:typename:void
Query_instanced_query_w_base_iter	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_instanced_query_w_base_iter() {$/;"	f	typeref:typename:void
Query_instanced_query_w_singleton_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_instanced_query_w_singleton_each() {$/;"	f	typeref:typename:void
Query_instanced_query_w_singleton_iter	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_instanced_query_w_singleton_iter() {$/;"	f	typeref:typename:void
Query_invalid_access_orphaned_query	lib/flecs/test/api/src/Query.c	/^void Query_invalid_access_orphaned_query() {$/;"	f	typeref:typename:void
Query_iter_no_comps_1_comp	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_iter_no_comps_1_comp() {$/;"	f	typeref:typename:void
Query_iter_no_comps_2_comps	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_iter_no_comps_2_comps() {$/;"	f	typeref:typename:void
Query_iter_no_comps_no_comps	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_iter_no_comps_no_comps() {$/;"	f	typeref:typename:void
Query_iter_pair_object	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_iter_pair_object() {$/;"	f	typeref:typename:void
Query_iter_pair_type	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_iter_pair_type() {$/;"	f	typeref:typename:void
Query_iter_query_in_system	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_iter_query_in_system() {$/;"	f	typeref:typename:void
Query_iter_type	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_iter_type() {$/;"	f	typeref:typename:void
Query_iter_type_set	lib/flecs/test/api/src/Query.c	/^void Query_iter_type_set() {$/;"	f	typeref:typename:void
Query_iter_valid	lib/flecs/test/api/src/Query.c	/^void Query_iter_valid() {$/;"	f	typeref:typename:void
Query_nested_orphaned_query	lib/flecs/test/api/src/Query.c	/^void Query_nested_orphaned_query() {$/;"	f	typeref:typename:void
Query_no_instancing_w_shared	lib/flecs/test/api/src/Query.c	/^void Query_no_instancing_w_shared() {$/;"	f	typeref:typename:void
Query_no_instancing_w_singleton	lib/flecs/test/api/src/Query.c	/^void Query_no_instancing_w_singleton() {$/;"	f	typeref:typename:void
Query_only_from_entity	lib/flecs/test/api/src/Query.c	/^void Query_only_from_entity() {$/;"	f	typeref:typename:void
Query_only_from_singleton	lib/flecs/test/api/src/Query.c	/^void Query_only_from_singleton() {$/;"	f	typeref:typename:void
Query_only_not_from_entity	lib/flecs/test/api/src/Query.c	/^void Query_only_not_from_entity() {$/;"	f	typeref:typename:void
Query_only_not_from_singleton	lib/flecs/test/api/src/Query.c	/^void Query_only_not_from_singleton() {$/;"	f	typeref:typename:void
Query_only_optional_from_entity	lib/flecs/test/api/src/Query.c	/^void Query_only_optional_from_entity() {$/;"	f	typeref:typename:void
Query_only_optional_from_entity_no_match	lib/flecs/test/api/src/Query.c	/^void Query_only_optional_from_entity_no_match() {$/;"	f	typeref:typename:void
Query_oper_not_to_str	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_oper_not_to_str() {$/;"	f	typeref:typename:void
Query_oper_optional_to_str	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_oper_optional_to_str() {$/;"	f	typeref:typename:void
Query_oper_or_to_str	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_oper_or_to_str() {$/;"	f	typeref:typename:void
Query_orphaned	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_orphaned() {$/;"	f	typeref:typename:void
Query_orphaned_query	lib/flecs/test/api/src/Query.c	/^void Query_orphaned_query() {$/;"	f	typeref:typename:void
Query_pair_to_str	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_pair_to_str() {$/;"	f	typeref:typename:void
Query_query_change_after_in_system	lib/flecs/test/api/src/Query.c	/^void Query_query_change_after_in_system() {$/;"	f	typeref:typename:void
Query_query_change_after_modified	lib/flecs/test/api/src/Query.c	/^void Query_query_change_after_modified() {$/;"	f	typeref:typename:void
Query_query_change_after_modified_out_term	lib/flecs/test/api/src/Query.c	/^void Query_query_change_after_modified_out_term() {$/;"	f	typeref:typename:void
Query_query_change_after_out_system	lib/flecs/test/api/src/Query.c	/^void Query_query_change_after_out_system() {$/;"	f	typeref:typename:void
Query_query_change_check_iter	lib/flecs/test/api/src/Query.c	/^void Query_query_change_check_iter() {$/;"	f	typeref:typename:void
Query_query_change_check_iter_after_skip_read	lib/flecs/test/api/src/Query.c	/^void Query_query_change_check_iter_after_skip_read() {$/;"	f	typeref:typename:void
Query_query_change_check_iter_after_skip_write	lib/flecs/test/api/src/Query.c	/^void Query_query_change_check_iter_after_skip_write() {$/;"	f	typeref:typename:void
Query_query_change_parent_term	lib/flecs/test/api/src/Query.c	/^void Query_query_change_parent_term() {$/;"	f	typeref:typename:void
Query_query_change_prefab_term	lib/flecs/test/api/src/Query.c	/^void Query_query_change_prefab_term() {$/;"	f	typeref:typename:void
Query_query_change_skip_non_instanced	lib/flecs/test/api/src/Query.c	/^void Query_query_change_skip_non_instanced() {$/;"	f	typeref:typename:void
Query_query_changed_after_add	lib/flecs/test/api/src/Query.c	/^void Query_query_changed_after_add() {$/;"	f	typeref:typename:void
Query_query_changed_after_delete	lib/flecs/test/api/src/Query.c	/^void Query_query_changed_after_delete() {$/;"	f	typeref:typename:void
Query_query_changed_after_new	lib/flecs/test/api/src/Query.c	/^void Query_query_changed_after_new() {$/;"	f	typeref:typename:void
Query_query_changed_after_remove	lib/flecs/test/api/src/Query.c	/^void Query_query_changed_after_remove() {$/;"	f	typeref:typename:void
Query_query_changed_after_set	lib/flecs/test/api/src/Query.c	/^void Query_query_changed_after_set() {$/;"	f	typeref:typename:void
Query_query_each_from_component	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_each_from_component() {$/;"	f	typeref:typename:void
Query_query_each_w_func_no_ptr	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_each_w_func_no_ptr() {$/;"	f	typeref:typename:void
Query_query_each_w_func_ptr	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_each_w_func_ptr() {$/;"	f	typeref:typename:void
Query_query_each_w_iter	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_each_w_iter() {$/;"	f	typeref:typename:void
Query_query_iter_10_components	lib/flecs/test/api/src/Query.c	/^void Query_query_iter_10_components() {$/;"	f	typeref:typename:void
Query_query_iter_10_tags	lib/flecs/test/api/src/Query.c	/^void Query_query_iter_10_tags() {$/;"	f	typeref:typename:void
Query_query_iter_20_components	lib/flecs/test/api/src/Query.c	/^void Query_query_iter_20_components() {$/;"	f	typeref:typename:void
Query_query_iter_20_tags	lib/flecs/test/api/src/Query.c	/^void Query_query_iter_20_tags() {$/;"	f	typeref:typename:void
Query_query_iter_frame_offset	lib/flecs/test/api/src/Query.c	/^void Query_query_iter_frame_offset() {$/;"	f	typeref:typename:void
Query_query_iter_from_component	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_iter_from_component() {$/;"	f	typeref:typename:void
Query_query_iter_w_func_no_ptr	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_iter_w_func_no_ptr() {$/;"	f	typeref:typename:void
Query_query_iter_w_func_ptr	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_iter_w_func_ptr() {$/;"	f	typeref:typename:void
Query_query_optional_any	lib/flecs/test/api/src/Query.c	/^void Query_query_optional_any() {$/;"	f	typeref:typename:void
Query_query_optional_owned	lib/flecs/test/api/src/Query.c	/^void Query_query_optional_owned() {$/;"	f	typeref:typename:void
Query_query_optional_shared	lib/flecs/test/api/src/Query.c	/^void Query_query_optional_shared() {$/;"	f	typeref:typename:void
Query_query_optional_shared_nested	lib/flecs/test/api/src/Query.c	/^void Query_query_optional_shared_nested() {$/;"	f	typeref:typename:void
Query_query_optional_shared_tag	lib/flecs/test/api/src/Query.c	/^void Query_query_optional_shared_tag() {$/;"	f	typeref:typename:void
Query_query_optional_tag	lib/flecs/test/api/src/Query.c	/^void Query_query_optional_tag() {$/;"	f	typeref:typename:void
Query_query_rematch_optional_after_add	lib/flecs/test/api/src/Query.c	/^void Query_query_rematch_optional_after_add() {$/;"	f	typeref:typename:void
Query_query_single_childof	lib/flecs/test/api/src/Query.c	/^void Query_query_single_childof() {$/;"	f	typeref:typename:void
Query_query_single_instanceof	lib/flecs/test/api/src/Query.c	/^void Query_query_single_instanceof() {$/;"	f	typeref:typename:void
Query_query_single_pair	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_single_pair() {$/;"	f	typeref:typename:void
Query_query_single_pairs	lib/flecs/test/api/src/Query.c	/^void Query_query_single_pairs() {$/;"	f	typeref:typename:void
Query_query_type_w_template	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_query_type_w_template() {$/;"	f	typeref:typename:void
Query_query_w_component_from_parent_from_non_this	lib/flecs/test/api/src/Query.c	/^void Query_query_w_component_from_parent_from_non_this() {$/;"	f	typeref:typename:void
Query_shared_tag_w_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_shared_tag_w_each() {$/;"	f	typeref:typename:void
Query_signature	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_signature() {$/;"	f	typeref:typename:void
Query_signature_const	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_signature_const() {$/;"	f	typeref:typename:void
Query_signature_optional	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_signature_optional() {$/;"	f	typeref:typename:void
Query_signature_shared	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_signature_shared() {$/;"	f	typeref:typename:void
Query_sort_by	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_sort_by() {$/;"	f	typeref:typename:void
Query_stresstest_query_free	lib/flecs/test/api/src/Query.c	/^void Query_stresstest_query_free() {$/;"	f	typeref:typename:void
Query_subquery	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_subquery() {$/;"	f	typeref:typename:void
Query_subquery_inactive	lib/flecs/test/api/src/Query.c	/^void Query_subquery_inactive() {$/;"	f	typeref:typename:void
Query_subquery_match_existing	lib/flecs/test/api/src/Query.c	/^void Query_subquery_match_existing() {$/;"	f	typeref:typename:void
Query_subquery_match_new	lib/flecs/test/api/src/Query.c	/^void Query_subquery_match_new() {$/;"	f	typeref:typename:void
Query_subquery_rematch	lib/flecs/test/api/src/Query.c	/^void Query_subquery_rematch() {$/;"	f	typeref:typename:void
Query_subquery_rematch_w_parent_optional	lib/flecs/test/api/src/Query.c	/^void Query_subquery_rematch_w_parent_optional() {$/;"	f	typeref:typename:void
Query_subquery_rematch_w_sub_optional	lib/flecs/test/api/src/Query.c	/^void Query_subquery_rematch_w_sub_optional() {$/;"	f	typeref:typename:void
Query_subquery_unmatch	lib/flecs/test/api/src/Query.c	/^void Query_subquery_unmatch() {$/;"	f	typeref:typename:void
Query_subquery_w_expr	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_subquery_w_expr() {$/;"	f	typeref:typename:void
Query_tag_w_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_tag_w_each() {$/;"	f	typeref:typename:void
Query_term_pair_type	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_term_pair_type() {$/;"	f	typeref:typename:void
Query_test_no_defer_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_test_no_defer_each() {$/;"	f	typeref:typename:void
Query_test_no_defer_iter	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_test_no_defer_iter() {$/;"	f	typeref:typename:void
Query_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Query_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Query_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Query_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Query_un_instanced_query_w_base_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_un_instanced_query_w_base_each() {$/;"	f	typeref:typename:void
Query_un_instanced_query_w_base_iter	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_un_instanced_query_w_base_iter() {$/;"	f	typeref:typename:void
Query_un_instanced_query_w_singleton_each	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_un_instanced_query_w_singleton_each() {$/;"	f	typeref:typename:void
Query_un_instanced_query_w_singleton_iter	lib/flecs/test/cpp_api/src/Query.cpp	/^void Query_un_instanced_query_w_singleton_iter() {$/;"	f	typeref:typename:void
QuitSystem	lib/flecs/test/api/src/MultiThread.c	/^void QuitSystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RELATIONS_BAKE_CONFIG_H	lib/flecs/examples/c/entities/relations/include/relations/bake_config.h	/^#define RELATIONS_BAKE_CONFIG_H$/;"	d
RELATIONS_BAKE_CONFIG_H	lib/flecs/examples/cpp/relations/basics/include/relations/bake_config.h	/^#define RELATIONS_BAKE_CONFIG_H$/;"	d
RELATIONS_H	lib/flecs/examples/c/entities/relations/include/relations.h	/^#define RELATIONS_H$/;"	d
RELATIONS_H	lib/flecs/examples/cpp/relations/basics/include/relations.h	/^#define RELATIONS_H$/;"	d
REM_DISCOVERED	include/mapping/map.h	/^#define REM_DISCOVERED(/;"	d
REM_VISIBLE	include/mapping/map.h	/^#define REM_VISIBLE(/;"	d
REM_WALKABLE	include/mapping/map.h	/^#define REM_WALKABLE(/;"	d
REST_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/rest/include/rest/bake_config.h	/^#define REST_BAKE_CONFIG_H$/;"	d
REST_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/rest/include/rest/bake_config.h	/^#define REST_BAKE_CONFIG_H$/;"	d
REST_H	lib/flecs/test/custom_builds/c/rest/include/rest.h	/^#define REST_H$/;"	d
REST_H	lib/flecs/test/custom_builds/cpp/rest/include/rest.h	/^#define REST_H$/;"	d
RM	cmake-build-debug/Makefile	/^RM = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake -E rm -f$/;"	m
RM	cmake-build-debug/lib/flecs/Makefile	/^RM = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake -E rm -f$/;"	m
RM	cmake-build-debug/lib/libflint/Makefile	/^RM = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake -E rm -f$/;"	m
RM	cmake-build-release/Makefile	/^RM = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake -E rm -f$/;"	m
RM	cmake-build-release/lib/flecs/Makefile	/^RM = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake -E rm -f$/;"	m
RM	cmake-build-release/lib/libflint/Makefile	/^RM = \/opt\/clion\/bin\/cmake\/linux\/bin\/cmake -E rm -f$/;"	m
RULE_PAIR_OBJECT	lib/flecs/flecs.c	/^#define RULE_PAIR_OBJECT /;"	d	file:
RULE_PAIR_OBJECT	lib/flecs/src/addons/rules.c	/^#define RULE_PAIR_OBJECT /;"	d	file:
RULE_PAIR_PREDICATE	lib/flecs/flecs.c	/^#define RULE_PAIR_PREDICATE /;"	d	file:
RULE_PAIR_PREDICATE	lib/flecs/src/addons/rules.c	/^#define RULE_PAIR_PREDICATE /;"	d	file:
RUNTIME_COMPONENT_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/runtime_component/include/runtime_component/bake_config.h	/^#define RUNTIME_COMPONENT_BAKE_CONFIG_H$/;"	d
RUNTIME_COMPONENT_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/runtime_component/include/runtime_component/bake_config.h	/^#define RUNTIME_COMPONENT_BAKE_CONFIG_H$/;"	d
RUNTIME_COMPONENT_H	lib/flecs/examples/c/reflection/runtime_component/include/runtime_component.h	/^#define RUNTIME_COMPONENT_H$/;"	d
RUNTIME_COMPONENT_H	lib/flecs/examples/cpp/reflection/runtime_component/include/runtime_component.h	/^#define RUNTIME_COMPONENT_H$/;"	d
RUNTIME_NESTED_COMPONENT_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/runtime_nested_component/include/runtime_nested_component/bake_config.h	/^#define RUNTIME_NESTED_COMPONENT_BAKE_CONFIG_H$/;"	d
RUNTIME_NESTED_COMPONENT_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/runtime_nested_component/include/runtime_nested_component/bake_config.h	/^#define RUNTIME_NESTED_COMPONENT_BAKE_CONFIG_H$/;"	d
RUNTIME_NESTED_COMPONENT_H	lib/flecs/examples/c/reflection/runtime_nested_component/include/runtime_nested_component.h	/^#define RUNTIME_NESTED_COMPONENT_H$/;"	d
RUNTIME_NESTED_COMPONENT_H	lib/flecs/examples/cpp/reflection/runtime_nested_component/include/runtime_nested_component.h	/^#define RUNTIME_NESTED_COMPONENT_H$/;"	d
Radians	lib/flecs/flecs.h	/^struct Radians { };$/;"	s	struct:flecs::units::angle
Radians	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Radians { };$/;"	s	struct:flecs::units::angle
RandomRead	lib/flecs/test/api/src/Pipeline.c	/^void RandomRead(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RandomReadAfterRW	lib/flecs/test/api/src/Pipeline.c	/^void RandomReadAfterRW(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RandomReadWrite	lib/flecs/test/api/src/Pipeline.c	/^void RandomReadWrite(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RandomRead_Not	lib/flecs/test/api/src/Pipeline.c	/^void RandomRead_Not(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RandomSystem	lib/flecs/test/api/src/World.c	/^void RandomSystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RandomWrite	lib/flecs/test/api/src/Pipeline.c	/^void RandomWrite(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RangedUnit	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^struct RangedUnit : CombatUnit { };$/;"	s	file:
RangedUnit	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct RangedUnit : CombatUnit { };$/;"	s	file:
RateFilter	lib/flecs/flecs.h	/^using RateFilter = EcsRateFilter;$/;"	t	namespace:flecs	typeref:typename:EcsRateFilter
RateFilter	lib/flecs/include/flecs/addons/cpp/mixins/timer/decl.hpp	/^using RateFilter = EcsRateFilter;$/;"	t	namespace:flecs	typeref:typename:EcsRateFilter
ReactiveDummySystem	lib/flecs/test/api/src/MultiThread.c	/^void ReactiveDummySystem(ecs_iter_t * it) {$/;"	f	typeref:typename:void	file:
Red	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^    Red,$/;"	e	enum:__anon0f08a1c60103	file:
Red	lib/flecs/examples/cpp/reflection/basics_enum/src/main.cpp	/^    Red,$/;"	e	enum:Color	file:
Red	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_enum_type_w_default_child_component::__anonb7ea1cde0f03	file:
Red	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum::__anonb7ea1cde0203	file:
Red	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_primitive_and_struct::__anonb7ea1cde0703	file:
Red	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_primitive_using_meta::__anonb7ea1cde0603	file:
Red	lib/flecs/test/api/src/Plecs.c	/^        Red, Green, Blue$/;"	e	enum:Plecs_type_and_assign_in_plecs_w_enum_using_meta::__anonb7ea1cde0403	file:
Red	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Red, Green, Blue$/;"	e	enum:StandardEnum	file:
Red	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromExpr_enum::__anon51c88b180103	file:
Red	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromExpr_struct_enum::__anon51c88b180203	file:
Red	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        Red, Blue, Green$/;"	e	enum:DeserializeFromJson_struct_enum::__anon5d173e531503	file:
Red	lib/flecs/test/meta/src/EnumTypes.c	/^        Red, Blue, Green$/;"	e	enum:EnumTypes_enum_relation::Color	file:
Red	lib/flecs/test/meta/src/SerializeToExpr.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToExpr_enum::__anon35ed1d3e0103	file:
Red	lib/flecs/test/meta/src/SerializeToExpr.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToExpr_struct_enum::__anon35ed1d3e0203	file:
Red	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Blue, Green$/;"	e	enum:SerializeToJson_struct_enum::__anon413bd0791803	file:
Red	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_enum_component::__anon413bd0792903	file:
Red	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_invalid_enum_component::__anon413bd0792b03	file:
Red	lib/flecs/test/meta/src/SerializeToJson.c	/^        Red, Green, Blue$/;"	e	enum:SerializeToJson_serialize_entity_w_struct_and_enum_component::__anon413bd0792a03	file:
Reference_get_nonexisting	lib/flecs/test/api/src/Reference.c	/^void Reference_get_nonexisting() {$/;"	f	typeref:typename:void
Reference_get_ref	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref() {$/;"	f	typeref:typename:void
Reference_get_ref_after_add	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref_after_add() {$/;"	f	typeref:typename:void
Reference_get_ref_after_delete	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref_after_delete() {$/;"	f	typeref:typename:void
Reference_get_ref_after_new_in_stage	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref_after_new_in_stage() {$/;"	f	typeref:typename:void
Reference_get_ref_after_realloc	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref_after_realloc() {$/;"	f	typeref:typename:void
Reference_get_ref_after_realloc_w_lifecycle	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref_after_realloc_w_lifecycle() {$/;"	f	typeref:typename:void
Reference_get_ref_after_remove	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref_after_remove() {$/;"	f	typeref:typename:void
Reference_get_ref_monitored	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref_monitored() {$/;"	f	typeref:typename:void
Reference_get_ref_staged	lib/flecs/test/api/src/Reference.c	/^void Reference_get_ref_staged() {$/;"	f	typeref:typename:void
Reference_setup	lib/flecs/test/api/src/Reference.c	/^void Reference_setup() {$/;"	f	typeref:typename:void
Reference_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Reference_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Reflexive	lib/flecs/flecs.h	/^static const flecs::entity_t Reflexive = EcsReflexive;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Reflexive	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Reflexive = EcsReflexive;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Refs_get_ref_by_method	lib/flecs/test/cpp_api/src/Refs.cpp	/^void Refs_get_ref_by_method() {$/;"	f	typeref:typename:void
Refs_get_ref_by_ptr	lib/flecs/test/cpp_api/src/Refs.cpp	/^void Refs_get_ref_by_ptr() {$/;"	f	typeref:typename:void
Refs_ref_after_add	lib/flecs/test/cpp_api/src/Refs.cpp	/^void Refs_ref_after_add() {$/;"	f	typeref:typename:void
Refs_ref_after_remove	lib/flecs/test/cpp_api/src/Refs.cpp	/^void Refs_ref_after_remove() {$/;"	f	typeref:typename:void
Refs_ref_after_set	lib/flecs/test/cpp_api/src/Refs.cpp	/^void Refs_ref_after_set() {$/;"	f	typeref:typename:void
Refs_ref_before_set	lib/flecs/test/cpp_api/src/Refs.cpp	/^void Refs_ref_before_set() {$/;"	f	typeref:typename:void
Refs_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Refs_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
RegisterComponent	lib/flecs/test/api/src/DeferredActions.c	/^void RegisterComponent(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Rel	lib/flecs/test/api/src/Pairs.c	/^typedef struct Rel {$/;"	s	file:
Rel	lib/flecs/test/api/src/Pairs.c	/^} Rel;$/;"	t	typeref:struct:Rel	file:
Rel	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Rel { };$/;"	s	function:Entity_each_in_stage	file:
Rel	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Rel { };$/;"	s	function:Entity_has_pair_id_t_w_type	file:
Rel	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Rel { };$/;"	s	function:Entity_has_pair_id_w_type	file:
Rel	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Rel { };$/;"	s	function:Entity_owns_pair_id_t_w_type	file:
Rel	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Rel { };$/;"	s	function:Entity_owns_pair_id_w_type	file:
Rel	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Rel {};$/;"	s	function:Entity_get_obj_by_template	file:
Rel	lib/flecs/test/cpp_api/src/Filter.cpp	/^    struct Rel { };$/;"	s	function:Filter_term_each_pair_type	file:
Rel	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    struct Rel { int foo; };$/;"	s	function:FilterBuilder_2_subsequent_args	file:
Rel	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Rel { int foo; };$/;"	s	function:QueryBuilder_2_subsequent_args	file:
Rel	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Rel { };$/;"	s	function:World_count_pair_id	file:
Rel	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Rel { };$/;"	s	function:World_count_pair_type_id	file:
Rel	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Rel { };$/;"	s	function:World_delete_with_pair_type	file:
Rel	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Rel { };$/;"	s	function:World_remove_all_pair_type	file:
RelA	lib/flecs/test/api/src/Pairs.c	/^typedef struct RelA {$/;"	s	file:
RelA	lib/flecs/test/api/src/Pairs.c	/^} RelA;$/;"	t	typeref:struct:RelA	file:
RelB	lib/flecs/test/api/src/Pairs.c	/^typedef struct RelB {$/;"	s	file:
RelB	lib/flecs/test/api/src/Pairs.c	/^} RelB;$/;"	t	typeref:struct:RelB	file:
Remove	lib/flecs/flecs.h	/^static const flecs::entity_t Remove = EcsRemove;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Remove	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Remove = EcsRemove;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
RemoveDummyComp	lib/flecs/test/api/src/TriggerOnRemove.c	/^void RemoveDummyComp(ecs_iter_t *it) { $/;"	f	typeref:typename:void	file:
RemovePosition	lib/flecs/test/api/src/Hierarchies.c	/^void RemovePosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RemovePosition	lib/flecs/test/api/src/TriggerOnRemove.c	/^void RemovePosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
RemoveSelf	lib/flecs/test/api/src/Trigger.c	/^void RemoveSelf(ecs_iter_t *it) {$/;"	f	typeref:typename:void
RemoveSwitch	lib/flecs/test/api/src/Switch.c	/^void RemoveSwitch(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Remove_1_from_empty	lib/flecs/test/api/src/Remove.c	/^void Remove_1_from_empty() {$/;"	f	typeref:typename:void
Remove_1_of_1	lib/flecs/test/api/src/Remove.c	/^void Remove_1_of_1() {$/;"	f	typeref:typename:void
Remove_1_of_1_again	lib/flecs/test/api/src/Remove.c	/^void Remove_1_of_1_again() {$/;"	f	typeref:typename:void
Remove_1_of_2	lib/flecs/test/api/src/Remove.c	/^void Remove_1_of_2() {$/;"	f	typeref:typename:void
Remove_2_again	lib/flecs/test/api/src/Remove.c	/^void Remove_2_again() {$/;"	f	typeref:typename:void
Remove_2_of_2	lib/flecs/test/api/src/Remove.c	/^void Remove_2_of_2() {$/;"	f	typeref:typename:void
Remove_2_of_3	lib/flecs/test/api/src/Remove.c	/^void Remove_2_of_3() {$/;"	f	typeref:typename:void
Remove_2_overlap	lib/flecs/test/api/src/Remove.c	/^void Remove_2_overlap() {$/;"	f	typeref:typename:void
Remove_add_same_from_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Remove_add_same_from_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Remove_after_set	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Remove_after_set(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Remove_from_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Remove_from_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Remove_from_current	lib/flecs/test/api/src/SystemOnSet.c	/^void Remove_from_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Remove_from_current	lib/flecs/test/api/src/TriggerOnAdd.c	/^void Remove_from_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Remove_from_current	lib/flecs/test/api/src/TriggerOnRemove.c	/^void Remove_from_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Remove_not_added	lib/flecs/test/api/src/Remove.c	/^void Remove_not_added() {$/;"	f	typeref:typename:void
Remove_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Remove_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Remove_zero	lib/flecs/test/api/src/Remove.c	/^void Remove_zero() {$/;"	f	typeref:typename:void
Rest	lib/flecs/flecs.h	/^using Rest = EcsRest;$/;"	t	namespace:flecs::rest	typeref:typename:EcsRest
Rest	lib/flecs/include/flecs/addons/cpp/mixins/rest/decl.hpp	/^using Rest = EcsRest;$/;"	t	namespace:flecs::rest	typeref:typename:EcsRest
Rest_teardown	lib/flecs/test/api/src/Rest.c	/^void Rest_teardown() {$/;"	f	typeref:typename:void
Rest_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Rest_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Rotation	lib/flecs/test/api/include/api.h	/^typedef float Rotation;$/;"	t	typeref:typename:float
Rotation	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct Rotation {$/;"	s
RuleBuilder_1_type	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_1_type() {$/;"	f	typeref:typename:void
RuleBuilder_2_pair_terms_w_var	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_2_pair_terms_w_var() {$/;"	f	typeref:typename:void
RuleBuilder_2_types	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_2_types() {$/;"	f	typeref:typename:void
RuleBuilder_expr_w_var	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_expr_w_var() {$/;"	f	typeref:typename:void
RuleBuilder_id_pair_term	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_id_pair_term() {$/;"	f	typeref:typename:void
RuleBuilder_id_pair_wildcard_term	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_id_pair_wildcard_term() {$/;"	f	typeref:typename:void
RuleBuilder_id_term	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_id_term() {$/;"	f	typeref:typename:void
RuleBuilder_pair_term_w_var	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_pair_term_w_var() {$/;"	f	typeref:typename:void
RuleBuilder_set_2_vars	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_set_2_vars() {$/;"	f	typeref:typename:void
RuleBuilder_set_2_vars_by_name	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_set_2_vars_by_name() {$/;"	f	typeref:typename:void
RuleBuilder_set_var	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_set_var() {$/;"	f	typeref:typename:void
RuleBuilder_set_var_by_name	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_set_var_by_name() {$/;"	f	typeref:typename:void
RuleBuilder_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case RuleBuilder_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
RuleBuilder_type_pair_term	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_type_pair_term() {$/;"	f	typeref:typename:void
RuleBuilder_type_term	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^void RuleBuilder_type_term() {$/;"	f	typeref:typename:void
Rules_1_comp	lib/flecs/test/api/src/Rules.c	/^void Rules_1_comp() {$/;"	f	typeref:typename:void
Rules_1_comp_explicit_subject	lib/flecs/test/api/src/Rules.c	/^void Rules_1_comp_explicit_subject() {$/;"	f	typeref:typename:void
Rules_1_empty_comp	lib/flecs/test/api/src/Rules.c	/^void Rules_1_empty_comp() {$/;"	f	typeref:typename:void
Rules_1_fact_false	lib/flecs/test/api/src/Rules.c	/^void Rules_1_fact_false() {$/;"	f	typeref:typename:void
Rules_1_fact_pair_false	lib/flecs/test/api/src/Rules.c	/^void Rules_1_fact_pair_false() {$/;"	f	typeref:typename:void
Rules_1_fact_pair_true	lib/flecs/test/api/src/Rules.c	/^void Rules_1_fact_pair_true() {$/;"	f	typeref:typename:void
Rules_1_fact_true	lib/flecs/test/api/src/Rules.c	/^void Rules_1_fact_true() {$/;"	f	typeref:typename:void
Rules_2_comp	lib/flecs/test/api/src/Rules.c	/^void Rules_2_comp() {$/;"	f	typeref:typename:void
Rules_2_comp_explicit_subject	lib/flecs/test/api/src/Rules.c	/^void Rules_2_comp_explicit_subject() {$/;"	f	typeref:typename:void
Rules_2_constrained_vars_by_subject_literal	lib/flecs/test/api/src/Rules.c	/^void Rules_2_constrained_vars_by_subject_literal() {$/;"	f	typeref:typename:void
Rules_2_constrained_vars_by_subject_literal_2_var_terms	lib/flecs/test/api/src/Rules.c	/^void Rules_2_constrained_vars_by_subject_literal_2_var_terms() {$/;"	f	typeref:typename:void
Rules_2_fact_pairs_1_false	lib/flecs/test/api/src/Rules.c	/^void Rules_2_fact_pairs_1_false() {$/;"	f	typeref:typename:void
Rules_2_fact_pairs_false	lib/flecs/test/api/src/Rules.c	/^void Rules_2_fact_pairs_false() {$/;"	f	typeref:typename:void
Rules_2_fact_pairs_true	lib/flecs/test/api/src/Rules.c	/^void Rules_2_fact_pairs_true() {$/;"	f	typeref:typename:void
Rules_2_facts_1_false	lib/flecs/test/api/src/Rules.c	/^void Rules_2_facts_1_false() {$/;"	f	typeref:typename:void
Rules_2_facts_false	lib/flecs/test/api/src/Rules.c	/^void Rules_2_facts_false() {$/;"	f	typeref:typename:void
Rules_2_facts_true	lib/flecs/test/api/src/Rules.c	/^void Rules_2_facts_true() {$/;"	f	typeref:typename:void
Rules_2_terms_1_filter	lib/flecs/test/api/src/Rules.c	/^void Rules_2_terms_1_filter() {$/;"	f	typeref:typename:void
Rules_2_wildcard_as_subject	lib/flecs/test/api/src/Rules.c	/^void Rules_2_wildcard_as_subject() {$/;"	f	typeref:typename:void
Rules_3_terms_2_filter	lib/flecs/test/api/src/Rules.c	/^void Rules_3_terms_2_filter() {$/;"	f	typeref:typename:void
Rules_any_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_any_obj() {$/;"	f	typeref:typename:void
Rules_any_pred	lib/flecs/test/api/src/Rules.c	/^void Rules_any_pred() {$/;"	f	typeref:typename:void
Rules_any_subj	lib/flecs/test/api/src/Rules.c	/^void Rules_any_subj() {$/;"	f	typeref:typename:void
Rules_childof_0	lib/flecs/test/api/src/Rules.c	/^void Rules_childof_0() {    $/;"	f	typeref:typename:void
Rules_childof_this	lib/flecs/test/api/src/Rules.c	/^void Rules_childof_this() {$/;"	f	typeref:typename:void
Rules_childof_this_as_identifier	lib/flecs/test/api/src/Rules.c	/^void Rules_childof_this_as_identifier() {$/;"	f	typeref:typename:void
Rules_comp_recycled_final_id	lib/flecs/test/api/src/Rules.c	/^void Rules_comp_recycled_final_id() {$/;"	f	typeref:typename:void
Rules_comp_recycled_id	lib/flecs/test/api/src/Rules.c	/^void Rules_comp_recycled_id() {$/;"	f	typeref:typename:void
Rules_comp_w_not_term	lib/flecs/test/api/src/Rules.c	/^void Rules_comp_w_not_term() {$/;"	f	typeref:typename:void
Rules_empty_rule	lib/flecs/test/api/src/Rules.c	/^void Rules_empty_rule() {$/;"	f	typeref:typename:void
Rules_filter_term	lib/flecs/test/api/src/Rules.c	/^void Rules_filter_term() {$/;"	f	typeref:typename:void
Rules_find_1_pair	lib/flecs/test/api/src/Rules.c	/^void Rules_find_1_pair() {$/;"	f	typeref:typename:void
Rules_find_1_pair_w_object_var	lib/flecs/test/api/src/Rules.c	/^void Rules_find_1_pair_w_object_var() {$/;"	f	typeref:typename:void
Rules_find_1_pair_w_pred_var	lib/flecs/test/api/src/Rules.c	/^void Rules_find_1_pair_w_pred_var() {$/;"	f	typeref:typename:void
Rules_find_2_pairs	lib/flecs/test/api/src/Rules.c	/^void Rules_find_2_pairs() {$/;"	f	typeref:typename:void
Rules_find_2_pairs_w_object_var	lib/flecs/test/api/src/Rules.c	/^void Rules_find_2_pairs_w_object_var() {$/;"	f	typeref:typename:void
Rules_find_2_pairs_w_pred_var	lib/flecs/test/api/src/Rules.c	/^void Rules_find_2_pairs_w_pred_var() {$/;"	f	typeref:typename:void
Rules_find_cyclic_pairs	lib/flecs/test/api/src/Rules.c	/^void Rules_find_cyclic_pairs() {$/;"	f	typeref:typename:void
Rules_find_transitive	lib/flecs/test/api/src/Rules.c	/^void Rules_find_transitive() {$/;"	f	typeref:typename:void
Rules_find_transitive_2_branches	lib/flecs/test/api/src/Rules.c	/^void Rules_find_transitive_2_branches() {$/;"	f	typeref:typename:void
Rules_find_w_pred_var	lib/flecs/test/api/src/Rules.c	/^void Rules_find_w_pred_var() {$/;"	f	typeref:typename:void
Rules_find_w_pred_var_explicit_subject	lib/flecs/test/api/src/Rules.c	/^void Rules_find_w_pred_var_explicit_subject() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_pair_2_lvls	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_pair_2_lvls() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_pair_2_lvls_both_matching	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_pair_2_lvls_both_matching() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_pair_2_lvls_entity_matching	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_pair_2_lvls_entity_matching() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_pair_3_lvls	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_pair_3_lvls() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_pair_fact	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_pair_fact() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_pair_var	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_pair_var() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_pred_var	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_pred_var() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_tag_fact	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_tag_fact() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_tag_fact_2_lvls	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_tag_fact_2_lvls() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_tag_fact_2_lvls_both_matching	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_tag_fact_2_lvls_both_matching() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_tag_fact_2_lvls_entity_matching	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_tag_fact_2_lvls_entity_matching() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_tag_fact_3_lvls	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_tag_fact_3_lvls() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_transitive_pair_fact	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_transitive_pair_fact() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_transitive_pair_fact_w_implicit_pred_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_transitive_pair_fact_w_implicit_pred_obj() {$/;"	f	typeref:typename:void
Rules_implicit_is_a_transitive_pair_fact_w_implicit_pred_subset	lib/flecs/test/api/src/Rules.c	/^void Rules_implicit_is_a_transitive_pair_fact_w_implicit_pred_subset() {$/;"	f	typeref:typename:void
Rules_invalid_rule	lib/flecs/test/api/src/Rules.c	/^void Rules_invalid_rule() {$/;"	f	typeref:typename:void
Rules_invalid_rule_w_not_term_unknown_pair_var	lib/flecs/test/api/src/Rules.c	/^void Rules_invalid_rule_w_not_term_unknown_pair_var() {$/;"	f	typeref:typename:void
Rules_invalid_rule_w_not_term_unknown_pair_var_subj_var	lib/flecs/test/api/src/Rules.c	/^void Rules_invalid_rule_w_not_term_unknown_pair_var_subj_var() {$/;"	f	typeref:typename:void
Rules_invalid_rule_w_not_term_unknown_var	lib/flecs/test/api/src/Rules.c	/^void Rules_invalid_rule_w_not_term_unknown_var() {$/;"	f	typeref:typename:void
Rules_invalid_rule_w_only_not_term	lib/flecs/test/api/src/Rules.c	/^void Rules_invalid_rule_w_only_not_term() {$/;"	f	typeref:typename:void
Rules_join_by_object	lib/flecs/test/api/src/Rules.c	/^void Rules_join_by_object() {$/;"	f	typeref:typename:void
Rules_join_by_predicate	lib/flecs/test/api/src/Rules.c	/^void Rules_join_by_predicate() {$/;"	f	typeref:typename:void
Rules_join_by_predicate_from_subject	lib/flecs/test/api/src/Rules.c	/^void Rules_join_by_predicate_from_subject() {$/;"	f	typeref:typename:void
Rules_not_term_w_subj_var	lib/flecs/test/api/src/Rules.c	/^void Rules_not_term_w_subj_var() {$/;"	f	typeref:typename:void
Rules_not_term_w_subj_var_match_n_per_type	lib/flecs/test/api/src/Rules.c	/^void Rules_not_term_w_subj_var_match_n_per_type() {$/;"	f	typeref:typename:void
Rules_optional_any_object	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_any_object() {$/;"	f	typeref:typename:void
Rules_optional_any_subject	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_any_subject() {$/;"	f	typeref:typename:void
Rules_optional_term	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_term() {$/;"	f	typeref:typename:void
Rules_optional_term_on_entity	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_term_on_entity() {$/;"	f	typeref:typename:void
Rules_optional_term_on_relation_this_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_term_on_relation_this_obj() {$/;"	f	typeref:typename:void
Rules_optional_term_on_variable	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_term_on_variable() {$/;"	f	typeref:typename:void
Rules_optional_term_on_wildcard	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_term_on_wildcard() {$/;"	f	typeref:typename:void
Rules_optional_term_w_component	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_term_w_component() {$/;"	f	typeref:typename:void
Rules_optional_w_obj_var	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_w_obj_var() {$/;"	f	typeref:typename:void
Rules_optional_w_subj_var	lib/flecs/test/api/src/Rules.c	/^void Rules_optional_w_subj_var() {$/;"	f	typeref:typename:void
Rules_pair_recycled_final_pred	lib/flecs/test/api/src/Rules.c	/^void Rules_pair_recycled_final_pred() {$/;"	f	typeref:typename:void
Rules_pair_recycled_matched_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_pair_recycled_matched_obj() {$/;"	f	typeref:typename:void
Rules_pair_recycled_matched_obj_2_terms	lib/flecs/test/api/src/Rules.c	/^void Rules_pair_recycled_matched_obj_2_terms() {$/;"	f	typeref:typename:void
Rules_pair_recycled_matched_pred_2_terms	lib/flecs/test/api/src/Rules.c	/^void Rules_pair_recycled_matched_pred_2_terms() {$/;"	f	typeref:typename:void
Rules_pair_recycled_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_pair_recycled_obj() {$/;"	f	typeref:typename:void
Rules_pair_recycled_pred	lib/flecs/test/api/src/Rules.c	/^void Rules_pair_recycled_pred() {$/;"	f	typeref:typename:void
Rules_pair_recycled_pred_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_pair_recycled_pred_obj() {$/;"	f	typeref:typename:void
Rules_rule_iter_frame_offset	lib/flecs/test/api/src/Rules.c	/^void Rules_rule_iter_frame_offset() {$/;"	f	typeref:typename:void
Rules_rule_iter_set_2_vars	lib/flecs/test/api/src/Rules.c	/^void Rules_rule_iter_set_2_vars() {$/;"	f	typeref:typename:void
Rules_rule_iter_set_cyclic_variable	lib/flecs/test/api/src/Rules.c	/^void Rules_rule_iter_set_cyclic_variable() {$/;"	f	typeref:typename:void
Rules_rule_iter_set_cyclic_variable_w_this	lib/flecs/test/api/src/Rules.c	/^void Rules_rule_iter_set_cyclic_variable_w_this() {$/;"	f	typeref:typename:void
Rules_rule_iter_set_pred_var	lib/flecs/test/api/src/Rules.c	/^void Rules_rule_iter_set_pred_var() {$/;"	f	typeref:typename:void
Rules_rule_iter_set_var	lib/flecs/test/api/src/Rules.c	/^void Rules_rule_iter_set_var() {$/;"	f	typeref:typename:void
Rules_rule_iter_set_var_for_2_terms	lib/flecs/test/api/src/Rules.c	/^void Rules_rule_iter_set_var_for_2_terms() {$/;"	f	typeref:typename:void
Rules_rule_w_inout_filter	lib/flecs/test/api/src/Rules.c	/^void Rules_rule_w_inout_filter() {$/;"	f	typeref:typename:void
Rules_rules_w_desc_id	lib/flecs/test/api/src/Rules.c	/^void Rules_rules_w_desc_id() {$/;"	f	typeref:typename:void
Rules_rules_w_desc_pair	lib/flecs/test/api/src/Rules.c	/^void Rules_rules_w_desc_pair() {$/;"	f	typeref:typename:void
Rules_rules_w_desc_pair_empty_rel_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_rules_w_desc_pair_empty_rel_obj() {$/;"	f	typeref:typename:void
Rules_rules_w_desc_pair_pred_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_rules_w_desc_pair_pred_obj() {$/;"	f	typeref:typename:void
Rules_rules_w_desc_wildcard	lib/flecs/test/api/src/Rules.c	/^void Rules_rules_w_desc_wildcard() {$/;"	f	typeref:typename:void
Rules_same_pred_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_same_pred_obj() {$/;"	f	typeref:typename:void
Rules_same_pred_obj_explicit_subject	lib/flecs/test/api/src/Rules.c	/^void Rules_same_pred_obj_explicit_subject() {$/;"	f	typeref:typename:void
Rules_term_obj_w_this	lib/flecs/test/api/src/Rules.c	/^void Rules_term_obj_w_this() {$/;"	f	typeref:typename:void
Rules_term_subj_w_this	lib/flecs/test/api/src/Rules.c	/^void Rules_term_subj_w_this() {$/;"	f	typeref:typename:void
Rules_term_w_nothing_set	lib/flecs/test/api/src/Rules.c	/^void Rules_term_w_nothing_set() {$/;"	f	typeref:typename:void
Rules_term_w_nothing_set_w_this_term	lib/flecs/test/api/src/Rules.c	/^void Rules_term_w_nothing_set_w_this_term() {$/;"	f	typeref:typename:void
Rules_term_w_same_subj_obj_var	lib/flecs/test/api/src/Rules.c	/^void Rules_term_w_same_subj_obj_var() {$/;"	f	typeref:typename:void
Rules_term_w_this_this_this	lib/flecs/test/api/src/Rules.c	/^void Rules_term_w_this_this_this() {$/;"	f	typeref:typename:void
Rules_term_w_x_x_x	lib/flecs/test/api/src/Rules.c	/^void Rules_term_w_x_x_x() {$/;"	f	typeref:typename:void
Rules_terms_set	lib/flecs/test/api/src/Rules.c	/^void Rules_terms_set() {$/;"	f	typeref:typename:void
Rules_test_subj_w_pair_wildcard_w_isa	lib/flecs/test/api/src/Rules.c	/^void Rules_test_subj_w_pair_wildcard_w_isa() {$/;"	f	typeref:typename:void
Rules_test_subj_w_pair_wildcard_w_isa_2_lvls	lib/flecs/test/api/src/Rules.c	/^void Rules_test_subj_w_pair_wildcard_w_isa_2_lvls() {$/;"	f	typeref:typename:void
Rules_test_subj_w_wildcard_w_isa	lib/flecs/test/api/src/Rules.c	/^void Rules_test_subj_w_wildcard_w_isa() {$/;"	f	typeref:typename:void
Rules_test_subj_w_wildcard_w_isa_2_lvls	lib/flecs/test/api/src/Rules.c	/^void Rules_test_subj_w_wildcard_w_isa_2_lvls() {$/;"	f	typeref:typename:void
Rules_test_subj_w_wildcard_w_pairs	lib/flecs/test/api/src/Rules.c	/^void Rules_test_subj_w_wildcard_w_pairs() {$/;"	f	typeref:typename:void
Rules_test_subj_w_wildcard_w_pairs_var	lib/flecs/test/api/src/Rules.c	/^void Rules_test_subj_w_wildcard_w_pairs_var() {$/;"	f	typeref:typename:void
Rules_test_subj_w_wildcard_wildcard_w_pairs	lib/flecs/test/api/src/Rules.c	/^void Rules_test_subj_w_wildcard_wildcard_w_pairs() {$/;"	f	typeref:typename:void
Rules_test_subj_w_wildcard_wildcard_w_pairs_var	lib/flecs/test/api/src/Rules.c	/^void Rules_test_subj_w_wildcard_wildcard_w_pairs_var() {$/;"	f	typeref:typename:void
Rules_test_this_w_pair_wildcard_no_match	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_pair_wildcard_no_match() {$/;"	f	typeref:typename:void
Rules_test_this_w_wildcard_no_match	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_wildcard_no_match() {$/;"	f	typeref:typename:void
Rules_test_this_w_wildcard_w_2_isa	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_wildcard_w_2_isa() {$/;"	f	typeref:typename:void
Rules_test_this_w_wildcard_w_isa	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_wildcard_w_isa() {$/;"	f	typeref:typename:void
Rules_test_this_w_wildcard_w_isa_2_lvls	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_wildcard_w_isa_2_lvls() {$/;"	f	typeref:typename:void
Rules_test_this_w_wildcard_w_pairs	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_wildcard_w_pairs() {$/;"	f	typeref:typename:void
Rules_test_this_w_wildcard_w_pairs_var	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_wildcard_w_pairs_var() {$/;"	f	typeref:typename:void
Rules_test_this_w_wildcard_wildcard_w_pairs	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_wildcard_wildcard_w_pairs() {$/;"	f	typeref:typename:void
Rules_test_this_w_wildcard_wildcard_w_pairs_var	lib/flecs/test/api/src/Rules.c	/^void Rules_test_this_w_wildcard_wildcard_w_pairs_var() {$/;"	f	typeref:typename:void
Rules_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Rules_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Rules_transitive_all	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_all() {$/;"	f	typeref:typename:void
Rules_transitive_constraint_on_superset_var	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_constraint_on_superset_var() {$/;"	f	typeref:typename:void
Rules_transitive_fact_false	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_false() {$/;"	f	typeref:typename:void
Rules_transitive_fact_same_subj_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_same_subj_obj() {$/;"	f	typeref:typename:void
Rules_transitive_fact_subset_superset	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_subset_superset() {$/;"	f	typeref:typename:void
Rules_transitive_fact_true_2_relationships	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_true_2_relationships() {$/;"	f	typeref:typename:void
Rules_transitive_fact_true_depth_1	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_true_depth_1() {$/;"	f	typeref:typename:void
Rules_transitive_fact_true_depth_2	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_true_depth_2() {$/;"	f	typeref:typename:void
Rules_transitive_fact_true_depth_3	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_true_depth_3() {$/;"	f	typeref:typename:void
Rules_transitive_fact_true_depth_4	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_true_depth_4() {$/;"	f	typeref:typename:void
Rules_transitive_fact_true_depth_5	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_fact_true_depth_5() {$/;"	f	typeref:typename:void
Rules_transitive_implicit_isa_instances	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_implicit_isa_instances() {$/;"	f	typeref:typename:void
Rules_transitive_implicit_isa_instances_2_terms	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_implicit_isa_instances_2_terms() {$/;"	f	typeref:typename:void
Rules_transitive_instances	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_instances() {$/;"	f	typeref:typename:void
Rules_transitive_instances_2_terms	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_instances_2_terms() {$/;"	f	typeref:typename:void
Rules_transitive_nonfinal_fact	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_nonfinal_fact() {$/;"	f	typeref:typename:void
Rules_transitive_nonfinal_fact_w_implicit_pred_subset	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_nonfinal_fact_w_implicit_pred_subset() {$/;"	f	typeref:typename:void
Rules_transitive_subsets	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_subsets() {$/;"	f	typeref:typename:void
Rules_transitive_subsets_2_terms	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_subsets_2_terms() {$/;"	f	typeref:typename:void
Rules_transitive_superset_w_subj_var	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_superset_w_subj_var() {$/;"	f	typeref:typename:void
Rules_transitive_superset_w_subj_var_2_term	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_superset_w_subj_var_2_term() {$/;"	f	typeref:typename:void
Rules_transitive_supersets	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_supersets() {$/;"	f	typeref:typename:void
Rules_transitive_supersets_2_terms	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_supersets_2_terms() {$/;"	f	typeref:typename:void
Rules_transitive_w_table_object	lib/flecs/test/api/src/Rules.c	/^void Rules_transitive_w_table_object() {$/;"	f	typeref:typename:void
Rules_value_set	lib/flecs/test/api/src/Rules.c	/^void Rules_value_set() {$/;"	f	typeref:typename:void
Rules_wildcard_obj	lib/flecs/test/api/src/Rules.c	/^void Rules_wildcard_obj() {$/;"	f	typeref:typename:void
Rules_wildcard_pred	lib/flecs/test/api/src/Rules.c	/^void Rules_wildcard_pred() {$/;"	f	typeref:typename:void
Rules_wildcard_pred_pair	lib/flecs/test/api/src/Rules.c	/^void Rules_wildcard_pred_pair() {$/;"	f	typeref:typename:void
Rules_wildcard_subj	lib/flecs/test/api/src/Rules.c	/^void Rules_wildcard_subj() {$/;"	f	typeref:typename:void
Run	lib/flecs/test/api/src/Observer.c	/^static void Run(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Run	lib/flecs/test/api/src/SystemMisc.c	/^static void Run(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Run2	lib/flecs/test/api/src/SystemMisc.c	/^static void Run2(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Run_call_callback	lib/flecs/test/api/src/SystemMisc.c	/^static void Run_call_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Run_run	lib/flecs/test/api/src/Run.c	/^void Run_run() {$/;"	f	typeref:typename:void
Run_run_comb_10_entities_1_type	lib/flecs/test/api/src/Run.c	/^void Run_run_comb_10_entities_1_type() {$/;"	f	typeref:typename:void
Run_run_comb_10_entities_2_types	lib/flecs/test/api/src/Run.c	/^void Run_run_comb_10_entities_2_types() {$/;"	f	typeref:typename:void
Run_run_no_match	lib/flecs/test/api/src/Run.c	/^void Run_run_no_match() {$/;"	f	typeref:typename:void
Run_run_staging	lib/flecs/test/api/src/Run.c	/^void Run_run_staging() {$/;"	f	typeref:typename:void
Run_run_w_interrupt	lib/flecs/test/api/src/Run.c	/^void Run_run_w_interrupt() {$/;"	f	typeref:typename:void
Run_run_w_limit_1_all_offsets	lib/flecs/test/api/src/Run.c	/^void Run_run_w_limit_1_all_offsets() {$/;"	f	typeref:typename:void
Run_run_w_limit_out_of_bounds	lib/flecs/test/api/src/Run.c	/^void Run_run_w_limit_out_of_bounds() {$/;"	f	typeref:typename:void
Run_run_w_limit_skip_1_archetype	lib/flecs/test/api/src/Run.c	/^void Run_run_w_limit_skip_1_archetype() {$/;"	f	typeref:typename:void
Run_run_w_limit_skip_1_archetype_minus_one	lib/flecs/test/api/src/Run.c	/^void Run_run_w_limit_skip_1_archetype_minus_one() {$/;"	f	typeref:typename:void
Run_run_w_limit_skip_2_archetypes	lib/flecs/test/api/src/Run.c	/^void Run_run_w_limit_skip_2_archetypes() {$/;"	f	typeref:typename:void
Run_run_w_offset	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset() {$/;"	f	typeref:typename:void
Run_run_w_offset_1_limit_max	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset_1_limit_max() {$/;"	f	typeref:typename:void
Run_run_w_offset_1_limit_minus_1	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset_1_limit_minus_1() {$/;"	f	typeref:typename:void
Run_run_w_offset_2_type_limit_max	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset_2_type_limit_max() {$/;"	f	typeref:typename:void
Run_run_w_offset_2_type_limit_minus_1	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset_2_type_limit_minus_1() {$/;"	f	typeref:typename:void
Run_run_w_offset_out_of_bounds	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset_out_of_bounds() {$/;"	f	typeref:typename:void
Run_run_w_offset_skip_1_archetype	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset_skip_1_archetype() {$/;"	f	typeref:typename:void
Run_run_w_offset_skip_1_archetype_plus_one	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset_skip_1_archetype_plus_one() {$/;"	f	typeref:typename:void
Run_run_w_offset_skip_2_archetypes	lib/flecs/test/api/src/Run.c	/^void Run_run_w_offset_skip_2_archetypes() {$/;"	f	typeref:typename:void
Run_run_w_param	lib/flecs/test/api/src/Run.c	/^void Run_run_w_param() {$/;"	f	typeref:typename:void
Run_setup	lib/flecs/test/api/src/Run.c	/^void Run_setup() {$/;"	f	typeref:typename:void
Run_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Run_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Run_w_iter_next	lib/flecs/test/api/src/Observer.c	/^static void Run_w_iter_next(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Running	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Running { };$/;"	s	function:QueryBuilder_role	file:
SAX	lib/uthash/tests/hashscan.c	/^#define SAX /;"	d	file:
SCREENS_SCREEN_H	include/screens/screen.h	/^#define SCREENS_SCREEN_H$/;"	d
SCREEN_MANAGER_H	include/screens/manager.h	/^#define SCREEN_MANAGER_H$/;"	d
SETTING_VARIABLES_BAKE_CONFIG_H	lib/flecs/examples/c/rules/setting_variables/include/setting_variables/bake_config.h	/^#define SETTING_VARIABLES_BAKE_CONFIG_H$/;"	d
SETTING_VARIABLES_BAKE_CONFIG_H	lib/flecs/examples/cpp/rules/setting_variables/include/setting_variables/bake_config.h	/^#define SETTING_VARIABLES_BAKE_CONFIG_H$/;"	d
SETTING_VARIABLES_H	lib/flecs/examples/c/rules/setting_variables/include/setting_variables.h	/^#define SETTING_VARIABLES_H$/;"	d
SETTING_VARIABLES_H	lib/flecs/examples/cpp/rules/setting_variables/include/setting_variables.h	/^#define SETTING_VARIABLES_H$/;"	d
SET_DISCOVERED	include/mapping/map.h	/^#define SET_DISCOVERED(/;"	d
SET_VISIBLE	include/mapping/map.h	/^#define SET_VISIBLE(/;"	d
SET_WALKABLE	include/mapping/map.h	/^#define SET_WALKABLE(/;"	d
SFH	lib/uthash/tests/hashscan.c	/^#define SFH /;"	d	file:
SHELL	cmake-build-debug/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	cmake-build-debug/lib/flecs/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	cmake-build-debug/lib/libflint/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	cmake-build-release/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	cmake-build-release/lib/flecs/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	cmake-build-release/lib/libflint/Makefile	/^SHELL = \/bin\/sh$/;"	m
SNAPSHOT_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/snapshot/include/snapshot/bake_config.h	/^#define SNAPSHOT_BAKE_CONFIG_H$/;"	d
SNAPSHOT_H	lib/flecs/test/custom_builds/cpp/snapshot/include/snapshot.h	/^#define SNAPSHOT_H$/;"	d
SORTING_BAKE_CONFIG_H	lib/flecs/examples/c/queries/sorting/include/sorting/bake_config.h	/^#define SORTING_BAKE_CONFIG_H$/;"	d
SORTING_BAKE_CONFIG_H	lib/flecs/examples/cpp/queries/sorting/include/sorting/bake_config.h	/^#define SORTING_BAKE_CONFIG_H$/;"	d
SORTING_H	lib/flecs/examples/c/queries/sorting/include/sorting.h	/^#define SORTING_H$/;"	d
SORTING_H	lib/flecs/examples/cpp/queries/sorting/include/sorting.h	/^#define SORTING_H$/;"	d
SOURCES	lib/libflint/CMakeLists.txt	/^set(SOURCES$/;"	v
SRC	CMakeLists.txt	/^set(SRC$/;"	v
SRC_FILES	lib/flecs/examples/CMakeLists.txt	/^    set(SRC_FILES "")$/;"	v
STACK_COUNT	lib/uthash/include/utstack.h	/^#define STACK_COUNT(/;"	d
STACK_COUNT	lib/uthash/src/utstack.h	/^#define STACK_COUNT(/;"	d
STACK_COUNT2	lib/uthash/include/utstack.h	/^#define STACK_COUNT2(/;"	d
STACK_COUNT2	lib/uthash/src/utstack.h	/^#define STACK_COUNT2(/;"	d
STACK_EMPTY	lib/uthash/include/utstack.h	/^#define STACK_EMPTY(/;"	d
STACK_EMPTY	lib/uthash/src/utstack.h	/^#define STACK_EMPTY(/;"	d
STACK_MAX_SIZE	lib/flecs/flecs.c	/^#define STACK_MAX_SIZE /;"	d	file:
STACK_MAX_SIZE	lib/flecs/src/addons/plecs.c	/^#define STACK_MAX_SIZE /;"	d	file:
STACK_POP	lib/uthash/include/utstack.h	/^#define STACK_POP(/;"	d
STACK_POP	lib/uthash/src/utstack.h	/^#define STACK_POP(/;"	d
STACK_POP2	lib/uthash/include/utstack.h	/^#define STACK_POP2(/;"	d
STACK_POP2	lib/uthash/src/utstack.h	/^#define STACK_POP2(/;"	d
STACK_PUSH	lib/uthash/include/utstack.h	/^#define STACK_PUSH(/;"	d
STACK_PUSH	lib/uthash/src/utstack.h	/^#define STACK_PUSH(/;"	d
STACK_PUSH2	lib/uthash/include/utstack.h	/^#define STACK_PUSH2(/;"	d
STACK_PUSH2	lib/uthash/src/utstack.h	/^#define STACK_PUSH2(/;"	d
STACK_TOP	lib/uthash/include/utstack.h	/^#define STACK_TOP(/;"	d
STACK_TOP	lib/uthash/src/utstack.h	/^#define STACK_TOP(/;"	d
STAT_PANEL_WIDTH	src/screens/gamescreen.c	/^#define STAT_PANEL_WIDTH /;"	d	file:
STAT_PANEL_X_START	src/screens/gamescreen.c	/^#define STAT_PANEL_X_START /;"	d	file:
STRUCT_W_PRIMITIVE_TEST	lib/flecs/test/meta/src/PrimitiveTypes.c	/^#define STRUCT_W_PRIMITIVE_TEST(/;"	d	file:
SUB_DIR_LIST	lib/flecs/examples/CMakeLists.txt	/^macro(SUB_DIR_LIST RESULT CURRENT_DIR)$/;"	m
SWAP	lib/flecs/flecs.c	/^    #define SWAP(/;"	d	file:
SWAP	lib/flecs/src/datastructures/qsort.c	/^    #define SWAP(/;"	d	file:
SYNC_POINT_BAKE_CONFIG_H	lib/flecs/examples/c/systems/sync_point/include/sync_point/bake_config.h	/^#define SYNC_POINT_BAKE_CONFIG_H$/;"	d
SYNC_POINT_BAKE_CONFIG_H	lib/flecs/examples/cpp/systems/sync_point/include/sync_point/bake_config.h	/^#define SYNC_POINT_BAKE_CONFIG_H$/;"	d
SYNC_POINT_DELETE_BAKE_CONFIG_H	lib/flecs/examples/c/systems/sync_point_delete/include/sync_point_delete/bake_config.h	/^#define SYNC_POINT_DELETE_BAKE_CONFIG_H$/;"	d
SYNC_POINT_DELETE_BAKE_CONFIG_H	lib/flecs/examples/cpp/systems/sync_point_delete/include/sync_point_delete/bake_config.h	/^#define SYNC_POINT_DELETE_BAKE_CONFIG_H$/;"	d
SYNC_POINT_DELETE_H	lib/flecs/examples/c/systems/sync_point_delete/include/sync_point_delete.h	/^#define SYNC_POINT_DELETE_H$/;"	d
SYNC_POINT_DELETE_H	lib/flecs/examples/cpp/systems/sync_point_delete/include/sync_point_delete.h	/^#define SYNC_POINT_DELETE_H$/;"	d
SYNC_POINT_H	lib/flecs/examples/c/systems/sync_point/include/sync_point.h	/^#define SYNC_POINT_H$/;"	d
SYNC_POINT_H	lib/flecs/examples/cpp/systems/sync_point/include/sync_point.h	/^#define SYNC_POINT_H$/;"	d
SYSTEMS_BAKE_CONFIG_H	lib/flecs/examples/cpp/systems/basics/include/systems/bake_config.h	/^#define SYSTEMS_BAKE_CONFIG_H$/;"	d
SYSTEMS_H	lib/flecs/examples/cpp/systems/basics/include/systems.h	/^#define SYSTEMS_H$/;"	d
SYSTEM_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/system/include/system/bake_config.h	/^#define SYSTEM_BAKE_CONFIG_H$/;"	d
SYSTEM_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/system/include/system/bake_config.h	/^#define SYSTEM_BAKE_CONFIG_H$/;"	d
SYSTEM_H	lib/flecs/test/custom_builds/c/system/include/system.h	/^#define SYSTEM_H$/;"	d
SYSTEM_H	lib/flecs/test/custom_builds/cpp/system/include/system.h	/^#define SYSTEM_H$/;"	d
Sand	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^    Sand, $/;"	e	enum:Tile	file:
Sand	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Grass, Sand, Stone$/;"	e	enum:EnumClass	file:
Sandwich	lib/flecs/examples/c/reflection/basics_bitmask/src/main.c	/^} Sandwich;$/;"	t	typeref:struct:__anon9d6d05bc0108	file:
Sandwich	lib/flecs/examples/cpp/reflection/basics_bitmask/src/main.cpp	/^struct Sandwich {$/;"	s	file:
Scope	lib/flecs/test/cpp_api/src/World.cpp	/^struct Scope { };$/;"	s	file:
Screen	include/screens/screen.h	/^struct Screen {$/;"	s
Seconds	lib/flecs/flecs.h	/^struct Seconds { };$/;"	s	struct:flecs::units::duration
Seconds	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Seconds { };$/;"	s	struct:flecs::units::duration
Self	lib/flecs/flecs.h	/^static const uint8_t Self = EcsSelf;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Self	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const uint8_t Self = EcsSelf;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Self	lib/flecs/test/api/include/api.h	/^typedef struct Self {$/;"	s
Self	lib/flecs/test/api/include/api.h	/^} Self;$/;"	t	typeref:struct:Self
Self	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct Self {$/;"	s
SelfCtor	lib/flecs/test/cpp_api/src/Entity.cpp	/^    SelfCtor(flecs::entity e, int x, int y) : e_(e), x_(x), y_(y) { }$/;"	f	class:SelfCtor	file:
SelfCtor	lib/flecs/test/cpp_api/src/Entity.cpp	/^class SelfCtor {$/;"	c	file:
SerializeToExpr_bitmask	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_bitmask() {$/;"	f	typeref:typename:void
SerializeToExpr_bool	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_bool() {$/;"	f	typeref:typename:void
SerializeToExpr_byte	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_byte() {$/;"	f	typeref:typename:void
SerializeToExpr_char	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_char() {$/;"	f	typeref:typename:void
SerializeToExpr_double	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_double() {$/;"	f	typeref:typename:void
SerializeToExpr_double_inf	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_double_inf() {$/;"	f	typeref:typename:void
SerializeToExpr_double_nan	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_double_nan() {$/;"	f	typeref:typename:void
SerializeToExpr_entity	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_entity() {$/;"	f	typeref:typename:void
SerializeToExpr_entity_entity_after_float	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_entity_entity_after_float() {$/;"	f	typeref:typename:void
SerializeToExpr_enum	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_enum() {$/;"	f	typeref:typename:void
SerializeToExpr_escape_2_newlines	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_escape_2_newlines() {$/;"	f	typeref:typename:void
SerializeToExpr_escape_newline	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_escape_newline() {$/;"	f	typeref:typename:void
SerializeToExpr_escape_simple_string	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_escape_simple_string() {$/;"	f	typeref:typename:void
SerializeToExpr_escape_string_w_2_trailing_newlines	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_escape_string_w_2_trailing_newlines() {$/;"	f	typeref:typename:void
SerializeToExpr_escape_string_w_delim	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_escape_string_w_delim() {$/;"	f	typeref:typename:void
SerializeToExpr_escape_string_w_trailing_newline	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_escape_string_w_trailing_newline() {$/;"	f	typeref:typename:void
SerializeToExpr_float	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_float() {$/;"	f	typeref:typename:void
SerializeToExpr_float_inf	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_float_inf() {$/;"	f	typeref:typename:void
SerializeToExpr_float_nan	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_float_nan() {$/;"	f	typeref:typename:void
SerializeToExpr_i16	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_i16() {$/;"	f	typeref:typename:void
SerializeToExpr_i32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_i32() {$/;"	f	typeref:typename:void
SerializeToExpr_i64	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_i64() {$/;"	f	typeref:typename:void
SerializeToExpr_i8	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_i8() {$/;"	f	typeref:typename:void
SerializeToExpr_iptr	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_iptr() {$/;"	f	typeref:typename:void
SerializeToExpr_string	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_string() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_2_nested_i32_i32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_2_nested_i32_i32() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_bitmask	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_bitmask() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_entity	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_entity() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_enum	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_enum() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_i32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_i32() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_i32_array_3	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_i32_array_3() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_i32_i32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_i32_i32() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_nested_i32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_nested_i32() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_nested_i32_i32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_nested_i32_i32() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_struct_i32_array_3	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_struct_i32_array_3() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_struct_i32_i32_array_3	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_struct_i32_i32_array_3() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_w_2_array_type_i32_i32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_w_2_array_type_i32_i32() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_w_2_array_type_struct	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_w_2_array_type_struct() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_w_array_type_i32_i32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_w_array_type_i32_i32() {$/;"	f	typeref:typename:void
SerializeToExpr_struct_w_array_type_struct	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_struct_w_array_type_struct() {$/;"	f	typeref:typename:void
SerializeToExpr_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case SerializeToExpr_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SerializeToExpr_u16	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_u16() {$/;"	f	typeref:typename:void
SerializeToExpr_u32	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_u32() {$/;"	f	typeref:typename:void
SerializeToExpr_u64	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_u64() {$/;"	f	typeref:typename:void
SerializeToExpr_u8	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_u8() {$/;"	f	typeref:typename:void
SerializeToExpr_uptr	lib/flecs/test/meta/src/SerializeToExpr.c	/^void SerializeToExpr_uptr() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_empty	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_empty() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_1_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_1_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_2_components	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_2_components() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_base	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_base() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_base_override	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_base_override() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_brief	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_brief() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_brief_no_brief	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_brief_no_brief() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_enum_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_enum_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_id_labels	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_id_labels() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_invalid_enum_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_invalid_enum_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_label	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_label() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_label_no_name	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_label_no_name() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_link	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_link() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_link_no_link	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_link_no_link() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_meta_ids	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_meta_ids() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_name	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_name() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_name_1_pair	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_name_1_pair() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_name_1_tag	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_name_1_tag() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_name_2_tags	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_name_2_tags() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_primitive_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_primitive_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_private	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_private() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_struct_and_enum_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_struct_and_enum_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_type_info	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_type_info() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_type_info_unit	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_type_info_unit() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_type_info_unit_over	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_type_info_unit_over() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_w_type_info_unit_quantity	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_w_type_info_unit_quantity() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_entity_wo_private	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_entity_wo_private() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_1_comps_2_ents_same_table	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_1_comps_2_ents_same_table() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_1_comps_empty	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_1_comps_empty() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_1_tag_1_comp_2_ents_same_table	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_1_tag_1_comp_2_ents_same_table() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_1_tag_1_comp_4_ents_two_tables	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_1_tag_1_comp_4_ents_two_tables() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_1_tag_2_ents_same_table	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_1_tag_2_ents_same_table() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_2_comps_1_owned_2_ents	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_2_comps_1_owned_2_ents() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_2_comps_2_ents_same_table	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_2_comps_2_ents_same_table() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_1_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_1_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_1_component_1_struct	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_1_component_1_struct() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_1_struct	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_1_struct() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_1_tags	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_1_tags() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_2_components	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_2_components() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_2_structs	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_2_structs() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_2_tags	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_2_tags() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_w_unit	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_w_unit() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_w_unit_over	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_w_unit_over() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_type_info_w_unit_quantity	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_type_info_w_unit_quantity() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_2_vars	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_2_vars() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_entity_label	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_entity_label() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_inout_filter_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_inout_filter_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_inout_filter_reflected_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_inout_filter_reflected_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_inout_filter_tag	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_inout_filter_tag() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_inout_out_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_inout_out_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_inout_out_reflected_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_inout_out_reflected_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_inout_out_tag	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_inout_out_tag() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_optional_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_optional_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_optional_reflected_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_optional_reflected_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_optional_tag	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_optional_tag() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_pair_wildcard	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_pair_wildcard() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_var	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_var() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_var_component	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_var_component() {$/;"	f	typeref:typename:void
SerializeToJson_serialize_iterator_w_var_labels	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_serialize_iterator_w_var_labels() {$/;"	f	typeref:typename:void
SerializeToJson_struct_2_nested_i32_i32	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_2_nested_i32_i32() {$/;"	f	typeref:typename:void
SerializeToJson_struct_bitmask	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_bitmask() {$/;"	f	typeref:typename:void
SerializeToJson_struct_bool	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_bool() {$/;"	f	typeref:typename:void
SerializeToJson_struct_byte	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_byte() {$/;"	f	typeref:typename:void
SerializeToJson_struct_char	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_char() {$/;"	f	typeref:typename:void
SerializeToJson_struct_double	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_double() {$/;"	f	typeref:typename:void
SerializeToJson_struct_double_inf	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_double_inf() {$/;"	f	typeref:typename:void
SerializeToJson_struct_double_large	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_double_large() {$/;"	f	typeref:typename:void
SerializeToJson_struct_double_nan	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_double_nan() {$/;"	f	typeref:typename:void
SerializeToJson_struct_entity	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_entity() {$/;"	f	typeref:typename:void
SerializeToJson_struct_entity_after_float	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_entity_after_float() {$/;"	f	typeref:typename:void
SerializeToJson_struct_enum	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_enum() {$/;"	f	typeref:typename:void
SerializeToJson_struct_float	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_float() {$/;"	f	typeref:typename:void
SerializeToJson_struct_float_inf	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_float_inf() {$/;"	f	typeref:typename:void
SerializeToJson_struct_float_nan	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_float_nan() {$/;"	f	typeref:typename:void
SerializeToJson_struct_i16	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_i16() {$/;"	f	typeref:typename:void
SerializeToJson_struct_i32	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_i32() {$/;"	f	typeref:typename:void
SerializeToJson_struct_i32_array_3	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_i32_array_3() {$/;"	f	typeref:typename:void
SerializeToJson_struct_i32_i32	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_i32_i32() {$/;"	f	typeref:typename:void
SerializeToJson_struct_i64	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_i64() {$/;"	f	typeref:typename:void
SerializeToJson_struct_i8	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_i8() {$/;"	f	typeref:typename:void
SerializeToJson_struct_iptr	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_iptr() {$/;"	f	typeref:typename:void
SerializeToJson_struct_nested_i32	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_nested_i32() {$/;"	f	typeref:typename:void
SerializeToJson_struct_nested_i32_i32	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_nested_i32_i32() {$/;"	f	typeref:typename:void
SerializeToJson_struct_string	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_string() {$/;"	f	typeref:typename:void
SerializeToJson_struct_struct_i32_array_3	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_struct_i32_array_3() {$/;"	f	typeref:typename:void
SerializeToJson_struct_struct_i32_i32_array_3	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_struct_i32_i32_array_3() {$/;"	f	typeref:typename:void
SerializeToJson_struct_u16	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_u16() {$/;"	f	typeref:typename:void
SerializeToJson_struct_u32	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_u32() {$/;"	f	typeref:typename:void
SerializeToJson_struct_u64	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_u64() {$/;"	f	typeref:typename:void
SerializeToJson_struct_u8	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_u8() {$/;"	f	typeref:typename:void
SerializeToJson_struct_uptr	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_uptr() {$/;"	f	typeref:typename:void
SerializeToJson_struct_w_2_array_type_i32_i32	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_w_2_array_type_i32_i32() {$/;"	f	typeref:typename:void
SerializeToJson_struct_w_array_type_i32_i32	lib/flecs/test/meta/src/SerializeToJson.c	/^void SerializeToJson_struct_w_array_type_i32_i32() {$/;"	f	typeref:typename:void
SerializeToJson_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case SerializeToJson_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SerializeTypeInfoToJson_bitmask	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_bitmask() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_bool	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_bool() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_byte	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_byte() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_char	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_char() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_double	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_double() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_entity	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_entity() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_enum	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_enum() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_float	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_float() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_i16	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_i16() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_i32	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_i32() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_i64	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_i64() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_i8	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_i8() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_iptr	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_iptr() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_nested_struct	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_nested_struct() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_string	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_string() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_struct	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_struct() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_struct_array_i32_2	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_struct_array_i32_2() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_struct_array_struct_2	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_struct_array_struct_2() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_struct_array_type	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_struct_array_type() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case SerializeTypeInfoToJson_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SerializeTypeInfoToJson_u16	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_u16() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_u32	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_u32() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_u64	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_u64() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_u8	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_u8() {$/;"	f	typeref:typename:void
SerializeTypeInfoToJson_uptr	lib/flecs/test/meta/src/SerializeTypeInfoToJson.c	/^void SerializeTypeInfoToJson_uptr() {$/;"	f	typeref:typename:void
Serialized_ops_bitmask	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_bitmask() {$/;"	f	typeref:typename:void
Serialized_ops_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_bool() {$/;"	f	typeref:typename:void
Serialized_ops_byte	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_byte() {$/;"	f	typeref:typename:void
Serialized_ops_char	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_char() {$/;"	f	typeref:typename:void
Serialized_ops_double	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_double() {$/;"	f	typeref:typename:void
Serialized_ops_entity	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_entity() {$/;"	f	typeref:typename:void
Serialized_ops_enum	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_enum() {$/;"	f	typeref:typename:void
Serialized_ops_float	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_float() {$/;"	f	typeref:typename:void
Serialized_ops_i16	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_i16() {$/;"	f	typeref:typename:void
Serialized_ops_i32	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_i32() {$/;"	f	typeref:typename:void
Serialized_ops_i64	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_i64() {$/;"	f	typeref:typename:void
Serialized_ops_i8	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_i8() {$/;"	f	typeref:typename:void
Serialized_ops_iptr	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_iptr() {$/;"	f	typeref:typename:void
Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before() {$/;"	f	typeref:typename:void
Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before() {$/;"	f	typeref:typename:void
Serialized_ops_nested_2_lvls_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_2_lvls_bool() {$/;"	f	typeref:typename:void
Serialized_ops_nested_2_lvls_bool_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_2_lvls_bool_bool() {$/;"	f	typeref:typename:void
Serialized_ops_nested_2_lvls_i32_i32_w_member_before	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_2_lvls_i32_i32_w_member_before() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_bool() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_bool_2_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_bool_2_bool() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_bool_bool_2_i32_i32	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_bool_bool_2_i32_i32() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_bool_i32_2_i32_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_bool_i32_2_i32_bool() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_bool_w_bool_member	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_bool_w_bool_member() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_bool_w_i32_member	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_bool_w_i32_member() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_i32	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_i32() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_i32_2_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_i32_2_bool() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_i32_bool_2_bool_i32	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_i32_bool_2_bool_i32() {$/;"	f	typeref:typename:void
Serialized_ops_nested_struct_1_i32_i32_2_bool_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_nested_struct_1_i32_i32_2_bool_bool() {$/;"	f	typeref:typename:void
Serialized_ops_standalone_array_bool_1	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_standalone_array_bool_1() {$/;"	f	typeref:typename:void
Serialized_ops_standalone_array_bool_1_w_bool_after	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_standalone_array_bool_1_w_bool_after() {$/;"	f	typeref:typename:void
Serialized_ops_standalone_array_bool_2	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_standalone_array_bool_2() {$/;"	f	typeref:typename:void
Serialized_ops_standalone_array_bool_2_w_bool_after	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_standalone_array_bool_2_w_bool_after() {$/;"	f	typeref:typename:void
Serialized_ops_standalone_array_bool_3	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_standalone_array_bool_3() {$/;"	f	typeref:typename:void
Serialized_ops_standalone_array_bool_3_w_bool_after	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_standalone_array_bool_3_w_bool_after() {$/;"	f	typeref:typename:void
Serialized_ops_string	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_string() {$/;"	f	typeref:typename:void
Serialized_ops_struct_array_bool_1	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_array_bool_1() {$/;"	f	typeref:typename:void
Serialized_ops_struct_array_bool_1_w_i32_after	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_array_bool_1_w_i32_after() {$/;"	f	typeref:typename:void
Serialized_ops_struct_array_bool_2	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_array_bool_2() {$/;"	f	typeref:typename:void
Serialized_ops_struct_array_bool_2_w_i32_after	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_array_bool_2_w_i32_after() {$/;"	f	typeref:typename:void
Serialized_ops_struct_array_bool_3	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_array_bool_3() {$/;"	f	typeref:typename:void
Serialized_ops_struct_array_bool_3_w_i32_after	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_array_bool_3_w_i32_after() {$/;"	f	typeref:typename:void
Serialized_ops_struct_array_struct_bool_3_w_i32_after	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_array_struct_bool_3_w_i32_after() {$/;"	f	typeref:typename:void
Serialized_ops_struct_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_bool() {$/;"	f	typeref:typename:void
Serialized_ops_struct_bool_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_bool_bool() {$/;"	f	typeref:typename:void
Serialized_ops_struct_bool_i32	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_bool_i32() {$/;"	f	typeref:typename:void
Serialized_ops_struct_i32	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_i32() {$/;"	f	typeref:typename:void
Serialized_ops_struct_i32_bool	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_i32_bool() {$/;"	f	typeref:typename:void
Serialized_ops_struct_i32_i32	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_i32_i32() {$/;"	f	typeref:typename:void
Serialized_ops_struct_w_bitmask	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_w_bitmask() {$/;"	f	typeref:typename:void
Serialized_ops_struct_w_enum	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_w_enum() {$/;"	f	typeref:typename:void
Serialized_ops_struct_w_vector	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_w_vector() {$/;"	f	typeref:typename:void
Serialized_ops_struct_w_vector_w_bool_after	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_w_vector_w_bool_after() {$/;"	f	typeref:typename:void
Serialized_ops_struct_w_vector_w_bool_before	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_struct_w_vector_w_bool_before() {$/;"	f	typeref:typename:void
Serialized_ops_u16	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_u16() {$/;"	f	typeref:typename:void
Serialized_ops_u32	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_u32() {$/;"	f	typeref:typename:void
Serialized_ops_u64	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_u64() {$/;"	f	typeref:typename:void
Serialized_ops_u8	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_u8() {$/;"	f	typeref:typename:void
Serialized_ops_uptr	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_uptr() {$/;"	f	typeref:typename:void
Serialized_ops_vector	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_ops_vector() {$/;"	f	typeref:typename:void
Serialized_primitive_constants	lib/flecs/test/meta/src/Serialized.c	/^void Serialized_primitive_constants() {$/;"	f	typeref:typename:void
Serialized_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case Serialized_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Set	lib/libflint/include/lfset.h	/^#define Set /;"	d
SetCase	lib/flecs/test/api/src/Switch.c	/^void SetCase(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SetMass	lib/flecs/test/api/src/System_w_FromParent.c	/^void SetMass(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SetP	lib/flecs/test/api/src/Snapshot.c	/^void SetP(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SetPosition	lib/flecs/test/api/src/TriggerOnSet.c	/^void SetPosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SetVelocity	lib/flecs/examples/c/systems/sync_point/src/main.c	/^void SetVelocity(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Set_add_set	lib/flecs/test/api/src/Set.c	/^void Set_add_set() {$/;"	f	typeref:typename:void
Set_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Set_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Set_current	lib/flecs/test/api/src/TriggerOnAdd.c	/^void Set_current(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Set_emplace	lib/flecs/test/api/src/Set.c	/^void Set_emplace() {$/;"	f	typeref:typename:void
Set_emplace_2	lib/flecs/test/api/src/Set.c	/^void Set_emplace_2() {$/;"	f	typeref:typename:void
Set_emplace_existing	lib/flecs/test/api/src/Set.c	/^void Set_emplace_existing() {$/;"	f	typeref:typename:void
Set_emplace_w_move	lib/flecs/test/api/src/Set.c	/^void Set_emplace_w_move() {$/;"	f	typeref:typename:void
Set_existing_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Set_existing_new_w_component(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Set_get_mut_existing	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_existing() {$/;"	f	typeref:typename:void
Set_get_mut_new	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_new() {$/;"	f	typeref:typename:void
Set_get_mut_tag_existing	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_tag_existing() {$/;"	f	typeref:typename:void
Set_get_mut_tag_existing_w_comp	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_tag_existing_w_comp() {$/;"	f	typeref:typename:void
Set_get_mut_tag_existing_w_pair	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_tag_existing_w_pair() {$/;"	f	typeref:typename:void
Set_get_mut_tag_new	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_tag_new() {$/;"	f	typeref:typename:void
Set_get_mut_tag_new_w_comp	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_tag_new_w_comp() {$/;"	f	typeref:typename:void
Set_get_mut_tag_new_w_pair	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_tag_new_w_pair() {$/;"	f	typeref:typename:void
Set_get_mut_w_add_in_on_add	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_w_add_in_on_add() {$/;"	f	typeref:typename:void
Set_get_mut_w_remove_in_on_add	lib/flecs/test/api/src/Set.c	/^void Set_get_mut_w_remove_in_on_add() {$/;"	f	typeref:typename:void
Set_modified_no_component	lib/flecs/test/api/src/Set.c	/^void Set_modified_no_component() {$/;"	f	typeref:typename:void
Set_modified_w_on_set	lib/flecs/test/api/src/Set.c	/^void Set_modified_w_on_set() {$/;"	f	typeref:typename:void
Set_new_after_add	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Set_new_after_add(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Set_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Set_new_empty(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Set_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Set_new_w_component(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Set_random	lib/flecs/test/api/src/Stresstests.c	/^void Set_random(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Set_set_2	lib/flecs/test/api/src/Set.c	/^void Set_set_2() {$/;"	f	typeref:typename:void
Set_set_add	lib/flecs/test/api/src/Set.c	/^void Set_set_add() {$/;"	f	typeref:typename:void
Set_set_add_other	lib/flecs/test/api/src/Set.c	/^void Set_set_add_other() {$/;"	f	typeref:typename:void
Set_set_again	lib/flecs/test/api/src/Set.c	/^void Set_set_again() {$/;"	f	typeref:typename:void
Set_set_and_new	lib/flecs/test/api/src/Set.c	/^void Set_set_and_new() {$/;"	f	typeref:typename:void
Set_set_empty	lib/flecs/test/api/src/Set.c	/^void Set_set_empty() {$/;"	f	typeref:typename:void
Set_set_non_empty_override	lib/flecs/test/api/src/Set.c	/^void Set_set_non_empty_override() {$/;"	f	typeref:typename:void
Set_set_nonempty	lib/flecs/test/api/src/Set.c	/^void Set_set_nonempty() {$/;"	f	typeref:typename:void
Set_set_null	lib/flecs/test/api/src/Set.c	/^void Set_set_null() {$/;"	f	typeref:typename:void
Set_set_remove	lib/flecs/test/api/src/Set.c	/^void Set_set_remove() {$/;"	f	typeref:typename:void
Set_set_remove_other	lib/flecs/test/api/src/Set.c	/^void Set_set_remove_other() {$/;"	f	typeref:typename:void
Set_set_remove_twice	lib/flecs/test/api/src/Set.c	/^void Set_set_remove_twice() {$/;"	f	typeref:typename:void
Set_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Set_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Set_velocity_callback	lib/flecs/test/api/src/Stresstests.c	/^void Set_velocity_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Set_velocity_on_new	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Set_velocity_on_new(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SharedOr	lib/flecs/test/api/src/SystemPeriodic.c	/^void SharedOr(ecs_iter_t *it) {$/;"	f	typeref:typename:void
SimpleFooComponent	lib/flecs/test/api/src/Modules.c	/^typedef struct SimpleFooComponent {$/;"	s	file:
SimpleFooComponent	lib/flecs/test/api/src/Modules.c	/^} SimpleFooComponent;$/;"	t	typeref:struct:SimpleFooComponent	file:
SimpleFooSystem	lib/flecs/test/api/src/Modules.c	/^void SimpleFooSystem(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
SimpleFooTrigger	lib/flecs/test/api/src/Modules.c	/^void SimpleFooTrigger(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
SimpleModule	lib/flecs/test/cpp_api/src/Module.cpp	/^    SimpleModule(flecs::world& world) {$/;"	f	class:ns::SimpleModule	file:
SimpleModule	lib/flecs/test/cpp_api/src/Module.cpp	/^class SimpleModule {$/;"	c	namespace:ns	file:
SimpleModuleImport	lib/flecs/test/api/src/Modules.c	/^void SimpleModuleImport($/;"	f	typeref:typename:void
SingleThreadStaging_1_add_2_remove_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_1_add_2_remove_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_2_add_1_remove_same_to_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_2_add_1_remove_same_to_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_2_add_1_remove_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_2_add_1_remove_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_2_add_1_remove_to_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_2_add_1_remove_to_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_2_add_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_2_add_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_2_add_to_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_2_add_to_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_2_same_existing_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_2_same_existing_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_2_same_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_2_same_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_2_same_to_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_2_same_to_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_add_same_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_add_same_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_different_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_different_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_same_existing_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_same_existing_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_same_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_same_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_same_to_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_same_to_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_remove_same_to_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_remove_same_to_new_w_component() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_to_current_in_on_add	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_to_current_in_on_add() {$/;"	f	typeref:typename:void
SingleThreadStaging_add_to_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_add_to_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_clear_stage_after_merge	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_clear_stage_after_merge() {$/;"	f	typeref:typename:ECS_MOVE (Position,dst,src,{ move_position ++; dst->x = src->x; dst->y = src->y; })void	file:
SingleThreadStaging_clone	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_clone() {$/;"	f	typeref:typename:void
SingleThreadStaging_clone_w_value	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_clone_w_value() {$/;"	f	typeref:typename:void
SingleThreadStaging_delete_after_set	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_delete_after_set() {$/;"	f	typeref:typename:void
SingleThreadStaging_delete_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_delete_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_delete_even	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_delete_even() {$/;"	f	typeref:typename:void
SingleThreadStaging_delete_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_delete_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_delete_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_delete_new_w_component() {$/;"	f	typeref:typename:void
SingleThreadStaging_get_case_from_stage	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_get_case_from_stage() {$/;"	f	typeref:typename:void
SingleThreadStaging_get_empty_case_from_stage	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_get_empty_case_from_stage() {$/;"	f	typeref:typename:void
SingleThreadStaging_get_mutable	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_get_mutable() {$/;"	f	typeref:typename:void
SingleThreadStaging_get_mutable_from_main	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_get_mutable_from_main() {$/;"	f	typeref:typename:void
SingleThreadStaging_get_mutable_w_add	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_get_mutable_w_add() {$/;"	f	typeref:typename:void
SingleThreadStaging_get_object_from_stage	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_get_object_from_stage() {$/;"	f	typeref:typename:void
SingleThreadStaging_get_parent_in_progress	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_get_parent_in_progress() {$/;"	f	typeref:typename:void
SingleThreadStaging_lock_table	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_lock_table() {$/;"	f	typeref:typename:void
SingleThreadStaging_match_table_created_in_progress	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_match_table_created_in_progress() {$/;"	f	typeref:typename:void
SingleThreadStaging_match_table_created_w_new_in_on_set	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_match_table_created_w_new_in_on_set() {$/;"	f	typeref:typename:void
SingleThreadStaging_match_table_created_w_new_in_progress	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_match_table_created_w_new_in_progress() {$/;"	f	typeref:typename:void
SingleThreadStaging_merge_after_tasks	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_merge_after_tasks() {$/;"	f	typeref:typename:void
SingleThreadStaging_merge_once	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_merge_once() {$/;"	f	typeref:typename:void
SingleThreadStaging_merge_table_w_container_added_in_progress	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_merge_table_w_container_added_in_progress() {$/;"	f	typeref:typename:void
SingleThreadStaging_merge_table_w_container_added_on_set	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_merge_table_w_container_added_on_set() {$/;"	f	typeref:typename:void
SingleThreadStaging_merge_table_w_container_added_on_set_reverse	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_merge_table_w_container_added_on_set_reverse() {$/;"	f	typeref:typename:void
SingleThreadStaging_modify_after_lock	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_modify_after_lock() {$/;"	f	typeref:typename:void
SingleThreadStaging_new_component_w_count	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_new_component_w_count() {$/;"	f	typeref:typename:void
SingleThreadStaging_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_new_empty_w_count	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_new_empty_w_count() {$/;"	f	typeref:typename:void
SingleThreadStaging_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_new_w_component() {$/;"	f	typeref:typename:void
SingleThreadStaging_on_add_after_new_type_in_progress	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_on_add_after_new_type_in_progress() {$/;"	f	typeref:typename:void
SingleThreadStaging_override_after_remove_in_progress	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_override_after_remove_in_progress() {$/;"	f	typeref:typename:void
SingleThreadStaging_recursive_lock_table	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_recursive_lock_table() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_2_from_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_2_from_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_add_2_same_existing_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_add_2_same_existing_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_add_2_same_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_add_2_same_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_add_same_existing_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_add_same_existing_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_add_same_to_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_add_same_to_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_added_component_in_on_add	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_added_component_in_on_add() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_after_set	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_after_set() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_from_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_from_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_remove_from_current_in_on_add	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_remove_from_current_in_on_add() {$/;"	f	typeref:typename:void
SingleThreadStaging_set_current	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_set_current() {$/;"	f	typeref:typename:void
SingleThreadStaging_set_existing_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_set_existing_new_w_component() {$/;"	f	typeref:typename:void
SingleThreadStaging_set_new_after_add	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_set_new_after_add() {$/;"	f	typeref:typename:void
SingleThreadStaging_set_new_empty	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_set_new_empty() {$/;"	f	typeref:typename:void
SingleThreadStaging_set_new_w_component	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_set_new_w_component() {$/;"	f	typeref:typename:void
SingleThreadStaging_setup	lib/flecs/test/api/src/SingleThreadStaging.c	/^void SingleThreadStaging_setup() {$/;"	f	typeref:typename:void
SingleThreadStaging_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case SingleThreadStaging_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SingleThreadedSystem	lib/flecs/test/api/src/MultiThread.c	/^void SingleThreadedSystem(ecs_iter_t * it) {$/;"	f	typeref:typename:void	file:
Singleton	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^    struct Singleton {$/;"	s	function:SystemBuilder_singleton_term	file:
Singleton_add_singleton	lib/flecs/test/api/src/Singleton.c	/^void Singleton_add_singleton() {$/;"	f	typeref:typename:void
Singleton_add_singleton	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_add_singleton() {$/;"	f	typeref:typename:void
Singleton_emplace_singleton	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_emplace_singleton() {$/;"	f	typeref:typename:void
Singleton_get_lambda	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_get_lambda() {$/;"	f	typeref:typename:void
Singleton_get_mut_singleton	lib/flecs/test/api/src/Singleton.c	/^void Singleton_get_mut_singleton() {$/;"	f	typeref:typename:void
Singleton_get_mut_singleton	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_get_mut_singleton() {$/;"	f	typeref:typename:void
Singleton_get_singleton	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_get_singleton() {$/;"	f	typeref:typename:void
Singleton_has_singleton	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_has_singleton() {$/;"	f	typeref:typename:void
Singleton_modified_singleton	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_modified_singleton() {$/;"	f	typeref:typename:void
Singleton_remove_singleton	lib/flecs/test/api/src/Singleton.c	/^void Singleton_remove_singleton() {$/;"	f	typeref:typename:void
Singleton_remove_singleton	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_remove_singleton() {$/;"	f	typeref:typename:void
Singleton_set_get_singleton	lib/flecs/test/api/src/Singleton.c	/^void Singleton_set_get_singleton() {$/;"	f	typeref:typename:void
Singleton_set_get_singleton	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_set_get_singleton() {$/;"	f	typeref:typename:void
Singleton_set_lambda	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_set_lambda() {$/;"	f	typeref:typename:void
Singleton_singleton_system	lib/flecs/test/api/src/Singleton.c	/^void Singleton_singleton_system() {$/;"	f	typeref:typename:void
Singleton_singleton_system	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_singleton_system() {$/;"	f	typeref:typename:void
Singleton_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Singleton_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Singleton_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Singleton_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Singleton_type_id_from_world	lib/flecs/test/cpp_api/src/Singleton.cpp	/^void Singleton_type_id_from_world() {$/;"	f	typeref:typename:void
Snapshot_add_after_snapshot	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_add_after_snapshot() {$/;"	f	typeref:typename:void
Snapshot_delete_after_snapshot	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_delete_after_snapshot() {$/;"	f	typeref:typename:void
Snapshot_new_after_snapshot	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_new_after_snapshot() {$/;"	f	typeref:typename:void
Snapshot_new_empty_after_snapshot	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_new_empty_after_snapshot() {$/;"	f	typeref:typename:void
Snapshot_restore_recycled	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_restore_recycled() {$/;"	f	typeref:typename:void
Snapshot_set_after_snapshot	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_set_after_snapshot() {$/;"	f	typeref:typename:void
Snapshot_simple_snapshot	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_simple_snapshot() {$/;"	f	typeref:typename:void
Snapshot_simple_snapshot	lib/flecs/test/cpp_api/src/Snapshot.cpp	/^void Snapshot_simple_snapshot() {$/;"	f	typeref:typename:void
Snapshot_snapshot_activate_table_w_filter	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_activate_table_w_filter() {$/;"	f	typeref:typename:void
Snapshot_snapshot_after_add	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_after_add() {$/;"	f	typeref:typename:void
Snapshot_snapshot_after_delete	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_after_delete() {$/;"	f	typeref:typename:void
Snapshot_snapshot_after_new	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_after_new() {$/;"	f	typeref:typename:void
Snapshot_snapshot_after_new_type	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_after_new_type() {$/;"	f	typeref:typename:void
Snapshot_snapshot_after_remove	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_after_remove() {$/;"	f	typeref:typename:void
Snapshot_snapshot_copy	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_copy() {$/;"	f	typeref:typename:void
Snapshot_snapshot_free	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_free() {$/;"	f	typeref:typename:void
Snapshot_snapshot_free_empty	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_free_empty() {$/;"	f	typeref:typename:void
Snapshot_snapshot_free_filtered	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_free_filtered() {$/;"	f	typeref:typename:void
Snapshot_snapshot_free_filtered_w_dtor	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_free_filtered_w_dtor() {$/;"	f	typeref:typename:void
Snapshot_snapshot_from_stage	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_from_stage() {$/;"	f	typeref:typename:void
Snapshot_snapshot_get_ref_after_restore	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_get_ref_after_restore() {$/;"	f	typeref:typename:void
Snapshot_snapshot_w_exclude_filter	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_w_exclude_filter() {$/;"	f	typeref:typename:void
Snapshot_snapshot_w_filter_after_delete	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_w_filter_after_delete() {$/;"	f	typeref:typename:void
Snapshot_snapshot_w_filter_after_new	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_w_filter_after_new() {$/;"	f	typeref:typename:void
Snapshot_snapshot_w_include_filter	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_w_include_filter() {$/;"	f	typeref:typename:void
Snapshot_snapshot_w_new_in_onset	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_w_new_in_onset() {$/;"	f	typeref:typename:void
Snapshot_snapshot_w_new_in_onset_in_snapshot_table	lib/flecs/test/api/src/Snapshot.c	/^void Snapshot_snapshot_w_new_in_onset_in_snapshot_table() {$/;"	f	typeref:typename:void
Snapshot_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Snapshot_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Snapshot_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Snapshot_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SomeType	lib/flecs/test/api/src/Plecs.c	/^    } SomeType;$/;"	t	function:Plecs_type_and_assign_in_plecs_w_enum	typeref:struct:Plecs_type_and_assign_in_plecs_w_enum::__anonb7ea1cde0308	file:
SomeType	lib/flecs/test/api/src/Plecs.c	/^    } SomeType;$/;"	t	function:Plecs_type_and_assign_in_plecs_w_enum_using_meta	typeref:struct:Plecs_type_and_assign_in_plecs_w_enum_using_meta::__anonb7ea1cde0508	file:
Sorting_dont_resort_after_set_unsorted_component	lib/flecs/test/api/src/Sorting.c	/^void Sorting_dont_resort_after_set_unsorted_component() {$/;"	f	typeref:typename:void
Sorting_dont_resort_after_set_unsorted_component_w_tag	lib/flecs/test/api/src/Sorting.c	/^void Sorting_dont_resort_after_set_unsorted_component_w_tag() {$/;"	f	typeref:typename:void
Sorting_dont_resort_after_set_unsorted_component_w_tag_w_out_term	lib/flecs/test/api/src/Sorting.c	/^void Sorting_dont_resort_after_set_unsorted_component_w_tag_w_out_term() {$/;"	f	typeref:typename:void
Sorting_sort_1000_entities	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_1000_entities() {$/;"	f	typeref:typename:void
Sorting_sort_1000_entities_2_types	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_1000_entities_2_types() {$/;"	f	typeref:typename:void
Sorting_sort_1000_entities_2_types_again	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_1000_entities_2_types_again() {$/;"	f	typeref:typename:void
Sorting_sort_1000_entities_add_type_after_sort	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_1000_entities_add_type_after_sort() {$/;"	f	typeref:typename:void
Sorting_sort_1000_entities_again	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_1000_entities_again() {$/;"	f	typeref:typename:void
Sorting_sort_1000_entities_w_duplicates	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_1000_entities_w_duplicates() {$/;"	f	typeref:typename:void
Sorting_sort_1500_entities_3_types	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_1500_entities_3_types() {$/;"	f	typeref:typename:void
Sorting_sort_2000_entities_4_types	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_2000_entities_4_types() {$/;"	f	typeref:typename:void
Sorting_sort_2_entities_2_types	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_2_entities_2_types() {$/;"	f	typeref:typename:void
Sorting_sort_3_entities_3_types	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_3_entities_3_types() {$/;"	f	typeref:typename:void
Sorting_sort_3_entities_3_types_2	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_3_entities_3_types_2() {$/;"	f	typeref:typename:void
Sorting_sort_4_entities_4_types	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_4_entities_4_types() {$/;"	f	typeref:typename:void
Sorting_sort_after_add	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_after_add() {$/;"	f	typeref:typename:void
Sorting_sort_after_delete	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_after_delete() {$/;"	f	typeref:typename:void
Sorting_sort_after_query	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_after_query() {$/;"	f	typeref:typename:void
Sorting_sort_after_remove	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_after_remove() {$/;"	f	typeref:typename:void
Sorting_sort_after_set	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_after_set() {$/;"	f	typeref:typename:void
Sorting_sort_after_system	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_after_system() {$/;"	f	typeref:typename:void
Sorting_sort_by_component	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_by_component() {$/;"	f	typeref:typename:void
Sorting_sort_by_component_2_tables	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_by_component_2_tables() {$/;"	f	typeref:typename:void
Sorting_sort_by_component_3_tables	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_by_component_3_tables() {$/;"	f	typeref:typename:void
Sorting_sort_by_component_move_pivot	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_by_component_move_pivot() {$/;"	f	typeref:typename:void
Sorting_sort_by_component_same_value_1	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_by_component_same_value_1() {$/;"	f	typeref:typename:void
Sorting_sort_by_component_same_value_2	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_by_component_same_value_2() {$/;"	f	typeref:typename:void
Sorting_sort_by_entity	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_by_entity() {$/;"	f	typeref:typename:void
Sorting_sort_childof_marked	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_childof_marked() {$/;"	f	typeref:typename:void
Sorting_sort_isa_marked	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_isa_marked() {$/;"	f	typeref:typename:void
Sorting_sort_relation_marked	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_relation_marked() {$/;"	f	typeref:typename:void
Sorting_sort_shared_component	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_shared_component() {$/;"	f	typeref:typename:void
Sorting_sort_w_tags_only	lib/flecs/test/api/src/Sorting.c	/^void Sorting_sort_w_tags_only() {$/;"	f	typeref:typename:void
Sorting_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Sorting_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SparseEnum	lib/flecs/test/cpp_api/src/Enum.cpp	/^enum SparseEnum {$/;"	g	file:
Sparse_add_1	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_add_1() {$/;"	f	typeref:typename:void
Sparse_add_1_chunk_size_1	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_add_1_chunk_size_1() {$/;"	f	typeref:typename:void
Sparse_add_1_to_empty	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_add_1_to_empty() {$/;"	f	typeref:typename:void
Sparse_add_after_clear	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_add_after_clear() {$/;"	f	typeref:typename:void
Sparse_add_n	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_add_n() {$/;"	f	typeref:typename:void
Sparse_add_n_chunk_size_1	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_add_n_chunk_size_1() {$/;"	f	typeref:typename:void
Sparse_clear_1	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_clear_1() {$/;"	f	typeref:typename:void
Sparse_clear_empty	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_clear_empty() {$/;"	f	typeref:typename:void
Sparse_clear_n	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_clear_n() {$/;"	f	typeref:typename:void
Sparse_clear_n_chunks	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_clear_n_chunks() {$/;"	f	typeref:typename:void
Sparse_copy	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_copy() {$/;"	f	typeref:typename:void
Sparse_copy_null	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_copy_null() {$/;"	f	typeref:typename:void
Sparse_count_of_null	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_count_of_null() {$/;"	f	typeref:typename:void
Sparse_create_delete	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_create_delete() {$/;"	f	typeref:typename:void
Sparse_create_delete_2	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_create_delete_2() {$/;"	f	typeref:typename:void
Sparse_memory_null	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_memory_null() {$/;"	f	typeref:typename:void
Sparse_remove	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_remove() {$/;"	f	typeref:typename:void
Sparse_remove_all	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_remove_all() {$/;"	f	typeref:typename:void
Sparse_remove_all_n_chunks	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_remove_all_n_chunks() {$/;"	f	typeref:typename:void
Sparse_remove_first	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_remove_first() {$/;"	f	typeref:typename:void
Sparse_remove_last	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_remove_last() {$/;"	f	typeref:typename:void
Sparse_restore	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_restore() {$/;"	f	typeref:typename:void
Sparse_setup	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_setup() {$/;"	f	typeref:typename:void
Sparse_size_of_null	lib/flecs/test/collections/src/Sparse.c	/^void Sparse_size_of_null() {$/;"	f	typeref:typename:void
Sparse_testcases	lib/flecs/test/collections/src/main.c	/^bake_test_case Sparse_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Speed	lib/flecs/flecs.h	/^struct Speed { };$/;"	s	struct:flecs::units
Speed	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Speed { };$/;"	s	struct:flecs::units
Stack	lib/libflint/include/lfstack.h	/^#define Stack /;"	d
StandardEnum	lib/flecs/test/cpp_api/src/Enum.cpp	/^enum StandardEnum {$/;"	g	file:
Standing	lib/flecs/test/cpp_api/src/Switch.cpp	/^    struct Standing { };$/;"	s	struct:Movement	file:
Star	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^struct Star { };$/;"	s	file:
State	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^struct State { };$/;"	s	file:
Stats_get_pipeline_stats_after_progress_1_inactive_system	lib/flecs/test/api/src/Stats.c	/^void Stats_get_pipeline_stats_after_progress_1_inactive_system() {$/;"	f	typeref:typename:void
Stats_get_pipeline_stats_after_progress_1_system	lib/flecs/test/api/src/Stats.c	/^void Stats_get_pipeline_stats_after_progress_1_system() {$/;"	f	typeref:typename:void
Stats_get_pipeline_stats_after_progress_2_systems	lib/flecs/test/api/src/Stats.c	/^void Stats_get_pipeline_stats_after_progress_2_systems() {$/;"	f	typeref:typename:void
Stats_get_pipeline_stats_after_progress_2_systems_one_merge	lib/flecs/test/api/src/Stats.c	/^void Stats_get_pipeline_stats_after_progress_2_systems_one_merge() {$/;"	f	typeref:typename:void
Stats_get_pipeline_stats_after_progress_no_systems	lib/flecs/test/api/src/Stats.c	/^void Stats_get_pipeline_stats_after_progress_no_systems() {$/;"	f	typeref:typename:void
Stats_get_pipeline_stats_before_progress	lib/flecs/test/api/src/Stats.c	/^void Stats_get_pipeline_stats_before_progress() {$/;"	f	typeref:typename:void
Stats_get_pipeline_stats_before_progress_mini_world	lib/flecs/test/api/src/Stats.c	/^void Stats_get_pipeline_stats_before_progress_mini_world() {$/;"	f	typeref:typename:void
Stats_get_world_stats	lib/flecs/test/api/src/Stats.c	/^void Stats_get_world_stats() {$/;"	f	typeref:typename:void
Stats_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Stats_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Stone	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^    Stone$/;"	e	enum:Tile	file:
Stone	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Grass, Sand, Stone$/;"	e	enum:EnumClass	file:
StopL	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	d
StopL	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	i
StopM	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	d
StopM	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	i
StopM	lib/uthash/doc/uthash-mini.svg	/^       style="overflow:visible">$/;"	d
StopM	lib/uthash/doc/uthash-mini.svg	/^       style="overflow:visible">$/;"	i
Str	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^class Str {$/;"	c	file:
Strbuf_app_buffer	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_app_buffer() {$/;"	f	typeref:typename:void
Strbuf_append	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append() {$/;"	f	typeref:typename:void
Strbuf_append_511_chars	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_511_chars() {$/;"	f	typeref:typename:void
Strbuf_append_512_chars	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_512_chars() {$/;"	f	typeref:typename:void
Strbuf_append_513_chars	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_513_chars() {$/;"	f	typeref:typename:void
Strbuf_append_char	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_char() {$/;"	f	typeref:typename:void
Strbuf_append_flt	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_flt() {$/;"	f	typeref:typename:void
Strbuf_append_inf	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_inf() {$/;"	f	typeref:typename:void
Strbuf_append_inf_delim	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_inf_delim() {$/;"	f	typeref:typename:void
Strbuf_append_list	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_list() {$/;"	f	typeref:typename:void
Strbuf_append_nan	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_nan() {$/;"	f	typeref:typename:void
Strbuf_append_nan_delim	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_nan_delim() {$/;"	f	typeref:typename:void
Strbuf_append_nested_list	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_nested_list() {$/;"	f	typeref:typename:void
Strbuf_append_zerocopy	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_zerocopy() {$/;"	f	typeref:typename:void
Strbuf_append_zerocopy_const	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_zerocopy_const() {$/;"	f	typeref:typename:void
Strbuf_append_zerocopy_only	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_append_zerocopy_only() {$/;"	f	typeref:typename:void
Strbuf_appendstr	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_appendstr() {$/;"	f	typeref:typename:void
Strbuf_appendstr_null	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_appendstr_null() {$/;"	f	typeref:typename:void
Strbuf_appendstrn	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_appendstrn() {$/;"	f	typeref:typename:void
Strbuf_empty_str	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_empty_str() {$/;"	f	typeref:typename:void
Strbuf_large_str	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_large_str() {$/;"	f	typeref:typename:void
Strbuf_merge	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_merge() {$/;"	f	typeref:typename:void
Strbuf_reset	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_reset() {$/;"	f	typeref:typename:void
Strbuf_setup	lib/flecs/test/collections/src/Strbuf.c	/^void Strbuf_setup() {$/;"	f	typeref:typename:void
Strbuf_testcases	lib/flecs/test/collections/src/main.c	/^bake_test_case Strbuf_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Stresstests_add_1k_tags	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_add_1k_tags() {$/;"	f	typeref:typename:void
Stresstests_create_1m_set_two_components	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_create_1m_set_two_components() {$/;"	f	typeref:typename:void
Stresstests_create_2m_entities_1_comp	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_create_2m_entities_1_comp() {$/;"	f	typeref:typename:void
Stresstests_create_2m_entities_bulk_1_comp	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_create_2m_entities_bulk_1_comp() {$/;"	f	typeref:typename:void
Stresstests_create_delete_entity_random_components	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_create_delete_entity_random_components() {$/;"	f	typeref:typename:void
Stresstests_create_delete_entity_random_components_12_threads	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_create_delete_entity_random_components_12_threads() {$/;"	f	typeref:typename:void
Stresstests_create_delete_entity_random_components_2_threads	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_create_delete_entity_random_components_2_threads() {$/;"	f	typeref:typename:void
Stresstests_create_delete_entity_random_components_6_threads	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_create_delete_entity_random_components_6_threads() {$/;"	f	typeref:typename:void
Stresstests_create_delete_entity_random_components_staged	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_create_delete_entity_random_components_staged() {$/;"	f	typeref:typename:void
Stresstests_set_entity_random_components	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_set_entity_random_components() {$/;"	f	typeref:typename:void
Stresstests_set_entity_random_components_12_threads	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_set_entity_random_components_12_threads() {$/;"	f	typeref:typename:void
Stresstests_set_entity_random_components_2_threads	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_set_entity_random_components_2_threads() {$/;"	f	typeref:typename:void
Stresstests_set_entity_random_components_6_threads	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_set_entity_random_components_6_threads() {$/;"	f	typeref:typename:void
Stresstests_set_entity_random_components_staged	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_set_entity_random_components_staged() {$/;"	f	typeref:typename:void
Stresstests_setup	lib/flecs/test/api/src/Stresstests.c	/^void Stresstests_setup() {$/;"	f	typeref:typename:void
Stresstests_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Stresstests_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
String	lib/flecs/flecs.h	/^static const flecs::entity_t String = ecs_id(ecs_string_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
String	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t String = ecs_id(ecs_string_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
String	lib/flecs/test/api/src/ComponentLifecycle.c	/^} String;$/;"	t	typeref:struct:__anoneccc1c6a0208	file:
Struct	lib/flecs/flecs.h	/^using Struct = EcsStruct;$/;"	t	namespace:flecs	typeref:typename:EcsStruct
Struct	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using Struct = EcsStruct;$/;"	t	namespace:flecs	typeref:typename:EcsStruct
StructTypes_bool_bool_i32	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_bool_bool_i32() {$/;"	f	typeref:typename:void
StructTypes_bool_i32	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_bool_i32() {$/;"	f	typeref:typename:void
StructTypes_bool_i32_bool_i32	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_bool_i32_bool_i32() {$/;"	f	typeref:typename:void
StructTypes_i32	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_i32() {$/;"	f	typeref:typename:void
StructTypes_i32_bool	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_i32_bool() {$/;"	f	typeref:typename:void
StructTypes_i32_bool_bool	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_i32_bool_bool() {$/;"	f	typeref:typename:void
StructTypes_i32_bool_bool_bool	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_i32_bool_bool_bool() {$/;"	f	typeref:typename:void
StructTypes_i32_i32	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_i32_i32() {$/;"	f	typeref:typename:void
StructTypes_i32_i32_i32	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_i32_i32_i32() {$/;"	f	typeref:typename:void
StructTypes_i32_i64	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_i32_i64() {$/;"	f	typeref:typename:void
StructTypes_i32_i64_i32	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_i32_i64_i32() {$/;"	f	typeref:typename:void
StructTypes_incomplete_member	lib/flecs/test/meta/src/StructTypes.c	/^void StructTypes_incomplete_member() {$/;"	f	typeref:typename:void
StructTypes_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case StructTypes_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SubSet	lib/flecs/flecs.h	/^static const uint8_t SubSet = EcsSubSet;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
SubSet	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const uint8_t SubSet = EcsSubSet;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
SuperSet	lib/flecs/flecs.h	/^static const uint8_t SuperSet = EcsSuperSet;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
SuperSet	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const uint8_t SuperSet = EcsSuperSet;$/;"	v	namespace:flecs	typeref:typename:const uint8_t
Switch	lib/flecs/flecs.h	/^static const flecs::entity_t Switch = ECS_SWITCH;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Switch	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Switch = ECS_SWITCH;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
SwitchType	lib/flecs/test/cpp_api/src/Type.cpp	/^    struct SwitchType {};$/;"	s	function:Type_create_type_from_system	file:
Switch_2_entities_1_change_case	lib/flecs/test/api/src/Switch.c	/^void Switch_2_entities_1_change_case() {$/;"	f	typeref:typename:void
Switch_3_entities_change_case	lib/flecs/test/api/src/Switch.c	/^void Switch_3_entities_change_case() {$/;"	f	typeref:typename:void
Switch_3_entities_same_case	lib/flecs/test/api/src/Switch.c	/^void Switch_3_entities_same_case() {$/;"	f	typeref:typename:void
Switch_add_case	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_add_case() {$/;"	f	typeref:typename:void
Switch_add_case_in_stage	lib/flecs/test/api/src/Switch.c	/^void Switch_add_case_in_stage() {$/;"	f	typeref:typename:void
Switch_add_case_w_type	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_add_case_w_type() {$/;"	f	typeref:typename:void
Switch_add_pair_to_entity_w_switch	lib/flecs/test/api/src/Switch.c	/^void Switch_add_pair_to_entity_w_switch() {$/;"	f	typeref:typename:void
Switch_add_remove_switch_w_type	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_add_remove_switch_w_type() {$/;"	f	typeref:typename:void
Switch_add_switch_in_stage	lib/flecs/test/api/src/Switch.c	/^void Switch_add_switch_in_stage() {$/;"	f	typeref:typename:void
Switch_add_switch_w_type	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_add_switch_w_type() {$/;"	f	typeref:typename:void
Switch_add_switch_w_type_component_first	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_add_switch_w_type_component_first() {$/;"	f	typeref:typename:void
Switch_add_to_entity_w_switch	lib/flecs/test/api/src/Switch.c	/^void Switch_add_to_entity_w_switch() {$/;"	f	typeref:typename:void
Switch_change_case_in_stage	lib/flecs/test/api/src/Switch.c	/^void Switch_change_case_in_stage() {$/;"	f	typeref:typename:void
Switch_change_one_case_in_stage	lib/flecs/test/api/src/Switch.c	/^void Switch_change_one_case_in_stage() {$/;"	f	typeref:typename:void
Switch_delete_first	lib/flecs/test/api/src/Switch.c	/^void Switch_delete_first() {$/;"	f	typeref:typename:void
Switch_delete_first_last	lib/flecs/test/api/src/Switch.c	/^void Switch_delete_first_last() {$/;"	f	typeref:typename:void
Switch_delete_last	lib/flecs/test/api/src/Switch.c	/^void Switch_delete_last() {$/;"	f	typeref:typename:void
Switch_empty_entity_has_case	lib/flecs/test/api/src/Switch.c	/^void Switch_empty_entity_has_case() {$/;"	f	typeref:typename:void
Switch_get_case	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_get_case() {$/;"	f	typeref:typename:void
Switch_get_case_change	lib/flecs/test/api/src/Switch.c	/^void Switch_get_case_change() {$/;"	f	typeref:typename:void
Switch_get_case_empty	lib/flecs/test/api/src/Switch.c	/^void Switch_get_case_empty() {$/;"	f	typeref:typename:void
Switch_get_case_no_switch	lib/flecs/test/api/src/Switch.c	/^void Switch_get_case_no_switch() {$/;"	f	typeref:typename:void
Switch_get_case_set	lib/flecs/test/api/src/Switch.c	/^void Switch_get_case_set() {$/;"	f	typeref:typename:void
Switch_get_case_unset	lib/flecs/test/api/src/Switch.c	/^void Switch_get_case_unset() {$/;"	f	typeref:typename:void
Switch_match_switch_on_base_instance	lib/flecs/test/api/src/Switch.c	/^void Switch_match_switch_on_base_instance() {$/;"	f	typeref:typename:void
Switch_query_1_case_1_type	lib/flecs/test/api/src/Switch.c	/^void Switch_query_1_case_1_type() {$/;"	f	typeref:typename:void
Switch_query_1_case_2_types	lib/flecs/test/api/src/Switch.c	/^void Switch_query_1_case_2_types() {$/;"	f	typeref:typename:void
Switch_query_2_cases_1_type	lib/flecs/test/api/src/Switch.c	/^void Switch_query_2_cases_1_type() {$/;"	f	typeref:typename:void
Switch_query_2_cases_2_types	lib/flecs/test/api/src/Switch.c	/^void Switch_query_2_cases_2_types() {$/;"	f	typeref:typename:void
Switch_query_after_remove	lib/flecs/test/api/src/Switch.c	/^void Switch_query_after_remove() {$/;"	f	typeref:typename:void
Switch_query_recycled_tags	lib/flecs/test/api/src/Switch.c	/^void Switch_query_recycled_tags() {$/;"	f	typeref:typename:void
Switch_query_switch	lib/flecs/test/api/src/Switch.c	/^void Switch_query_switch() {$/;"	f	typeref:typename:void
Switch_recycled_tags	lib/flecs/test/api/src/Switch.c	/^void Switch_recycled_tags() {$/;"	f	typeref:typename:void
Switch_remove_case	lib/flecs/test/api/src/Switch.c	/^void Switch_remove_case() {$/;"	f	typeref:typename:void
Switch_remove_last	lib/flecs/test/api/src/Switch.c	/^void Switch_remove_last() {$/;"	f	typeref:typename:void
Switch_remove_switch_in_stage	lib/flecs/test/api/src/Switch.c	/^void Switch_remove_switch_in_stage() {$/;"	f	typeref:typename:void
Switch_single_case	lib/flecs/test/api/src/Switch.c	/^void Switch_single_case() {$/;"	f	typeref:typename:void
Switch_sort	lib/flecs/test/api/src/Switch.c	/^void Switch_sort() {$/;"	f	typeref:typename:void
Switch_switch_no_match_for_case	lib/flecs/test/api/src/Switch.c	/^void Switch_switch_no_match_for_case() {$/;"	f	typeref:typename:void
Switch_switch_w_bitset_query	lib/flecs/test/api/src/Switch.c	/^void Switch_switch_w_bitset_query() {$/;"	f	typeref:typename:void
Switch_switch_w_bitset_query_2_elems	lib/flecs/test/api/src/Switch.c	/^void Switch_switch_w_bitset_query_2_elems() {$/;"	f	typeref:typename:void
Switch_switch_w_bitset_query_2_elems_skip	lib/flecs/test/api/src/Switch.c	/^void Switch_switch_w_bitset_query_2_elems_skip() {$/;"	f	typeref:typename:void
Switch_switch_w_bitset_query_elems_interleaved	lib/flecs/test/api/src/Switch.c	/^void Switch_switch_w_bitset_query_elems_interleaved() {$/;"	f	typeref:typename:void
Switch_switch_w_bitset_query_elems_interleaved_2_types	lib/flecs/test/api/src/Switch.c	/^void Switch_switch_w_bitset_query_elems_interleaved_2_types() {$/;"	f	typeref:typename:void
Switch_switch_w_bitset_query_inv	lib/flecs/test/api/src/Switch.c	/^void Switch_switch_w_bitset_query_inv() {$/;"	f	typeref:typename:void
Switch_system_w_case	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_system_w_case() {$/;"	f	typeref:typename:void
Switch_system_w_case_builder	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_system_w_case_builder() {$/;"	f	typeref:typename:void
Switch_system_w_sw_type_builder	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_system_w_sw_type_builder() {$/;"	f	typeref:typename:void
Switch_system_w_switch	lib/flecs/test/cpp_api/src/Switch.cpp	/^void Switch_system_w_switch() {$/;"	f	typeref:typename:void
Switch_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Switch_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Switch_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Switch_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Switch_zero_entity_has_case	lib/flecs/test/api/src/Switch.c	/^void Switch_zero_entity_has_case() {$/;"	f	typeref:typename:void
Sword	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct Sword : Item { };$/;"	s	file:
Symbol	lib/flecs/flecs.h	/^static const flecs::entity_t Symbol = EcsSymbol;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Symbol	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Symbol = EcsSymbol;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Symmetric	lib/flecs/flecs.h	/^static const flecs::entity_t Symmetric = EcsSymmetric;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Symmetric	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Symmetric = EcsSymmetric;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Sys	lib/flecs/test/api/src/App.c	/^static void Sys(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Sys	lib/flecs/test/api/src/Query.c	/^void Sys(ecs_iter_t *it) { }$/;"	f	typeref:typename:void
Sys	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Sys(ecs_iter_t *it) {$/;"	f	typeref:typename:void
SysA	lib/flecs/test/api/src/Pipeline.c	/^void SysA(ecs_iter_t *it) { $/;"	f	typeref:typename:void
SysA	lib/flecs/test/api/src/SystemMisc.c	/^static void SysA(ecs_iter_t *it)$/;"	f	typeref:typename:void	file:
SysB	lib/flecs/test/api/src/Pipeline.c	/^void SysB(ecs_iter_t *it) { $/;"	f	typeref:typename:void
SysB	lib/flecs/test/api/src/SystemMisc.c	/^static void SysB(ecs_iter_t *it)$/;"	f	typeref:typename:void	file:
SysC	lib/flecs/test/api/src/Pipeline.c	/^void SysC(ecs_iter_t *it) { $/;"	f	typeref:typename:void
SysD	lib/flecs/test/api/src/Pipeline.c	/^void SysD(ecs_iter_t *it) { $/;"	f	typeref:typename:void
SysE	lib/flecs/test/api/src/Pipeline.c	/^void SysE(ecs_iter_t *it) { $/;"	f	typeref:typename:void
SysF	lib/flecs/test/api/src/Pipeline.c	/^void SysF(ecs_iter_t *it) { $/;"	f	typeref:typename:void
SysIn	lib/flecs/test/api/src/Pipeline.c	/^static void SysIn(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SysInMain	lib/flecs/test/api/src/Pipeline.c	/^static void SysInMain(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SysOut	lib/flecs/test/api/src/Pipeline.c	/^static void SysOut(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SysOutMain	lib/flecs/test/api/src/Pipeline.c	/^static void SysOutMain(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
System	lib/flecs/flecs.h	/^static const flecs::entity_t System = ecs_id(EcsSystem);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
System	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t System = ecs_id(EcsSystem);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
SystemA	lib/flecs/test/api/src/Timer.c	/^void SystemA(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SystemA	lib/flecs/test/api/src/TriggerOnAdd.c	/^void SystemA(ecs_iter_t *it) {$/;"	f	typeref:typename:void
SystemB	lib/flecs/test/api/src/Timer.c	/^void SystemB(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SystemB	lib/flecs/test/api/src/TriggerOnAdd.c	/^void SystemB(ecs_iter_t *it) {$/;"	f	typeref:typename:void
SystemBuilder_10_terms	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_10_terms() {$/;"	f	typeref:typename:void
SystemBuilder_1_type	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_1_type() {$/;"	f	typeref:typename:void
SystemBuilder_20_terms	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_20_terms() {$/;"	f	typeref:typename:void
SystemBuilder_add_1_type	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_add_1_type() {$/;"	f	typeref:typename:void
SystemBuilder_add_1_type_w_1_type	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_add_1_type_w_1_type() {$/;"	f	typeref:typename:void
SystemBuilder_add_2_types	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_add_2_types() {$/;"	f	typeref:typename:void
SystemBuilder_add_2_types_w_1_type	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_add_2_types_w_1_type() {$/;"	f	typeref:typename:void
SystemBuilder_add_not	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_add_not() {$/;"	f	typeref:typename:void
SystemBuilder_add_optional	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_add_optional() {$/;"	f	typeref:typename:void
SystemBuilder_add_or	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_add_or() {$/;"	f	typeref:typename:void
SystemBuilder_add_pair	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_add_pair() {$/;"	f	typeref:typename:void
SystemBuilder_builder_assign_same_type	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_builder_assign_same_type() {$/;"	f	typeref:typename:void
SystemBuilder_builder_build_n_statements	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_builder_build_n_statements() {$/;"	f	typeref:typename:void
SystemBuilder_builder_build_to_auto	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_builder_build_to_auto() {$/;"	f	typeref:typename:void
SystemBuilder_const_type	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_const_type() {$/;"	f	typeref:typename:void
SystemBuilder_create_w_no_template_args	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_create_w_no_template_args() {$/;"	f	typeref:typename:void
SystemBuilder_name_arg	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_name_arg() {$/;"	f	typeref:typename:void
SystemBuilder_ptr_type	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_ptr_type() {$/;"	f	typeref:typename:void
SystemBuilder_singleton_term	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_singleton_term() {$/;"	f	typeref:typename:void
SystemBuilder_string_term	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^void SystemBuilder_string_term() {$/;"	f	typeref:typename:void
SystemBuilder_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case SystemBuilder_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SystemC	lib/flecs/test/api/src/Timer.c	/^void SystemC(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
SystemCascade_add_after_match	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_add_after_match() {$/;"	f	typeref:typename:void
SystemCascade_adopt_after_match	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_adopt_after_match() {$/;"	f	typeref:typename:void
SystemCascade_cascade_depth_1	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_cascade_depth_1() {$/;"	f	typeref:typename:void
SystemCascade_cascade_depth_2	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_cascade_depth_2() {$/;"	f	typeref:typename:void
SystemCascade_cascade_depth_2_new_syntax	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_cascade_depth_2_new_syntax() {$/;"	f	typeref:typename:void
SystemCascade_custom_relation_add_after_match	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_custom_relation_add_after_match() {$/;"	f	typeref:typename:void
SystemCascade_custom_relation_adopt_after_match	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_custom_relation_adopt_after_match() {$/;"	f	typeref:typename:void
SystemCascade_custom_relation_cascade_depth_1	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_custom_relation_cascade_depth_1() {$/;"	f	typeref:typename:void
SystemCascade_custom_relation_cascade_depth_2	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_custom_relation_cascade_depth_2() {$/;"	f	typeref:typename:void
SystemCascade_custom_relation_rematch_w_empty_table	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_custom_relation_rematch_w_empty_table() {$/;"	f	typeref:typename:void
SystemCascade_query_w_only_cascade	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_query_w_only_cascade() {$/;"	f	typeref:typename:void
SystemCascade_rematch_w_empty_table	lib/flecs/test/api/src/SystemCascade.c	/^void SystemCascade_rematch_w_empty_table() {$/;"	f	typeref:typename:void
SystemCascade_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case SystemCascade_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SystemManual_1_type_1_component	lib/flecs/test/api/src/SystemManual.c	/^void SystemManual_1_type_1_component() {$/;"	f	typeref:typename:void
SystemManual_activate_status	lib/flecs/test/api/src/SystemManual.c	/^void SystemManual_activate_status() {$/;"	f	typeref:typename:void
SystemManual_dont_run_w_unmatching_entity_query	lib/flecs/test/api/src/SystemManual.c	/^void SystemManual_dont_run_w_unmatching_entity_query() {$/;"	f	typeref:typename:void
SystemManual_no_automerge	lib/flecs/test/api/src/SystemManual.c	/^void SystemManual_no_automerge() {$/;"	f	typeref:typename:void
SystemManual_setup	lib/flecs/test/api/src/SystemManual.c	/^void SystemManual_setup() {$/;"	f	typeref:typename:void
SystemManual_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case SystemManual_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SystemMisc_activate_system_for_table_w_n_pairs	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_activate_system_for_table_w_n_pairs() {$/;"	f	typeref:typename:void
SystemMisc_add_own_component	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_add_own_component() {$/;"	f	typeref:typename:void
SystemMisc_add_to_system_in_progress	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_add_to_system_in_progress() {$/;"	f	typeref:typename:void
SystemMisc_change_custom_run_action	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_change_custom_run_action() {$/;"	f	typeref:typename:void
SystemMisc_change_system_action	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_change_system_action() {$/;"	f	typeref:typename:void
SystemMisc_custom_run_action_call_next	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_custom_run_action_call_next() {$/;"	f	typeref:typename:void
SystemMisc_deactivate_after_disable	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_deactivate_after_disable() {$/;"	f	typeref:typename:void
SystemMisc_declare_different_id_same_name	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_declare_different_id_same_name() {$/;"	f	typeref:typename:void
SystemMisc_declare_different_id_same_name_w_scope	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_declare_different_id_same_name_w_scope() {$/;"	f	typeref:typename:void
SystemMisc_delete_pipeline_system	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_delete_pipeline_system() {$/;"	f	typeref:typename:void
SystemMisc_delete_system	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_delete_system() {$/;"	f	typeref:typename:void
SystemMisc_delete_system_w_ctx	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_delete_system_w_ctx() {$/;"	f	typeref:typename:void
SystemMisc_dont_enable_after_rematch	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_dont_enable_after_rematch() {$/;"	f	typeref:typename:void
SystemMisc_ensure_single_merge	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_ensure_single_merge() {$/;"	f	typeref:typename:void
SystemMisc_get_query	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_get_query() {$/;"	f	typeref:typename:void
SystemMisc_invalid_0_w_and	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_0_w_and() {$/;"	f	typeref:typename:void
SystemMisc_invalid_0_w_from_entity	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_0_w_from_entity() {$/;"	f	typeref:typename:void
SystemMisc_invalid_component_id	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_component_id() {$/;"	f	typeref:typename:void
SystemMisc_invalid_empty_element	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_empty_element() {$/;"	f	typeref:typename:void
SystemMisc_invalid_empty_element_w_space	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_empty_element_w_space() {$/;"	f	typeref:typename:void
SystemMisc_invalid_empty_or	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_empty_or() {$/;"	f	typeref:typename:void
SystemMisc_invalid_empty_or_w_space	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_empty_or_w_space() {$/;"	f	typeref:typename:void
SystemMisc_invalid_empty_string	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_empty_string() {$/;"	f	typeref:typename:void
SystemMisc_invalid_empty_string_w_space	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_empty_string_w_space() {$/;"	f	typeref:typename:void
SystemMisc_invalid_empty_without_id	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_empty_without_id() {$/;"	f	typeref:typename:void
SystemMisc_invalid_entity_id	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_entity_id() {$/;"	f	typeref:typename:void
SystemMisc_invalid_entity_without_id	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_entity_without_id() {$/;"	f	typeref:typename:void
SystemMisc_invalid_mixed_src_modifier	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_mixed_src_modifier() {$/;"	f	typeref:typename:void
SystemMisc_invalid_not_w_or	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_not_w_or() {$/;"	f	typeref:typename:void
SystemMisc_invalid_not_without_id	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_not_without_id() {$/;"	f	typeref:typename:void
SystemMisc_invalid_null_string	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_null_string() {$/;"	f	typeref:typename:void
SystemMisc_invalid_optional_without_id	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_optional_without_id() {$/;"	f	typeref:typename:void
SystemMisc_invalid_or_w_not	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_invalid_or_w_not() {$/;"	f	typeref:typename:void
SystemMisc_match_system	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_match_system() {$/;"	f	typeref:typename:void
SystemMisc_one_named_column_of_two	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_one_named_column_of_two() {$/;"	f	typeref:typename:void
SystemMisc_pipeline_custom_run_action	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_pipeline_custom_run_action() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_0_and_expr	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_0_and_expr() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_0_and_null	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_0_and_null() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_0_expr	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_0_expr() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_different_expr	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_different_expr() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_explicit_id	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_explicit_id() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_explicit_id_no_name	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_explicit_id_no_name() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_explicit_id_null_expr	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_explicit_id_null_expr() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_expr_and_0	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_expr_and_0() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_expr_and_null	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_expr_and_null() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_null_and_0	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_null_and_0() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_null_and_expr	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_null_and_expr() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_null_expr	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_null_expr() {$/;"	f	typeref:typename:void
SystemMisc_redeclare_system_same_expr	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redeclare_system_same_expr() {$/;"	f	typeref:typename:void
SystemMisc_redefine_0_signature	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redefine_0_signature() {$/;"	f	typeref:typename:void
SystemMisc_redefine_null_signature	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redefine_null_signature() {$/;"	f	typeref:typename:void
SystemMisc_redefine_row_system	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_redefine_row_system() {$/;"	f	typeref:typename:void
SystemMisc_run_custom_run_action	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_run_custom_run_action() {$/;"	f	typeref:typename:void
SystemMisc_run_w_offset_limit_custom_run_action	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_run_w_offset_limit_custom_run_action() {$/;"	f	typeref:typename:void
SystemMisc_rw_in_implicit_any	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_rw_in_implicit_any() {$/;"	f	typeref:typename:void
SystemMisc_rw_in_implicit_from_empty	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_rw_in_implicit_from_empty() {$/;"	f	typeref:typename:void
SystemMisc_rw_in_implicit_from_entity	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_rw_in_implicit_from_entity() {$/;"	f	typeref:typename:void
SystemMisc_rw_in_implicit_shared	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_rw_in_implicit_shared() {$/;"	f	typeref:typename:void
SystemMisc_rw_out_explicit_any	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_rw_out_explicit_any() {$/;"	f	typeref:typename:void
SystemMisc_rw_out_explicit_from_empty	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_rw_out_explicit_from_empty() {$/;"	f	typeref:typename:void
SystemMisc_rw_out_explicit_from_entity	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_rw_out_explicit_from_entity() {$/;"	f	typeref:typename:void
SystemMisc_rw_out_explicit_shared	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_rw_out_explicit_shared() {$/;"	f	typeref:typename:void
SystemMisc_set_get_binding_context	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_set_get_binding_context() {$/;"	f	typeref:typename:void
SystemMisc_set_get_context	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_set_get_context() {$/;"	f	typeref:typename:void
SystemMisc_status_activate_after_new	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_status_activate_after_new() {$/;"	f	typeref:typename:void
SystemMisc_status_deactivate_after_delete	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_status_deactivate_after_delete() {$/;"	f	typeref:typename:void
SystemMisc_status_disable_after_disable	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_status_disable_after_disable() {$/;"	f	typeref:typename:void
SystemMisc_status_disable_after_new	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_status_disable_after_new() {$/;"	f	typeref:typename:void
SystemMisc_status_enable_after_disable	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_status_enable_after_disable() {$/;"	f	typeref:typename:void
SystemMisc_status_enable_after_new	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_status_enable_after_new() {$/;"	f	typeref:typename:void
SystemMisc_system_initial_state	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_system_initial_state() {$/;"	f	typeref:typename:void
SystemMisc_system_readeactivate	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_system_readeactivate() {$/;"	f	typeref:typename:void
SystemMisc_system_readeactivate_w_2_systems	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_system_readeactivate_w_2_systems() {$/;"	f	typeref:typename:void
SystemMisc_system_w_or_disabled	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_system_w_or_disabled() {$/;"	f	typeref:typename:void
SystemMisc_system_w_or_disabled_and_prefab	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_system_w_or_disabled_and_prefab() {$/;"	f	typeref:typename:void
SystemMisc_system_w_or_prefab	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_system_w_or_prefab() {$/;"	f	typeref:typename:void
SystemMisc_system_w_self	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_system_w_self() {$/;"	f	typeref:typename:void
SystemMisc_table_columns_access	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_table_columns_access() {$/;"	f	typeref:typename:void
SystemMisc_table_count	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_table_count() {$/;"	f	typeref:typename:void
SystemMisc_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case SystemMisc_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SystemMisc_two_named_columns_of_two	lib/flecs/test/api/src/SystemMisc.c	/^void SystemMisc_two_named_columns_of_two() {$/;"	f	typeref:typename:void
SystemOnSet_add_0_entity_in_on_set	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_add_0_entity_in_on_set() {$/;"	f	typeref:typename:void
SystemOnSet_add_base	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_add_base() {$/;"	f	typeref:typename:void
SystemOnSet_add_base_to_1_of_2_overridden	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_add_base_to_1_of_2_overridden() {$/;"	f	typeref:typename:void
SystemOnSet_add_base_to_1_overridden	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_add_base_to_1_overridden() {$/;"	f	typeref:typename:void
SystemOnSet_add_base_to_2_overridden	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_add_base_to_2_overridden() {$/;"	f	typeref:typename:void
SystemOnSet_add_to_current_in_on_set	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_add_to_current_in_on_set() {$/;"	f	typeref:typename:void
SystemOnSet_match_table_created_w_add_in_on_set	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_match_table_created_w_add_in_on_set() {$/;"	f	typeref:typename:void
SystemOnSet_no_set_after_remove_base	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_no_set_after_remove_base() {$/;"	f	typeref:typename:void
SystemOnSet_on_set_after_remove_override	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_on_set_after_remove_override() {$/;"	f	typeref:typename:void
SystemOnSet_on_set_prefab	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_on_set_prefab() {$/;"	f	typeref:typename:void
SystemOnSet_remove_from_current_in_on_set	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_remove_from_current_in_on_set() {$/;"	f	typeref:typename:void
SystemOnSet_remove_set_component_in_on_set	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_remove_set_component_in_on_set() {$/;"	f	typeref:typename:void
SystemOnSet_set_1_of_1	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_set_1_of_1() {$/;"	f	typeref:typename:void
SystemOnSet_set_1_of_2	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_set_1_of_2() {$/;"	f	typeref:typename:void
SystemOnSet_set_1_of_2_1_from_base	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_set_1_of_2_1_from_base() {$/;"	f	typeref:typename:void
SystemOnSet_set_1_of_3	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_set_1_of_3() {$/;"	f	typeref:typename:void
SystemOnSet_set_1_of_3_1_from_base	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_set_1_of_3_1_from_base() {$/;"	f	typeref:typename:void
SystemOnSet_set_from_nothing	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_set_from_nothing() {$/;"	f	typeref:typename:void
SystemOnSet_set_optional	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_set_optional() {$/;"	f	typeref:typename:void
SystemOnSet_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case SystemOnSet_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SystemOnSet_un_set_after_remove	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_un_set_after_remove() {$/;"	f	typeref:typename:void
SystemOnSet_un_set_after_remove_base	lib/flecs/test/api/src/SystemOnSet.c	/^void SystemOnSet_un_set_after_remove_base() {$/;"	f	typeref:typename:void
SystemPeriodic_1_type_1_and_1_or	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_1_type_1_and_1_or() {$/;"	f	typeref:typename:void
SystemPeriodic_1_type_1_component	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_1_type_1_component() {$/;"	f	typeref:typename:void
SystemPeriodic_1_type_1_component_1_tag	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_1_type_1_component_1_tag() {$/;"	f	typeref:typename:void
SystemPeriodic_1_type_3_component	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_1_type_3_component() {$/;"	f	typeref:typename:void
SystemPeriodic_2_type_1_and_1_not	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_2_type_1_and_1_not() {$/;"	f	typeref:typename:void
SystemPeriodic_2_type_1_and_1_optional	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_2_type_1_and_1_optional() {$/;"	f	typeref:typename:void
SystemPeriodic_2_type_1_component_1_tag	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_2_type_1_component_1_tag() {$/;"	f	typeref:typename:void
SystemPeriodic_2_type_2_and_1_not	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_2_type_2_and_1_not() {$/;"	f	typeref:typename:void
SystemPeriodic_2_type_2_and_1_optional	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_2_type_2_and_1_optional() {$/;"	f	typeref:typename:void
SystemPeriodic_2_type_2_and_2_not	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_2_type_2_and_2_not() {$/;"	f	typeref:typename:void
SystemPeriodic_2_type_3_component	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_2_type_3_component() {$/;"	f	typeref:typename:void
SystemPeriodic_3_type_1_component	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_3_type_1_component() {$/;"	f	typeref:typename:void
SystemPeriodic_4_type_1_and_1_or	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_4_type_1_and_1_or() {$/;"	f	typeref:typename:void
SystemPeriodic_4_type_1_and_1_or_of_3	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_4_type_1_and_1_or_of_3() {$/;"	f	typeref:typename:void
SystemPeriodic_6_type_1_and_2_optional	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_6_type_1_and_2_optional() {$/;"	f	typeref:typename:void
SystemPeriodic_and_type	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_and_type() {$/;"	f	typeref:typename:void
SystemPeriodic_cascade_dont_match_inheritance	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_cascade_dont_match_inheritance() {$/;"	f	typeref:typename:void
SystemPeriodic_container_dont_match_inheritance	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_container_dont_match_inheritance() {$/;"	f	typeref:typename:void
SystemPeriodic_disabled	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_disabled() {$/;"	f	typeref:typename:void
SystemPeriodic_disabled_feature	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_disabled_feature() {$/;"	f	typeref:typename:void
SystemPeriodic_disabled_nested_feature	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_disabled_nested_feature() {$/;"	f	typeref:typename:void
SystemPeriodic_ensure_optional_is_null_shared	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_ensure_optional_is_null_shared() {$/;"	f	typeref:typename:void
SystemPeriodic_ensure_optional_is_unset_column	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_ensure_optional_is_unset_column() {$/;"	f	typeref:typename:void
SystemPeriodic_filter_disabled	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_filter_disabled() {$/;"	f	typeref:typename:void
SystemPeriodic_get_period	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_get_period() {$/;"	f	typeref:typename:void
SystemPeriodic_get_sys_context_from_param	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_get_sys_context_from_param() {$/;"	f	typeref:typename:void
SystemPeriodic_is_in_readonly	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_is_in_readonly() {$/;"	f	typeref:typename:void
SystemPeriodic_is_shared_on_column_not_set	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_is_shared_on_column_not_set() {$/;"	f	typeref:typename:void
SystemPeriodic_match_2_systems_w_populated_table	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_match_2_systems_w_populated_table() {$/;"	f	typeref:typename:void
SystemPeriodic_match_disabled	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_match_disabled() {$/;"	f	typeref:typename:void
SystemPeriodic_match_disabled_and_enabled	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_match_disabled_and_enabled() {$/;"	f	typeref:typename:void
SystemPeriodic_match_prefab	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_match_prefab() {$/;"	f	typeref:typename:void
SystemPeriodic_match_prefab_and_normal	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_match_prefab_and_normal() {$/;"	f	typeref:typename:void
SystemPeriodic_not_from_entity	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_not_from_entity() {$/;"	f	typeref:typename:void
SystemPeriodic_on_period	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_on_period() {$/;"	f	typeref:typename:void
SystemPeriodic_on_period_long_delta	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_on_period_long_delta() {$/;"	f	typeref:typename:void
SystemPeriodic_or_type	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_or_type() {$/;"	f	typeref:typename:void
SystemPeriodic_owned_column	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_owned_column() {$/;"	f	typeref:typename:void
SystemPeriodic_owned_not_column	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_owned_not_column() {$/;"	f	typeref:typename:void
SystemPeriodic_owned_only	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_owned_only() {$/;"	f	typeref:typename:void
SystemPeriodic_owned_or_column	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_owned_or_column() {$/;"	f	typeref:typename:void
SystemPeriodic_shared_column	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_shared_column() {$/;"	f	typeref:typename:void
SystemPeriodic_shared_not_column	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_shared_not_column() {$/;"	f	typeref:typename:void
SystemPeriodic_shared_only	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_shared_only() {$/;"	f	typeref:typename:void
SystemPeriodic_shared_or_column	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_shared_or_column() {$/;"	f	typeref:typename:void
SystemPeriodic_sys_context	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_sys_context() {$/;"	f	typeref:typename:void
SystemPeriodic_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case SystemPeriodic_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
SystemPeriodic_two_refs	lib/flecs/test/api/src/SystemPeriodic.c	/^void SystemPeriodic_two_refs() {$/;"	f	typeref:typename:void
System_add_from_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_add_from_each() {$/;"	f	typeref:typename:void
System_add_from_each_world_handle	lib/flecs/test/cpp_api/src/System.cpp	/^void System_add_from_each_world_handle() {$/;"	f	typeref:typename:void
System_add_from_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_add_from_iter() {$/;"	f	typeref:typename:void
System_add_from_iter_world_handle	lib/flecs/test/cpp_api/src/System.cpp	/^void System_add_from_iter_world_handle() {$/;"	f	typeref:typename:void
System_copy_name_on_create	lib/flecs/test/cpp_api/src/System.cpp	/^void System_copy_name_on_create() {$/;"	f	typeref:typename:void
System_create_w_no_template_args	lib/flecs/test/cpp_api/src/System.cpp	/^void System_create_w_no_template_args() {$/;"	f	typeref:typename:void
System_custom_pipeline	lib/flecs/test/cpp_api/src/System.cpp	/^void System_custom_pipeline() {$/;"	f	typeref:typename:void
System_default_ctor	lib/flecs/test/cpp_api/src/System.cpp	/^void System_default_ctor() {$/;"	f	typeref:typename:void
System_delete_from_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_delete_from_each() {$/;"	f	typeref:typename:void
System_delete_from_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_delete_from_iter() {$/;"	f	typeref:typename:void
System_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_each() {$/;"	f	typeref:typename:void
System_each_const	lib/flecs/test/cpp_api/src/System.cpp	/^void System_each_const() {$/;"	f	typeref:typename:void
System_each_optional	lib/flecs/test/cpp_api/src/System.cpp	/^void System_each_optional() {$/;"	f	typeref:typename:void
System_each_shared	lib/flecs/test/cpp_api/src/System.cpp	/^void System_each_shared() {$/;"	f	typeref:typename:void
System_each_tag	lib/flecs/test/cpp_api/src/System.cpp	/^void System_each_tag() {$/;"	f	typeref:typename:void
System_each_w_mut_children_it	lib/flecs/test/cpp_api/src/System.cpp	/^void System_each_w_mut_children_it() {$/;"	f	typeref:typename:void
System_empty_signature	lib/flecs/test/cpp_api/src/System.cpp	/^void System_empty_signature() {$/;"	f	typeref:typename:void
System_get_query	lib/flecs/test/cpp_api/src/System.cpp	/^void System_get_query() {$/;"	f	typeref:typename:void
System_instanced_query_w_base_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_instanced_query_w_base_each() {$/;"	f	typeref:typename:void
System_instanced_query_w_base_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_instanced_query_w_base_iter() {$/;"	f	typeref:typename:void
System_instanced_query_w_singleton_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_instanced_query_w_singleton_each() {$/;"	f	typeref:typename:void
System_instanced_query_w_singleton_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_instanced_query_w_singleton_iter() {$/;"	f	typeref:typename:void
System_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_iter() {$/;"	f	typeref:typename:void
System_iter_const	lib/flecs/test/cpp_api/src/System.cpp	/^void System_iter_const() {$/;"	f	typeref:typename:void
System_iter_optional	lib/flecs/test/cpp_api/src/System.cpp	/^void System_iter_optional() {$/;"	f	typeref:typename:void
System_iter_shared	lib/flecs/test/cpp_api/src/System.cpp	/^void System_iter_shared() {$/;"	f	typeref:typename:void
System_iter_tag	lib/flecs/test/cpp_api/src/System.cpp	/^void System_iter_tag() {$/;"	f	typeref:typename:void
System_nested_system	lib/flecs/test/cpp_api/src/System.cpp	/^void System_nested_system() {$/;"	f	typeref:typename:void
System_new_from_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_new_from_each() {$/;"	f	typeref:typename:void
System_new_from_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_new_from_iter() {$/;"	f	typeref:typename:void
System_order_by_id	lib/flecs/test/cpp_api/src/System.cpp	/^void System_order_by_id() {$/;"	f	typeref:typename:void
System_order_by_id_after_create	lib/flecs/test/cpp_api/src/System.cpp	/^void System_order_by_id_after_create() {$/;"	f	typeref:typename:void
System_order_by_type	lib/flecs/test/cpp_api/src/System.cpp	/^void System_order_by_type() {$/;"	f	typeref:typename:void
System_order_by_type_after_create	lib/flecs/test/cpp_api/src/System.cpp	/^void System_order_by_type_after_create() {$/;"	f	typeref:typename:void
System_rate_filter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_rate_filter() {$/;"	f	typeref:typename:void
System_readonly_children_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_readonly_children_iter() {$/;"	f	typeref:typename:void
System_set_interval	lib/flecs/test/cpp_api/src/System.cpp	/^void System_set_interval() {$/;"	f	typeref:typename:void
System_signature	lib/flecs/test/cpp_api/src/System.cpp	/^void System_signature() {$/;"	f	typeref:typename:void
System_signature_const	lib/flecs/test/cpp_api/src/System.cpp	/^void System_signature_const() {$/;"	f	typeref:typename:void
System_signature_optional	lib/flecs/test/cpp_api/src/System.cpp	/^void System_signature_optional() {$/;"	f	typeref:typename:void
System_signature_shared	lib/flecs/test/cpp_api/src/System.cpp	/^void System_signature_shared() {$/;"	f	typeref:typename:void
System_system_from_id	lib/flecs/test/cpp_api/src/System.cpp	/^void System_system_from_id() {$/;"	f	typeref:typename:void
System_system_w_self	lib/flecs/test/cpp_api/src/System.cpp	/^void System_system_w_self() {$/;"	f	typeref:typename:void
System_system_w_type_kind	lib/flecs/test/cpp_api/src/System.cpp	/^void System_system_w_type_kind() {$/;"	f	typeref:typename:void
System_system_w_type_kind_type_pipeline	lib/flecs/test/cpp_api/src/System.cpp	/^void System_system_w_type_kind_type_pipeline() {$/;"	f	typeref:typename:void
System_test_auto_defer_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_test_auto_defer_each() {$/;"	f	typeref:typename:void
System_test_auto_defer_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_test_auto_defer_iter() {$/;"	f	typeref:typename:void
System_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case System_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
System_un_instanced_query_w_base_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_un_instanced_query_w_base_each() {$/;"	f	typeref:typename:void
System_un_instanced_query_w_base_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_un_instanced_query_w_base_iter() {$/;"	f	typeref:typename:void
System_un_instanced_query_w_singleton_each	lib/flecs/test/cpp_api/src/System.cpp	/^void System_un_instanced_query_w_singleton_each() {$/;"	f	typeref:typename:void
System_un_instanced_query_w_singleton_iter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_un_instanced_query_w_singleton_iter() {$/;"	f	typeref:typename:void
System_update_rate_filter	lib/flecs/test/cpp_api/src/System.cpp	/^void System_update_rate_filter() {$/;"	f	typeref:typename:void
System_w_Empty_2_column_1_from_id	lib/flecs/test/api/src/System_w_Empty.c	/^void System_w_Empty_2_column_1_from_id() {$/;"	f	typeref:typename:void
System_w_Empty_3_column_2_from_id	lib/flecs/test/api/src/System_w_Empty.c	/^void System_w_Empty_3_column_2_from_id() {$/;"	f	typeref:typename:void
System_w_Empty_column_type	lib/flecs/test/api/src/System_w_Empty.c	/^void System_w_Empty_column_type() {$/;"	f	typeref:typename:void
System_w_Empty_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case System_w_Empty_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
System_w_FromEntity_2_column_1_from_entity	lib/flecs/test/api/src/System_w_FromEntity.c	/^void System_w_FromEntity_2_column_1_from_entity() {$/;"	f	typeref:typename:void
System_w_FromEntity_task_from_entity	lib/flecs/test/api/src/System_w_FromEntity.c	/^void System_w_FromEntity_task_from_entity() {$/;"	f	typeref:typename:void
System_w_FromEntity_task_not_from_entity	lib/flecs/test/api/src/System_w_FromEntity.c	/^void System_w_FromEntity_task_not_from_entity() {$/;"	f	typeref:typename:void
System_w_FromEntity_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case System_w_FromEntity_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
System_w_FromParent_1_column_from_container	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_1_column_from_container() {$/;"	f	typeref:typename:void
System_w_FromParent_2_column_1_from_container	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_2_column_1_from_container() {$/;"	f	typeref:typename:void
System_w_FromParent_2_column_1_from_container_w_not	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_2_column_1_from_container_w_not() {$/;"	f	typeref:typename:void
System_w_FromParent_2_column_1_from_container_w_not_prefab	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_2_column_1_from_container_w_not_prefab() {$/;"	f	typeref:typename:void
System_w_FromParent_2_column_1_from_container_w_or	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_2_column_1_from_container_w_or() {$/;"	f	typeref:typename:void
System_w_FromParent_3_column_1_from_comtainer_1_from_container_w_not	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_3_column_1_from_comtainer_1_from_container_w_not() {$/;"	f	typeref:typename:void
System_w_FromParent_3_column_2_from_container	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_3_column_2_from_container() {$/;"	f	typeref:typename:void
System_w_FromParent_add_component_after_match	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_add_component_after_match() {$/;"	f	typeref:typename:void
System_w_FromParent_add_component_after_match_2_systems	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_add_component_after_match_2_systems() {$/;"	f	typeref:typename:void
System_w_FromParent_add_component_after_match_and_rematch	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_add_component_after_match_and_rematch() {$/;"	f	typeref:typename:void
System_w_FromParent_add_component_after_match_and_rematch_w_entity_type_expr	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_add_component_after_match_and_rematch_w_entity_type_expr() {$/;"	f	typeref:typename:void
System_w_FromParent_add_component_after_match_and_rematch_w_entity_type_expr_in_progress	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_add_component_after_match_and_rematch_w_entity_type_expr_in_progress() /;"	f	typeref:typename:void
System_w_FromParent_add_component_after_match_unmatch	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_add_component_after_match_unmatch() {$/;"	f	typeref:typename:void
System_w_FromParent_add_component_after_match_unmatch_match	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_add_component_after_match_unmatch_match() {$/;"	f	typeref:typename:void
System_w_FromParent_add_component_in_progress_after_match	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_add_component_in_progress_after_match() {$/;"	f	typeref:typename:void
System_w_FromParent_adopt_after_match	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_adopt_after_match() {$/;"	f	typeref:typename:void
System_w_FromParent_new_child_after_match	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_new_child_after_match() {$/;"	f	typeref:typename:void
System_w_FromParent_realloc_after_match	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_realloc_after_match() {$/;"	f	typeref:typename:void
System_w_FromParent_select_same_from_container	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_select_same_from_container() {$/;"	f	typeref:typename:void
System_w_FromParent_setup	lib/flecs/test/api/src/System_w_FromParent.c	/^void System_w_FromParent_setup() {$/;"	f	typeref:typename:void
System_w_FromParent_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case System_w_FromParent_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
System_w_FromSystem_2_column_1_from_system	lib/flecs/test/api/src/System_w_FromSystem.c	/^void System_w_FromSystem_2_column_1_from_system() {$/;"	f	typeref:typename:void
System_w_FromSystem_3_column_2_from_system	lib/flecs/test/api/src/System_w_FromSystem.c	/^void System_w_FromSystem_3_column_2_from_system() {$/;"	f	typeref:typename:void
System_w_FromSystem_auto_add_tag	lib/flecs/test/api/src/System_w_FromSystem.c	/^void System_w_FromSystem_auto_add_tag() {$/;"	f	typeref:typename:void
System_w_FromSystem_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case System_w_FromSystem_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_2_arrays_1_bool_1_i32	typeref:struct:ArrayTypes_2_arrays_1_bool_1_i32::__anon98b8c2480f08	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_2_arrays_1_i32_1_bool	typeref:struct:ArrayTypes_2_arrays_1_i32_1_bool::__anon98b8c2481008	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_8_arrays_bool_w_padded_member	typeref:struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_bool_1	typeref:struct:ArrayTypes_array_bool_1::__anon98b8c2480108	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_bool_1_before_i32_member	typeref:struct:ArrayTypes_array_bool_1_before_i32_member::__anon98b8c2480408	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_bool_2	typeref:struct:ArrayTypes_array_bool_2::__anon98b8c2480208	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_bool_2_before_i32_member	typeref:struct:ArrayTypes_array_bool_2_before_i32_member::__anon98b8c2480508	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_bool_3	typeref:struct:ArrayTypes_array_bool_3::__anon98b8c2480308	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_bool_3_before_i32_member	typeref:struct:ArrayTypes_array_bool_3_before_i32_member::__anon98b8c2480608	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_i32_3	typeref:struct:ArrayTypes_array_i32_3::__anon98b8c2480708	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_i32_3_before_i32_member	typeref:struct:ArrayTypes_array_i32_3_before_i32_member::__anon98b8c2480808	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_of_standaline_array_bool_1	typeref:struct:ArrayTypes_array_of_standaline_array_bool_1::__anon98b8c2481508	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_of_standaline_array_bool_2	typeref:struct:ArrayTypes_array_of_standaline_array_bool_2::__anon98b8c2481608	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_of_standaline_array_bool_3	typeref:struct:ArrayTypes_array_of_standaline_array_bool_3::__anon98b8c2481708	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_struct_array_bool_3	typeref:struct:ArrayTypes_array_struct_array_bool_3::__anon98b8c2480e08	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_struct_bool_3	typeref:struct:ArrayTypes_array_struct_bool_3::__anon98b8c2480a08	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_array_struct_bool_3_before_i32_member	typeref:struct:ArrayTypes_array_struct_bool_3_before_i32_member::__anon98b8c2480c08	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_standaline_array_bool_1	typeref:struct:ArrayTypes_standaline_array_bool_1::__anon98b8c2481208	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_standaline_array_bool_2	typeref:struct:ArrayTypes_standaline_array_bool_2::__anon98b8c2481308	file:
T	lib/flecs/test/meta/src/ArrayTypes.c	/^    } T;$/;"	t	function:ArrayTypes_standaline_array_bool_3	typeref:struct:ArrayTypes_standaline_array_bool_3::__anon98b8c2481408	file:
T	lib/flecs/test/meta/src/BitmaskTypes.c	/^    } T;$/;"	t	function:BitmaskTypes_struct_w_bitmask	typeref:struct:BitmaskTypes_struct_w_bitmask::__anon4ec5b3140108	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_2_nested_1_i32_2_i32	typeref:struct:Cursor_struct_2_nested_1_i32_2_i32::__anon23e81c320b08	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_2_nested_1_i32_i32_2_i32_i32	typeref:struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32::__anon23e81c320d08	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members	typeref:struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320f08	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_member_2_nested_i32_i32	typeref:struct:Cursor_struct_member_2_nested_i32_i32::__anon23e81c322108	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_member_2_nested_i32_i32_reverse	typeref:struct:Cursor_struct_member_2_nested_i32_i32_reverse::__anon23e81c322308	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_member_i32	typeref:struct:Cursor_struct_member_i32::__anon23e81c321b08	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_member_i32_i32	typeref:struct:Cursor_struct_member_i32_i32::__anon23e81c321c08	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_member_i32_i32_reverse	typeref:struct:Cursor_struct_member_i32_i32_reverse::__anon23e81c321d08	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_member_nested_i32_i32	typeref:struct:Cursor_struct_member_nested_i32_i32::__anon23e81c321f08	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_nested_i32	typeref:struct:Cursor_struct_nested_i32::__anon23e81c320908	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_2_array_i32_3	typeref:struct:Cursor_struct_set_2_array_i32_3::__anon23e81c321108	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_2_array_i32_3_w_padding_members	typeref:struct:Cursor_struct_set_2_array_i32_3_w_padding_members::__anon23e81c321208	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_2_array_w_struct_i32	typeref:struct:Cursor_struct_set_2_array_w_struct_i32::__anon23e81c321608	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_2_array_w_struct_w_array_i32	typeref:struct:Cursor_struct_set_2_array_w_struct_w_array_i32::__anon23e81c321a08	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_array_i32_3	typeref:struct:Cursor_struct_set_array_i32_3::__anon23e81c321008	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_array_w_struct_i32	typeref:struct:Cursor_struct_set_array_w_struct_i32::__anon23e81c321408	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_array_w_struct_w_array_i32	typeref:struct:Cursor_struct_set_array_w_struct_w_array_i32::__anon23e81c321808	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_bool	typeref:struct:Cursor_struct_set_bool::__anon23e81c320408	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_bool_bool	typeref:struct:Cursor_struct_set_bool_bool::__anon23e81c320508	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_bool_bool_bool	typeref:struct:Cursor_struct_set_bool_bool_bool::__anon23e81c320608	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_bool_bool_i32_bool	typeref:struct:Cursor_struct_set_bool_bool_i32_bool::__anon23e81c320708	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_i32	typeref:struct:Cursor_struct_set_i32::__anon23e81c320108	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_i32_i32	typeref:struct:Cursor_struct_set_i32_i32::__anon23e81c320208	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_set_i32_i32_i32	typeref:struct:Cursor_struct_set_i32_i32_i32::__anon23e81c320308	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_w_2_array_type_i32_i32	typeref:struct:Cursor_struct_w_2_array_type_i32_i32::__anon23e81c322708	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_w_2_array_type_struct	typeref:struct:Cursor_struct_w_2_array_type_struct::__anon23e81c322908	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_w_array_type_i32_i32	typeref:struct:Cursor_struct_w_array_type_i32_i32::__anon23e81c322408	file:
T	lib/flecs/test/meta/src/Cursor.c	/^    } T;$/;"	t	function:Cursor_struct_w_array_type_struct	typeref:struct:Cursor_struct_w_array_type_struct::__anon23e81c322608	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_enum	typeref:enum:DeserializeFromExpr_enum::__anon51c88b180103	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_2_nested_i32_i32	typeref:struct:DeserializeFromExpr_struct_2_nested_i32_i32::__anon51c88b180d08	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_bitmask	typeref:struct:DeserializeFromExpr_struct_bitmask::__anon51c88b180408	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_entity	typeref:struct:DeserializeFromExpr_struct_entity::__anon51c88b180708	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_enum	typeref:struct:DeserializeFromExpr_struct_enum::__anon51c88b180308	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_i32	typeref:struct:DeserializeFromExpr_struct_i32::__anon51c88b180508	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_i32_array_3	typeref:struct:DeserializeFromExpr_struct_i32_array_3::__anon51c88b181808	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_i32_i32	typeref:struct:DeserializeFromExpr_struct_i32_i32::__anon51c88b180608	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_member_2_nested_i32_i32	typeref:struct:DeserializeFromExpr_struct_member_2_nested_i32_i32::__anon51c88b181508	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse	typeref:struct:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse::__anon51c88b181708	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_member_i32	typeref:struct:DeserializeFromExpr_struct_member_i32::__anon51c88b180e08	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_member_i32_i32	typeref:struct:DeserializeFromExpr_struct_member_i32_i32::__anon51c88b180f08	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_member_nested_i32	typeref:struct:DeserializeFromExpr_struct_member_nested_i32::__anon51c88b181108	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_member_nested_i32_i32	typeref:struct:DeserializeFromExpr_struct_member_nested_i32_i32::__anon51c88b181308	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_nested_i32	typeref:struct:DeserializeFromExpr_struct_nested_i32::__anon51c88b180908	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_nested_i32_i32	typeref:struct:DeserializeFromExpr_struct_nested_i32_i32::__anon51c88b180b08	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_struct_i32_array_3	typeref:struct:DeserializeFromExpr_struct_struct_i32_array_3::__anon51c88b181a08	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_struct_i32_i32_array_3	typeref:struct:DeserializeFromExpr_struct_struct_i32_i32_array_3::__anon51c88b181c08	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_w_2_array_type_i32_i32	typeref:struct:DeserializeFromExpr_struct_w_2_array_type_i32_i32::__anon51c88b181e08	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_w_2_array_type_struct	typeref:struct:DeserializeFromExpr_struct_w_2_array_type_struct::__anon51c88b182208	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_w_array_type_i32_i32	typeref:struct:DeserializeFromExpr_struct_w_array_type_i32_i32::__anon51c88b181d08	file:
T	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    } T;$/;"	t	function:DeserializeFromExpr_struct_w_array_type_struct	typeref:struct:DeserializeFromExpr_struct_w_array_type_struct::__anon51c88b182008	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_2_nested_i32_i32	typeref:struct:DeserializeFromJson_struct_2_nested_i32_i32::__anon5d173e531e08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_bitmask	typeref:struct:DeserializeFromJson_struct_bitmask::__anon5d173e531708	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_bool	typeref:struct:DeserializeFromJson_struct_bool::__anon5d173e530108	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_byte	typeref:struct:DeserializeFromJson_struct_byte::__anon5d173e530208	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_char	typeref:struct:DeserializeFromJson_struct_char::__anon5d173e530308	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_char_literal	typeref:struct:DeserializeFromJson_struct_char_literal::__anon5d173e530408	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_double	typeref:struct:DeserializeFromJson_struct_double::__anon5d173e531008	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_entity	typeref:struct:DeserializeFromJson_struct_entity::__anon5d173e531408	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_enum	typeref:struct:DeserializeFromJson_struct_enum::__anon5d173e531608	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_float	typeref:struct:DeserializeFromJson_struct_float::__anon5d173e530f08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_i16	typeref:struct:DeserializeFromJson_struct_i16::__anon5d173e530608	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_i32	typeref:struct:DeserializeFromJson_struct_i32::__anon5d173e530708	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_i32_array_3	typeref:struct:DeserializeFromJson_struct_i32_array_3::__anon5d173e531f08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_i32_i32	typeref:struct:DeserializeFromJson_struct_i32_i32::__anon5d173e531808	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_i64	typeref:struct:DeserializeFromJson_struct_i64::__anon5d173e530808	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_i8	typeref:struct:DeserializeFromJson_struct_i8::__anon5d173e530508	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_iptr	typeref:struct:DeserializeFromJson_struct_iptr::__anon5d173e530908	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_negative_float	typeref:struct:DeserializeFromJson_struct_negative_float::__anon5d173e531208	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_negative_int	typeref:struct:DeserializeFromJson_struct_negative_int::__anon5d173e531108	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_nested_i32	typeref:struct:DeserializeFromJson_struct_nested_i32::__anon5d173e531a08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_nested_i32_i32	typeref:struct:DeserializeFromJson_struct_nested_i32_i32::__anon5d173e531c08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_string	typeref:struct:DeserializeFromJson_struct_string::__anon5d173e531308	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_struct_i32_array_3	typeref:struct:DeserializeFromJson_struct_struct_i32_array_3::__anon5d173e532108	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_struct_i32_i32_array_3	typeref:struct:DeserializeFromJson_struct_struct_i32_i32_array_3::__anon5d173e532308	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_u16	typeref:struct:DeserializeFromJson_struct_u16::__anon5d173e530b08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_u32	typeref:struct:DeserializeFromJson_struct_u32::__anon5d173e530c08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_u64	typeref:struct:DeserializeFromJson_struct_u64::__anon5d173e530d08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_u8	typeref:struct:DeserializeFromJson_struct_u8::__anon5d173e530a08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_uptr	typeref:struct:DeserializeFromJson_struct_uptr::__anon5d173e530e08	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_w_2_array_type_i32_i32	typeref:struct:DeserializeFromJson_struct_w_2_array_type_i32_i32::__anon5d173e532508	file:
T	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    } T;$/;"	t	function:DeserializeFromJson_struct_w_array_type_i32_i32	typeref:struct:DeserializeFromJson_struct_w_array_type_i32_i32::__anon5d173e532408	file:
T	lib/flecs/test/meta/src/EnumTypes.c	/^    } T;$/;"	t	function:EnumTypes_struct_w_enum	typeref:struct:EnumTypes_struct_w_enum::__anon4354dcde0108	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool	typeref:struct:NestedStructTypes_1_bool::__anon3cdfa8510208	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_2_bool	typeref:struct:NestedStructTypes_1_bool_2_bool::__anon3cdfa8511008	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_2_bool_bool	typeref:struct:NestedStructTypes_1_bool_2_bool_bool::__anon3cdfa8511908	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_2_i32	typeref:struct:NestedStructTypes_1_bool_2_i32::__anon3cdfa8511308	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_2_same	typeref:struct:NestedStructTypes_1_bool_2_same::__anon3cdfa8510e08	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_bool_2_bool	typeref:struct:NestedStructTypes_1_bool_bool_2_bool::__anon3cdfa8511c08	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_bool_2_bool_bool	typeref:struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8512108	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_bool_2_same	typeref:struct:NestedStructTypes_1_bool_bool_2_same::__anon3cdfa8511e08	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_w_bool_member	typeref:struct:NestedStructTypes_1_bool_w_bool_member::__anon3cdfa8510608	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_bool_w_int32_member	typeref:struct:NestedStructTypes_1_bool_w_int32_member::__anon3cdfa8510808	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_i32_2_bool	typeref:struct:NestedStructTypes_1_i32_2_bool::__anon3cdfa8511608	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_i32_2_i32	typeref:struct:NestedStructTypes_1_i32_2_i32::__anon3cdfa8512608	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_i32_2_i32_i32	typeref:struct:NestedStructTypes_1_i32_2_i32_i32::__anon3cdfa8512908	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_i32_2_same	typeref:struct:NestedStructTypes_1_i32_2_same::__anon3cdfa8512308	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_i32_i32_2_i32	typeref:struct:NestedStructTypes_1_i32_i32_2_i32::__anon3cdfa8512c08	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_i32_i32_2_i32_i32	typeref:struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8513108	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_i32_i32_2_same	typeref:struct:NestedStructTypes_1_i32_i32_2_same::__anon3cdfa8512e08	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_int32	typeref:struct:NestedStructTypes_1_int32::__anon3cdfa8510408	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_int32_w_bool_member	typeref:struct:NestedStructTypes_1_int32_w_bool_member::__anon3cdfa8510a08	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_1_int32_w_int32_member	typeref:struct:NestedStructTypes_1_int32_w_int32_member::__anon3cdfa8510c08	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_2_lvls_bool	typeref:struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513608	file:
T	lib/flecs/test/meta/src/NestedStructTypes.c	/^    } T;$/;"	t	function:NestedStructTypes_2_lvls_bool_bool	typeref:struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513b08	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_entity_entity_after_float	typeref:struct:SerializeToExpr_entity_entity_after_float::__anon35ed1d3e0808	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_enum	typeref:enum:SerializeToExpr_enum::__anon35ed1d3e0103	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_2_nested_i32_i32	typeref:struct:SerializeToExpr_struct_2_nested_i32_i32::__anon35ed1d3e0e08	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_bitmask	typeref:struct:SerializeToExpr_struct_bitmask::__anon35ed1d3e0408	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_entity	typeref:struct:SerializeToExpr_struct_entity::__anon35ed1d3e0708	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_enum	typeref:struct:SerializeToExpr_struct_enum::__anon35ed1d3e0308	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_i32	typeref:struct:SerializeToExpr_struct_i32::__anon35ed1d3e0508	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_i32_array_3	typeref:struct:SerializeToExpr_struct_i32_array_3::__anon35ed1d3e0f08	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_i32_i32	typeref:struct:SerializeToExpr_struct_i32_i32::__anon35ed1d3e0608	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_nested_i32	typeref:struct:SerializeToExpr_struct_nested_i32::__anon35ed1d3e0a08	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_nested_i32_i32	typeref:struct:SerializeToExpr_struct_nested_i32_i32::__anon35ed1d3e0c08	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_struct_i32_array_3	typeref:struct:SerializeToExpr_struct_struct_i32_array_3::__anon35ed1d3e1108	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_struct_i32_i32_array_3	typeref:struct:SerializeToExpr_struct_struct_i32_i32_array_3::__anon35ed1d3e1308	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_w_2_array_type_i32_i32	typeref:struct:SerializeToExpr_struct_w_2_array_type_i32_i32::__anon35ed1d3e1508	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_w_2_array_type_struct	typeref:struct:SerializeToExpr_struct_w_2_array_type_struct::__anon35ed1d3e1908	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_w_array_type_i32_i32	typeref:struct:SerializeToExpr_struct_w_array_type_i32_i32::__anon35ed1d3e1408	file:
T	lib/flecs/test/meta/src/SerializeToExpr.c	/^    } T;$/;"	t	function:SerializeToExpr_struct_w_array_type_struct	typeref:struct:SerializeToExpr_struct_w_array_type_struct::__anon35ed1d3e1708	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_serialize_entity_w_type_info_unit	typeref:struct:SerializeToJson_serialize_entity_w_type_info_unit::__anon413bd0792c08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_serialize_entity_w_type_info_unit_over	typeref:struct:SerializeToJson_serialize_entity_w_type_info_unit_over::__anon413bd0792e08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_serialize_entity_w_type_info_unit_quantity	typeref:struct:SerializeToJson_serialize_entity_w_type_info_unit_quantity::__anon413bd0792d08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_serialize_iterator_type_info_w_unit	typeref:struct:SerializeToJson_serialize_iterator_type_info_w_unit::__anon413bd0792f08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_serialize_iterator_type_info_w_unit_over	typeref:struct:SerializeToJson_serialize_iterator_type_info_w_unit_over::__anon413bd0793108	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_serialize_iterator_type_info_w_unit_quantity	typeref:struct:SerializeToJson_serialize_iterator_type_info_w_unit_quantity::__anon413bd0793008	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_serialize_iterator_w_var_component	typeref:struct:SerializeToJson_serialize_iterator_w_var_component::__anon413bd0793208	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_2_nested_i32_i32	typeref:struct:SerializeToJson_struct_2_nested_i32_i32::__anon413bd0792108	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_bitmask	typeref:struct:SerializeToJson_struct_bitmask::__anon413bd0791a08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_bool	typeref:struct:SerializeToJson_struct_bool::__anon413bd0790108	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_byte	typeref:struct:SerializeToJson_struct_byte::__anon413bd0790208	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_char	typeref:struct:SerializeToJson_struct_char::__anon413bd0790308	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_double	typeref:struct:SerializeToJson_struct_double::__anon413bd0791108	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_double_inf	typeref:struct:SerializeToJson_struct_double_inf::__anon413bd0791308	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_double_large	typeref:struct:SerializeToJson_struct_double_large::__anon413bd0791408	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_double_nan	typeref:struct:SerializeToJson_struct_double_nan::__anon413bd0791208	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_entity	typeref:struct:SerializeToJson_struct_entity::__anon413bd0791608	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_entity_after_float	typeref:struct:SerializeToJson_struct_entity_after_float::__anon413bd0791708	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_enum	typeref:struct:SerializeToJson_struct_enum::__anon413bd0791908	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_float	typeref:struct:SerializeToJson_struct_float::__anon413bd0790e08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_float_inf	typeref:struct:SerializeToJson_struct_float_inf::__anon413bd0791008	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_float_nan	typeref:struct:SerializeToJson_struct_float_nan::__anon413bd0790f08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_i16	typeref:struct:SerializeToJson_struct_i16::__anon413bd0790508	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_i32	typeref:struct:SerializeToJson_struct_i32::__anon413bd0790608	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_i32_array_3	typeref:struct:SerializeToJson_struct_i32_array_3::__anon413bd0792208	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_i32_i32	typeref:struct:SerializeToJson_struct_i32_i32::__anon413bd0791b08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_i64	typeref:struct:SerializeToJson_struct_i64::__anon413bd0790708	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_i8	typeref:struct:SerializeToJson_struct_i8::__anon413bd0790408	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_iptr	typeref:struct:SerializeToJson_struct_iptr::__anon413bd0790808	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_nested_i32	typeref:struct:SerializeToJson_struct_nested_i32::__anon413bd0791d08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_nested_i32_i32	typeref:struct:SerializeToJson_struct_nested_i32_i32::__anon413bd0791f08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_string	typeref:struct:SerializeToJson_struct_string::__anon413bd0791508	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_struct_i32_array_3	typeref:struct:SerializeToJson_struct_struct_i32_array_3::__anon413bd0792408	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_struct_i32_i32_array_3	typeref:struct:SerializeToJson_struct_struct_i32_i32_array_3::__anon413bd0792608	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_u16	typeref:struct:SerializeToJson_struct_u16::__anon413bd0790a08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_u32	typeref:struct:SerializeToJson_struct_u32::__anon413bd0790b08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_u64	typeref:struct:SerializeToJson_struct_u64::__anon413bd0790c08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_u8	typeref:struct:SerializeToJson_struct_u8::__anon413bd0790908	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_uptr	typeref:struct:SerializeToJson_struct_uptr::__anon413bd0790d08	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_w_2_array_type_i32_i32	typeref:struct:SerializeToJson_struct_w_2_array_type_i32_i32::__anon413bd0792808	file:
T	lib/flecs/test/meta/src/SerializeToJson.c	/^    } T;$/;"	t	function:SerializeToJson_struct_w_array_type_i32_i32	typeref:struct:SerializeToJson_struct_w_array_type_i32_i32::__anon413bd0792708	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003308	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003808	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_2_lvls_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002408	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_2_lvls_bool_bool	typeref:struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002908	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	typeref:struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002e08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_bool	typeref:struct:Serialized_ops_nested_struct_1_bool::__anond4af8f000808	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_bool_2_bool	typeref:struct:Serialized_ops_nested_struct_1_bool_2_bool::__anond4af8f001008	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32	typeref:struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001908	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool	typeref:struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001f08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_bool_w_bool_member	typeref:struct:Serialized_ops_nested_struct_1_bool_w_bool_member::__anond4af8f000c08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_bool_w_i32_member	typeref:struct:Serialized_ops_nested_struct_1_bool_w_i32_member::__anond4af8f000e08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_i32	typeref:struct:Serialized_ops_nested_struct_1_i32::__anond4af8f000a08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_i32_2_bool	typeref:struct:Serialized_ops_nested_struct_1_i32_2_bool::__anond4af8f001308	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32	typeref:struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001c08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool	typeref:struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001608	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_standalone_array_bool_1	typeref:struct:Serialized_ops_standalone_array_bool_1::__anond4af8f004108	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_standalone_array_bool_1_w_bool_after	typeref:struct:Serialized_ops_standalone_array_bool_1_w_bool_after::__anond4af8f004408	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_standalone_array_bool_2	typeref:struct:Serialized_ops_standalone_array_bool_2::__anond4af8f004208	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_standalone_array_bool_2_w_bool_after	typeref:struct:Serialized_ops_standalone_array_bool_2_w_bool_after::__anond4af8f004508	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_standalone_array_bool_3	typeref:struct:Serialized_ops_standalone_array_bool_3::__anond4af8f004308	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_standalone_array_bool_3_w_bool_after	typeref:struct:Serialized_ops_standalone_array_bool_3_w_bool_after::__anond4af8f004608	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_array_bool_1	typeref:struct:Serialized_ops_struct_array_bool_1::__anond4af8f003908	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_array_bool_1_w_i32_after	typeref:struct:Serialized_ops_struct_array_bool_1_w_i32_after::__anond4af8f003c08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_array_bool_2	typeref:struct:Serialized_ops_struct_array_bool_2::__anond4af8f003a08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_array_bool_2_w_i32_after	typeref:struct:Serialized_ops_struct_array_bool_2_w_i32_after::__anond4af8f003d08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_array_bool_3	typeref:struct:Serialized_ops_struct_array_bool_3::__anond4af8f003b08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_array_bool_3_w_i32_after	typeref:struct:Serialized_ops_struct_array_bool_3_w_i32_after::__anond4af8f003e08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_array_struct_bool_3_w_i32_after	typeref:struct:Serialized_ops_struct_array_struct_bool_3_w_i32_after::__anond4af8f004008	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_bool	typeref:struct:Serialized_ops_struct_bool::__anond4af8f000108	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_bool_bool	typeref:struct:Serialized_ops_struct_bool_bool::__anond4af8f000208	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_bool_i32	typeref:struct:Serialized_ops_struct_bool_i32::__anond4af8f000608	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_i32	typeref:struct:Serialized_ops_struct_i32::__anond4af8f000308	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_i32_bool	typeref:struct:Serialized_ops_struct_i32_bool::__anond4af8f000508	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_i32_i32	typeref:struct:Serialized_ops_struct_i32_i32::__anond4af8f000408	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_w_bitmask	typeref:struct:Serialized_ops_struct_w_bitmask::__anond4af8f004a08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_w_enum	typeref:struct:Serialized_ops_struct_w_enum::__anond4af8f004b08	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_w_vector	typeref:struct:Serialized_ops_struct_w_vector::__anond4af8f004708	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_w_vector_w_bool_after	typeref:struct:Serialized_ops_struct_w_vector_w_bool_after::__anond4af8f004908	file:
T	lib/flecs/test/meta/src/Serialized.c	/^    } T;$/;"	t	function:Serialized_ops_struct_w_vector_w_bool_before	typeref:struct:Serialized_ops_struct_w_vector_w_bool_before::__anond4af8f004808	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_bool_bool_i32	typeref:struct:StructTypes_bool_bool_i32::__anon7256d2ce0508	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_bool_i32	typeref:struct:StructTypes_bool_i32::__anon7256d2ce0408	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_bool_i32_bool_i32	typeref:struct:StructTypes_bool_i32_bool_i32::__anon7256d2ce0608	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_i32	typeref:struct:StructTypes_i32::__anon7256d2ce0108	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_i32_bool	typeref:struct:StructTypes_i32_bool::__anon7256d2ce0708	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_i32_bool_bool	typeref:struct:StructTypes_i32_bool_bool::__anon7256d2ce0808	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_i32_bool_bool_bool	typeref:struct:StructTypes_i32_bool_bool_bool::__anon7256d2ce0908	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_i32_i32	typeref:struct:StructTypes_i32_i32::__anon7256d2ce0208	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_i32_i32_i32	typeref:struct:StructTypes_i32_i32_i32::__anon7256d2ce0308	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_i32_i64	typeref:struct:StructTypes_i32_i64::__anon7256d2ce0a08	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_i32_i64_i32	typeref:struct:StructTypes_i32_i64_i32::__anon7256d2ce0b08	file:
T	lib/flecs/test/meta/src/StructTypes.c	/^    } T;$/;"	t	function:StructTypes_incomplete_member	typeref:struct:StructTypes_incomplete_member::__anon7256d2ce0c08	file:
TARGET_FPS_BAKE_CONFIG_H	lib/flecs/examples/c/systems/target_fps/include/target_fps/bake_config.h	/^#define TARGET_FPS_BAKE_CONFIG_H$/;"	d
TARGET_FPS_BAKE_CONFIG_H	lib/flecs/examples/cpp/systems/target_fps/include/target_fps/bake_config.h	/^#define TARGET_FPS_BAKE_CONFIG_H$/;"	d
TARGET_FPS_H	lib/flecs/examples/c/systems/target_fps/include/target_fps.h	/^#define TARGET_FPS_H$/;"	d
TARGET_FPS_H	lib/flecs/examples/cpp/systems/target_fps/include/target_fps.h	/^#define TARGET_FPS_H$/;"	d
TARGET_NAME	lib/flecs/examples/CMakeLists.txt	/^    set(TARGET_NAME example_${PARENT}_${NAME})$/;"	v
TARGET_NAME_STATIC	lib/flecs/examples/CMakeLists.txt	/^    set(TARGET_NAME_STATIC example_${PARENT}_${NAME}_static)$/;"	v
TARGET_PATH	lib/flecs/examples/CMakeLists.txt	/^    set(TARGET_PATH ${CMAKE_CURRENT_SOURCE_DIR}\/${PARENT}\/${NAME})$/;"	v
TERMINAL_API	include/BearLibTerminal.h	/^#    define TERMINAL_API /;"	d
TERMINAL_API	include/BearLibTerminal.h	/^#    define TERMINAL_API$/;"	d
TERMINAL_API	include/BearLibTerminal.h	/^#  define TERMINAL_API$/;"	d
TERMINAL_CAT	include/BearLibTerminal.h	/^#define TERMINAL_CAT(/;"	d
TERMINAL_DEFAULT	include/BearLibTerminal.h	/^#define TERMINAL_DEFAULT(/;"	d
TERMINAL_FORMATTED_WRAP	include/BearLibTerminal.h	/^#define TERMINAL_FORMATTED_WRAP(/;"	d
TERMINAL_FORMATTED_WRAP_V	include/BearLibTerminal.h	/^#define TERMINAL_FORMATTED_WRAP_V(/;"	d
TERMINAL_INLINE	include/BearLibTerminal.h	/^#define TERMINAL_INLINE /;"	d
TERMINAL_PRIMITIVE_CAT	include/BearLibTerminal.h	/^#define TERMINAL_PRIMITIVE_CAT(/;"	d
TERMINAL_TAKE_CARE_OF_WINMAIN	include/BearLibTerminal.h	/^#define TERMINAL_TAKE_CARE_OF_WINMAIN /;"	d
TERMINAL_TAKE_CARE_OF_WINMAIN	include/BearLibTerminal.h	/^#define TERMINAL_TAKE_CARE_OF_WINMAIN$/;"	d
TERMINAL_VSPRINTF_MAXIMUM_BUFFER_SIZE	include/BearLibTerminal.h	/^#define TERMINAL_VSPRINTF_MAXIMUM_BUFFER_SIZE /;"	d
TERMINAL_WCHAR_SUFFIX	include/BearLibTerminal.h	/^#define TERMINAL_WCHAR_SUFFIX /;"	d
TERMINAL_WCHAR_TYPE	include/BearLibTerminal.h	/^#define TERMINAL_WCHAR_TYPE /;"	d
TERMINAL_WINMAIN_IMPL	include/BearLibTerminal.h	/^#define TERMINAL_WINMAIN_IMPL /;"	d
TERMINAL_WINMAIN_IMPL_BASE	include/BearLibTerminal.h	/^#define TERMINAL_WINMAIN_IMPL_BASE(/;"	d
TERMINAL_WINMAIN_IMPL_WINDOWS_	include/BearLibTerminal.h	/^#define TERMINAL_WINMAIN_IMPL_WINDOWS_ /;"	d
TERMINAL_WINMAIN_PROBE_IMPL	include/BearLibTerminal.h	/^#define TERMINAL_WINMAIN_PROBE_IMPL(/;"	d
TESTS	lib/uthash/tests/Makefile	/^  TESTS=.\/do_tests.cygwin$/;"	m
TESTS	lib/uthash/tests/Makefile	/^  TESTS=.\/do_tests.mingw$/;"	m
TESTS	lib/uthash/tests/Makefile	/^TESTS=.\/do_tests$/;"	m
TEST_TARGET	lib/uthash/tests/Makefile	/^  TEST_TARGET=run_tests_mingw$/;"	m
TEST_TARGET	lib/uthash/tests/Makefile	/^TEST_TARGET=run_tests$/;"	m
TILE_DISCOVERED	include/mapping/map.h	/^    TILE_DISCOVERED = 1 << 2,$/;"	e	enum:Tile
TILE_NONE	include/mapping/map.h	/^    TILE_NONE = 0,$/;"	e	enum:Tile
TILE_VISIBLE	include/mapping/map.h	/^    TILE_VISIBLE = 1 << 1,$/;"	e	enum:Tile
TILE_WALKABLE	include/mapping/map.h	/^    TILE_WALKABLE = 1 << 0,$/;"	e	enum:Tile
TIMER_BAKE_CONFIG_H	lib/flecs/test/custom_builds/c/timer/include/timer/bake_config.h	/^#define TIMER_BAKE_CONFIG_H$/;"	d
TIMER_BAKE_CONFIG_H	lib/flecs/test/custom_builds/cpp/timer/include/timer/bake_config.h	/^#define TIMER_BAKE_CONFIG_H$/;"	d
TIMER_H	lib/flecs/test/custom_builds/c/timer/include/timer.h	/^#define TIMER_H$/;"	d
TIMER_H	lib/flecs/test/custom_builds/cpp/timer/include/timer.h	/^#define TIMER_H$/;"	d
TK_0	include/BearLibTerminal.h	/^#define TK_0 /;"	d
TK_1	include/BearLibTerminal.h	/^#define TK_1 /;"	d
TK_2	include/BearLibTerminal.h	/^#define TK_2 /;"	d
TK_3	include/BearLibTerminal.h	/^#define TK_3 /;"	d
TK_4	include/BearLibTerminal.h	/^#define TK_4 /;"	d
TK_5	include/BearLibTerminal.h	/^#define TK_5 /;"	d
TK_6	include/BearLibTerminal.h	/^#define TK_6 /;"	d
TK_7	include/BearLibTerminal.h	/^#define TK_7 /;"	d
TK_8	include/BearLibTerminal.h	/^#define TK_8 /;"	d
TK_9	include/BearLibTerminal.h	/^#define TK_9 /;"	d
TK_A	include/BearLibTerminal.h	/^#define TK_A /;"	d
TK_ALIGN_BOTTOM	include/BearLibTerminal.h	/^#define TK_ALIGN_BOTTOM /;"	d
TK_ALIGN_CENTER	include/BearLibTerminal.h	/^#define TK_ALIGN_CENTER /;"	d
TK_ALIGN_DEFAULT	include/BearLibTerminal.h	/^#define TK_ALIGN_DEFAULT /;"	d
TK_ALIGN_LEFT	include/BearLibTerminal.h	/^#define TK_ALIGN_LEFT /;"	d
TK_ALIGN_MIDDLE	include/BearLibTerminal.h	/^#define TK_ALIGN_MIDDLE /;"	d
TK_ALIGN_RIGHT	include/BearLibTerminal.h	/^#define TK_ALIGN_RIGHT /;"	d
TK_ALIGN_TOP	include/BearLibTerminal.h	/^#define TK_ALIGN_TOP /;"	d
TK_ALT	include/BearLibTerminal.h	/^#define TK_ALT /;"	d
TK_APOSTROPHE	include/BearLibTerminal.h	/^#define TK_APOSTROPHE /;"	d
TK_B	include/BearLibTerminal.h	/^#define TK_B /;"	d
TK_BACKSLASH	include/BearLibTerminal.h	/^#define TK_BACKSLASH /;"	d
TK_BACKSPACE	include/BearLibTerminal.h	/^#define TK_BACKSPACE /;"	d
TK_BKCOLOR	include/BearLibTerminal.h	/^#define TK_BKCOLOR /;"	d
TK_C	include/BearLibTerminal.h	/^#define TK_C /;"	d
TK_CELL_HEIGHT	include/BearLibTerminal.h	/^#define TK_CELL_HEIGHT /;"	d
TK_CELL_WIDTH	include/BearLibTerminal.h	/^#define TK_CELL_WIDTH /;"	d
TK_CHAR	include/BearLibTerminal.h	/^#define TK_CHAR /;"	d
TK_CLOSE	include/BearLibTerminal.h	/^#define TK_CLOSE /;"	d
TK_COLOR	include/BearLibTerminal.h	/^#define TK_COLOR /;"	d
TK_COMMA	include/BearLibTerminal.h	/^#define TK_COMMA /;"	d
TK_COMPOSITION	include/BearLibTerminal.h	/^#define TK_COMPOSITION /;"	d
TK_CONTROL	include/BearLibTerminal.h	/^#define TK_CONTROL /;"	d
TK_D	include/BearLibTerminal.h	/^#define TK_D /;"	d
TK_DELETE	include/BearLibTerminal.h	/^#define TK_DELETE /;"	d
TK_DOWN	include/BearLibTerminal.h	/^#define TK_DOWN /;"	d
TK_E	include/BearLibTerminal.h	/^#define TK_E /;"	d
TK_END	include/BearLibTerminal.h	/^#define TK_END /;"	d
TK_ENTER	include/BearLibTerminal.h	/^#define TK_ENTER /;"	d
TK_EQUALS	include/BearLibTerminal.h	/^#define TK_EQUALS /;"	d
TK_ESCAPE	include/BearLibTerminal.h	/^#define TK_ESCAPE /;"	d
TK_EVENT	include/BearLibTerminal.h	/^#define TK_EVENT /;"	d
TK_F	include/BearLibTerminal.h	/^#define TK_F /;"	d
TK_F1	include/BearLibTerminal.h	/^#define TK_F1 /;"	d
TK_F10	include/BearLibTerminal.h	/^#define TK_F10 /;"	d
TK_F11	include/BearLibTerminal.h	/^#define TK_F11 /;"	d
TK_F12	include/BearLibTerminal.h	/^#define TK_F12 /;"	d
TK_F2	include/BearLibTerminal.h	/^#define TK_F2 /;"	d
TK_F3	include/BearLibTerminal.h	/^#define TK_F3 /;"	d
TK_F4	include/BearLibTerminal.h	/^#define TK_F4 /;"	d
TK_F5	include/BearLibTerminal.h	/^#define TK_F5 /;"	d
TK_F6	include/BearLibTerminal.h	/^#define TK_F6 /;"	d
TK_F7	include/BearLibTerminal.h	/^#define TK_F7 /;"	d
TK_F8	include/BearLibTerminal.h	/^#define TK_F8 /;"	d
TK_F9	include/BearLibTerminal.h	/^#define TK_F9 /;"	d
TK_FULLSCREEN	include/BearLibTerminal.h	/^#define TK_FULLSCREEN /;"	d
TK_G	include/BearLibTerminal.h	/^#define TK_G /;"	d
TK_GRAVE	include/BearLibTerminal.h	/^#define TK_GRAVE /;"	d
TK_H	include/BearLibTerminal.h	/^#define TK_H /;"	d
TK_HEIGHT	include/BearLibTerminal.h	/^#define TK_HEIGHT /;"	d
TK_HOME	include/BearLibTerminal.h	/^#define TK_HOME /;"	d
TK_I	include/BearLibTerminal.h	/^#define TK_I /;"	d
TK_INPUT_CANCELLED	include/BearLibTerminal.h	/^#define TK_INPUT_CANCELLED /;"	d
TK_INPUT_NONE	include/BearLibTerminal.h	/^#define TK_INPUT_NONE /;"	d
TK_INSERT	include/BearLibTerminal.h	/^#define TK_INSERT /;"	d
TK_J	include/BearLibTerminal.h	/^#define TK_J /;"	d
TK_K	include/BearLibTerminal.h	/^#define TK_K /;"	d
TK_KEY_RELEASED	include/BearLibTerminal.h	/^#define TK_KEY_RELEASED /;"	d
TK_KP_0	include/BearLibTerminal.h	/^#define TK_KP_0 /;"	d
TK_KP_1	include/BearLibTerminal.h	/^#define TK_KP_1 /;"	d
TK_KP_2	include/BearLibTerminal.h	/^#define TK_KP_2 /;"	d
TK_KP_3	include/BearLibTerminal.h	/^#define TK_KP_3 /;"	d
TK_KP_4	include/BearLibTerminal.h	/^#define TK_KP_4 /;"	d
TK_KP_5	include/BearLibTerminal.h	/^#define TK_KP_5 /;"	d
TK_KP_6	include/BearLibTerminal.h	/^#define TK_KP_6 /;"	d
TK_KP_7	include/BearLibTerminal.h	/^#define TK_KP_7 /;"	d
TK_KP_8	include/BearLibTerminal.h	/^#define TK_KP_8 /;"	d
TK_KP_9	include/BearLibTerminal.h	/^#define TK_KP_9 /;"	d
TK_KP_DIVIDE	include/BearLibTerminal.h	/^#define TK_KP_DIVIDE /;"	d
TK_KP_ENTER	include/BearLibTerminal.h	/^#define TK_KP_ENTER /;"	d
TK_KP_MINUS	include/BearLibTerminal.h	/^#define TK_KP_MINUS /;"	d
TK_KP_MULTIPLY	include/BearLibTerminal.h	/^#define TK_KP_MULTIPLY /;"	d
TK_KP_PERIOD	include/BearLibTerminal.h	/^#define TK_KP_PERIOD /;"	d
TK_KP_PLUS	include/BearLibTerminal.h	/^#define TK_KP_PLUS /;"	d
TK_L	include/BearLibTerminal.h	/^#define TK_L /;"	d
TK_LAYER	include/BearLibTerminal.h	/^#define TK_LAYER /;"	d
TK_LBRACKET	include/BearLibTerminal.h	/^#define TK_LBRACKET /;"	d
TK_LEFT	include/BearLibTerminal.h	/^#define TK_LEFT /;"	d
TK_M	include/BearLibTerminal.h	/^#define TK_M /;"	d
TK_MINUS	include/BearLibTerminal.h	/^#define TK_MINUS /;"	d
TK_MOUSE_CLICKS	include/BearLibTerminal.h	/^#define TK_MOUSE_CLICKS /;"	d
TK_MOUSE_LEFT	include/BearLibTerminal.h	/^#define TK_MOUSE_LEFT /;"	d
TK_MOUSE_MIDDLE	include/BearLibTerminal.h	/^#define TK_MOUSE_MIDDLE /;"	d
TK_MOUSE_MOVE	include/BearLibTerminal.h	/^#define TK_MOUSE_MOVE /;"	d
TK_MOUSE_PIXEL_X	include/BearLibTerminal.h	/^#define TK_MOUSE_PIXEL_X /;"	d
TK_MOUSE_PIXEL_Y	include/BearLibTerminal.h	/^#define TK_MOUSE_PIXEL_Y /;"	d
TK_MOUSE_RIGHT	include/BearLibTerminal.h	/^#define TK_MOUSE_RIGHT /;"	d
TK_MOUSE_SCROLL	include/BearLibTerminal.h	/^#define TK_MOUSE_SCROLL /;"	d
TK_MOUSE_WHEEL	include/BearLibTerminal.h	/^#define TK_MOUSE_WHEEL /;"	d
TK_MOUSE_X	include/BearLibTerminal.h	/^#define TK_MOUSE_X /;"	d
TK_MOUSE_X1	include/BearLibTerminal.h	/^#define TK_MOUSE_X1 /;"	d
TK_MOUSE_X2	include/BearLibTerminal.h	/^#define TK_MOUSE_X2 /;"	d
TK_MOUSE_Y	include/BearLibTerminal.h	/^#define TK_MOUSE_Y /;"	d
TK_N	include/BearLibTerminal.h	/^#define TK_N /;"	d
TK_O	include/BearLibTerminal.h	/^#define TK_O /;"	d
TK_OFF	include/BearLibTerminal.h	/^#define TK_OFF /;"	d
TK_ON	include/BearLibTerminal.h	/^#define TK_ON /;"	d
TK_P	include/BearLibTerminal.h	/^#define TK_P /;"	d
TK_PAGEDOWN	include/BearLibTerminal.h	/^#define TK_PAGEDOWN /;"	d
TK_PAGEUP	include/BearLibTerminal.h	/^#define TK_PAGEUP /;"	d
TK_PAUSE	include/BearLibTerminal.h	/^#define TK_PAUSE /;"	d
TK_PERIOD	include/BearLibTerminal.h	/^#define TK_PERIOD /;"	d
TK_Q	include/BearLibTerminal.h	/^#define TK_Q /;"	d
TK_R	include/BearLibTerminal.h	/^#define TK_R /;"	d
TK_RBRACKET	include/BearLibTerminal.h	/^#define TK_RBRACKET /;"	d
TK_RESIZED	include/BearLibTerminal.h	/^#define TK_RESIZED /;"	d
TK_RETURN	include/BearLibTerminal.h	/^#define TK_RETURN /;"	d
TK_RIGHT	include/BearLibTerminal.h	/^#define TK_RIGHT /;"	d
TK_S	include/BearLibTerminal.h	/^#define TK_S /;"	d
TK_SEMICOLON	include/BearLibTerminal.h	/^#define TK_SEMICOLON /;"	d
TK_SHIFT	include/BearLibTerminal.h	/^#define TK_SHIFT /;"	d
TK_SLASH	include/BearLibTerminal.h	/^#define TK_SLASH /;"	d
TK_SPACE	include/BearLibTerminal.h	/^#define TK_SPACE /;"	d
TK_T	include/BearLibTerminal.h	/^#define TK_T /;"	d
TK_TAB	include/BearLibTerminal.h	/^#define TK_TAB /;"	d
TK_U	include/BearLibTerminal.h	/^#define TK_U /;"	d
TK_UP	include/BearLibTerminal.h	/^#define TK_UP /;"	d
TK_V	include/BearLibTerminal.h	/^#define TK_V /;"	d
TK_W	include/BearLibTerminal.h	/^#define TK_W /;"	d
TK_WCHAR	include/BearLibTerminal.h	/^#define TK_WCHAR /;"	d
TK_WIDTH	include/BearLibTerminal.h	/^#define TK_WIDTH /;"	d
TK_X	include/BearLibTerminal.h	/^#define TK_X /;"	d
TK_Y	include/BearLibTerminal.h	/^#define TK_Y /;"	d
TK_Z	include/BearLibTerminal.h	/^#define TK_Z /;"	d
TMP	lib/uthash/doc/Makefile	/^TMP=\/tmp\/uthash-gh-pages$/;"	m
TManual	lib/flecs/test/api/src/World.c	/^void TManual(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergeManual	lib/flecs/test/api/src/World.c	/^void TMergeManual(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergeOnLoad	lib/flecs/test/api/src/World.c	/^void TMergeOnLoad(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergeOnStore	lib/flecs/test/api/src/World.c	/^void TMergeOnStore(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergeOnUpdate	lib/flecs/test/api/src/World.c	/^void TMergeOnUpdate(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergeOnValidate	lib/flecs/test/api/src/World.c	/^void TMergeOnValidate(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergePostLoad	lib/flecs/test/api/src/World.c	/^void TMergePostLoad(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergePostUpdate	lib/flecs/test/api/src/World.c	/^void TMergePostUpdate(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergePreStore	lib/flecs/test/api/src/World.c	/^void TMergePreStore(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TMergePreUpdate	lib/flecs/test/api/src/World.c	/^void TMergePreUpdate(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TOK_ALL	lib/flecs/flecs.c	/^#define TOK_ALL /;"	d	file:
TOK_ALL	lib/flecs/src/addons/parser.c	/^#define TOK_ALL /;"	d	file:
TOK_AND	lib/flecs/flecs.c	/^#define TOK_AND /;"	d	file:
TOK_AND	lib/flecs/src/addons/parser.c	/^#define TOK_AND /;"	d	file:
TOK_AS_ENTITY	lib/flecs/flecs.c	/^#define TOK_AS_ENTITY /;"	d	file:
TOK_AS_ENTITY	lib/flecs/src/addons/parser.c	/^#define TOK_AS_ENTITY /;"	d	file:
TOK_BITWISE_OR	lib/flecs/flecs.c	/^#define TOK_BITWISE_OR /;"	d	file:
TOK_BITWISE_OR	lib/flecs/src/addons/parser.c	/^#define TOK_BITWISE_OR /;"	d	file:
TOK_BRACKET_CLOSE	lib/flecs/flecs.c	/^#define TOK_BRACKET_CLOSE /;"	d	file:
TOK_BRACKET_CLOSE	lib/flecs/src/addons/parser.c	/^#define TOK_BRACKET_CLOSE /;"	d	file:
TOK_BRACKET_OPEN	lib/flecs/flecs.c	/^#define TOK_BRACKET_OPEN /;"	d	file:
TOK_BRACKET_OPEN	lib/flecs/src/addons/parser.c	/^#define TOK_BRACKET_OPEN /;"	d	file:
TOK_CASCADE	lib/flecs/flecs.c	/^#define TOK_CASCADE /;"	d	file:
TOK_CASCADE	lib/flecs/src/addons/parser.c	/^#define TOK_CASCADE /;"	d	file:
TOK_COLON	lib/flecs/flecs.c	/^#define TOK_COLON /;"	d	file:
TOK_COLON	lib/flecs/src/addons/parser.c	/^#define TOK_COLON /;"	d	file:
TOK_IN	lib/flecs/flecs.c	/^#define TOK_IN /;"	d	file:
TOK_IN	lib/flecs/src/addons/parser.c	/^#define TOK_IN /;"	d	file:
TOK_INOUT	lib/flecs/flecs.c	/^#define TOK_INOUT /;"	d	file:
TOK_INOUT	lib/flecs/src/addons/parser.c	/^#define TOK_INOUT /;"	d	file:
TOK_INOUT_FILTER	lib/flecs/flecs.c	/^#define TOK_INOUT_FILTER /;"	d	file:
TOK_INOUT_FILTER	lib/flecs/src/addons/parser.c	/^#define TOK_INOUT_FILTER /;"	d	file:
TOK_NAME_SEP	lib/flecs/flecs.c	/^#define TOK_NAME_SEP /;"	d	file:
TOK_NAME_SEP	lib/flecs/src/addons/parser.c	/^#define TOK_NAME_SEP /;"	d	file:
TOK_NEWLINE	lib/flecs/flecs.c	/^#define TOK_NEWLINE /;"	d	file:
TOK_NEWLINE	lib/flecs/src/addons/parser.c	/^#define TOK_NEWLINE /;"	d	file:
TOK_NEWLINE	lib/flecs/src/addons/plecs.c	/^#define TOK_NEWLINE /;"	d	file:
TOK_NOT	lib/flecs/flecs.c	/^#define TOK_NOT /;"	d	file:
TOK_NOT	lib/flecs/src/addons/parser.c	/^#define TOK_NOT /;"	d	file:
TOK_OPTIONAL	lib/flecs/flecs.c	/^#define TOK_OPTIONAL /;"	d	file:
TOK_OPTIONAL	lib/flecs/src/addons/parser.c	/^#define TOK_OPTIONAL /;"	d	file:
TOK_OR	lib/flecs/flecs.c	/^#define TOK_OR /;"	d	file:
TOK_OR	lib/flecs/src/addons/parser.c	/^#define TOK_OR /;"	d	file:
TOK_OUT	lib/flecs/flecs.c	/^#define TOK_OUT /;"	d	file:
TOK_OUT	lib/flecs/src/addons/parser.c	/^#define TOK_OUT /;"	d	file:
TOK_OVERRIDE	lib/flecs/flecs.c	/^#define TOK_OVERRIDE /;"	d	file:
TOK_OVERRIDE	lib/flecs/src/addons/parser.c	/^#define TOK_OVERRIDE /;"	d	file:
TOK_PARENT	lib/flecs/flecs.c	/^#define TOK_PARENT /;"	d	file:
TOK_PARENT	lib/flecs/src/addons/parser.c	/^#define TOK_PARENT /;"	d	file:
TOK_PAREN_CLOSE	lib/flecs/flecs.c	/^#define TOK_PAREN_CLOSE /;"	d	file:
TOK_PAREN_CLOSE	lib/flecs/src/addons/parser.c	/^#define TOK_PAREN_CLOSE /;"	d	file:
TOK_PAREN_OPEN	lib/flecs/flecs.c	/^#define TOK_PAREN_OPEN /;"	d	file:
TOK_PAREN_OPEN	lib/flecs/src/addons/parser.c	/^#define TOK_PAREN_OPEN /;"	d	file:
TOK_ROLE_AND	lib/flecs/flecs.c	/^#define TOK_ROLE_AND /;"	d	file:
TOK_ROLE_AND	lib/flecs/src/addons/parser.c	/^#define TOK_ROLE_AND /;"	d	file:
TOK_ROLE_CASE	lib/flecs/flecs.c	/^#define TOK_ROLE_CASE /;"	d	file:
TOK_ROLE_CASE	lib/flecs/src/addons/parser.c	/^#define TOK_ROLE_CASE /;"	d	file:
TOK_ROLE_DISABLED	lib/flecs/flecs.c	/^#define TOK_ROLE_DISABLED /;"	d	file:
TOK_ROLE_DISABLED	lib/flecs/src/addons/parser.c	/^#define TOK_ROLE_DISABLED /;"	d	file:
TOK_ROLE_NOT	lib/flecs/flecs.c	/^#define TOK_ROLE_NOT /;"	d	file:
TOK_ROLE_NOT	lib/flecs/src/addons/parser.c	/^#define TOK_ROLE_NOT /;"	d	file:
TOK_ROLE_OR	lib/flecs/flecs.c	/^#define TOK_ROLE_OR /;"	d	file:
TOK_ROLE_OR	lib/flecs/src/addons/parser.c	/^#define TOK_ROLE_OR /;"	d	file:
TOK_ROLE_PAIR	lib/flecs/flecs.c	/^#define TOK_ROLE_PAIR /;"	d	file:
TOK_ROLE_PAIR	lib/flecs/src/addons/parser.c	/^#define TOK_ROLE_PAIR /;"	d	file:
TOK_ROLE_SWITCH	lib/flecs/flecs.c	/^#define TOK_ROLE_SWITCH /;"	d	file:
TOK_ROLE_SWITCH	lib/flecs/src/addons/parser.c	/^#define TOK_ROLE_SWITCH /;"	d	file:
TOK_ROLE_XOR	lib/flecs/flecs.c	/^#define TOK_ROLE_XOR /;"	d	file:
TOK_ROLE_XOR	lib/flecs/src/addons/parser.c	/^#define TOK_ROLE_XOR /;"	d	file:
TOK_SELF	lib/flecs/flecs.c	/^#define TOK_SELF /;"	d	file:
TOK_SELF	lib/flecs/src/addons/parser.c	/^#define TOK_SELF /;"	d	file:
TOK_SINGLETON	lib/flecs/flecs.c	/^#define TOK_SINGLETON /;"	d	file:
TOK_SINGLETON	lib/flecs/src/addons/parser.c	/^#define TOK_SINGLETON /;"	d	file:
TOK_SUBSET	lib/flecs/flecs.c	/^#define TOK_SUBSET /;"	d	file:
TOK_SUBSET	lib/flecs/src/addons/parser.c	/^#define TOK_SUBSET /;"	d	file:
TOK_SUPERSET	lib/flecs/flecs.c	/^#define TOK_SUPERSET /;"	d	file:
TOK_SUPERSET	lib/flecs/src/addons/parser.c	/^#define TOK_SUPERSET /;"	d	file:
TOK_USING	lib/flecs/flecs.c	/^#define TOK_USING /;"	d	file:
TOK_USING	lib/flecs/src/addons/plecs.c	/^#define TOK_USING /;"	d	file:
TOK_WILDCARD	lib/flecs/flecs.c	/^#define TOK_WILDCARD /;"	d	file:
TOK_WILDCARD	lib/flecs/src/addons/parser.c	/^#define TOK_WILDCARD /;"	d	file:
TOK_WITH	lib/flecs/flecs.c	/^#define TOK_WITH /;"	d	file:
TOK_WITH	lib/flecs/src/addons/plecs.c	/^#define TOK_WITH /;"	d	file:
TOnLoad	lib/flecs/test/api/src/World.c	/^void TOnLoad(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TOnStore	lib/flecs/test/api/src/World.c	/^void TOnStore(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TOnUpdate	lib/flecs/test/api/src/World.c	/^void TOnUpdate(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TOnValidate	lib/flecs/test/api/src/World.c	/^void TOnValidate(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TPostLoad	lib/flecs/test/api/src/World.c	/^void TPostLoad(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TPostUpdate	lib/flecs/test/api/src/World.c	/^void TPostUpdate(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TPreStore	lib/flecs/test/api/src/World.c	/^void TPreStore(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TPreUpdate	lib/flecs/test/api/src/World.c	/^void TPreUpdate(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TRANSITIVE_QUERIES_BAKE_CONFIG_H	lib/flecs/examples/c/rules/transitive_queries/include/transitive_queries/bake_config.h	/^#define TRANSITIVE_QUERIES_BAKE_CONFIG_H$/;"	d
TRANSITIVE_QUERIES_BAKE_CONFIG_H	lib/flecs/examples/cpp/rules/transitive_queries/include/transitive_queries/bake_config.h	/^#define TRANSITIVE_QUERIES_BAKE_CONFIG_H$/;"	d
TRANSITIVE_QUERIES_H	lib/flecs/examples/c/rules/transitive_queries/include/transitive_queries.h	/^#define TRANSITIVE_QUERIES_H$/;"	d
TRANSITIVE_QUERIES_H	lib/flecs/examples/cpp/rules/transitive_queries/include/transitive_queries.h	/^#define TRANSITIVE_QUERIES_H$/;"	d
TableColumns	lib/flecs/test/api/src/SystemMisc.c	/^void TableColumns(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Tag	lib/flecs/examples/cpp/systems/mutate_entity_handle/src/main.cpp	/^struct Tag { };$/;"	s	file:
Tag	lib/flecs/flecs.h	/^static const flecs::entity_t Tag = EcsTag;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Tag	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Tag = EcsTag;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Tag	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct Tag { };$/;"	s
Tag	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct Tag { };$/;"	s	function:Entity_defer_w_with_implicit_component	file:
Tag	lib/flecs/test/cpp_api/src/World.cpp	/^    struct Tag { };$/;"	s	function:World_with_tag_type	file:
TagA	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagA { };$/;"	s
TagA	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct TagA {};$/;"	s	function:Entity_entity_array	file:
TagA	lib/flecs/test/cpp_api/src/Observer.cpp	/^    struct TagA { };$/;"	s	function:Observer_yield_existing	file:
TagA	lib/flecs/test/cpp_api/src/Observer.cpp	/^    struct TagA { };$/;"	s	function:Observer_yield_existing_2_terms	file:
TagA	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagA { };$/;"	s	function:QueryBuilder_group_by_raw	file:
TagA	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagA { };$/;"	s	function:QueryBuilder_group_by_template	file:
TagA	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagA { };$/;"	s	function:QueryBuilder_optional_tag_is_set	file:
TagA	lib/flecs/test/cpp_api/src/Trigger.cpp	/^    struct TagA { };$/;"	s	function:Trigger_yield_existing	file:
TagA	lib/flecs/test/cpp_api/src/Type.cpp	/^    struct TagA {};$/;"	s	function:Type_create_type_from_system	file:
TagB	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagB { };$/;"	s
TagB	lib/flecs/test/cpp_api/src/Entity.cpp	/^    struct TagB {};$/;"	s	function:Entity_entity_array	file:
TagB	lib/flecs/test/cpp_api/src/Observer.cpp	/^    struct TagB { };$/;"	s	function:Observer_yield_existing	file:
TagB	lib/flecs/test/cpp_api/src/Observer.cpp	/^    struct TagB { };$/;"	s	function:Observer_yield_existing_2_terms	file:
TagB	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagB { };$/;"	s	function:QueryBuilder_group_by_raw	file:
TagB	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagB { };$/;"	s	function:QueryBuilder_group_by_template	file:
TagB	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagB { };$/;"	s	function:QueryBuilder_optional_tag_is_set	file:
TagB	lib/flecs/test/cpp_api/src/Trigger.cpp	/^    struct TagB { };$/;"	s	function:Trigger_yield_existing	file:
TagB	lib/flecs/test/cpp_api/src/Type.cpp	/^    struct TagB {};$/;"	s	function:Type_create_type_from_system	file:
TagC	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagC { };$/;"	s
TagC	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagC { };$/;"	s	function:QueryBuilder_group_by_raw	file:
TagC	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagC { };$/;"	s	function:QueryBuilder_group_by_template	file:
TagC	lib/flecs/test/cpp_api/src/Type.cpp	/^    struct TagC {};$/;"	s	function:Type_create_type_from_system	file:
TagD	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagD { };$/;"	s
TagE	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagE { };$/;"	s
TagF	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagF { };$/;"	s
TagG	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagG { };$/;"	s
TagH	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagH { };$/;"	s
TagI	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagI { };$/;"	s
TagJ	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagJ { };$/;"	s
TagK	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagK { };$/;"	s
TagL	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagL { };$/;"	s
TagM	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagM { };$/;"	s
TagN	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagN { };$/;"	s
TagO	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagO { };$/;"	s
TagP	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagP { };$/;"	s
TagQ	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagQ { };$/;"	s
TagR	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagR { };$/;"	s
TagS	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagS { };$/;"	s
TagT	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct TagT { };$/;"	s
TagX	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagX { };$/;"	s	function:QueryBuilder_group_by_raw	file:
TagX	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct TagX { };$/;"	s	function:QueryBuilder_group_by_template	file:
Tail	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	d
Tail	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	i
Task	lib/flecs/test/api/src/SingleThreadStaging.c	/^void Task(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Task	lib/flecs/test/api/src/Tasks.c	/^void Task(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Tasks_from_system	lib/flecs/test/api/src/Tasks.c	/^void Tasks_from_system() {$/;"	f	typeref:typename:void
Tasks_no_components	lib/flecs/test/api/src/Tasks.c	/^void Tasks_no_components() {$/;"	f	typeref:typename:void
Tasks_one_tag	lib/flecs/test/api/src/Tasks.c	/^void Tasks_one_tag() {$/;"	f	typeref:typename:void
Tasks_tasks_in_phases	lib/flecs/test/api/src/Tasks.c	/^void Tasks_tasks_in_phases() {$/;"	f	typeref:typename:void
Tasks_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Tasks_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Tebi	lib/flecs/flecs.h	/^struct Tebi { };$/;"	s	struct:flecs::units
Tebi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Tebi { };$/;"	s	struct:flecs::units
Temperature	lib/flecs/flecs.h	/^struct Temperature { };$/;"	s	struct:flecs::units
Temperature	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Temperature { };$/;"	s	struct:flecs::units
Template	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct Template {$/;"	s
TemplateType	lib/flecs/test/cpp_api/src/World.cpp	/^struct TemplateType { };$/;"	s	file:
TemplateType	lib/flecs/test/cpp_api/src/World.cpp	/^struct TemplateType { };$/;"	s	namespace:ns	file:
Tera	lib/flecs/flecs.h	/^struct Tera { };$/;"	s	struct:flecs::units
Tera	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Tera { };$/;"	s	struct:flecs::units
Terms	lib/flecs/flecs.h	/^    using Terms = typename _::term_ptrs<Components...>::array;$/;"	t	struct:flecs::filter	typeref:typename:_::term_ptrs<Components...>::array
Terms	lib/flecs/flecs.h	/^    using Terms = typename _::term_ptrs<Components...>::array;$/;"	t	struct:flecs::query	typeref:typename:_::term_ptrs<Components...>::array
Terms	lib/flecs/flecs.h	/^    using Terms = typename _::term_ptrs<Components...>::array;$/;"	t	struct:flecs::rule	typeref:typename:_::term_ptrs<Components...>::array
Terms	lib/flecs/flecs.h	/^    using Terms = typename term_ptrs<Components ...>::array;$/;"	t	struct:flecs::_::each_invoker	typeref:typename:term_ptrs<Components...>::array
Terms	lib/flecs/flecs.h	/^    using Terms = typename term_ptrs<Components ...>::array;$/;"	t	struct:flecs::_::iter_invoker	typeref:typename:term_ptrs<Components...>::array
Terms	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    using Terms = typename term_ptrs<Components ...>::array;$/;"	t	struct:flecs::_::each_invoker	typeref:typename:term_ptrs<Components...>::array
Terms	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    using Terms = typename term_ptrs<Components ...>::array;$/;"	t	struct:flecs::_::iter_invoker	typeref:typename:term_ptrs<Components...>::array
Terms	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    using Terms = typename _::term_ptrs<Components...>::array;$/;"	t	struct:flecs::filter	typeref:typename:_::term_ptrs<Components...>::array
Terms	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    using Terms = typename _::term_ptrs<Components...>::array;$/;"	t	struct:flecs::query	typeref:typename:_::term_ptrs<Components...>::array
Terms	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    using Terms = typename _::term_ptrs<Components...>::array;$/;"	t	struct:flecs::rule	typeref:typename:_::term_ptrs<Components...>::array
Test	lib/flecs/test/cpp_api/src/Meta.cpp	/^    struct Test {$/;"	s	function:Meta_nested_struct	file:
Test	lib/flecs/test/cpp_api/src/Meta.cpp	/^    struct Test {$/;"	s	function:Meta_struct	file:
Test	lib/flecs/test/cpp_api/src/Meta.cpp	/^    struct Test {$/;"	s	function:Meta_struct_w_portable_type	file:
Test	lib/flecs/test/cpp_api/src/Meta.cpp	/^    struct Test {$/;"	s	function:Meta_unit_w_over	file:
Test	lib/flecs/test/cpp_api/src/Meta.cpp	/^    struct Test {$/;"	s	function:Meta_unit_w_prefix	file:
Test	lib/flecs/test/cpp_api/src/Meta.cpp	/^    struct Test {$/;"	s	function:Meta_unit_w_quantity	file:
Test	lib/flecs/test/cpp_api/src/Meta.cpp	/^    struct Test {$/;"	s	function:Meta_units	file:
Test	lib/flecs/test/cpp_api/src/World.cpp	/^struct Test { };$/;"	s	file:
TestAll	lib/flecs/test/api/src/MultiThread.c	/^void TestAll(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TestAll	lib/flecs/test/api/src/Run.c	/^void TestAll(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TestBase	lib/flecs/test/api/src/Prefab.c	/^void TestBase(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TestContext	lib/flecs/test/api/src/SystemPeriodic.c	/^void TestContext(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TestContext	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TestContext(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TestHas	lib/flecs/test/api/src/Has.c	/^void TestHas(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TestInteropModule	lib/flecs/test/cpp_api/src/World.cpp	/^typedef struct TestInteropModule {$/;"	s	file:
TestInteropModule	lib/flecs/test/cpp_api/src/World.cpp	/^} TestInteropModule;$/;"	t	typeref:struct:TestInteropModule	file:
TestInteropModuleImport	lib/flecs/test/cpp_api/src/World.cpp	/^void TestInteropModuleImport(ecs_world_t *world) {$/;"	f	typeref:typename:void	file:
TestIsSharedOnNotSet	lib/flecs/test/api/src/SystemPeriodic.c	/^void TestIsSharedOnNotSet(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TestOptional_w_column	lib/flecs/test/api/src/SystemPeriodic.c	/^void TestOptional_w_column(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TestOptional_w_shared	lib/flecs/test/api/src/SystemPeriodic.c	/^void TestOptional_w_shared(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TestSubset	lib/flecs/test/api/src/MultiThread.c	/^void TestSubset(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TestSubset	lib/flecs/test/api/src/Run.c	/^void TestSubset(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TestTableCount	lib/flecs/test/api/src/SystemMisc.c	/^static void TestTableCount(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Test_main_stage	lib/flecs/test/api/src/Get_component.c	/^void Test_main_stage(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
This	lib/flecs/flecs.h	/^static const flecs::entity_t This = EcsThis;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
This	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t This = EcsThis;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Throw	lib/flecs/flecs.h	/^static const flecs::entity_t Throw = EcsThrow;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Throw	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Throw = EcsThrow;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
TickSource	lib/flecs/flecs.h	/^using TickSource = EcsTickSource;$/;"	t	namespace:flecs	typeref:typename:EcsTickSource
TickSource	lib/flecs/include/flecs/addons/cpp/mixins/system/decl.hpp	/^using TickSource = EcsTickSource;$/;"	t	namespace:flecs	typeref:typename:EcsTickSource
Tile	include/mapping/map.h	/^enum Tile {$/;"	g
Tile	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^enum Tile {$/;"	g	file:
TileStatus	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^enum class TileStatus {$/;"	g	file:
Time	lib/flecs/flecs.h	/^struct Time { };$/;"	s	struct:flecs::units
Time	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Time { };$/;"	s	struct:flecs::units
TimeCheck	lib/flecs/test/api/src/World.c	/^void TimeCheck(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Timeout	lib/flecs/examples/c/systems/mutate_entity/src/main.c	/^} Timeout;$/;"	t	typeref:struct:__anon6b1f22760108	file:
Timeout	lib/flecs/examples/cpp/systems/mutate_entity/src/main.cpp	/^struct Timeout { $/;"	s	file:
Timeout	lib/flecs/examples/cpp/systems/mutate_entity_handle/src/main.cpp	/^struct Timeout { $/;"	s	file:
Timer	lib/flecs/flecs.h	/^using Timer = EcsTimer;$/;"	t	namespace:flecs	typeref:typename:EcsTimer
Timer	lib/flecs/include/flecs/addons/cpp/mixins/timer/decl.hpp	/^using Timer = EcsTimer;$/;"	t	namespace:flecs	typeref:typename:EcsTimer
Timer_interval	lib/flecs/test/api/src/Timer.c	/^void Timer_interval() {$/;"	f	typeref:typename:void
Timer_interval_timer_entity	lib/flecs/test/api/src/Timer.c	/^void Timer_interval_timer_entity() {$/;"	f	typeref:typename:void
Timer_naked_tick_entity	lib/flecs/test/api/src/Timer.c	/^void Timer_naked_tick_entity() {$/;"	f	typeref:typename:void
Timer_nested_rate_entity	lib/flecs/test/api/src/Timer.c	/^void Timer_nested_rate_entity() {$/;"	f	typeref:typename:void
Timer_nested_rate_entity_empty_src	lib/flecs/test/api/src/Timer.c	/^void Timer_nested_rate_entity_empty_src() {$/;"	f	typeref:typename:void
Timer_one_shot_timer_entity	lib/flecs/test/api/src/Timer.c	/^void Timer_one_shot_timer_entity() {$/;"	f	typeref:typename:void
Timer_rate_entity	lib/flecs/test/api/src/Timer.c	/^void Timer_rate_entity() {$/;"	f	typeref:typename:void
Timer_rate_filter	lib/flecs/test/api/src/Timer.c	/^void Timer_rate_filter() {$/;"	f	typeref:typename:void
Timer_rate_filter_w_rate_filter_src	lib/flecs/test/api/src/Timer.c	/^void Timer_rate_filter_w_rate_filter_src() {$/;"	f	typeref:typename:void
Timer_rate_filter_w_timer_src	lib/flecs/test/api/src/Timer.c	/^void Timer_rate_filter_w_timer_src() {$/;"	f	typeref:typename:void
Timer_rate_filter_with_empty_src	lib/flecs/test/api/src/Timer.c	/^void Timer_rate_filter_with_empty_src() {$/;"	f	typeref:typename:void
Timer_shared_interval	lib/flecs/test/api/src/Timer.c	/^void Timer_shared_interval() {$/;"	f	typeref:typename:void
Timer_shared_timeout	lib/flecs/test/api/src/Timer.c	/^void Timer_shared_timeout() {$/;"	f	typeref:typename:void
Timer_start_stop_interval	lib/flecs/test/api/src/Timer.c	/^void Timer_start_stop_interval() {$/;"	f	typeref:typename:void
Timer_start_stop_one_shot	lib/flecs/test/api/src/Timer.c	/^void Timer_start_stop_one_shot() {$/;"	f	typeref:typename:void
Timer_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Timer_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Timer_timeout	lib/flecs/test/api/src/Timer.c	/^void Timer_timeout() {$/;"	f	typeref:typename:void
Tmp	lib/flecs/test/cpp_api/src/World.cpp	/^struct Tmp { int32_t v; };$/;"	s	file:
Tomato	lib/flecs/examples/c/reflection/basics_bitmask/src/main.c	/^static const uint32_t Tomato = 0x4;$/;"	v	typeref:typename:const uint32_t	file:
Tomato	lib/flecs/examples/cpp/reflection/basics_bitmask/src/main.cpp	/^    static constexpr uint32_t Tomato = 0x4;$/;"	m	struct:Toppings	typeref:typename:uint32_t	file:
Toppings	lib/flecs/examples/c/reflection/basics_bitmask/src/main.c	/^typedef uint32_t Toppings;$/;"	t	typeref:typename:uint32_t	file:
Toppings	lib/flecs/examples/cpp/reflection/basics_bitmask/src/main.cpp	/^struct Toppings {$/;"	s	file:
Transitive	lib/flecs/flecs.h	/^static const flecs::entity_t Transitive = EcsTransitive;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Transitive	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Transitive = EcsTransitive;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
TransitiveRules_rule_iter_set_transitive_2_variables_set_both	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_rule_iter_set_transitive_2_variables_set_both() {$/;"	f	typeref:typename:void
TransitiveRules_rule_iter_set_transitive_2_variables_set_one	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_rule_iter_set_transitive_2_variables_set_one() {$/;"	f	typeref:typename:void
TransitiveRules_rule_iter_set_transitive_self_2_variables_set_both	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_rule_iter_set_transitive_self_2_variables_set_both() {$/;"	f	typeref:typename:void
TransitiveRules_rule_iter_set_transitive_self_variable	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_rule_iter_set_transitive_self_variable() {$/;"	f	typeref:typename:void
TransitiveRules_rule_iter_set_transitive_variable	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_rule_iter_set_transitive_variable() {$/;"	f	typeref:typename:void
TransitiveRules_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case TransitiveRules_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
TransitiveRules_trans_X_X	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_X_X() {$/;"	f	typeref:typename:void
TransitiveRules_trans_X_Y_2_levels	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_X_Y_2_levels() {$/;"	f	typeref:typename:void
TransitiveRules_trans_X_Y_2_levels_nonfinal	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_X_Y_2_levels_nonfinal() {$/;"	f	typeref:typename:void
TransitiveRules_trans_X_entity_non_inclusive	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_X_entity_non_inclusive() {$/;"	f	typeref:typename:void
TransitiveRules_trans_constrained_x_y	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_constrained_x_y() {$/;"	f	typeref:typename:void
TransitiveRules_trans_entity_X_non_inclusive	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_entity_X_non_inclusive() {$/;"	f	typeref:typename:void
TransitiveRules_trans_entity_entity_non_reflexive	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_entity_entity_non_reflexive() {$/;"	f	typeref:typename:void
TransitiveRules_trans_pred_This_X__pred_X	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_pred_This_X__pred_X() {$/;"	f	typeref:typename:void
TransitiveRules_trans_reflexive_X_X	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_reflexive_X_X() {$/;"	f	typeref:typename:void
TransitiveRules_trans_reflexive_X_X_2	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_reflexive_X_X_2() {$/;"	f	typeref:typename:void
TransitiveRules_trans_reflexive_X_Y	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_reflexive_X_Y() {$/;"	f	typeref:typename:void
TransitiveRules_trans_this_x_after_tag_this	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_this_x_after_tag_this() {$/;"	f	typeref:typename:void
TransitiveRules_trans_this_x_after_tag_this_2_lvls	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_this_x_after_tag_this_2_lvls() {$/;"	f	typeref:typename:void
TransitiveRules_trans_this_x_before_tag_this	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_this_x_before_tag_this() {$/;"	f	typeref:typename:void
TransitiveRules_trans_this_x_before_tag_this_2_lvls	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_trans_this_x_before_tag_this_2_lvls() {$/;"	f	typeref:typename:void
TransitiveRules_transitive_not_w_var	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_transitive_not_w_var() {$/;"	f	typeref:typename:void
TransitiveRules_transitive_w_not_nonfinal	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_transitive_w_not_nonfinal() {$/;"	f	typeref:typename:void
TransitiveRules_transitive_w_optional_nonfinal	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_transitive_w_optional_nonfinal() {$/;"	f	typeref:typename:void
TransitiveRules_transitive_w_optional_nonfinal_w_var	lib/flecs/test/api/src/TransitiveRules.c	/^void TransitiveRules_transitive_w_optional_nonfinal_w_var() {$/;"	f	typeref:typename:void
TriangleInM	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	d
TriangleInM	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	i
TriangleOutM	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	d
TriangleOutM	lib/uthash/doc/banner.svg	/^       style="overflow:visible">$/;"	i
Trig	lib/flecs/test/cpp_api/src/Misc.cpp	/^void Trig(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Trigger	lib/flecs/flecs.h	/^using Trigger = EcsTrigger;$/;"	t	namespace:flecs	typeref:typename:EcsTrigger
Trigger	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using Trigger = EcsTrigger;$/;"	t	namespace:flecs	typeref:typename:EcsTrigger
Trigger	lib/flecs/test/api/src/Trigger.c	/^void Trigger(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TriggerAdd	lib/flecs/test/api/src/Trigger.c	/^void TriggerAdd(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TriggerClear	lib/flecs/test/api/src/Trigger.c	/^void TriggerClear(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TriggerDelete	lib/flecs/test/api/src/Trigger.c	/^void TriggerDelete(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TriggerOnAdd_2_systems_w_table_creation	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_2_systems_w_table_creation() {$/;"	f	typeref:typename:void
TriggerOnAdd_2_systems_w_table_creation_in_progress	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_2_systems_w_table_creation_in_progress() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_after_delete_trigger	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_after_delete_trigger() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_after_delete_wildcard_id_trigger	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_after_delete_wildcard_id_trigger() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_again_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_again_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_again_2	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_again_2() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_again_in_progress	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_again_in_progress() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_in_progress_before_system_def	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_in_progress_before_system_def() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_match_1_of_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_match_1_of_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_match_1_of_2	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_match_1_of_2() {$/;"	f	typeref:typename:void
TriggerOnAdd_add_no_match_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_add_no_match_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_clone_match_1_of_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_clone_match_1_of_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_clone_match_1_of_2	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_clone_match_1_of_2() {$/;"	f	typeref:typename:void
TriggerOnAdd_emplace	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_emplace() {$/;"	f	typeref:typename:void
TriggerOnAdd_get_sys_context_from_param	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_get_sys_context_from_param() {$/;"	f	typeref:typename:void
TriggerOnAdd_new_match_1_of_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_new_match_1_of_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_new_match_1_of_2	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_new_match_1_of_2() {$/;"	f	typeref:typename:void
TriggerOnAdd_new_no_match_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_new_no_match_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_new_w_count_match_1_of_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_new_w_count_match_1_of_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_on_add_in_on_add	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_on_add_in_on_add() {$/;"	f	typeref:typename:void
TriggerOnAdd_on_add_in_on_update	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_on_add_in_on_update() {$/;"	f	typeref:typename:void
TriggerOnAdd_on_remove_in_on_add	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_on_remove_in_on_add() {$/;"	f	typeref:typename:void
TriggerOnAdd_on_set_in_on_add	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_on_set_in_on_add() {$/;"	f	typeref:typename:void
TriggerOnAdd_override_after_add_in_on_add	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_override_after_add_in_on_add() {$/;"	f	typeref:typename:void
TriggerOnAdd_remove_added_component_in_on_add_w_set	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_remove_added_component_in_on_add_w_set() {$/;"	f	typeref:typename:void
TriggerOnAdd_set_after_add_in_on_add	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_set_after_add_in_on_add() {$/;"	f	typeref:typename:void
TriggerOnAdd_set_again_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_set_again_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_set_match_1_of_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_set_match_1_of_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_set_no_match_1	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_set_no_match_1() {$/;"	f	typeref:typename:void
TriggerOnAdd_setup	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_setup() {$/;"	f	typeref:typename:void
TriggerOnAdd_sys_context	lib/flecs/test/api/src/TriggerOnAdd.c	/^void TriggerOnAdd_sys_context() {$/;"	f	typeref:typename:void
TriggerOnAdd_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case TriggerOnAdd_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
TriggerOnRemove_delete	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_delete() {$/;"	f	typeref:typename:void
TriggerOnRemove_delete_no_match	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_delete_no_match() {$/;"	f	typeref:typename:void
TriggerOnRemove_delete_watched	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_delete_watched() {$/;"	f	typeref:typename:void
TriggerOnRemove_has_removed_tag_trigger_1_tag	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_has_removed_tag_trigger_1_tag() {$/;"	f	typeref:typename:void
TriggerOnRemove_has_removed_tag_trigger_2_tags	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_has_removed_tag_trigger_2_tags() {$/;"	f	typeref:typename:void
TriggerOnRemove_on_remove_in_on_update	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_on_remove_in_on_update() {$/;"	f	typeref:typename:void
TriggerOnRemove_remove	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_remove() {$/;"	f	typeref:typename:void
TriggerOnRemove_remove_after_delete_trigger	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_remove_after_delete_trigger() {$/;"	f	typeref:typename:void
TriggerOnRemove_remove_after_delete_wildcard_id_trigger	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_remove_after_delete_wildcard_id_trigger() {$/;"	f	typeref:typename:void
TriggerOnRemove_remove_no_match	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_remove_no_match() {$/;"	f	typeref:typename:void
TriggerOnRemove_remove_watched	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_remove_watched() {$/;"	f	typeref:typename:void
TriggerOnRemove_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case TriggerOnRemove_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
TriggerOnRemove_valid_entity_after_delete	lib/flecs/test/api/src/TriggerOnRemove.c	/^void TriggerOnRemove_valid_entity_after_delete() {$/;"	f	typeref:typename:void
TriggerOnSet_clone	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_clone() {$/;"	f	typeref:typename:void
TriggerOnSet_clone_w_value	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_clone_w_value() {$/;"	f	typeref:typename:void
TriggerOnSet_emplace	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_emplace() {$/;"	f	typeref:typename:void
TriggerOnSet_on_set_after_override	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_on_set_after_override() {$/;"	f	typeref:typename:void
TriggerOnSet_on_set_after_override_1_of_2_overridden	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_on_set_after_override_1_of_2_overridden() {$/;"	f	typeref:typename:void
TriggerOnSet_on_set_after_override_w_new	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_on_set_after_override_w_new() {$/;"	f	typeref:typename:void
TriggerOnSet_on_set_after_override_w_new_w_count	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_on_set_after_override_w_new_w_count() {$/;"	f	typeref:typename:void
TriggerOnSet_on_set_after_snapshot_restore	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_on_set_after_snapshot_restore() {$/;"	f	typeref:typename:void
TriggerOnSet_set	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_set() {$/;"	f	typeref:typename:void
TriggerOnSet_set_again	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_set_again() {$/;"	f	typeref:typename:void
TriggerOnSet_set_and_add_system	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_set_and_add_system() {$/;"	f	typeref:typename:void
TriggerOnSet_set_new	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_set_new() {$/;"	f	typeref:typename:void
TriggerOnSet_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case TriggerOnSet_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
TriggerOnSet_un_set_tag_w_clear	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_un_set_tag_w_clear() {$/;"	f	typeref:typename:void
TriggerOnSet_un_set_tag_w_delete	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_un_set_tag_w_delete() {$/;"	f	typeref:typename:void
TriggerOnSet_un_set_tag_w_remove	lib/flecs/test/api/src/TriggerOnSet.c	/^void TriggerOnSet_un_set_tag_w_remove() {$/;"	f	typeref:typename:void
TriggerReadonly	lib/flecs/test/api/src/Trigger.c	/^void TriggerReadonly(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TriggerRemove	lib/flecs/test/api/src/Trigger.c	/^void TriggerRemove(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TriggerTwice	lib/flecs/test/api/src/Observer.c	/^static void TriggerTwice(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
TriggerTwice	lib/flecs/test/api/src/Trigger.c	/^static void TriggerTwice(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Trigger_add_in_trigger	lib/flecs/test/api/src/Trigger.c	/^void Trigger_add_in_trigger() {$/;"	f	typeref:typename:void
Trigger_add_non_existing_entity	lib/flecs/test/api/src/Trigger.c	/^void Trigger_add_non_existing_entity() {$/;"	f	typeref:typename:void
Trigger_add_twice	lib/flecs/test/api/src/Trigger.c	/^void Trigger_add_twice() {$/;"	f	typeref:typename:void
Trigger_clear_in_trigger	lib/flecs/test/api/src/Trigger.c	/^void Trigger_clear_in_trigger() {$/;"	f	typeref:typename:void
Trigger_create_stresstest	lib/flecs/test/api/src/Trigger.c	/^void Trigger_create_stresstest() {$/;"	f	typeref:typename:void
Trigger_create_triggers_in_trigger	lib/flecs/test/api/src/Trigger.c	/^void Trigger_create_triggers_in_trigger() {$/;"	f	typeref:typename:void
Trigger_create_w_no_template_args	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_create_w_no_template_args() {$/;"	f	typeref:typename:void
Trigger_delete_in_trigger	lib/flecs/test/api/src/Trigger.c	/^void Trigger_delete_in_trigger() {$/;"	f	typeref:typename:void
Trigger_delete_trigger_w_delete_ctx	lib/flecs/test/api/src/Trigger.c	/^void Trigger_delete_trigger_w_delete_ctx() {$/;"	f	typeref:typename:void
Trigger_entity_source_1_trigger	lib/flecs/test/api/src/Trigger.c	/^void Trigger_entity_source_1_trigger() {$/;"	f	typeref:typename:void
Trigger_entity_source_2_triggers	lib/flecs/test/api/src/Trigger.c	/^void Trigger_entity_source_2_triggers() {$/;"	f	typeref:typename:void
Trigger_entity_source_base_set	lib/flecs/test/api/src/Trigger.c	/^void Trigger_entity_source_base_set() {$/;"	f	typeref:typename:void
Trigger_filter_term	lib/flecs/test/api/src/Trigger.c	/^void Trigger_filter_term() {$/;"	f	typeref:typename:void
Trigger_iter_type_set	lib/flecs/test/api/src/Trigger.c	/^void Trigger_iter_type_set() {$/;"	f	typeref:typename:void
Trigger_n_w_values	lib/flecs/test/api/src/Trigger.c	/^void Trigger_n_w_values(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Trigger_not_from_superset	lib/flecs/test/api/src/Trigger.c	/^void Trigger_not_from_superset() {$/;"	f	typeref:typename:void
Trigger_notify_propagated_twice	lib/flecs/test/api/src/Trigger.c	/^void Trigger_notify_propagated_twice() {$/;"	f	typeref:typename:void
Trigger_on_add	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_on_add() {$/;"	f	typeref:typename:void
Trigger_on_add_base	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_base() {$/;"	f	typeref:typename:void
Trigger_on_add_base_2_entities	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_base_2_entities() {$/;"	f	typeref:typename:void
Trigger_on_add_base_2_entities_filter	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_base_2_entities_filter() {$/;"	f	typeref:typename:void
Trigger_on_add_base_superset_trigger	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_base_superset_trigger() {$/;"	f	typeref:typename:void
Trigger_on_add_base_superset_trigger_2_lvls	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_base_superset_trigger_2_lvls() {$/;"	f	typeref:typename:void
Trigger_on_add_base_w_override	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_base_w_override() {$/;"	f	typeref:typename:void
Trigger_on_add_component	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_component() {$/;"	f	typeref:typename:void
Trigger_on_add_expr	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_on_add_expr() {$/;"	f	typeref:typename:void
Trigger_on_add_id	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_on_add_id() {$/;"	f	typeref:typename:void
Trigger_on_add_id_arg	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_on_add_id_arg() {$/;"	f	typeref:typename:void
Trigger_on_add_not_tag	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_not_tag() {$/;"	f	typeref:typename:void
Trigger_on_add_pair	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_pair() {$/;"	f	typeref:typename:void
Trigger_on_add_pair_obj_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_pair_obj_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_add_pair_pred_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_pair_pred_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_add_pair_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_pair_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_add_remove	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_remove() {$/;"	f	typeref:typename:void
Trigger_on_add_remove_after_exclusive_add	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_remove_after_exclusive_add() {$/;"	f	typeref:typename:void
Trigger_on_add_self_superset	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_self_superset() {$/;"	f	typeref:typename:void
Trigger_on_add_self_trigger_with_add_isa	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_self_trigger_with_add_isa() {$/;"	f	typeref:typename:void
Trigger_on_add_superset	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_superset() {$/;"	f	typeref:typename:void
Trigger_on_add_superset_2_levels	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_superset_2_levels() {$/;"	f	typeref:typename:void
Trigger_on_add_superset_childof	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_superset_childof() {$/;"	f	typeref:typename:void
Trigger_on_add_tag	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_tag() {$/;"	f	typeref:typename:void
Trigger_on_add_tag_action	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_on_add_tag_action() {$/;"	f	typeref:typename:void
Trigger_on_add_tag_each	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_on_add_tag_each() {$/;"	f	typeref:typename:void
Trigger_on_add_tag_iter	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_on_add_tag_iter() {$/;"	f	typeref:typename:void
Trigger_on_add_trigger_after_table	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_trigger_after_table() {$/;"	f	typeref:typename:void
Trigger_on_add_trigger_before_table	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_trigger_before_table() {$/;"	f	typeref:typename:void
Trigger_on_add_w_clone	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_w_clone() {$/;"	f	typeref:typename:void
Trigger_on_add_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_add_yield_existing	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_yield_existing() {$/;"	f	typeref:typename:void
Trigger_on_add_yield_existing_2_tables	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_yield_existing_2_tables() {$/;"	f	typeref:typename:void
Trigger_on_add_yield_existing_wildcard_pair	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_add_yield_existing_wildcard_pair() {$/;"	f	typeref:typename:void
Trigger_on_remove	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_on_remove() {$/;"	f	typeref:typename:void
Trigger_on_remove_base	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_base() {$/;"	f	typeref:typename:void
Trigger_on_remove_component	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_component() {$/;"	f	typeref:typename:void
Trigger_on_remove_not_tag	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_not_tag() {$/;"	f	typeref:typename:void
Trigger_on_remove_pair	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_pair() {$/;"	f	typeref:typename:void
Trigger_on_remove_pair_obj_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_pair_obj_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_remove_pair_pred_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_pair_pred_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_remove_pair_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_pair_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_remove_self_superset	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_self_superset() {$/;"	f	typeref:typename:void
Trigger_on_remove_superset	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_superset() {$/;"	f	typeref:typename:void
Trigger_on_remove_superset_childof	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_superset_childof() {$/;"	f	typeref:typename:void
Trigger_on_remove_tag	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_tag() {$/;"	f	typeref:typename:void
Trigger_on_remove_tree	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_tree() {$/;"	f	typeref:typename:void
Trigger_on_remove_trigger_after_table	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_trigger_after_table() {$/;"	f	typeref:typename:void
Trigger_on_remove_trigger_before_table	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_trigger_before_table() {$/;"	f	typeref:typename:void
Trigger_on_remove_w_clear	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_w_clear() {$/;"	f	typeref:typename:void
Trigger_on_remove_w_delete	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_w_delete() {$/;"	f	typeref:typename:void
Trigger_on_remove_w_world_fini	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_w_world_fini() {$/;"	f	typeref:typename:void
Trigger_on_remove_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_remove_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_set_base	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_base() {$/;"	f	typeref:typename:void
Trigger_on_set_base_w_override	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_base_w_override() {$/;"	f	typeref:typename:void
Trigger_on_set_base_w_value_2_entities	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_base_w_value_2_entities() {$/;"	f	typeref:typename:void
Trigger_on_set_base_w_value_2_entities_instanced	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_base_w_value_2_entities_instanced() {$/;"	f	typeref:typename:void
Trigger_on_set_component	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_component() {$/;"	f	typeref:typename:void
Trigger_on_set_component_after_modified	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_component_after_modified() {$/;"	f	typeref:typename:void
Trigger_on_set_pair	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_pair() {$/;"	f	typeref:typename:void
Trigger_on_set_pair_pred_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_pair_pred_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_set_pair_w_obj_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_pair_w_obj_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_set_pair_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_pair_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_set_self_trigger_with_add_isa	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_self_trigger_with_add_isa() {$/;"	f	typeref:typename:void
Trigger_on_set_w_tag	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_w_tag() {$/;"	f	typeref:typename:void
Trigger_on_set_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_wildcard() {$/;"	f	typeref:typename:void
Trigger_on_set_yield_existing	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_set_yield_existing() {$/;"	f	typeref:typename:void
Trigger_on_unset_base	lib/flecs/test/api/src/Trigger.c	/^void Trigger_on_unset_base() {$/;"	f	typeref:typename:void
Trigger_readonly_term	lib/flecs/test/api/src/Trigger.c	/^void Trigger_readonly_term() {$/;"	f	typeref:typename:void
Trigger_remove_in_trigger	lib/flecs/test/api/src/Trigger.c	/^void Trigger_remove_in_trigger() {$/;"	f	typeref:typename:void
Trigger_remove_twice	lib/flecs/test/api/src/Trigger.c	/^void Trigger_remove_twice() {$/;"	f	typeref:typename:void
Trigger_remove_wildcard_1_id	lib/flecs/test/api/src/Trigger.c	/^void Trigger_remove_wildcard_1_id() {$/;"	f	typeref:typename:void
Trigger_remove_wildcard_2_ids	lib/flecs/test/api/src/Trigger.c	/^void Trigger_remove_wildcard_2_ids() {$/;"	f	typeref:typename:void
Trigger_set_get_binding_context	lib/flecs/test/api/src/Trigger.c	/^void Trigger_set_get_binding_context() {$/;"	f	typeref:typename:void
Trigger_set_get_context	lib/flecs/test/api/src/Trigger.c	/^void Trigger_set_get_context() {$/;"	f	typeref:typename:void
Trigger_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Trigger_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Trigger_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Trigger_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Trigger_trigger_cleanup_2_w_self_super_id	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_cleanup_2_w_self_super_id() {$/;"	f	typeref:typename:void
Trigger_trigger_on_disabled	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_on_disabled() {$/;"	f	typeref:typename:void
Trigger_trigger_on_disabled_tag	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_on_disabled_tag() {$/;"	f	typeref:typename:void
Trigger_trigger_on_prefab	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_on_prefab() {$/;"	f	typeref:typename:void
Trigger_trigger_on_prefab_tag	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_on_prefab_tag() {$/;"	f	typeref:typename:void
Trigger_trigger_superset_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_superset_wildcard() {$/;"	f	typeref:typename:void
Trigger_trigger_w_index	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_w_index() {$/;"	f	typeref:typename:void
Trigger_trigger_w_named_entity	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_w_named_entity() {$/;"	f	typeref:typename:void
Trigger_trigger_w_self	lib/flecs/test/api/src/Trigger.c	/^void Trigger_trigger_w_self() {$/;"	f	typeref:typename:void
Trigger_trigger_w_self	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_trigger_w_self() {$/;"	f	typeref:typename:void
Trigger_un_set_component	lib/flecs/test/api/src/Trigger.c	/^void Trigger_un_set_component() {$/;"	f	typeref:typename:void
Trigger_un_set_pair	lib/flecs/test/api/src/Trigger.c	/^void Trigger_un_set_pair() {$/;"	f	typeref:typename:void
Trigger_un_set_pair_pred_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_un_set_pair_pred_wildcard() {$/;"	f	typeref:typename:void
Trigger_un_set_pair_w_obj_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_un_set_pair_w_obj_wildcard() {$/;"	f	typeref:typename:void
Trigger_un_set_pair_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_un_set_pair_wildcard() {$/;"	f	typeref:typename:void
Trigger_un_set_wildcard	lib/flecs/test/api/src/Trigger.c	/^void Trigger_un_set_wildcard() {$/;"	f	typeref:typename:void
Trigger_w_filter_term	lib/flecs/test/api/src/Trigger.c	/^void Trigger_w_filter_term(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Trigger_w_new_entity_value	lib/flecs/test/api/src/Trigger.c	/^void Trigger_w_new_entity_value(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Trigger_w_value	lib/flecs/test/api/src/Trigger.c	/^void Trigger_w_value(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Trigger_w_value_from_entity	lib/flecs/test/api/src/Trigger.c	/^void Trigger_w_value_from_entity(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Trigger_w_value_instanced	lib/flecs/test/api/src/Trigger.c	/^void Trigger_w_value_instanced(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Trigger_wildcard_pair_w_obj_component	lib/flecs/test/api/src/Trigger.c	/^void Trigger_wildcard_pair_w_obj_component() {$/;"	f	typeref:typename:void
Trigger_wildcard_pair_w_pred_component	lib/flecs/test/api/src/Trigger.c	/^void Trigger_wildcard_pair_w_pred_component() {$/;"	f	typeref:typename:void
Trigger_yield_existing	lib/flecs/test/cpp_api/src/Trigger.cpp	/^void Trigger_yield_existing() {$/;"	f	typeref:typename:void
TrivialHash	lib/uthash/tests/test62.c	/^unsigned int TrivialHash(const char *s, size_t len)$/;"	f	typeref:typename:unsigned int
TwoRefs	lib/flecs/test/api/src/SystemPeriodic.c	/^void TwoRefs(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Type	lib/flecs/flecs.h	/^using Type = EcsType;$/;"	t	namespace:flecs	typeref:typename:EcsType
Type	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using Type = EcsType;$/;"	t	namespace:flecs	typeref:typename:EcsType
TypeObserver	lib/flecs/test/api/src/Observer.c	/^void TypeObserver(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TypeSystem	lib/flecs/test/api/src/SystemPeriodic.c	/^void TypeSystem(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TypeTrigger	lib/flecs/test/api/src/Trigger.c	/^void TypeTrigger(ecs_iter_t *it) {$/;"	f	typeref:typename:void
TypeWithEntity	lib/flecs/examples/cpp/reflection/entity_type/src/main.cpp	/^struct TypeWithEntity {$/;"	s	file:
TypeWithEnum	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^} TypeWithEnum;$/;"	t	typeref:struct:__anon0f08a1c60208	file:
TypeWithEnum	lib/flecs/examples/cpp/reflection/basics_enum/src/main.cpp	/^struct TypeWithEnum {$/;"	s	file:
Type_create_type_from_system	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_create_type_from_system() {$/;"	f	typeref:typename:void
Type_entity_and_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_and_str() {$/;"	f	typeref:typename:void
Type_entity_case_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_case_str() {$/;"	f	typeref:typename:void
Type_entity_childof_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_childof_str() {$/;"	f	typeref:typename:void
Type_entity_instanceof_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_instanceof_str() {$/;"	f	typeref:typename:void
Type_entity_not_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_not_str() {$/;"	f	typeref:typename:void
Type_entity_or_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_or_str() {$/;"	f	typeref:typename:void
Type_entity_pair_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_pair_str() {$/;"	f	typeref:typename:void
Type_entity_path_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_path_str() {$/;"	f	typeref:typename:void
Type_entity_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_str() {$/;"	f	typeref:typename:void
Type_entity_str_small_buffer	lib/flecs/test/api/src/Type.c	/^void Type_entity_str_small_buffer() {$/;"	f	typeref:typename:void
Type_entity_switch_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_switch_str() {$/;"	f	typeref:typename:void
Type_entity_xor_str	lib/flecs/test/api/src/Type.c	/^void Type_entity_xor_str() {$/;"	f	typeref:typename:void
Type_get	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_get() {$/;"	f	typeref:typename:void
Type_get_out_of_range	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_get_out_of_range() {$/;"	f	typeref:typename:void
Type_get_type	lib/flecs/test/api/src/Type.c	/^void Type_get_type() {$/;"	f	typeref:typename:void
Type_get_type_from_0	lib/flecs/test/api/src/Type.c	/^void Type_get_type_from_0() {$/;"	f	typeref:typename:void
Type_get_type_from_empty	lib/flecs/test/api/src/Type.c	/^void Type_get_type_from_empty() {$/;"	f	typeref:typename:void
Type_has_entity	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_has_entity() {$/;"	f	typeref:typename:void
Type_has_from_stage	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_has_from_stage() {$/;"	f	typeref:typename:void
Type_has_pair_entity	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_has_pair_entity() {$/;"	f	typeref:typename:void
Type_has_pair_type	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_has_pair_type() {$/;"	f	typeref:typename:void
Type_has_type	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_has_type() {$/;"	f	typeref:typename:void
Type_invalid_container_type_expression	lib/flecs/test/api/src/Type.c	/^void Type_invalid_container_type_expression() {$/;"	f	typeref:typename:void
Type_invalid_entity_type_expression	lib/flecs/test/api/src/Type.c	/^void Type_invalid_entity_type_expression() {$/;"	f	typeref:typename:void
Type_invalid_system_type_expression	lib/flecs/test/api/src/Type.c	/^void Type_invalid_system_type_expression() {$/;"	f	typeref:typename:void
Type_large_type_expr	lib/flecs/test/api/src/Type.c	/^void Type_large_type_expr() {$/;"	f	typeref:typename:void
Type_large_type_expr_limit	lib/flecs/test/api/src/Type.c	/^void Type_large_type_expr_limit() {$/;"	f	typeref:typename:void
Type_null_args	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_null_args() {$/;"	f	typeref:typename:void
Type_role_and_str	lib/flecs/test/api/src/Type.c	/^void Type_role_and_str() {$/;"	f	typeref:typename:void
Type_role_case_str	lib/flecs/test/api/src/Type.c	/^void Type_role_case_str() {$/;"	f	typeref:typename:void
Type_role_disabled_str	lib/flecs/test/api/src/Type.c	/^void Type_role_disabled_str() {$/;"	f	typeref:typename:void
Type_role_not_str	lib/flecs/test/api/src/Type.c	/^void Type_role_not_str() {$/;"	f	typeref:typename:void
Type_role_or_str	lib/flecs/test/api/src/Type.c	/^void Type_role_or_str() {$/;"	f	typeref:typename:void
Type_role_owned_str	lib/flecs/test/api/src/Type.c	/^void Type_role_owned_str() {$/;"	f	typeref:typename:void
Type_role_pair_str	lib/flecs/test/api/src/Type.c	/^void Type_role_pair_str() {$/;"	f	typeref:typename:void
Type_role_switch_str	lib/flecs/test/api/src/Type.c	/^void Type_role_switch_str() {$/;"	f	typeref:typename:void
Type_role_xor_str	lib/flecs/test/api/src/Type.c	/^void Type_role_xor_str() {$/;"	f	typeref:typename:void
Type_setup	lib/flecs/test/api/src/Type.c	/^void Type_setup() {$/;"	f	typeref:typename:void
Type_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case Type_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Type_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case Type_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Type_type_from_iter	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_type_from_iter() {$/;"	f	typeref:typename:void
Type_type_from_staged_iter	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_type_from_staged_iter() {$/;"	f	typeref:typename:void
Type_type_no_name	lib/flecs/test/cpp_api/src/Type.cpp	/^void Type_type_no_name() {$/;"	f	typeref:typename:void
Type_type_of_1_tostr	lib/flecs/test/api/src/Type.c	/^void Type_type_of_1_tostr() {$/;"	f	typeref:typename:void
Type_type_of_2_tostr	lib/flecs/test/api/src/Type.c	/^void Type_type_of_2_tostr() {$/;"	f	typeref:typename:void
Type_type_of_2_tostr_no_id	lib/flecs/test/api/src/Type.c	/^void Type_type_of_2_tostr_no_id() {$/;"	f	typeref:typename:void
Type_type_redefine	lib/flecs/test/api/src/Type.c	/^void Type_type_redefine() {$/;"	f	typeref:typename:void
Type_type_to_expr_1_comp	lib/flecs/test/api/src/Type.c	/^void Type_type_to_expr_1_comp() {$/;"	f	typeref:typename:void
Type_type_to_expr_2_comp	lib/flecs/test/api/src/Type.c	/^void Type_type_to_expr_2_comp() {$/;"	f	typeref:typename:void
Type_type_to_expr_childof	lib/flecs/test/api/src/Type.c	/^void Type_type_to_expr_childof() {$/;"	f	typeref:typename:void
Type_type_to_expr_instanceof	lib/flecs/test/api/src/Type.c	/^void Type_type_to_expr_instanceof() {$/;"	f	typeref:typename:void
Type_type_to_expr_pair	lib/flecs/test/api/src/Type.c	/^void Type_type_to_expr_pair() {$/;"	f	typeref:typename:void
Type_type_to_expr_pair_w_comp	lib/flecs/test/api/src/Type.c	/^void Type_type_to_expr_pair_w_comp() {$/;"	f	typeref:typename:void
Type_type_to_expr_scope	lib/flecs/test/api/src/Type.c	/^void Type_type_to_expr_scope() {$/;"	f	typeref:typename:void
U16	lib/flecs/flecs.h	/^static const flecs::entity_t U16 = ecs_id(ecs_u16_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
U16	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t U16 = ecs_id(ecs_u16_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
U32	lib/flecs/flecs.h	/^static const flecs::entity_t U32 = ecs_id(ecs_u32_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
U32	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t U32 = ecs_id(ecs_u32_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
U64	lib/flecs/flecs.h	/^static const flecs::entity_t U64 = ecs_id(ecs_u64_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
U64	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t U64 = ecs_id(ecs_u64_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
U8	lib/flecs/flecs.h	/^static const flecs::entity_t U8 = ecs_id(ecs_u8_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
U8	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t U8 = ecs_id(ecs_u8_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
UNALIGNED_KEYS	lib/uthash/tests/keystat.c	/^#define UNALIGNED_KEYS /;"	d	file:
UNITS_BAKE_CONFIG_H	lib/flecs/examples/c/reflection/units/include/units/bake_config.h	/^#define UNITS_BAKE_CONFIG_H$/;"	d
UNITS_BAKE_CONFIG_H	lib/flecs/examples/cpp/reflection/units/include/units/bake_config.h	/^#define UNITS_BAKE_CONFIG_H$/;"	d
UNITS_H	lib/flecs/examples/c/reflection/units/include/units.h	/^#define UNITS_H$/;"	d
UNITS_H	lib/flecs/examples/cpp/reflection/units/include/units.h	/^#define UNITS_H$/;"	d
URL_ROOT	lib/flecs/flecs.c	/^#define URL_ROOT /;"	d	file:
URL_ROOT	lib/flecs/src/addons/coredoc.c	/^#define URL_ROOT /;"	d	file:
UTARRAY_H	lib/uthash/include/utarray.h	/^#define UTARRAY_H$/;"	d
UTARRAY_H	lib/uthash/src/utarray.h	/^#define UTARRAY_H$/;"	d
UTARRAY_UNUSED	lib/uthash/include/utarray.h	/^#define UTARRAY_UNUSED /;"	d
UTARRAY_UNUSED	lib/uthash/include/utarray.h	/^#define UTARRAY_UNUSED$/;"	d
UTARRAY_UNUSED	lib/uthash/include/utarray.h	/^static const UT_icd ut_int_icd UTARRAY_UNUSED = {sizeof(int),NULL,NULL,NULL};$/;"	v	typeref:typename:const UT_icd ut_int_icd
UTARRAY_UNUSED	lib/uthash/include/utarray.h	/^static const UT_icd ut_ptr_icd UTARRAY_UNUSED = {sizeof(void*),NULL,NULL,NULL};$/;"	v	typeref:typename:const UT_icd ut_ptr_icd
UTARRAY_UNUSED	lib/uthash/include/utarray.h	/^static const UT_icd ut_str_icd UTARRAY_UNUSED = {sizeof(char*),NULL,utarray_str_cpy,utarray_str_/;"	v	typeref:typename:const UT_icd ut_str_icd
UTARRAY_UNUSED	lib/uthash/src/utarray.h	/^#define UTARRAY_UNUSED /;"	d
UTARRAY_UNUSED	lib/uthash/src/utarray.h	/^#define UTARRAY_UNUSED$/;"	d
UTARRAY_UNUSED	lib/uthash/src/utarray.h	/^static const UT_icd ut_int_icd UTARRAY_UNUSED = {sizeof(int),NULL,NULL,NULL};$/;"	v	typeref:typename:const UT_icd ut_int_icd
UTARRAY_UNUSED	lib/uthash/src/utarray.h	/^static const UT_icd ut_ptr_icd UTARRAY_UNUSED = {sizeof(void*),NULL,NULL,NULL};$/;"	v	typeref:typename:const UT_icd ut_ptr_icd
UTARRAY_UNUSED	lib/uthash/src/utarray.h	/^static const UT_icd ut_str_icd UTARRAY_UNUSED = {sizeof(char*),NULL,utarray_str_cpy,utarray_str_/;"	v	typeref:typename:const UT_icd ut_str_icd
UTARRAY_VERSION	lib/uthash/include/utarray.h	/^#define UTARRAY_VERSION /;"	d
UTARRAY_VERSION	lib/uthash/src/utarray.h	/^#define UTARRAY_VERSION /;"	d
UTF32	lib/uthash/tests/test22.c	/^#define UTF32 /;"	d	file:
UTHASH_H	lib/uthash/include/uthash.h	/^#define UTHASH_H$/;"	d
UTHASH_H	lib/uthash/src/uthash.h	/^#define UTHASH_H$/;"	d
UTHASH_VERSION	lib/uthash/include/uthash.h	/^#define UTHASH_VERSION /;"	d
UTHASH_VERSION	lib/uthash/src/uthash.h	/^#define UTHASH_VERSION /;"	d
UTILITY_SCREEN_H	include/screens/utility.h	/^#define UTILITY_SCREEN_H$/;"	d
UTILS	lib/uthash/tests/Makefile	/^UTILS = emit_keys$/;"	m
UTLIST_CASTASGN	lib/uthash/include/utlist.h	/^#define UTLIST_CASTASGN(/;"	d
UTLIST_CASTASGN	lib/uthash/src/utlist.h	/^#define UTLIST_CASTASGN(/;"	d
UTLIST_H	lib/uthash/include/utlist.h	/^#define UTLIST_H$/;"	d
UTLIST_H	lib/uthash/src/utlist.h	/^#define UTLIST_H$/;"	d
UTLIST_NEXT	lib/uthash/include/utlist.h	/^#define UTLIST_NEXT(/;"	d
UTLIST_NEXT	lib/uthash/src/utlist.h	/^#define UTLIST_NEXT(/;"	d
UTLIST_NEXTASGN	lib/uthash/include/utlist.h	/^#define UTLIST_NEXTASGN(/;"	d
UTLIST_NEXTASGN	lib/uthash/src/utlist.h	/^#define UTLIST_NEXTASGN(/;"	d
UTLIST_PREVASGN	lib/uthash/include/utlist.h	/^#define UTLIST_PREVASGN(/;"	d
UTLIST_PREVASGN	lib/uthash/src/utlist.h	/^#define UTLIST_PREVASGN(/;"	d
UTLIST_RS	lib/uthash/include/utlist.h	/^#define UTLIST_RS(/;"	d
UTLIST_RS	lib/uthash/src/utlist.h	/^#define UTLIST_RS(/;"	d
UTLIST_SV	lib/uthash/include/utlist.h	/^#define UTLIST_SV(/;"	d
UTLIST_SV	lib/uthash/src/utlist.h	/^#define UTLIST_SV(/;"	d
UTLIST_VERSION	lib/uthash/include/utlist.h	/^#define UTLIST_VERSION /;"	d
UTLIST_VERSION	lib/uthash/src/utlist.h	/^#define UTLIST_VERSION /;"	d
UTRINGBUFFER_H	lib/uthash/include/utringbuffer.h	/^#define UTRINGBUFFER_H$/;"	d
UTRINGBUFFER_H	lib/uthash/src/utringbuffer.h	/^#define UTRINGBUFFER_H$/;"	d
UTRINGBUFFER_VERSION	lib/uthash/include/utringbuffer.h	/^#define UTRINGBUFFER_VERSION /;"	d
UTRINGBUFFER_VERSION	lib/uthash/src/utringbuffer.h	/^#define UTRINGBUFFER_VERSION /;"	d
UTSTACK_H	lib/uthash/include/utstack.h	/^#define UTSTACK_H$/;"	d
UTSTACK_H	lib/uthash/src/utstack.h	/^#define UTSTACK_H$/;"	d
UTSTACK_VERSION	lib/uthash/include/utstack.h	/^#define UTSTACK_VERSION /;"	d
UTSTACK_VERSION	lib/uthash/src/utstack.h	/^#define UTSTACK_VERSION /;"	d
UTSTRING_H	lib/uthash/include/utstring.h	/^#define UTSTRING_H$/;"	d
UTSTRING_H	lib/uthash/src/utstring.h	/^#define UTSTRING_H$/;"	d
UTSTRING_UNUSED	lib/uthash/include/utstring.h	/^#define UTSTRING_UNUSED /;"	d
UTSTRING_UNUSED	lib/uthash/include/utstring.h	/^#define UTSTRING_UNUSED$/;"	d
UTSTRING_UNUSED	lib/uthash/src/utstring.h	/^#define UTSTRING_UNUSED /;"	d
UTSTRING_UNUSED	lib/uthash/src/utstring.h	/^#define UTSTRING_UNUSED$/;"	d
UTSTRING_VERSION	lib/uthash/include/utstring.h	/^#define UTSTRING_VERSION /;"	d
UTSTRING_VERSION	lib/uthash/src/utstring.h	/^#define UTSTRING_VERSION /;"	d
UT_array	lib/uthash/include/utarray.h	/^} UT_array;$/;"	t	typeref:struct:__anonf30a79380208
UT_array	lib/uthash/src/utarray.h	/^} UT_array;$/;"	t	typeref:struct:__anon57c8b0dc0208
UT_hash_bucket	lib/uthash/include/uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	lib/uthash/include/uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_bucket	lib/uthash/src/uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	lib/uthash/src/uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_handle	lib/uthash/include/uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	lib/uthash/include/uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_handle	lib/uthash/src/uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	lib/uthash/src/uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_table	lib/uthash/include/uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	lib/uthash/include/uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
UT_hash_table	lib/uthash/src/uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	lib/uthash/src/uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
UT_icd	lib/uthash/include/utarray.h	/^} UT_icd;$/;"	t	typeref:struct:__anonf30a79380108
UT_icd	lib/uthash/src/utarray.h	/^} UT_icd;$/;"	t	typeref:struct:__anon57c8b0dc0108
UT_ringbuffer	lib/uthash/include/utringbuffer.h	/^} UT_ringbuffer;$/;"	t	typeref:struct:__anon8907aae30108
UT_ringbuffer	lib/uthash/src/utringbuffer.h	/^} UT_ringbuffer;$/;"	t	typeref:struct:__anon5ece49070108
UT_string	lib/uthash/include/utstring.h	/^} UT_string;$/;"	t	typeref:struct:__anon8b7ab8d00108
UT_string	lib/uthash/src/utstring.h	/^} UT_string;$/;"	t	typeref:struct:__anon87ffe4f40108
UnSet	lib/flecs/flecs.h	/^static const flecs::entity_t UnSet = EcsUnSet;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
UnSet	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t UnSet = EcsUnSet;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
UnSet	lib/flecs/test/api/src/Observer.c	/^void UnSet(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
UnSetA	lib/flecs/test/api/src/Observer.c	/^void UnSetA(ecs_iter_t *it) { }$/;"	f	typeref:typename:void	file:
UnSetB	lib/flecs/test/api/src/Observer.c	/^void UnSetB(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
UnSet_TestComp	lib/flecs/test/api/src/Observer.c	/^void UnSet_TestComp(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
UnSet_WriteComp	lib/flecs/test/api/src/Observer.c	/^void UnSet_WriteComp(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
Unit	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^struct Unit { };$/;"	s	file:
Unit	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct Unit { };$/;"	s	file:
Unit	lib/flecs/flecs.h	/^using Unit = EcsUnit;$/;"	t	namespace:flecs	typeref:typename:EcsUnit
Unit	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using Unit = EcsUnit;$/;"	t	namespace:flecs	typeref:typename:EcsUnit
Units_builtin_units	lib/flecs/test/meta/src/Units.c	/^void Units_builtin_units() {$/;"	f	typeref:typename:void
Units_cursor_get_unit	lib/flecs/test/meta/src/Units.c	/^void Units_cursor_get_unit() {$/;"	f	typeref:typename:void
Units_cursor_get_unit_type	lib/flecs/test/meta/src/Units.c	/^void Units_cursor_get_unit_type() {$/;"	f	typeref:typename:void
Units_define_twice	lib/flecs/test/meta/src/Units.c	/^void Units_define_twice() {$/;"	f	typeref:typename:void
Units_define_twice_different_quantity	lib/flecs/test/meta/src/Units.c	/^void Units_define_twice_different_quantity() {$/;"	f	typeref:typename:void
Units_define_twice_remove_quantity	lib/flecs/test/meta/src/Units.c	/^void Units_define_twice_remove_quantity() {$/;"	f	typeref:typename:void
Units_member_w_invalid_unit	lib/flecs/test/meta/src/Units.c	/^void Units_member_w_invalid_unit() {$/;"	f	typeref:typename:void
Units_member_w_unit	lib/flecs/test/meta/src/Units.c	/^void Units_member_w_unit() {$/;"	f	typeref:typename:void
Units_member_w_unit_type	lib/flecs/test/meta/src/Units.c	/^void Units_member_w_unit_type() {$/;"	f	typeref:typename:void
Units_set_unit	lib/flecs/test/meta/src/Units.c	/^void Units_set_unit() {$/;"	f	typeref:typename:void
Units_set_unit_w_derived	lib/flecs/test/meta/src/Units.c	/^void Units_set_unit_w_derived() {$/;"	f	typeref:typename:void
Units_set_unit_w_over	lib/flecs/test/meta/src/Units.c	/^void Units_set_unit_w_over() {$/;"	f	typeref:typename:void
Units_set_unit_w_prefix	lib/flecs/test/meta/src/Units.c	/^void Units_set_unit_w_prefix() {$/;"	f	typeref:typename:void
Units_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case Units_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Units_unit_w_derived	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_derived() {$/;"	f	typeref:typename:void
Units_unit_w_invalid_derived	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_invalid_derived() {$/;"	f	typeref:typename:void
Units_unit_w_invalid_over	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_invalid_over() {$/;"	f	typeref:typename:void
Units_unit_w_invalid_quantity	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_invalid_quantity() {$/;"	f	typeref:typename:void
Units_unit_w_invalid_symbol_w_over	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_invalid_symbol_w_over() {$/;"	f	typeref:typename:void
Units_unit_w_invalid_symbol_w_prefix	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_invalid_symbol_w_prefix() {$/;"	f	typeref:typename:void
Units_unit_w_over	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_over() {$/;"	f	typeref:typename:void
Units_unit_w_over_no_derived	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_over_no_derived() {$/;"	f	typeref:typename:void
Units_unit_w_prefix	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_prefix() {$/;"	f	typeref:typename:void
Units_unit_w_quantity	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_quantity() {$/;"	f	typeref:typename:void
Units_unit_w_self_quantity	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_self_quantity() {$/;"	f	typeref:typename:void
Units_unit_w_self_quantity_after_init	lib/flecs/test/meta/src/Units.c	/^void Units_unit_w_self_quantity_after_init() {$/;"	f	typeref:typename:void
Uptr	lib/flecs/flecs.h	/^static const flecs::entity_t Uptr = ecs_id(ecs_uptr_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Uptr	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^static const flecs::entity_t Uptr = ecs_id(ecs_uptr_t);$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
VALGRIND	lib/flecs/flecs.c	/^#define VALGRIND$/;"	d	file:
VALGRIND	lib/flecs/src/datastructures/hash.c	/^#define VALGRIND$/;"	d	file:
Value	lib/flecs/test/cpp_api/src/Query.cpp	/^    struct Value { int value; };$/;"	s	function:Query_test_no_defer_each	file:
Value	lib/flecs/test/cpp_api/src/Query.cpp	/^    struct Value { int value; };$/;"	s	function:Query_test_no_defer_iter	file:
Value	lib/flecs/test/cpp_api/src/System.cpp	/^    struct Value { int value; };$/;"	s	function:System_test_auto_defer_each	file:
Value	lib/flecs/test/cpp_api/src/System.cpp	/^    struct Value { int value; };$/;"	s	function:System_test_auto_defer_iter	file:
VarDefault	lib/flecs/flecs.h	/^    VarDefault = EcsVarDefault,$/;"	e	enum:flecs::var_kind_t
VarDefault	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    VarDefault = EcsVarDefault,$/;"	e	enum:flecs::var_kind_t
VarIsEntity	lib/flecs/flecs.h	/^    VarIsEntity = EcsVarIsEntity,$/;"	e	enum:flecs::var_kind_t
VarIsEntity	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    VarIsEntity = EcsVarIsEntity,$/;"	e	enum:flecs::var_kind_t
VarIsVariable	lib/flecs/flecs.h	/^    VarIsVariable = EcsVarIsVariable$/;"	e	enum:flecs::var_kind_t
VarIsVariable	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^    VarIsVariable = EcsVarIsVariable$/;"	e	enum:flecs::var_kind_t
Vector	lib/flecs/flecs.h	/^using Vector = EcsVector;$/;"	t	namespace:flecs	typeref:typename:EcsVector
Vector	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using Vector = EcsVector;$/;"	t	namespace:flecs	typeref:typename:EcsVector
VectorTypes_testcases	lib/flecs/test/meta/src/main.c	/^bake_test_case VectorTypes_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
VectorTypes_vector_bool	lib/flecs/test/meta/src/VectorTypes.c	/^void VectorTypes_vector_bool() {$/;"	f	typeref:typename:void
VectorTypes_vector_i32	lib/flecs/test/meta/src/VectorTypes.c	/^void VectorTypes_vector_i32() {$/;"	f	typeref:typename:void
VectorTypes_vector_struct	lib/flecs/test/meta/src/VectorTypes.c	/^void VectorTypes_vector_struct() {$/;"	f	typeref:typename:void
Vector_add_empty	lib/flecs/test/collections/src/Vector.c	/^void Vector_add_empty() {$/;"	f	typeref:typename:void
Vector_add_resize	lib/flecs/test/collections/src/Vector.c	/^void Vector_add_resize() {$/;"	f	typeref:typename:void
Vector_addn_to_0_size	lib/flecs/test/collections/src/Vector.c	/^void Vector_addn_to_0_size() {$/;"	f	typeref:typename:void
Vector_addn_to_null	lib/flecs/test/collections/src/Vector.c	/^void Vector_addn_to_null() {$/;"	f	typeref:typename:void
Vector_copy	lib/flecs/test/collections/src/Vector.c	/^void Vector_copy() {$/;"	f	typeref:typename:void
Vector_copy_null	lib/flecs/test/collections/src/Vector.c	/^void Vector_copy_null() {$/;"	f	typeref:typename:void
Vector_count	lib/flecs/test/collections/src/Vector.c	/^void Vector_count() {$/;"	f	typeref:typename:void
Vector_count_empty	lib/flecs/test/collections/src/Vector.c	/^void Vector_count_empty() {$/;"	f	typeref:typename:void
Vector_free_empty	lib/flecs/test/collections/src/Vector.c	/^void Vector_free_empty() {$/;"	f	typeref:typename:void
Vector_get	lib/flecs/test/collections/src/Vector.c	/^void Vector_get() {$/;"	f	typeref:typename:void
Vector_get_empty	lib/flecs/test/collections/src/Vector.c	/^void Vector_get_empty() {$/;"	f	typeref:typename:void
Vector_get_first	lib/flecs/test/collections/src/Vector.c	/^void Vector_get_first() {$/;"	f	typeref:typename:void
Vector_get_last	lib/flecs/test/collections/src/Vector.c	/^void Vector_get_last() {$/;"	f	typeref:typename:void
Vector_get_last_from_empty	lib/flecs/test/collections/src/Vector.c	/^void Vector_get_last_from_empty() {$/;"	f	typeref:typename:void
Vector_get_last_from_null	lib/flecs/test/collections/src/Vector.c	/^void Vector_get_last_from_null() {$/;"	f	typeref:typename:void
Vector_get_out_of_bound	lib/flecs/test/collections/src/Vector.c	/^void Vector_get_out_of_bound() {$/;"	f	typeref:typename:void
Vector_grow	lib/flecs/test/collections/src/Vector.c	/^void Vector_grow() {$/;"	f	typeref:typename:void
Vector_memory	lib/flecs/test/collections/src/Vector.c	/^void Vector_memory() {$/;"	f	typeref:typename:void
Vector_memory_from_null	lib/flecs/test/collections/src/Vector.c	/^void Vector_memory_from_null() {$/;"	f	typeref:typename:void
Vector_pop_elements	lib/flecs/test/collections/src/Vector.c	/^void Vector_pop_elements() {$/;"	f	typeref:typename:void
Vector_pop_null	lib/flecs/test/collections/src/Vector.c	/^void Vector_pop_null() {$/;"	f	typeref:typename:void
Vector_reclaim	lib/flecs/test/collections/src/Vector.c	/^void Vector_reclaim() {$/;"	f	typeref:typename:void
Vector_set_min_count	lib/flecs/test/collections/src/Vector.c	/^void Vector_set_min_count() {$/;"	f	typeref:typename:void
Vector_set_min_size	lib/flecs/test/collections/src/Vector.c	/^void Vector_set_min_size() {$/;"	f	typeref:typename:void
Vector_set_min_size_to_smaller	lib/flecs/test/collections/src/Vector.c	/^void Vector_set_min_size_to_smaller() {$/;"	f	typeref:typename:void
Vector_set_size_smaller_than_count	lib/flecs/test/collections/src/Vector.c	/^void Vector_set_size_smaller_than_count() {$/;"	f	typeref:typename:void
Vector_setup	lib/flecs/test/collections/src/Vector.c	/^void Vector_setup() {$/;"	f	typeref:typename:void
Vector_size_of_null	lib/flecs/test/collections/src/Vector.c	/^void Vector_size_of_null() {$/;"	f	typeref:typename:void
Vector_sort_empty	lib/flecs/test/collections/src/Vector.c	/^void Vector_sort_empty() {$/;"	f	typeref:typename:void
Vector_sort_null	lib/flecs/test/collections/src/Vector.c	/^void Vector_sort_null() {$/;"	f	typeref:typename:void
Vector_sort_rnd	lib/flecs/test/collections/src/Vector.c	/^void Vector_sort_rnd() {$/;"	f	typeref:typename:void
Vector_sort_sorted	lib/flecs/test/collections/src/Vector.c	/^void Vector_sort_sorted() {$/;"	f	typeref:typename:void
Vector_testcases	lib/flecs/test/collections/src/main.c	/^bake_test_case Vector_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
Velocity	lib/flecs/examples/c/entities/iterate_components/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon91bc140a0108	file:
Velocity	lib/flecs/examples/c/hello_world/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anond3e263be0108	file:
Velocity	lib/flecs/examples/c/queries/basics/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon1360c0250108	file:
Velocity	lib/flecs/examples/c/queries/instancing/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon12ad033e0108	file:
Velocity	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon7b79ffa80108	file:
Velocity	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon70a3d52e0108	file:
Velocity	lib/flecs/examples/c/systems/basics/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon9c840e7f0108	file:
Velocity	lib/flecs/examples/c/systems/pipeline/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anone425e6800108	file:
Velocity	lib/flecs/examples/c/systems/sync_point/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anonc203dd100108	file:
Velocity	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon263776a20108	file:
Velocity	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^struct Velocity {$/;"	s	file:
Velocity	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^struct Velocity {$/;"	s	file:
Velocity	lib/flecs/examples/cpp/queries/ad_hoc_query/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/examples/cpp/queries/instancing/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^struct Velocity {$/;"	s	file:
Velocity	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^struct Velocity {$/;"	s	file:
Velocity	lib/flecs/examples/cpp/systems/basics/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/test/api/include/api.h	/^typedef struct Velocity {$/;"	s
Velocity	lib/flecs/test/api/include/api.h	/^} Velocity;$/;"	t	typeref:struct:Velocity
Velocity	lib/flecs/test/cpp_api/include/cpp_api.h	/^struct Velocity {$/;"	s
Velocity	lib/flecs/test/custom_builds/c/pipeline/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon09f76fa60108	file:
Velocity	lib/flecs/test/custom_builds/c/pipeline_w_system/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon6ce82e000108	file:
Velocity	lib/flecs/test/custom_builds/c/system/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon8c3501f50108	file:
Velocity	lib/flecs/test/custom_builds/c/timer/src/main.c	/^} Position, Velocity;$/;"	t	typeref:struct:__anon7ef2bd910108	file:
Velocity	lib/flecs/test/custom_builds/cpp/pipeline/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/test/custom_builds/cpp/system/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/test/custom_builds/cpp/timer/src/main.cpp	/^struct Velocity { $/;"	s	file:
Velocity	lib/flecs/test/meta/include/meta.h	/^} Position, Velocity;$/;"	t	typeref:struct:__anon8e06701c0108
WILDCARDS_BAKE_CONFIG_H	lib/flecs/examples/c/queries/wildcards/include/wildcards/bake_config.h	/^#define WILDCARDS_BAKE_CONFIG_H$/;"	d
WILDCARDS_BAKE_CONFIG_H	lib/flecs/examples/cpp/queries/wildcards/include/wildcards/bake_config.h	/^#define WILDCARDS_BAKE_CONFIG_H$/;"	d
WILDCARDS_H	lib/flecs/examples/c/queries/wildcards/include/wildcards.h	/^#define WILDCARDS_H$/;"	d
WILDCARDS_H	lib/flecs/examples/cpp/queries/wildcards/include/wildcards.h	/^#define WILDCARDS_H$/;"	d
WIN32_LEAN_AND_MEAN	lib/flecs/flecs.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	lib/flecs/src/addons/http.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
Walking	lib/flecs/examples/cpp/entities/basics/src/main.cpp	/^struct Walking { };$/;"	s	file:
Walking	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Walking { };$/;"	s	function:QueryBuilder_role	file:
Walking	lib/flecs/test/cpp_api/src/Switch.cpp	/^    struct Walking { };$/;"	s	struct:Movement	file:
Warrior	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^struct Warrior : MeleeUnit { };$/;"	s	file:
Warrior	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct Warrior : MeleeUnit { };$/;"	s	file:
WeatherStation	lib/flecs/examples/c/reflection/units/src/main.c	/^} WeatherStation;$/;"	t	typeref:struct:__anon444de4d00108	file:
WeatherStation	lib/flecs/examples/cpp/reflection/units/src/main.cpp	/^struct WeatherStation {$/;"	s	file:
White	lib/flecs/test/cpp_api/src/Enum.cpp	/^    Black = 1, White = 3, Grey = 5$/;"	e	enum:SparseEnum	file:
Wildcard	lib/flecs/flecs.h	/^static const flecs::entity_t Wildcard = EcsWildcard;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Wildcard	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t Wildcard = EcsWildcard;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
With	lib/flecs/flecs.h	/^static const flecs::entity_t With = EcsWith;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
With	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t With = EcsWith;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
Wizard	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^struct Wizard : RangedUnit { };$/;"	s	file:
Wizard	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^struct Wizard : RangedUnit { };$/;"	s	file:
WoodenArmor	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct WoodenArmor { };$/;"	s	file:
WoodenSword	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^struct WoodenSword { };$/;"	s	file:
World	lib/flecs/examples/cpp/queries/hierarchy/src/main.cpp	/^struct World { };$/;"	s	file:
World	lib/flecs/flecs.h	/^static const flecs::entity_t World = EcsWorld;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
World	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^static const flecs::entity_t World = EcsWorld;$/;"	v	namespace:flecs	typeref:typename:const flecs::entity_t
WorldFactory_entity	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_entity() {$/;"	f	typeref:typename:void
WorldFactory_entity_w_id	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_entity_w_id() {$/;"	f	typeref:typename:void
WorldFactory_entity_w_name	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_entity_w_name() {$/;"	f	typeref:typename:void
WorldFactory_module	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_module() {$/;"	f	typeref:typename:void
WorldFactory_prefab	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_prefab() {$/;"	f	typeref:typename:void
WorldFactory_prefab_w_name	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_prefab_w_name() {$/;"	f	typeref:typename:void
WorldFactory_query	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_query() {$/;"	f	typeref:typename:void
WorldFactory_query_w_expr	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_query_w_expr() {$/;"	f	typeref:typename:void
WorldFactory_snapshot	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_snapshot() {$/;"	f	typeref:typename:void
WorldFactory_system	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_system() {$/;"	f	typeref:typename:void
WorldFactory_system_w_expr	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_system_w_expr() {$/;"	f	typeref:typename:void
WorldFactory_system_w_name	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_system_w_name() {$/;"	f	typeref:typename:void
WorldFactory_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case WorldFactory_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
WorldFactory_type	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_type() {$/;"	f	typeref:typename:void
WorldFactory_type_w_name	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^void WorldFactory_type_w_name() {$/;"	f	typeref:typename:void
World_async_stage_add	lib/flecs/test/cpp_api/src/World.cpp	/^void World_async_stage_add() {$/;"	f	typeref:typename:void
World_builtin_components	lib/flecs/test/cpp_api/src/World.cpp	/^void World_builtin_components() {$/;"	f	typeref:typename:void
World_c_interop_after_reset	lib/flecs/test/cpp_api/src/World.cpp	/^void World_c_interop_after_reset() {$/;"	f	typeref:typename:void
World_c_interop_module	lib/flecs/test/cpp_api/src/World.cpp	/^void World_c_interop_module() {$/;"	f	typeref:typename:void
World_control_fps	lib/flecs/test/api/src/World.c	/^void World_control_fps() {$/;"	f	typeref:typename:void
World_control_fps_busy_app	lib/flecs/test/api/src/World.c	/^void World_control_fps_busy_app() {$/;"	f	typeref:typename:void
World_control_fps_busy_system	lib/flecs/test/api/src/World.c	/^void World_control_fps_busy_system() {$/;"	f	typeref:typename:void
World_control_fps_random_app	lib/flecs/test/api/src/World.c	/^void World_control_fps_random_app() {$/;"	f	typeref:typename:void
World_control_fps_random_system	lib/flecs/test/api/src/World.c	/^void World_control_fps_random_system() {$/;"	f	typeref:typename:void
World_count	lib/flecs/test/cpp_api/src/World.cpp	/^void World_count() {$/;"	f	typeref:typename:void
World_count_id	lib/flecs/test/cpp_api/src/World.cpp	/^void World_count_id() {$/;"	f	typeref:typename:void
World_count_pair	lib/flecs/test/cpp_api/src/World.cpp	/^void World_count_pair() {$/;"	f	typeref:typename:void
World_count_pair_id	lib/flecs/test/cpp_api/src/World.cpp	/^void World_count_pair_id() {$/;"	f	typeref:typename:void
World_count_pair_type_id	lib/flecs/test/cpp_api/src/World.cpp	/^void World_count_pair_type_id() {$/;"	f	typeref:typename:void
World_delete_with_id	lib/flecs/test/cpp_api/src/World.cpp	/^void World_delete_with_id() {$/;"	f	typeref:typename:void
World_delete_with_pair	lib/flecs/test/cpp_api/src/World.cpp	/^void World_delete_with_pair() {$/;"	f	typeref:typename:void
World_delete_with_pair_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_delete_with_pair_type() {$/;"	f	typeref:typename:void
World_delete_with_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_delete_with_type() {$/;"	f	typeref:typename:void
World_different_comp_same_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_different_comp_same_name() {$/;"	f	typeref:typename:void
World_dim	lib/flecs/test/api/src/World.c	/^void World_dim() {$/;"	f	typeref:typename:void
World_ensure	lib/flecs/test/cpp_api/src/World.cpp	/^void World_ensure() {$/;"	f	typeref:typename:void
World_ensure_empty_root	lib/flecs/test/api/src/World.c	/^void World_ensure_empty_root() {$/;"	f	typeref:typename:void
World_entity_as_component	lib/flecs/test/cpp_api/src/World.cpp	/^void World_entity_as_component() {$/;"	f	typeref:typename:void
World_entity_as_component_2_worlds	lib/flecs/test/cpp_api/src/World.cpp	/^void World_entity_as_component_2_worlds() {$/;"	f	typeref:typename:void
World_entity_as_component_2_worlds_implicit_namespaced	lib/flecs/test/cpp_api/src/World.cpp	/^void World_entity_as_component_2_worlds_implicit_namespaced() {$/;"	f	typeref:typename:void
World_entity_as_namespaced_component_2_worlds	lib/flecs/test/cpp_api/src/World.cpp	/^void World_entity_as_namespaced_component_2_worlds() {$/;"	f	typeref:typename:void
World_entity_as_tag	lib/flecs/test/cpp_api/src/World.cpp	/^void World_entity_as_tag() {$/;"	f	typeref:typename:void
World_entity_range_add_existing_staged	lib/flecs/test/api/src/World.c	/^void World_entity_range_add_existing_staged() {$/;"	f	typeref:typename:void
World_entity_range_add_in_range_staged	lib/flecs/test/api/src/World.c	/^void World_entity_range_add_in_range_staged() {$/;"	f	typeref:typename:void
World_entity_range_add_out_of_range_staged	lib/flecs/test/api/src/World.c	/^void World_entity_range_add_out_of_range_staged() {$/;"	f	typeref:typename:void
World_entity_range_check_after_delete	lib/flecs/test/api/src/World.c	/^void World_entity_range_check_after_delete() {$/;"	f	typeref:typename:void
World_entity_range_limit_out_of_range	lib/flecs/test/api/src/World.c	/^void World_entity_range_limit_out_of_range() {$/;"	f	typeref:typename:void
World_entity_range_offset	lib/flecs/test/api/src/World.c	/^void World_entity_range_offset() {$/;"	f	typeref:typename:void
World_entity_range_offset_out_of_range	lib/flecs/test/api/src/World.c	/^void World_entity_range_offset_out_of_range() {$/;"	f	typeref:typename:void
World_entity_range_out_of_range_check_disabled	lib/flecs/test/api/src/World.c	/^void World_entity_range_out_of_range_check_disabled() {$/;"	f	typeref:typename:void
World_entity_w_name_as_component	lib/flecs/test/cpp_api/src/World.cpp	/^void World_entity_w_name_as_component() {$/;"	f	typeref:typename:void
World_entity_w_name_as_tag	lib/flecs/test/cpp_api/src/World.cpp	/^void World_entity_w_name_as_tag() {$/;"	f	typeref:typename:void
World_entity_w_tag_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_entity_w_tag_name() {$/;"	f	typeref:typename:void
World_exists	lib/flecs/test/cpp_api/src/World.cpp	/^void World_exists() {$/;"	f	typeref:typename:void
World_get_alive	lib/flecs/test/cpp_api/src/World.cpp	/^void World_get_alive() {$/;"	f	typeref:typename:void
World_get_delta_time	lib/flecs/test/api/src/World.c	/^void World_get_delta_time() {$/;"	f	typeref:typename:void
World_get_delta_time_auto	lib/flecs/test/api/src/World.c	/^void World_get_delta_time_auto() {$/;"	f	typeref:typename:void
World_get_scope	lib/flecs/test/cpp_api/src/World.cpp	/^void World_get_scope() {$/;"	f	typeref:typename:void
World_get_scope_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_get_scope_type() {$/;"	f	typeref:typename:void
World_get_tick	lib/flecs/test/api/src/World.c	/^void World_get_tick() {$/;"	f	typeref:typename:void
World_get_tick	lib/flecs/test/cpp_api/src/World.cpp	/^void World_get_tick() {$/;"	f	typeref:typename:void
World_implicit_register_w_new_world	lib/flecs/test/cpp_api/src/World.cpp	/^void World_implicit_register_w_new_world() {$/;"	f	typeref:typename:void
World_implicit_reregister_after_reset	lib/flecs/test/cpp_api/src/World.cpp	/^void World_implicit_reregister_after_reset() {$/;"	f	typeref:typename:void
World_is_alive	lib/flecs/test/cpp_api/src/World.cpp	/^void World_is_alive() {$/;"	f	typeref:typename:void
World_is_entity_enabled	lib/flecs/test/api/src/World.c	/^void World_is_entity_enabled() {$/;"	f	typeref:typename:void
World_is_valid	lib/flecs/test/cpp_api/src/World.cpp	/^void World_is_valid() {$/;"	f	typeref:typename:void
World_measure_delta_time_vs_actual	lib/flecs/test/api/src/World.c	/^void World_measure_delta_time_vs_actual() {$/;"	f	typeref:typename:void
World_measure_fps_vs_actual	lib/flecs/test/api/src/World.c	/^void World_measure_fps_vs_actual() {$/;"	f	typeref:typename:void
World_measure_time	lib/flecs/test/api/src/World.c	/^void World_measure_time() {$/;"	f	typeref:typename:void
World_multi_world_component	lib/flecs/test/cpp_api/src/World.cpp	/^void World_multi_world_component() {$/;"	f	typeref:typename:void
World_multi_world_component_namespace	lib/flecs/test/cpp_api/src/World.cpp	/^void World_multi_world_component_namespace() {$/;"	f	typeref:typename:void
World_multi_world_empty	lib/flecs/test/cpp_api/src/World.cpp	/^void World_multi_world_empty() {$/;"	f	typeref:typename:void
World_multi_world_module	lib/flecs/test/cpp_api/src/World.cpp	/^void World_multi_world_module() {$/;"	f	typeref:typename:void
World_multi_world_recycled_component	lib/flecs/test/cpp_api/src/World.cpp	/^void World_multi_world_recycled_component() {$/;"	f	typeref:typename:void
World_multi_world_recycled_component_different_generation	lib/flecs/test/cpp_api/src/World.cpp	/^void World_multi_world_recycled_component_different_generation() {$/;"	f	typeref:typename:void
World_no_threading	lib/flecs/test/api/src/World.c	/^void World_no_threading() {$/;"	f	typeref:typename:void
World_no_time	lib/flecs/test/api/src/World.c	/^void World_no_time() {$/;"	f	typeref:typename:void
World_phases	lib/flecs/test/api/src/World.c	/^void World_phases() {$/;"	f	typeref:typename:void
World_phases_match_in_create	lib/flecs/test/api/src/World.c	/^void World_phases_match_in_create() {$/;"	f	typeref:typename:void
World_phases_w_merging	lib/flecs/test/api/src/World.c	/^void World_phases_w_merging() {$/;"	f	typeref:typename:void
World_progress_w_0	lib/flecs/test/api/src/World.c	/^void World_progress_w_0() {$/;"	f	typeref:typename:void
World_progress_w_t	lib/flecs/test/api/src/World.c	/^void World_progress_w_t() {$/;"	f	typeref:typename:void
World_quit	lib/flecs/test/api/src/World.c	/^void World_quit() {$/;"	f	typeref:typename:void
World_recreate_world	lib/flecs/test/api/src/World.c	/^void World_recreate_world() {$/;"	f	typeref:typename:void
World_recreate_world_w_component	lib/flecs/test/api/src/World.c	/^void World_recreate_world_w_component() {$/;"	f	typeref:typename:void
World_recursive_lookup	lib/flecs/test/cpp_api/src/World.cpp	/^void World_recursive_lookup() {$/;"	f	typeref:typename:void
World_redefine_component	lib/flecs/test/api/src/World.c	/^void World_redefine_component() {$/;"	f	typeref:typename:void
World_register_alias_twice_different_entity	lib/flecs/test/api/src/World.c	/^void World_register_alias_twice_different_entity() {$/;"	f	typeref:typename:void
World_register_alias_twice_same_entity	lib/flecs/test/api/src/World.c	/^void World_register_alias_twice_same_entity() {$/;"	f	typeref:typename:void
World_register_from_scope	lib/flecs/test/cpp_api/src/World.cpp	/^void World_register_from_scope() {$/;"	f	typeref:typename:void
World_register_namespace_after_component	lib/flecs/test/cpp_api/src/World.cpp	/^void World_register_namespace_after_component() {$/;"	f	typeref:typename:void
World_register_nested_from_scope	lib/flecs/test/cpp_api/src/World.cpp	/^void World_register_nested_from_scope() {$/;"	f	typeref:typename:void
World_register_nested_w_root_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_register_nested_w_root_name() {$/;"	f	typeref:typename:void
World_register_short_template	lib/flecs/test/cpp_api/src/World.cpp	/^void World_register_short_template() {$/;"	f	typeref:typename:void
World_register_w_root_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_register_w_root_name() {$/;"	f	typeref:typename:void
World_reimport	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reimport() {$/;"	f	typeref:typename:void
World_reimport_module_after_reset	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reimport_module_after_reset() {$/;"	f	typeref:typename:void
World_reimport_module_new_world	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reimport_module_new_world() {$/;"	f	typeref:typename:void
World_reimport_namespaced_module	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reimport_namespaced_module() {$/;"	f	typeref:typename:void
World_remove_all_id	lib/flecs/test/cpp_api/src/World.cpp	/^void World_remove_all_id() {$/;"	f	typeref:typename:void
World_remove_all_pair	lib/flecs/test/cpp_api/src/World.cpp	/^void World_remove_all_pair() {$/;"	f	typeref:typename:void
World_remove_all_pair_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_remove_all_pair_type() {$/;"	f	typeref:typename:void
World_remove_all_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_remove_all_type() {$/;"	f	typeref:typename:void
World_reregister_after_reset	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reregister_after_reset() {$/;"	f	typeref:typename:void
World_reregister_after_reset_different_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reregister_after_reset_different_name() {$/;"	f	typeref:typename:void
World_reregister_after_reset_w_namespace	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reregister_after_reset_w_namespace() {$/;"	f	typeref:typename:void
World_reregister_namespace	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reregister_namespace() {$/;"	f	typeref:typename:void
World_reset_all	lib/flecs/test/cpp_api/src/World.cpp	/^void World_reset_all() {$/;"	f	typeref:typename:void
World_set_lookup_path	lib/flecs/test/cpp_api/src/World.cpp	/^void World_set_lookup_path() {$/;"	f	typeref:typename:void
World_setup	lib/flecs/test/api/src/World.c	/^void World_setup() {$/;"	f	typeref:typename:void
World_staged_count	lib/flecs/test/cpp_api/src/World.cpp	/^void World_staged_count() {$/;"	f	typeref:typename:void
World_system_time_scale	lib/flecs/test/api/src/World.c	/^void World_system_time_scale() {$/;"	f	typeref:typename:void
World_template_component_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_template_component_name() {$/;"	f	typeref:typename:void
World_template_component_w_namespace_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_template_component_w_namespace_name() {$/;"	f	typeref:typename:void
World_template_component_w_namespace_name_and_namespaced_arg	lib/flecs/test/cpp_api/src/World.cpp	/^void World_template_component_w_namespace_name_and_namespaced_arg() {$/;"	f	typeref:typename:void
World_template_component_w_same_namespace_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_template_component_w_same_namespace_name() {$/;"	f	typeref:typename:void
World_template_component_w_same_namespace_name_and_namespaced_arg	lib/flecs/test/cpp_api/src/World.cpp	/^void World_template_component_w_same_namespace_name_and_namespaced_arg() {$/;"	f	typeref:typename:void
World_testcases	lib/flecs/test/api/src/main.c	/^bake_test_case World_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
World_testcases	lib/flecs/test/cpp_api/src/main.cpp	/^bake_test_case World_testcases[] = {$/;"	v	typeref:typename:bake_test_case[]
World_type_as_component	lib/flecs/test/cpp_api/src/World.cpp	/^void World_type_as_component() {$/;"	f	typeref:typename:void
World_type_id	lib/flecs/test/cpp_api/src/World.cpp	/^void World_type_id() {$/;"	f	typeref:typename:void
World_type_w_name_as_component	lib/flecs/test/cpp_api/src/World.cpp	/^void World_type_w_name_as_component() {$/;"	f	typeref:typename:void
World_type_w_tag_name	lib/flecs/test/cpp_api/src/World.cpp	/^void World_type_w_tag_name() {$/;"	f	typeref:typename:void
World_with_relation	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_relation() {$/;"	f	typeref:typename:void
World_with_relation_object_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_relation_object_type() {$/;"	f	typeref:typename:void
World_with_relation_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_relation_type() {$/;"	f	typeref:typename:void
World_with_scope	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_scope() {$/;"	f	typeref:typename:void
World_with_scope_nested	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_scope_nested() {$/;"	f	typeref:typename:void
World_with_scope_no_lambda	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_scope_no_lambda() {$/;"	f	typeref:typename:void
World_with_scope_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_scope_type() {$/;"	f	typeref:typename:void
World_with_scope_type_no_lambda	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_scope_type_no_lambda() {$/;"	f	typeref:typename:void
World_with_scope_type_staged	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_scope_type_staged() {$/;"	f	typeref:typename:void
World_with_tag	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_tag() {$/;"	f	typeref:typename:void
World_with_tag_nested	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_tag_nested() {$/;"	f	typeref:typename:void
World_with_tag_type	lib/flecs/test/cpp_api/src/World.cpp	/^void World_with_tag_type() {$/;"	f	typeref:typename:void
WritePosition	lib/flecs/test/api/src/Pipeline.c	/^void WritePosition(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
WriteToMain	lib/flecs/flecs.c	/^    WriteToMain,$/;"	e	enum:ComponentWriteState	file:
WriteToMain	lib/flecs/src/addons/pipeline/pipeline.c	/^    WriteToMain,$/;"	e	enum:ComponentWriteState	file:
WriteToStage	lib/flecs/flecs.c	/^    WriteToStage$/;"	e	enum:ComponentWriteState	file:
WriteToStage	lib/flecs/src/addons/pipeline/pipeline.c	/^    WriteToStage$/;"	e	enum:ComponentWriteState	file:
Yobi	lib/flecs/flecs.h	/^struct Yobi { };$/;"	s	struct:flecs::units
Yobi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Yobi { };$/;"	s	struct:flecs::units
Yocto	lib/flecs/flecs.h	/^struct Yocto { };$/;"	s	struct:flecs::units
Yocto	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Yocto { };$/;"	s	struct:flecs::units
Yotta	lib/flecs/flecs.h	/^struct Yotta { };$/;"	s	struct:flecs::units
Yotta	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Yotta { };$/;"	s	struct:flecs::units
Zebi	lib/flecs/flecs.h	/^struct Zebi { };$/;"	s	struct:flecs::units
Zebi	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Zebi { };$/;"	s	struct:flecs::units
Zepto	lib/flecs/flecs.h	/^struct Zepto { };$/;"	s	struct:flecs::units
Zepto	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Zepto { };$/;"	s	struct:flecs::units
ZeroTimeScale	lib/flecs/test/api/src/World.c	/^void ZeroTimeScale(ecs_iter_t *it) {$/;"	f	typeref:typename:void
Zetta	lib/flecs/flecs.h	/^struct Zetta { };$/;"	s	struct:flecs::units
Zetta	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct Zetta { };$/;"	s	struct:flecs::units
_	lib/flecs/flecs.h	/^namespace _ $/;"	n	namespace:flecs
_	lib/flecs/flecs.h	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/flecs.h	/^namespace _ {$/;"	n	namespace:flecs::doc
_	lib/flecs/flecs.h	/^namespace _ {$/;"	n	namespace:flecs::meta
_	lib/flecs/flecs.h	/^namespace _ {$/;"	n	namespace:flecs::rest
_	lib/flecs/flecs.h	/^namespace _$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/component.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/flecs.hpp	/^namespace _ $/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/impl/lifecycle_traits.hpp	/^namespace _$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^namespace _ $/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^namespace _ $/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^namespace _$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/doc/decl.hpp	/^namespace _ {$/;"	n	namespace:flecs::doc
_	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^namespace _ {$/;"	n	namespace:flecs::doc
_	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^namespace _ {$/;"	n	namespace:flecs::meta
_	lib/flecs/include/flecs/addons/cpp/mixins/meta/impl.hpp	/^namespace _ {$/;"	n	namespace:flecs::meta
_	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/query/builder.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/rest/decl.hpp	/^namespace _ {$/;"	n	namespace:flecs::rest
_	lib/flecs/include/flecs/addons/cpp/mixins/rest/impl.hpp	/^namespace _ {$/;"	n	namespace:flecs::rest
_	lib/flecs/include/flecs/addons/cpp/mixins/rule/builder.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/system/builder.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/system/decl.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/timer/decl.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^namespace _ {$/;"	n	namespace:flecs
_	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^namespace _$/;"	n	namespace:flecs
_1	lib/flecs/flecs.c	/^        ecs_defer_op_1_t _1;$/;"	m	union:ecs_defer_op_t::__anona642c005010a	typeref:typename:ecs_defer_op_1_t	file:
_1	lib/flecs/src/private_types.h	/^        ecs_defer_op_1_t _1;$/;"	m	union:ecs_defer_op_t::__anon1e338c63010a	typeref:typename:ecs_defer_op_1_t
_CACHE_	lib/uthash/tests/lru_cache/cache.h	/^#define _CACHE_$/;"	d
_CRT_SECURE_NO_WARNINGS	include/BearLibTerminal.h	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d
_POSIX_C_SOURCE	lib/flecs/flecs.c	/^#define _POSIX_C_SOURCE /;"	d	file:
_POSIX_C_SOURCE	lib/flecs/src/private_types.h	/^#define _POSIX_C_SOURCE /;"	d
__SIZEOF_WCHAR_T__	include/BearLibTerminal.h	/^#    define __SIZEOF_WCHAR_T__ /;"	d
__anon002d46390102	lib/flecs/examples/cpp/systems/target_fps/src/main.cpp	/^        .iter([](flecs::iter& it) {$/;"	f	function:main	file:
__anon0051089f0102	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter& it, Position *p, Velocity *v) {$/;"	f	function:Query_action	file:
__anon0051089f0202	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter& it, Position *p, const Velocity *v) {$/;"	f	function:Query_action_const	file:
__anon0051089f0302	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter&it, Position *p) {$/;"	f	function:Query_action_shared	file:
__anon0051089f0402	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter& it, Position *p, Velocity *v, Mass *m) {$/;"	f	function:Query_action_optional	file:
__anon0051089f0502	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:Query_each	file:
__anon0051089f0602	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:Query_each_const	file:
__anon0051089f0702	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:Query_each_shared	file:
__anon0051089f0802	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([](flecs::entity e, Position& p, Velocity* v, Mass *m) {$/;"	f	function:Query_each_optional	file:
__anon0051089f0902	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter& it) {$/;"	f	function:Query_signature	file:
__anon0051089f0a02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter& it) {$/;"	f	function:Query_signature_const	file:
__anon0051089f0b02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter&it) {$/;"	f	function:Query_signature_shared	file:
__anon0051089f0c02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter& it) {$/;"	f	function:Query_signature_optional	file:
__anon0051089f0d02	lib/flecs/test/cpp_api/src/Query.cpp	/^    sq.each([](flecs::entity e, Velocity& v) {$/;"	f	function:Query_subquery	file:
__anon0051089f0e02	lib/flecs/test/cpp_api/src/Query.cpp	/^    sq.iter([](flecs::iter it) {$/;"	f	function:Query_subquery_w_expr	file:
__anon0051089f0f02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter it) {$/;"	f	function:Query_query_single_pair	file:
__anon0051089f1002	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity qe, Tag) {$/;"	f	function:Query_tag_w_each	file:
__anon0051089f1102	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity qe, Tag) {$/;"	f	function:Query_shared_tag_w_each	file:
__anon0051089f1202	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter it, Position *p) {$/;"	f	function:Query_sort_by	file:
__anon0051089f1302	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([](const Position& p) { });$/;"	f	function:Query_changed	file:
__anon0051089f1402	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([](const Position& p) { });$/;"	f	function:Query_changed	file:
__anon0051089f1502	lib/flecs/test/cpp_api/src/Query.cpp	/^    q_w.each([](Position& p) { }); \/\/ Query has out term$/;"	f	function:Query_changed	file:
__anon0051089f1602	lib/flecs/test/cpp_api/src/Query.cpp	/^    q_var.each([&](flecs::entity e, Position& p) {$/;"	f	function:Query_default_ctor	file:
__anon0051089f1702	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:Query_expr_w_template	file:
__anon0051089f1802	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity e, Position& p, Template<int>& t) {$/;"	f	function:Query_query_type_w_template	file:
__anon0051089f1902	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter& it) {$/;"	f	function:Query_compare_term_id	file:
__anon0051089f1a02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([](flecs::entity e, Value& v) {$/;"	f	function:Query_test_no_defer_each	file:
__anon0051089f1b02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([](flecs::iter& it, Value *v) {$/;"	f	function:Query_test_no_defer_iter	file:
__anon0051089f1c02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each_term([&](flecs::term& t) {$/;"	f	function:Query_inspect_terms_w_each	file:
__anon0051089f1d02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity e, EatsApples&& a) {$/;"	f	function:Query_each_pair_type	file:
__anon0051089f1e02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter& it, Eats* a) {$/;"	f	function:Query_iter_pair_type	file:
__anon0051089f1f02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter& it) {$/;"	f	function:Query_term_pair_type	file:
__anon0051089f2002	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](Position& p) {$/;"	f	function:Query_each_no_entity_1_comp	file:
__anon0051089f2102	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](Position& p, Velocity& v) {$/;"	f	function:Query_each_no_entity_2_comps	file:
__anon0051089f2202	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_bool(e.get([](const Position& p, const Velocity& v) {$/;"	f	function:Query_each_no_entity_2_comps	file:
__anon0051089f2302	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter& it) {$/;"	f	function:Query_iter_no_comps_1_comp	file:
__anon0051089f2402	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter& it) {$/;"	f	function:Query_iter_no_comps_2_comps	file:
__anon0051089f2502	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter& it) {$/;"	f	function:Query_iter_no_comps_no_comps	file:
__anon0051089f2602	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity e, BeginEvent b_e, EndEvent e_e) {$/;"	f	function:Query_each_pair_object	file:
__anon0051089f2702	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter it, Event *b_e, Event *e_e) {$/;"	f	function:Query_iter_pair_object	file:
__anon0051089f2802	lib/flecs/test/cpp_api/src/Query.cpp	/^        .each([&](flecs::entity e1, Position&) {$/;"	f	function:Query_iter_query_in_system	file:
__anon0051089f2902	lib/flecs/test/cpp_api/src/Query.cpp	/^            q.each([&](flecs::entity e2, Velocity&) {$/;"	f	function:Query_iter_query_in_system::__anon0051089f2802	file:
__anon0051089f2a02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter it) {$/;"	f	function:Query_iter_type	file:
__anon0051089f2b02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity e, Self& s, Position&p, const Velocity& v) {$/;"	f	function:Query_instanced_query_w_singleton_each	file:
__anon0051089f2c02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_each	file:
__anon0051089f2d02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_each	file:
__anon0051089f2e02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_each	file:
__anon0051089f2f02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_each	file:
__anon0051089f3002	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_each	file:
__anon0051089f3102	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity e, Self& s, Position&p, const Velocity& v) {$/;"	f	function:Query_instanced_query_w_base_each	file:
__anon0051089f3202	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_each	file:
__anon0051089f3302	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_each	file:
__anon0051089f3402	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_each	file:
__anon0051089f3502	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_each	file:
__anon0051089f3602	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_each	file:
__anon0051089f3702	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e6.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_each	file:
__anon0051089f3802	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e7.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_each	file:
__anon0051089f3902	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity e, Self& s, Position&p, const Velocity& v) {$/;"	f	function:Query_un_instanced_query_w_singleton_each	file:
__anon0051089f3a02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_each	file:
__anon0051089f3b02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_each	file:
__anon0051089f3c02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_each	file:
__anon0051089f3d02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_each	file:
__anon0051089f3e02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_each	file:
__anon0051089f3f02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::entity e, Self& s, Position&p, const Velocity& v) {$/;"	f	function:Query_un_instanced_query_w_base_each	file:
__anon0051089f4002	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_each	file:
__anon0051089f4102	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_each	file:
__anon0051089f4202	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_each	file:
__anon0051089f4302	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_each	file:
__anon0051089f4402	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_each	file:
__anon0051089f4502	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e6.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_each	file:
__anon0051089f4602	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e7.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_each	file:
__anon0051089f4702	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter it, Self* s, Position* p, const Velocity* v) {$/;"	f	function:Query_instanced_query_w_singleton_iter	file:
__anon0051089f4802	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_iter	file:
__anon0051089f4902	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_iter	file:
__anon0051089f4a02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_iter	file:
__anon0051089f4b02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_iter	file:
__anon0051089f4c02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_singleton_iter	file:
__anon0051089f4d02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter it, Self* s, Position* p, const Velocity* v) {$/;"	f	function:Query_instanced_query_w_base_iter	file:
__anon0051089f4e02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_iter	file:
__anon0051089f4f02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_iter	file:
__anon0051089f5002	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_iter	file:
__anon0051089f5102	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_iter	file:
__anon0051089f5202	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_iter	file:
__anon0051089f5302	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e6.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_iter	file:
__anon0051089f5402	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e7.get([](const Position& p) {$/;"	f	function:Query_instanced_query_w_base_iter	file:
__anon0051089f5502	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter it, Self* s, Position* p, const Velocity* v) {$/;"	f	function:Query_un_instanced_query_w_singleton_iter	file:
__anon0051089f5602	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_iter	file:
__anon0051089f5702	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_iter	file:
__anon0051089f5802	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_iter	file:
__anon0051089f5902	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_iter	file:
__anon0051089f5a02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_singleton_iter	file:
__anon0051089f5b02	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.iter([&](flecs::iter it, Self* s, Position* p, const Velocity* v) {$/;"	f	function:Query_un_instanced_query_w_base_iter	file:
__anon0051089f5c02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_iter	file:
__anon0051089f5d02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_iter	file:
__anon0051089f5e02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_iter	file:
__anon0051089f5f02	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_iter	file:
__anon0051089f6002	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_iter	file:
__anon0051089f6102	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e6.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_iter	file:
__anon0051089f6202	lib/flecs/test/cpp_api/src/Query.cpp	/^    test_assert(e7.get([](const Position& p) {$/;"	f	function:Query_un_instanced_query_w_base_iter	file:
__anon0051089f6302	lib/flecs/test/cpp_api/src/Query.cpp	/^    qc->q.each([&](Position&, Velocity&) { \/\/ Ensure we can iterate const query$/;"	f	function:Query_query_each_from_component	file:
__anon0051089f6402	lib/flecs/test/cpp_api/src/Query.cpp	/^    qc->q.iter([&](flecs::iter& it) { \/\/ Ensure we can iterate const query$/;"	f	function:Query_query_iter_from_component	file:
__anon0051089f6502	lib/flecs/test/cpp_api/src/Query.cpp	/^    q.each([&](flecs::iter& it, int32_t i, Self& s, Position& p) {$/;"	f	function:Query_query_each_w_iter	file:
__anon0051089f6602	lib/flecs/test/cpp_api/src/Query.cpp	/^    qr.iter([](flecs::iter&) { });$/;"	f	function:Query_change_tracking	file:
__anon0051089f6702	lib/flecs/test/cpp_api/src/Query.cpp	/^    qw.iter([&](flecs::iter& it, Position* p) {$/;"	f	function:Query_change_tracking	file:
__anon0051089f6802	lib/flecs/test/cpp_api/src/Query.cpp	/^    qr.iter([&](flecs::iter& it, const Position* p) {$/;"	f	function:Query_change_tracking	file:
__anon048a0a480102	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^    q_read.iter([](flecs::iter& it) {$/;"	f	function:main	file:
__anon048a0a480202	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^    q_write.iter([](flecs::iter& it, const Dirty *dirty, Position *p) {$/;"	f	function:main	file:
__anon048a0a480302	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^    q_read.iter([](flecs::iter& it) {$/;"	f	function:main	file:
__anon06d65d480102	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::entity e, Position& p) {$/;"	f	function:RuleBuilder_1_type	file:
__anon06d65d480202	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:RuleBuilder_2_types	file:
__anon06d65d480302	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::entity e) {$/;"	f	function:RuleBuilder_id_term	file:
__anon06d65d480402	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::entity e) {$/;"	f	function:RuleBuilder_type_term	file:
__anon06d65d480502	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::entity e) {$/;"	f	function:RuleBuilder_id_pair_term	file:
__anon06d65d480602	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_id_pair_wildcard_term	file:
__anon06d65d480702	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_type_pair_term	file:
__anon06d65d480802	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_pair_term_w_var	file:
__anon06d65d480902	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_2_pair_terms_w_var	file:
__anon06d65d480a02	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^        .each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_set_var	file:
__anon06d65d480b02	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^        .each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_set_2_vars	file:
__anon06d65d480c02	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^        .each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_set_var_by_name	file:
__anon06d65d480d02	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^        .each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_set_2_vars_by_name	file:
__anon06d65d480e02	lib/flecs/test/cpp_api/src/RuleBuilder.cpp	/^    r.each([&](flecs::iter& it, size_t index) {$/;"	f	function:RuleBuilder_expr_w_var	file:
__anon07ccd2f20108	lib/flecs/examples/c/reflection/basics/src/main.c	/^typedef struct {$/;"	s	file:
__anon09f76fa60108	lib/flecs/test/custom_builds/c/pipeline/src/main.c	/^typedef struct {$/;"	s	file:
__anon0aead0d10102	lib/flecs/test/cpp_api/src/World.cpp	/^                .each([](flecs::entity entity, FooComp &sc) {$/;"	f	function:ns::namespace_module::namespace_module	file:
__anon0aead0d10202	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.with(Tag, [&]{$/;"	f	function:World_with_tag	file:
__anon0aead0d10302	lib/flecs/test/cpp_api/src/World.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:World_with_tag	file:
__anon0aead0d10402	lib/flecs/test/cpp_api/src/World.cpp	/^        test_bool(e.get([&](const Self& s) {$/;"	f	function:World_with_tag::__anon0aead0d10302	file:
__anon0aead0d10502	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.with<Tag>([&]{$/;"	f	function:World_with_tag_type	file:
__anon0aead0d10602	lib/flecs/test/cpp_api/src/World.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:World_with_tag_type	file:
__anon0aead0d10702	lib/flecs/test/cpp_api/src/World.cpp	/^        test_bool(e.get([&](const Self& s) {$/;"	f	function:World_with_tag_type::__anon0aead0d10602	file:
__anon0aead0d10802	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.with(Likes, Bob, [&]{$/;"	f	function:World_with_relation	file:
__anon0aead0d10902	lib/flecs/test/cpp_api/src/World.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:World_with_relation	file:
__anon0aead0d10a02	lib/flecs/test/cpp_api/src/World.cpp	/^        test_bool(e.get([&](const Self& s) {$/;"	f	function:World_with_relation::__anon0aead0d10902	file:
__anon0aead0d10b02	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.with<Likes>(Bob, [&]{$/;"	f	function:World_with_relation_type	file:
__anon0aead0d10c02	lib/flecs/test/cpp_api/src/World.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:World_with_relation_type	file:
__anon0aead0d10d02	lib/flecs/test/cpp_api/src/World.cpp	/^        test_bool(e.get([&](const Self& s) {$/;"	f	function:World_with_relation_type::__anon0aead0d10c02	file:
__anon0aead0d10e02	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.with<Likes, Bob>([&]{$/;"	f	function:World_with_relation_object_type	file:
__anon0aead0d10f02	lib/flecs/test/cpp_api/src/World.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:World_with_relation_object_type	file:
__anon0aead0d11002	lib/flecs/test/cpp_api/src/World.cpp	/^        test_bool(e.get([&](const Self& s) {$/;"	f	function:World_with_relation_object_type::__anon0aead0d10f02	file:
__anon0aead0d11102	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.scope(parent, [&]{$/;"	f	function:World_with_scope	file:
__anon0aead0d11202	lib/flecs/test/cpp_api/src/World.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:World_with_scope	file:
__anon0aead0d11302	lib/flecs/test/cpp_api/src/World.cpp	/^        test_bool(e.get([&](const Self& s){$/;"	f	function:World_with_scope::__anon0aead0d11202	file:
__anon0aead0d11402	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.scope<ParentScope>([&]{$/;"	f	function:World_with_scope_type	file:
__anon0aead0d11502	lib/flecs/test/cpp_api/src/World.cpp	/^    stage.scope<ParentScope>([&]{$/;"	f	function:World_with_scope_type_staged	file:
__anon0aead0d11602	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.with(Tier1, [&]{$/;"	f	function:World_with_tag_nested	file:
__anon0aead0d11702	lib/flecs/test/cpp_api/src/World.cpp	/^        ecs.entity("Tier2").with([&]{$/;"	f	function:World_with_tag_nested::__anon0aead0d11602	file:
__anon0aead0d11802	lib/flecs/test/cpp_api/src/World.cpp	/^    ecs.scope(parent, [&]{$/;"	f	function:World_with_scope_nested	file:
__anon0aead0d11902	lib/flecs/test/cpp_api/src/World.cpp	/^        auto child = ecs.entity("C").scope([&]{$/;"	f	function:World_with_scope_nested::__anon0aead0d11802	file:
__anon0aead0d11a02	lib/flecs/test/cpp_api/src/World.cpp	/^    P.scope([&]{$/;"	f	function:World_recursive_lookup	file:
__anon0c516e7e0102	lib/flecs/examples/cpp/queries/instancing/src/main.cpp	/^    q.iter([](flecs::iter& it, Position *p, const Velocity *v) {$/;"	f	function:main	file:
__anon0f08a1c60103	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^typedef enum {$/;"	g	file:
__anon0f08a1c60208	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^typedef struct {$/;"	s	file:
__anon12ad033e0108	lib/flecs/examples/c/queries/instancing/src/main.c	/^typedef struct { $/;"	s	file:
__anon12cf63340108	lib/flecs/include/flecs/addons/http.h	/^typedef struct {$/;"	s
__anon12cf63340208	lib/flecs/include/flecs/addons/http.h	/^typedef struct {$/;"	s
__anon12cf63340303	lib/flecs/include/flecs/addons/http.h	/^typedef enum {$/;"	g
__anon12cf63340408	lib/flecs/include/flecs/addons/http.h	/^typedef struct {$/;"	s
__anon12cf63340508	lib/flecs/include/flecs/addons/http.h	/^typedef struct {$/;"	s
__anon12cf63340608	lib/flecs/include/flecs/addons/http.h	/^typedef struct {$/;"	s
__anon1360c0250108	lib/flecs/examples/c/queries/basics/src/main.c	/^typedef struct {$/;"	s	file:
__anon17176d0b0102	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^    return this->each(rel, flecs::Wildcard, [&](flecs::id id) {$/;"	f	function:flecs::entity_view::each	file:
__anon1726b63b0102	lib/flecs/test/cpp_api/src/Switch.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:Switch_system_w_case	file:
__anon1726b63b0202	lib/flecs/test/cpp_api/src/Switch.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:Switch_system_w_case_builder	file:
__anon1726b63b0302	lib/flecs/test/cpp_api/src/Switch.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:Switch_system_w_switch	file:
__anon1726b63b0402	lib/flecs/test/cpp_api/src/Switch.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:Switch_system_w_sw_type_builder	file:
__anon19eb1a7d0108	lib/flecs/test/api/src/Query.c	/^typedef struct {$/;"	s	file:
__anon1e338c63010a	lib/flecs/src/private_types.h	/^    union {$/;"	u	struct:ecs_defer_op_t
__anon1f7cffef0102	lib/flecs/test/cpp_api/src/Module.cpp	/^    type_entity.each(flecs::ChildOf, [&](flecs::entity) {$/;"	f	function:Module_nested_type_module	file:
__anon1f7cffef0202	lib/flecs/test/cpp_api/src/Module.cpp	/^    ns_type_entity.each(flecs::ChildOf, [&](flecs::entity) {$/;"	f	function:Module_nested_type_module	file:
__anon1f7cffef0302	lib/flecs/test/cpp_api/src/Module.cpp	/^    pos_comp.each(flecs::ChildOf, [&](flecs::entity) {$/;"	f	function:Module_component_redefinition_outside_module	file:
__anon1f7cffef0402	lib/flecs/test/cpp_api/src/Module.cpp	/^        world.system<>().iter([](flecs::iter& it) { });$/;"	f	function:Module_w_dtor::Module_w_dtor	file:
__anon1ffac85e0108	include/ecs/components.h	/^typedef struct {$/;"	s
__anon1ffac85e0208	include/ecs/components.h	/^typedef struct {$/;"	s
__anon1ffac85e0308	include/ecs/components.h	/^typedef struct {$/;"	s
__anon1ffac85e0408	include/ecs/components.h	/^typedef struct {$/;"	s
__anon1ffac85e0508	include/ecs/components.h	/^typedef struct {$/;"	s
__anon218568c2010a	lib/flecs/src/addons/rules.c	/^    union {$/;"	u	struct:ecs_rule_pair_t	file:
__anon218568c2020a	lib/flecs/src/addons/rules.c	/^    union {$/;"	u	struct:ecs_rule_pair_t	file:
__anon218568c2030a	lib/flecs/src/addons/rules.c	/^    union {$/;"	u	struct:ecs_rule_op_ctx_t	file:
__anon23d0a9920102	lib/flecs/examples/cpp/rules/basics/src/main.cpp	/^    r.each([&](flecs::iter& it, size_t index) {$/;"	f	function:main	file:
__anon23e81c320108	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_i32	file:
__anon23e81c320208	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_i32_i32	file:
__anon23e81c320308	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_i32_i32_i32	file:
__anon23e81c320408	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_bool	file:
__anon23e81c320508	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_bool_bool	file:
__anon23e81c320608	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_bool_bool_bool	file:
__anon23e81c320708	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_bool_bool_i32_bool	file:
__anon23e81c320808	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_nested_i32	file:
__anon23e81c320908	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_nested_i32	file:
__anon23e81c320a08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_2_nested_1_i32_2_i32	file:
__anon23e81c320b08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_2_nested_1_i32_2_i32	file:
__anon23e81c320c08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_2_nested_1_i32_i32_2_i32_i32	file:
__anon23e81c320d08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_2_nested_1_i32_i32_2_i32_i32	file:
__anon23e81c320e08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members	file:
__anon23e81c320f08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members	file:
__anon23e81c321008	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_array_i32_3	file:
__anon23e81c321108	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_2_array_i32_3	file:
__anon23e81c321208	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_2_array_i32_3_w_padding_members	file:
__anon23e81c321308	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_array_w_struct_i32	file:
__anon23e81c321408	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_array_w_struct_i32	file:
__anon23e81c321508	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_2_array_w_struct_i32	file:
__anon23e81c321608	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_2_array_w_struct_i32	file:
__anon23e81c321708	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_array_w_struct_w_array_i32	file:
__anon23e81c321808	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_array_w_struct_w_array_i32	file:
__anon23e81c321908	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_2_array_w_struct_w_array_i32	file:
__anon23e81c321a08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_set_2_array_w_struct_w_array_i32	file:
__anon23e81c321b08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_i32	file:
__anon23e81c321c08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_i32_i32	file:
__anon23e81c321d08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_i32_i32_reverse	file:
__anon23e81c321e08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_nested_i32_i32	file:
__anon23e81c321f08	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_nested_i32_i32	file:
__anon23e81c322008	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_2_nested_i32_i32	file:
__anon23e81c322108	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_2_nested_i32_i32	file:
__anon23e81c322208	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_2_nested_i32_i32_reverse	file:
__anon23e81c322308	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_member_2_nested_i32_i32_reverse	file:
__anon23e81c322408	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_w_array_type_i32_i32	file:
__anon23e81c322508	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_w_array_type_struct	file:
__anon23e81c322608	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_w_array_type_struct	file:
__anon23e81c322708	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_w_2_array_type_i32_i32	file:
__anon23e81c322808	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_w_2_array_type_struct	file:
__anon23e81c322908	lib/flecs/test/meta/src/Cursor.c	/^    typedef struct {$/;"	s	function:Cursor_struct_w_2_array_type_struct	file:
__anon2608b15c0102	lib/flecs/test/cpp_api/src/Singleton.cpp	/^        .iter([&](flecs::iter it, Position *p) {$/;"	f	function:Singleton_modified_singleton	file:
__anon2608b15c0202	lib/flecs/test/cpp_api/src/Singleton.cpp	/^        .iter([&](flecs::iter it, Position *p) {$/;"	f	function:Singleton_add_singleton	file:
__anon2608b15c0302	lib/flecs/test/cpp_api/src/Singleton.cpp	/^        .iter([&](flecs::iter it, Position *p) {$/;"	f	function:Singleton_remove_singleton	file:
__anon2608b15c0402	lib/flecs/test/cpp_api/src/Singleton.cpp	/^        .iter([](flecs::iter it) {$/;"	f	function:Singleton_singleton_system	file:
__anon2608b15c0502	lib/flecs/test/cpp_api/src/Singleton.cpp	/^    world.set([](Position& p) {$/;"	f	function:Singleton_set_lambda	file:
__anon2608b15c0602	lib/flecs/test/cpp_api/src/Singleton.cpp	/^    world.set([](Position& p) {$/;"	f	function:Singleton_set_lambda	file:
__anon2608b15c0702	lib/flecs/test/cpp_api/src/Singleton.cpp	/^    world.get([&](const Position& p) {$/;"	f	function:Singleton_get_lambda	file:
__anon263776a20108	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^typedef struct {$/;"	s	file:
__anon26fef7250108	lib/uthash/tests/threads/test1.c	/^typedef struct {$/;"	s	file:
__anon26fefb660108	lib/uthash/tests/threads/test2.c	/^typedef struct {$/;"	s	file:
__anon29130e920108	lib/flecs/include/flecs/addons/rest.h	/^typedef struct {$/;"	s
__anon314d5e4a0102	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^    e.each([&](flecs::id id) {$/;"	f	function:iterate_components	file:
__anon314d5e4a0202	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^    e.each([&](flecs::id id) {$/;"	f	function:iterate_components	file:
__anon35ed1d3e0103	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef enum {$/;"	g	function:SerializeToExpr_enum	file:
__anon35ed1d3e0203	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef enum {$/;"	g	function:SerializeToExpr_struct_enum	file:
__anon35ed1d3e0308	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_enum	file:
__anon35ed1d3e0408	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_bitmask	file:
__anon35ed1d3e0508	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_i32	file:
__anon35ed1d3e0608	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_i32_i32	file:
__anon35ed1d3e0708	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_entity	file:
__anon35ed1d3e0808	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_entity_entity_after_float	file:
__anon35ed1d3e0908	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_nested_i32	file:
__anon35ed1d3e0a08	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_nested_i32	file:
__anon35ed1d3e0b08	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_nested_i32_i32	file:
__anon35ed1d3e0c08	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_nested_i32_i32	file:
__anon35ed1d3e0d08	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_2_nested_i32_i32	file:
__anon35ed1d3e0e08	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_2_nested_i32_i32	file:
__anon35ed1d3e0f08	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_i32_array_3	file:
__anon35ed1d3e1008	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_struct_i32_array_3	file:
__anon35ed1d3e1108	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_struct_i32_array_3	file:
__anon35ed1d3e1208	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_struct_i32_i32_array_3	file:
__anon35ed1d3e1308	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_struct_i32_i32_array_3	file:
__anon35ed1d3e1408	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_w_array_type_i32_i32	file:
__anon35ed1d3e1508	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_w_2_array_type_i32_i32	file:
__anon35ed1d3e1608	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_w_array_type_struct	file:
__anon35ed1d3e1708	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_w_array_type_struct	file:
__anon35ed1d3e1808	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_w_2_array_type_struct	file:
__anon35ed1d3e1908	lib/flecs/test/meta/src/SerializeToExpr.c	/^    typedef struct {$/;"	s	function:SerializeToExpr_struct_w_2_array_type_struct	file:
__anon38320ee20102	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^        .each([](Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anon38320ee20202	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^        .each([](flecs::entity e, const Position& p) {$/;"	f	function:main	file:
__anon38320ee20302	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^        .each([](flecs::entity e, const Position& p) {$/;"	f	function:main	file:
__anon3b8ee5220108	lib/flecs/examples/c/reflection/basics_deserialize/src/main.c	/^typedef struct {$/;"	s	file:
__anon3c1808360102	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:FilterBuilder_builder_assign_same_type	file:
__anon3c1808360202	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_builder_assign_to_empty	file:
__anon3c1808360302	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_builder_assign_from_empty	file:
__anon3c1808360402	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.get<FilterWrapper<>>()->f_.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_builder_force_assign_operator	file:
__anon3c1808360502	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:FilterBuilder_builder_build	file:
__anon3c1808360602	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:FilterBuilder_builder_build_to_auto	file:
__anon3c1808360702	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_builder_build_n_statements	file:
__anon3c1808360802	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:FilterBuilder_1_type	file:
__anon3c1808360902	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_add_1_type	file:
__anon3c1808360a02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_add_2_types	file:
__anon3c1808360b02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:FilterBuilder_add_1_type_w_1_type	file:
__anon3c1808360c02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:FilterBuilder_add_2_types_w_1_type	file:
__anon3c1808360d02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_add_pair	file:
__anon3c1808360e02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:FilterBuilder_add_not	file:
__anon3c1808360f02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_add_or	file:
__anon3c1808361002	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_add_optional	file:
__anon3c1808361102	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p, Velocity* v) {$/;"	f	function:FilterBuilder_ptr_type	file:
__anon3c1808361202	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, const Position& p) {$/;"	f	function:FilterBuilder_const_type	file:
__anon3c1808361302	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_string_term	file:
__anon3c1808361402	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:FilterBuilder_singleton_term	file:
__anon3c1808361502	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:FilterBuilder_isa_superset_term	file:
__anon3c1808361602	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:FilterBuilder_isa_self_superset_term	file:
__anon3c1808361702	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:FilterBuilder_childof_superset_term	file:
__anon3c1808361802	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:FilterBuilder_childof_self_superset_term	file:
__anon3c1808361902	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_isa_superset_term_w_each	file:
__anon3c1808361a02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_isa_self_superset_term_w_each	file:
__anon3c1808361b02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_childof_superset_term_w_each	file:
__anon3c1808361c02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_childof_self_superset_term_w_each	file:
__anon3c1808361d02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_isa_superset_shortcut	file:
__anon3c1808361e02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_isa_superset_shortcut_w_self	file:
__anon3c1808361f02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_childof_superset_shortcut	file:
__anon3c1808362002	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_childof_superset_shortcut_w_self	file:
__anon3c1808362102	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_isa_superset_max_depth_1	file:
__anon3c1808362202	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_isa_superset_max_depth_2	file:
__anon3c1808362302	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_isa_superset_min_depth_2	file:
__anon3c1808362402	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:FilterBuilder_isa_superset_min_depth_2_max_depth_3	file:
__anon3c1808362502	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:FilterBuilder_relation	file:
__anon3c1808362602	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:FilterBuilder_relation_w_object_wildcard	file:
__anon3c1808362702	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:FilterBuilder_relation_w_predicate_wildcard	file:
__anon3c1808362802	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:FilterBuilder_add_pair_w_rel_type	file:
__anon3c1808362902	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:FilterBuilder_template_term	file:
__anon3c1808362a02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:FilterBuilder_explicit_subject_w_id	file:
__anon3c1808362b02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:FilterBuilder_explicit_subject_w_type	file:
__anon3c1808362c02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_explicit_object_w_id	file:
__anon3c1808362d02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_explicit_object_w_type	file:
__anon3c1808362e02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_explicit_term	file:
__anon3c1808362f02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_explicit_term_w_type	file:
__anon3c1808363002	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_explicit_term_w_pair_type	file:
__anon3c1808363102	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_explicit_term_w_id	file:
__anon3c1808363202	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_explicit_term_w_pair_id	file:
__anon3c1808363302	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^        .iter([&](flecs::iter it){$/;"	f	function:FilterBuilder_2_subsequent_args	file:
__anon3c1808363402	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.each([&](flecs::entity e, Self& s) {$/;"	f	function:filter_arg	file:
__anon3c1808363502	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.each([&](flecs::entity e, Self& s) {$/;"	f	function:filter_move_arg	file:
__anon3c1808363602	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.each([&](flecs::entity e, Self& s) {$/;"	f	function:FilterBuilder_filter_as_return	file:
__anon3c1808363702	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f_2.each([&](flecs::entity e, Self& s) {$/;"	f	function:FilterBuilder_filter_copy	file:
__anon3c1808363802	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    ecs.each([&](flecs::entity e, Self& s) {$/;"	f	function:FilterBuilder_world_each_filter_1_component	file:
__anon3c1808363902	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    ecs.each([&](flecs::entity e, Self& s, Position& p) {$/;"	f	function:FilterBuilder_world_each_filter_2_components	file:
__anon3c1808363a02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    ecs.each([&](Position& p) {$/;"	f	function:FilterBuilder_world_each_filter_1_component_no_entity	file:
__anon3c1808363b02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    ecs.each([&](Position& p, Velocity& v) {$/;"	f	function:FilterBuilder_world_each_filter_2_components_no_entity	file:
__anon3c1808363c02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.iter([&](flecs::iter& it) {$/;"	f	function:FilterBuilder_10_terms	file:
__anon3c1808363d02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.iter([&](flecs::iter& it) {$/;"	f	function:FilterBuilder_20_terms	file:
__anon3c1808363e02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.each([&](flecs::entity e, TagA, TagB) {$/;"	f	function:FilterBuilder_term_after_arg	file:
__anon3c1808363f02	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.iter([&](flecs::iter& it, Position* p) {$/;"	f	function:FilterBuilder_name_arg	file:
__anon3c1808364002	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.iter([&](flecs::iter& it) {$/;"	f	function:FilterBuilder_const_in_term	file:
__anon3c1808364102	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:FilterBuilder_create_w_no_template_args	file:
__anon3c1808364202	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    f.each([&](flecs::iter& it, size_t index) {$/;"	f	function:FilterBuilder_2_terms_w_expr	file:
__anon3cdfa8510108	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool	file:
__anon3cdfa8510208	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool	file:
__anon3cdfa8510308	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_int32	file:
__anon3cdfa8510408	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_int32	file:
__anon3cdfa8510508	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_w_bool_member	file:
__anon3cdfa8510608	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_w_bool_member	file:
__anon3cdfa8510708	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_w_int32_member	file:
__anon3cdfa8510808	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_w_int32_member	file:
__anon3cdfa8510908	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_int32_w_bool_member	file:
__anon3cdfa8510a08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_int32_w_bool_member	file:
__anon3cdfa8510b08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_int32_w_int32_member	file:
__anon3cdfa8510c08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_int32_w_int32_member	file:
__anon3cdfa8510d08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_same	file:
__anon3cdfa8510e08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_same	file:
__anon3cdfa8510f08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_bool	file:
__anon3cdfa8511008	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_bool	file:
__anon3cdfa8511108	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_i32	file:
__anon3cdfa8511208	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_i32	file:
__anon3cdfa8511308	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_i32	file:
__anon3cdfa8511408	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_bool	file:
__anon3cdfa8511508	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_bool	file:
__anon3cdfa8511608	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_bool	file:
__anon3cdfa8511708	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_bool_bool	file:
__anon3cdfa8511808	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_bool_bool	file:
__anon3cdfa8511908	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_2_bool_bool	file:
__anon3cdfa8511a08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_bool_2_bool	file:
__anon3cdfa8511b08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_bool_2_bool	file:
__anon3cdfa8511c08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_bool_2_bool	file:
__anon3cdfa8511d08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_bool_2_same	file:
__anon3cdfa8511e08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_bool_2_same	file:
__anon3cdfa8511f08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_bool_2_bool_bool	file:
__anon3cdfa8512008	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_bool_2_bool_bool	file:
__anon3cdfa8512108	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_bool_bool_2_bool_bool	file:
__anon3cdfa8512208	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_same	file:
__anon3cdfa8512308	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_same	file:
__anon3cdfa8512408	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_i32	file:
__anon3cdfa8512508	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_i32	file:
__anon3cdfa8512608	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_i32	file:
__anon3cdfa8512708	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_i32_i32	file:
__anon3cdfa8512808	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_i32_i32	file:
__anon3cdfa8512908	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_2_i32_i32	file:
__anon3cdfa8512a08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_i32_2_i32	file:
__anon3cdfa8512b08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_i32_2_i32	file:
__anon3cdfa8512c08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_i32_2_i32	file:
__anon3cdfa8512d08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_i32_2_same	file:
__anon3cdfa8512e08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_i32_2_same	file:
__anon3cdfa8512f08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_i32_2_i32_i32	file:
__anon3cdfa8513008	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_i32_2_i32_i32	file:
__anon3cdfa8513108	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_1_i32_i32_2_i32_i32	file:
__anon3cdfa8513208	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool	file:
__anon3cdfa8513308	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool	file:
__anon3cdfa8513408	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool	file:
__anon3cdfa8513508	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool	file:
__anon3cdfa8513608	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool	file:
__anon3cdfa8513708	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool_bool	file:
__anon3cdfa8513808	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool_bool	file:
__anon3cdfa8513908	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool_bool	file:
__anon3cdfa8513a08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool_bool	file:
__anon3cdfa8513b08	lib/flecs/test/meta/src/NestedStructTypes.c	/^    typedef struct {$/;"	s	function:NestedStructTypes_2_lvls_bool_bool	file:
__anon3e2091250102	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^    q.each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anon3e2091250202	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^    q.each([](Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anon3e2091250302	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^    q.each([](flecs::iter& it, size_t i, Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anon3e2091250402	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^    q.iter([](flecs::iter& it, Position *p, const Velocity *v) {$/;"	f	function:main	file:
__anon3f4b18880108	lib/flecs/examples/c/queries/change_tracking/src/main.c	/^typedef struct {$/;"	s	file:
__anon3f4b18880208	lib/flecs/examples/c/queries/change_tracking/src/main.c	/^typedef struct {$/;"	s	file:
__anon3fb6b4ce0102	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it, Position *p, Velocity *v) {$/;"	f	function:System_iter	file:
__anon3fb6b4ce0202	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it, Position *p, const Velocity* v) {$/;"	f	function:System_iter_const	file:
__anon3fb6b4ce0302	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it, Position *p) {$/;"	f	function:System_iter_shared	file:
__anon3fb6b4ce0402	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter& it, Position *p, Velocity *v, Mass *m) {$/;"	f	function:System_iter_optional	file:
__anon3fb6b4ce0502	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:System_each	file:
__anon3fb6b4ce0602	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:System_each_const	file:
__anon3fb6b4ce0702	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:System_each_shared	file:
__anon3fb6b4ce0802	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, Position& p, Velocity* v, Mass *m) {$/;"	f	function:System_each_optional	file:
__anon3fb6b4ce0902	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it) {$/;"	f	function:System_signature	file:
__anon3fb6b4ce0a02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it) {$/;"	f	function:System_signature_const	file:
__anon3fb6b4ce0b02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it) {$/;"	f	function:System_signature_shared	file:
__anon3fb6b4ce0c02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter& it) {$/;"	f	function:System_signature_optional	file:
__anon3fb6b4ce0d02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it, Position *p) {});$/;"	f	function:System_copy_name_on_create	file:
__anon3fb6b4ce0e02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it, Position *p) {});$/;"	f	function:System_copy_name_on_create	file:
__anon3fb6b4ce0f02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter&it, Position *p) {});$/;"	f	function:System_nested_system	file:
__anon3fb6b4ce1002	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:System_empty_signature	file:
__anon3fb6b4ce1102	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it, MyTag*) {$/;"	f	function:System_iter_tag	file:
__anon3fb6b4ce1202	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, MyTag) {$/;"	f	function:System_each_tag	file:
__anon3fb6b4ce1302	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_system_from_id	file:
__anon3fb6b4ce1402	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) { });$/;"	f	function:System_set_interval	file:
__anon3fb6b4ce1502	lib/flecs/test/cpp_api/src/System.cpp	/^               flecs::entity_t e2, const Position *p2) {$/;"	f	function:System_order_by_type	file:
__anon3fb6b4ce1602	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, const Position& p) {$/;"	f	function:System_order_by_type	file:
__anon3fb6b4ce1702	lib/flecs/test/cpp_api/src/System.cpp	/^            {$/;"	f	function:System_order_by_id	file:
__anon3fb6b4ce1802	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, const Position& p) {$/;"	f	function:System_order_by_id	file:
__anon3fb6b4ce1902	lib/flecs/test/cpp_api/src/System.cpp	/^            flecs::entity_t e2, const Position *p2) {$/;"	f	function:System_order_by_type_after_create	file:
__anon3fb6b4ce1a02	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, const Position& p) {$/;"	f	function:System_order_by_type_after_create	file:
__anon3fb6b4ce1b02	lib/flecs/test/cpp_api/src/System.cpp	/^        .order_by(pos, [](flecs::entity_t e1, const void *p1, flecs::entity_t e2, const void *p2/;"	f	function:System_order_by_id_after_create	file:
__anon3fb6b4ce1c02	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, const Position& p) {$/;"	f	function:System_order_by_id_after_create	file:
__anon3fb6b4ce1d02	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, const Position& p) {$/;"	f	function:System_get_query	file:
__anon3fb6b4ce1e02	lib/flecs/test/cpp_api/src/System.cpp	/^    q.iter([&](flecs::iter &it) {$/;"	f	function:System_get_query	file:
__anon3fb6b4ce1f02	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, const Position& p) {$/;"	f	function:System_add_from_each	file:
__anon3fb6b4ce2002	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, const Position& p) {$/;"	f	function:System_delete_from_each	file:
__anon3fb6b4ce2102	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, const Entity& c) {$/;"	f	function:System_add_from_each_world_handle	file:
__anon3fb6b4ce2202	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, const Position& p) {$/;"	f	function:System_new_from_each	file:
__anon3fb6b4ce2302	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter& it, const Position* p) {$/;"	f	function:System_add_from_iter	file:
__anon3fb6b4ce2402	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](const flecs::iter& it, const Position* p) {$/;"	f	function:System_delete_from_iter	file:
__anon3fb6b4ce2502	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](const flecs::iter& it, const Entity* c) {$/;"	f	function:System_add_from_iter_world_handle	file:
__anon3fb6b4ce2602	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](const flecs::iter& it, const Position* p) {$/;"	f	function:System_new_from_iter	file:
__anon3fb6b4ce2702	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](const flecs::iter& it, const Position* p) {$/;"	f	function:System_each_w_mut_children_it	file:
__anon3fb6b4ce2802	lib/flecs/test/cpp_api/src/System.cpp	/^                it.entity(i).children([&](flecs::entity child) {$/;"	f	function:System_each_w_mut_children_it::__anon3fb6b4ce2702	file:
__anon3fb6b4ce2902	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](const flecs::iter& it, const Entity* c) {$/;"	f	function:System_readonly_children_iter	file:
__anon3fb6b4ce2a02	lib/flecs/test/cpp_api/src/System.cpp	/^                c[i].e.children([&](flecs::entity child) {$/;"	f	function:System_readonly_children_iter::__anon3fb6b4ce2902	file:
__anon3fb6b4ce2b02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_rate_filter	file:
__anon3fb6b4ce2c02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_rate_filter	file:
__anon3fb6b4ce2d02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_rate_filter	file:
__anon3fb6b4ce2e02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_rate_filter	file:
__anon3fb6b4ce2f02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_rate_filter	file:
__anon3fb6b4ce3002	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_rate_filter	file:
__anon3fb6b4ce3102	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_update_rate_filter	file:
__anon3fb6b4ce3202	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_update_rate_filter	file:
__anon3fb6b4ce3302	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_update_rate_filter	file:
__anon3fb6b4ce3402	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:System_default_ctor	file:
__anon3fb6b4ce3502	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([](flecs::entity e, Value& v) {$/;"	f	function:System_test_auto_defer_each	file:
__anon3fb6b4ce3602	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([](flecs::iter& it, Value *v) {$/;"	f	function:System_test_auto_defer_iter	file:
__anon3fb6b4ce3702	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:System_custom_pipeline	file:
__anon3fb6b4ce3802	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:System_custom_pipeline	file:
__anon3fb6b4ce3902	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:System_custom_pipeline	file:
__anon3fb6b4ce3a02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:System_system_w_self	file:
__anon3fb6b4ce3b02	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Self& s, Position&p, const Velocity& v) {$/;"	f	function:System_instanced_query_w_singleton_each	file:
__anon3fb6b4ce3c02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_each	file:
__anon3fb6b4ce3d02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_each	file:
__anon3fb6b4ce3e02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_each	file:
__anon3fb6b4ce3f02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_each	file:
__anon3fb6b4ce4002	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_each	file:
__anon3fb6b4ce4102	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Self& s, Position&p, const Velocity& v) {$/;"	f	function:System_instanced_query_w_base_each	file:
__anon3fb6b4ce4202	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_each	file:
__anon3fb6b4ce4302	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_each	file:
__anon3fb6b4ce4402	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_each	file:
__anon3fb6b4ce4502	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_each	file:
__anon3fb6b4ce4602	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_each	file:
__anon3fb6b4ce4702	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e6.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_each	file:
__anon3fb6b4ce4802	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e7.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_each	file:
__anon3fb6b4ce4902	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Self& s, Position&p, const Velocity& v) {$/;"	f	function:System_un_instanced_query_w_singleton_each	file:
__anon3fb6b4ce4a02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_each	file:
__anon3fb6b4ce4b02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_each	file:
__anon3fb6b4ce4c02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_each	file:
__anon3fb6b4ce4d02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_each	file:
__anon3fb6b4ce4e02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_each	file:
__anon3fb6b4ce4f02	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Self& s, Position&p, const Velocity& v) {$/;"	f	function:System_un_instanced_query_w_base_each	file:
__anon3fb6b4ce5002	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_each	file:
__anon3fb6b4ce5102	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_each	file:
__anon3fb6b4ce5202	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_each	file:
__anon3fb6b4ce5302	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_each	file:
__anon3fb6b4ce5402	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_each	file:
__anon3fb6b4ce5502	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e6.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_each	file:
__anon3fb6b4ce5602	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e7.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_each	file:
__anon3fb6b4ce5702	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it, Self* s, Position* p, const Velocity* v) {$/;"	f	function:System_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce5802	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce5902	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce5a02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce5b02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce5c02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce5d02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it, Self* s, Position* p, const Velocity* v) {$/;"	f	function:System_instanced_query_w_base_iter	file:
__anon3fb6b4ce5e02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_iter	file:
__anon3fb6b4ce5f02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_iter	file:
__anon3fb6b4ce6002	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_iter	file:
__anon3fb6b4ce6102	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_iter	file:
__anon3fb6b4ce6202	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_iter	file:
__anon3fb6b4ce6302	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e6.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_iter	file:
__anon3fb6b4ce6402	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e7.get([](const Position& p) {$/;"	f	function:System_instanced_query_w_base_iter	file:
__anon3fb6b4ce6502	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it, Self* s, Position* p, const Velocity* v) {$/;"	f	function:System_un_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce6602	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce6702	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce6802	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce6902	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce6a02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_singleton_iter	file:
__anon3fb6b4ce6b02	lib/flecs/test/cpp_api/src/System.cpp	/^        .iter([&](flecs::iter it, Self* s, Position* p, const Velocity* v) {$/;"	f	function:System_un_instanced_query_w_base_iter	file:
__anon3fb6b4ce6c02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e1.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_iter	file:
__anon3fb6b4ce6d02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e2.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_iter	file:
__anon3fb6b4ce6e02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e3.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_iter	file:
__anon3fb6b4ce6f02	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e4.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_iter	file:
__anon3fb6b4ce7002	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e5.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_iter	file:
__anon3fb6b4ce7102	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e6.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_iter	file:
__anon3fb6b4ce7202	lib/flecs/test/cpp_api/src/System.cpp	/^    test_assert(e7.get([](const Position& p) {$/;"	f	function:System_un_instanced_query_w_base_iter	file:
__anon3fb6b4ce7302	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:System_create_w_no_template_args	file:
__anon3fb6b4ce7402	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Tag) {$/;"	f	function:System_system_w_type_kind	file:
__anon3fb6b4ce7502	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Tag) {$/;"	f	function:System_system_w_type_kind	file:
__anon3fb6b4ce7602	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Tag) {$/;"	f	function:System_system_w_type_kind_type_pipeline	file:
__anon3fb6b4ce7702	lib/flecs/test/cpp_api/src/System.cpp	/^        .each([&](flecs::entity e, Tag) {$/;"	f	function:System_system_w_type_kind_type_pipeline	file:
__anon413bd0790108	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_bool	file:
__anon413bd0790208	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_byte	file:
__anon413bd0790308	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_char	file:
__anon413bd0790408	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_i8	file:
__anon413bd0790508	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_i16	file:
__anon413bd0790608	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_i32	file:
__anon413bd0790708	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_i64	file:
__anon413bd0790808	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_iptr	file:
__anon413bd0790908	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_u8	file:
__anon413bd0790a08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_u16	file:
__anon413bd0790b08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_u32	file:
__anon413bd0790c08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_u64	file:
__anon413bd0790d08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_uptr	file:
__anon413bd0790e08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_float	file:
__anon413bd0790f08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_float_nan	file:
__anon413bd0791008	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_float_inf	file:
__anon413bd0791108	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_double	file:
__anon413bd0791208	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_double_nan	file:
__anon413bd0791308	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_double_inf	file:
__anon413bd0791408	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_double_large	file:
__anon413bd0791508	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_string	file:
__anon413bd0791608	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_entity	file:
__anon413bd0791708	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_entity_after_float	file:
__anon413bd0791803	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef enum {$/;"	g	function:SerializeToJson_struct_enum	file:
__anon413bd0791908	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_enum	file:
__anon413bd0791a08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_bitmask	file:
__anon413bd0791b08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_i32_i32	file:
__anon413bd0791c08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_nested_i32	file:
__anon413bd0791d08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_nested_i32	file:
__anon413bd0791e08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_nested_i32_i32	file:
__anon413bd0791f08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_nested_i32_i32	file:
__anon413bd0792008	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_2_nested_i32_i32	file:
__anon413bd0792108	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_2_nested_i32_i32	file:
__anon413bd0792208	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_i32_array_3	file:
__anon413bd0792308	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_struct_i32_array_3	file:
__anon413bd0792408	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_struct_i32_array_3	file:
__anon413bd0792508	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_struct_i32_i32_array_3	file:
__anon413bd0792608	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_struct_i32_i32_array_3	file:
__anon413bd0792708	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_w_array_type_i32_i32	file:
__anon413bd0792808	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_struct_w_2_array_type_i32_i32	file:
__anon413bd0792903	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef enum {$/;"	g	function:SerializeToJson_serialize_entity_w_enum_component	file:
__anon413bd0792a03	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef enum {$/;"	g	function:SerializeToJson_serialize_entity_w_struct_and_enum_component	file:
__anon413bd0792b03	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef enum {$/;"	g	function:SerializeToJson_serialize_entity_w_invalid_enum_component	file:
__anon413bd0792c08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_serialize_entity_w_type_info_unit	file:
__anon413bd0792d08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_serialize_entity_w_type_info_unit_quantity	file:
__anon413bd0792e08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_serialize_entity_w_type_info_unit_over	file:
__anon413bd0792f08	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_serialize_iterator_type_info_w_unit	file:
__anon413bd0793008	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_serialize_iterator_type_info_w_unit_quantity	file:
__anon413bd0793108	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_serialize_iterator_type_info_w_unit_over	file:
__anon413bd0793208	lib/flecs/test/meta/src/SerializeToJson.c	/^    typedef struct {$/;"	s	function:SerializeToJson_serialize_iterator_w_var_component	file:
__anon4354dcde0108	lib/flecs/test/meta/src/EnumTypes.c	/^    typedef struct {$/;"	s	function:EnumTypes_struct_w_enum	file:
__anon444de4d00108	lib/flecs/examples/c/reflection/units/src/main.c	/^typedef struct {$/;"	s	file:
__anon47f67d2a0102	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        .each([](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:ImplicitComponents_system	file:
__anon47f67d2a0202	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        .each([&](flecs::entity e, Rotation* r, Mass* m) {$/;"	f	function:ImplicitComponents_system_optional	file:
__anon47f67d2a0302	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        .each([&](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:ImplicitComponents_system_const	file:
__anon47f67d2a0402	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^    q.each([](flecs::entity e, Position& p, Velocity &v) { });$/;"	f	function:ImplicitComponents_query	file:
__anon47f67d2a0502	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        .each([](flecs::entity e, Position& p) {$/;"	f	function:ImplicitComponents_first_use_in_system	file:
__anon47f67d2a0602	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        .each([](flecs::entity e, Position& p) {$/;"	f	function:ImplicitComponents_first_use_tag_in_system	file:
__anon47f67d2a0702	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        .each([](flecs::entity e, Position&) {$/;"	f	function:ImplicitComponents_use_const_w_stage	file:
__anon47f67d2a0802	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        .each([](flecs::entity e, Position&) {$/;"	f	function:ImplicitComponents_use_const_w_threads	file:
__anon49db2d84010a	lib/flecs/include/flecs/private/api_types.h	/^    union {$/;"	u	struct:ecs_iter_private_t
__anon4a2c56080102	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:Pairs_system_1_pair_instance	file:
__anon4a2c56080202	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        .iter([&](flecs::iter it) {$/;"	f	function:Pairs_system_2_pair_instances	file:
__anon4a2c56080302	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    e.each([&](flecs::id e) {$/;"	f	function:Pairs_each	file:
__anon4a2c56080402	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    e.each(pair, [&](flecs::entity object) {$/;"	f	function:Pairs_each_pair	file:
__anon4a2c56080502	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    e.each<Pair>([&](flecs::entity object) {$/;"	f	function:Pairs_each_pair_by_type	file:
__anon4a2c56080602	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    e.each(flecs::IsA, [&](flecs::entity object) {$/;"	f	function:Pairs_each_pair_w_isa	file:
__anon4a2c56080702	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    e.each(pair, [&](flecs::entity object) {$/;"	f	function:Pairs_each_pair_w_recycled_rel	file:
__anon4a2c56080802	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    e.each(pair, [&](flecs::entity object) {$/;"	f	function:Pairs_each_pair_w_recycled_obj	file:
__anon4a2c56080902	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        [&](flecs::id id) {$/;"	f	function:Pairs_match_pair	file:
__anon4a2c56080a02	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        [&](flecs::id id) {$/;"	f	function:Pairs_match_pair_obj_wildcard	file:
__anon4a2c56080b02	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        [&](flecs::id id) {$/;"	f	function:Pairs_match_pair_rel_wildcard	file:
__anon4a2c56080c02	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        [&](flecs::id id) {$/;"	f	function:Pairs_match_pair_both_wildcard	file:
__anon4a2c56080d02	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    test_bool(e.get([](const EatsApples& a) {$/;"	f	function:Pairs_get_1_pair_arg	file:
__anon4a2c56080e02	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    test_bool(e.get([](const EatsApples& a, const EatsPears& p) {$/;"	f	function:Pairs_get_2_pair_arg	file:
__anon4a2c56080f02	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        .set([](EatsApples&& a) {$/;"	f	function:Pairs_set_1_pair_arg	file:
__anon4a2c56081002	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        .set([](EatsApples&& a, EatsPears&& p) {$/;"	f	function:Pairs_set_2_pair_arg	file:
__anon4a2c56081102	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    test_bool(e.get([](const flecs::pair<Eats, Apples>& a) {$/;"	f	function:Pairs_get_inline_pair_type	file:
__anon4a2c56081202	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        .set([](flecs::pair<Eats, Apples>&& a) {$/;"	f	function:Pairs_set_inline_pair_type	file:
__anon4a2c56081302	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    test_bool(e.get([](const flecs::pair_object<Apples, Eats>& a) {$/;"	f	function:Pairs_get_pair_type_object	file:
__anon4a2c56081402	lib/flecs/test/cpp_api/src/Pairs.cpp	/^        .set([](flecs::pair_object<Apples, Eats>&& a) {$/;"	f	function:Pairs_set_pair_type_object	file:
__anon4df3ee6f0102	lib/flecs/test/cpp_api/src/Filter.cpp	/^    ecs.each<Position>([&](flecs::entity e, Position& p) {$/;"	f	function:Filter_term_each_component	file:
__anon4df3ee6f0202	lib/flecs/test/cpp_api/src/Filter.cpp	/^    ecs.each<Foo>([&](flecs::entity e, Foo) {$/;"	f	function:Filter_term_each_tag	file:
__anon4df3ee6f0302	lib/flecs/test/cpp_api/src/Filter.cpp	/^    ecs.each(foo, [&](flecs::entity e) {$/;"	f	function:Filter_term_each_id	file:
__anon4df3ee6f0402	lib/flecs/test/cpp_api/src/Filter.cpp	/^    ecs.each<flecs::pair<Rel, Obj>>([&](flecs::entity e, flecs::pair<Rel,Obj>) {$/;"	f	function:Filter_term_each_pair_type	file:
__anon4df3ee6f0502	lib/flecs/test/cpp_api/src/Filter.cpp	/^    ecs.each(ecs.pair(rel, obj), [&](flecs::entity e) {$/;"	f	function:Filter_term_each_pair_id	file:
__anon4df3ee6f0602	lib/flecs/test/cpp_api/src/Filter.cpp	/^    ecs.each(ecs.pair(flecs::Wildcard, obj), [&](flecs::entity e) {$/;"	f	function:Filter_term_each_pair_relation_wildcard	file:
__anon4df3ee6f0702	lib/flecs/test/cpp_api/src/Filter.cpp	/^    ecs.each(ecs.pair(rel, flecs::Wildcard), [&](flecs::entity e) {$/;"	f	function:Filter_term_each_pair_object_wildcard	file:
__anon4ec5b3140108	lib/flecs/test/meta/src/BitmaskTypes.c	/^    typedef struct {$/;"	s	function:BitmaskTypes_struct_w_bitmask	file:
__anon51c88b180103	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef enum {$/;"	g	function:DeserializeFromExpr_enum	file:
__anon51c88b180203	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef enum {$/;"	g	function:DeserializeFromExpr_struct_enum	file:
__anon51c88b180308	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_enum	file:
__anon51c88b180408	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_bitmask	file:
__anon51c88b180508	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_i32	file:
__anon51c88b180608	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_i32_i32	file:
__anon51c88b180708	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_entity	file:
__anon51c88b180808	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_nested_i32	file:
__anon51c88b180908	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_nested_i32	file:
__anon51c88b180a08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_nested_i32_i32	file:
__anon51c88b180b08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_nested_i32_i32	file:
__anon51c88b180c08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_2_nested_i32_i32	file:
__anon51c88b180d08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_2_nested_i32_i32	file:
__anon51c88b180e08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_i32	file:
__anon51c88b180f08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_i32_i32	file:
__anon51c88b181008	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_nested_i32	file:
__anon51c88b181108	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_nested_i32	file:
__anon51c88b181208	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_nested_i32_i32	file:
__anon51c88b181308	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_nested_i32_i32	file:
__anon51c88b181408	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_2_nested_i32_i32	file:
__anon51c88b181508	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_2_nested_i32_i32	file:
__anon51c88b181608	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse	file:
__anon51c88b181708	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse	file:
__anon51c88b181808	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_i32_array_3	file:
__anon51c88b181908	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_struct_i32_array_3	file:
__anon51c88b181a08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_struct_i32_array_3	file:
__anon51c88b181b08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_struct_i32_i32_array_3	file:
__anon51c88b181c08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_struct_i32_i32_array_3	file:
__anon51c88b181d08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_w_array_type_i32_i32	file:
__anon51c88b181e08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_w_2_array_type_i32_i32	file:
__anon51c88b181f08	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_w_array_type_struct	file:
__anon51c88b182008	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_w_array_type_struct	file:
__anon51c88b182108	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_w_2_array_type_struct	file:
__anon51c88b182208	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^    typedef struct {$/;"	s	function:DeserializeFromExpr_struct_w_2_array_type_struct	file:
__anon57c8b0dc0108	lib/uthash/src/utarray.h	/^typedef struct {$/;"	s
__anon57c8b0dc0208	lib/uthash/src/utarray.h	/^typedef struct {$/;"	s
__anon59a65c2c0102	lib/flecs/examples/cpp/entities/basics/src/main.cpp	/^    ecs.each([](flecs::entity e, Position& p) {$/;"	f	function:main	file:
__anon5c65d2280108	lib/flecs/src/table_graph.c	/^typedef struct {$/;"	s	file:
__anon5d173e530108	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_bool	file:
__anon5d173e530208	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_byte	file:
__anon5d173e530308	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_char	file:
__anon5d173e530408	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_char_literal	file:
__anon5d173e530508	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_i8	file:
__anon5d173e530608	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_i16	file:
__anon5d173e530708	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_i32	file:
__anon5d173e530808	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_i64	file:
__anon5d173e530908	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_iptr	file:
__anon5d173e530a08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_u8	file:
__anon5d173e530b08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_u16	file:
__anon5d173e530c08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_u32	file:
__anon5d173e530d08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_u64	file:
__anon5d173e530e08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_uptr	file:
__anon5d173e530f08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_float	file:
__anon5d173e531008	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_double	file:
__anon5d173e531108	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_negative_int	file:
__anon5d173e531208	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_negative_float	file:
__anon5d173e531308	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_string	file:
__anon5d173e531408	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_entity	file:
__anon5d173e531503	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef enum {$/;"	g	function:DeserializeFromJson_struct_enum	file:
__anon5d173e531608	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_enum	file:
__anon5d173e531708	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_bitmask	file:
__anon5d173e531808	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_i32_i32	file:
__anon5d173e531908	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_nested_i32	file:
__anon5d173e531a08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_nested_i32	file:
__anon5d173e531b08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_nested_i32_i32	file:
__anon5d173e531c08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_nested_i32_i32	file:
__anon5d173e531d08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_2_nested_i32_i32	file:
__anon5d173e531e08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_2_nested_i32_i32	file:
__anon5d173e531f08	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_i32_array_3	file:
__anon5d173e532008	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_struct_i32_array_3	file:
__anon5d173e532108	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_struct_i32_array_3	file:
__anon5d173e532208	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_struct_i32_i32_array_3	file:
__anon5d173e532308	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_struct_i32_i32_array_3	file:
__anon5d173e532408	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_w_array_type_i32_i32	file:
__anon5d173e532508	lib/flecs/test/meta/src/DeserializeFromJson.c	/^    typedef struct {$/;"	s	function:DeserializeFromJson_struct_w_2_array_type_i32_i32	file:
__anon5ece49070108	lib/uthash/src/utringbuffer.h	/^typedef struct {$/;"	s
__anon60ed38ad0102	lib/flecs/examples/cpp/queries/wildcards/src/main.cpp	/^    q.each([](flecs::iter& it, size_t index, Eats& eats) {$/;"	f	function:main	file:
__anon629a91ad0108	lib/flecs/examples/c/queries/wildcards/src/main.c	/^typedef struct {$/;"	s	file:
__anon6b1f22760108	lib/flecs/examples/c/systems/mutate_entity/src/main.c	/^typedef struct {$/;"	s	file:
__anon6ce82e000108	lib/flecs/test/custom_builds/c/pipeline_w_system/src/main.c	/^typedef struct {$/;"	s	file:
__anon6d0e746b0102	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_1_id_entity	file:
__anon6d0e746b0202	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_2_ids_entity	file:
__anon6d0e746b0302	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_2_ids_entity	file:
__anon6d0e746b0402	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_1_id_table	file:
__anon6d0e746b0502	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_2_ids_table	file:
__anon6d0e746b0602	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_2_ids_table	file:
__anon6d0e746b0702	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_type	file:
__anon6d0e746b0802	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_1_component	file:
__anon6d0e746b0902	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_2_components	file:
__anon6d0e746b0a02	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_2_components	file:
__anon6d0e746b0b02	lib/flecs/test/cpp_api/src/Event.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:Event_evt_void_ctx	file:
__anon6d0e746b0c02	lib/flecs/test/cpp_api/src/Event.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:Event_evt_typed_ctx	file:
__anon6d0e746b0d02	lib/flecs/test/cpp_api/src/Event.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:Event_evt_implicit_typed_ctx	file:
__anon6d0e746b0e02	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_1_id_pair_rel_id_obj_id_entity	file:
__anon6d0e746b0f02	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_1_id_pair_rel_obj_id_entity	file:
__anon6d0e746b1002	lib/flecs/test/cpp_api/src/Event.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Event_evt_1_id_pair_rel_obj_entity	file:
__anon6d6591e20108	lib/flecs/test/api/include/api.h	/^    struct {$/;"	s	struct:test_iter_result_t
__anon6dd79db50102	lib/flecs/test/cpp_api/src/Misc.cpp	/^    ecs.system().iter([&](flecs::iter& it) {$/;"	f	function:Misc_app_run	file:
__anon6dd79db50202	lib/flecs/test/cpp_api/src/Misc.cpp	/^    ecs.system().iter([&](flecs::iter& it) {$/;"	f	function:Misc_app_run_target_fps	file:
__anon70a3d52e0108	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^typedef struct {$/;"	s	file:
__anon70a3d52e0208	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^typedef struct {$/;"	s	file:
__anon70c5ffc90102	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^        .each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:WorldFactory_system	file:
__anon70c5ffc90202	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^        .each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:WorldFactory_system_w_name	file:
__anon70c5ffc90302	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^        .iter([](flecs::iter it) {$/;"	f	function:WorldFactory_system_w_expr	file:
__anon70c5ffc90402	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^    q.each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:WorldFactory_query	file:
__anon70c5ffc90502	lib/flecs/test/cpp_api/src/WorldFactory.cpp	/^    q.iter([](flecs::iter it) {$/;"	f	function:WorldFactory_query_w_expr	file:
__anon70d0dba10102	lib/flecs/examples/cpp/systems/mutate_entity_handle/src/main.cpp	/^        .each([](flecs::iter& it, size_t, Timeout& t) {$/;"	f	function:main	file:
__anon70d0dba10202	lib/flecs/examples/cpp/systems/mutate_entity_handle/src/main.cpp	/^        .each([](const Timeout& t) {$/;"	f	function:main	file:
__anon70d0dba10302	lib/flecs/examples/cpp/systems/mutate_entity_handle/src/main.cpp	/^        .each([](flecs::entity e, Tag) {$/;"	f	function:main	file:
__anon70f9d3cc0102	lib/flecs/examples/cpp/rules/cyclic_variables/src/main.cpp	/^    r.iter([&](flecs::iter& it) {$/;"	f	function:main	file:
__anon7212bd4e0108	lib/flecs/src/addons/plecs.c	/^typedef struct {$/;"	s	file:
__anon7256d2ce0108	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_i32	file:
__anon7256d2ce0208	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_i32_i32	file:
__anon7256d2ce0308	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_i32_i32_i32	file:
__anon7256d2ce0408	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_bool_i32	file:
__anon7256d2ce0508	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_bool_bool_i32	file:
__anon7256d2ce0608	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_bool_i32_bool_i32	file:
__anon7256d2ce0708	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_i32_bool	file:
__anon7256d2ce0808	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_i32_bool_bool	file:
__anon7256d2ce0908	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_i32_bool_bool_bool	file:
__anon7256d2ce0a08	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_i32_i64	file:
__anon7256d2ce0b08	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_i32_i64_i32	file:
__anon7256d2ce0c08	lib/flecs/test/meta/src/StructTypes.c	/^    typedef struct {$/;"	s	function:StructTypes_incomplete_member	file:
__anon72a734260102	lib/flecs/test/custom_builds/cpp/pipeline/src/main.cpp	/^        .each([](Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anon72b3bb070102	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^    ecs.each([](flecs::entity e, ImpulseSpeed& is, Position& p) {$/;"	f	function:main	file:
__anon752572400102	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^        .each([](Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anon752572400202	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^        .each([](flecs::entity e, const Position& p) {$/;"	f	function:main	file:
__anon763b84360102	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^    e.children([&](flecs::entity child) {$/;"	f	function:iterate_tree	file:
__anon7b79ffa80108	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^typedef struct {$/;"	s	file:
__anon7b79ffa80208	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^typedef struct {$/;"	s	file:
__anon7c7af5a0010a	lib/flecs/src/datastructures/hash.c	/^  union { const void *ptr; size_t i; } u;     \/* needed for Mac Powerbook G4 *\/$/;"	u	function:hashlittle2	file:
__anon7cc6b1080102	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^        .each([&](flecs::iter& it, size_t) {$/;"	f	function:main	file:
__anon7cc6b1080202	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^        .each([&](flecs::iter& it, size_t) {$/;"	f	function:main	file:
__anon7d1f26820102	lib/flecs/examples/cpp/systems/delta_time/src/main.cpp	/^        .iter([](flecs::iter& it) {$/;"	f	function:main	file:
__anon7ef2bd910108	lib/flecs/test/custom_builds/c/timer/src/main.c	/^typedef struct {$/;"	s	file:
__anon83aa8fb60102	lib/flecs/examples/cpp/systems/mutate_entity/src/main.cpp	/^        .each([](flecs::iter& it, size_t index, Timeout& t) {$/;"	f	function:main	file:
__anon83aa8fb60202	lib/flecs/examples/cpp/systems/mutate_entity/src/main.cpp	/^        .each([](flecs::entity e, const Timeout& t) {$/;"	f	function:main	file:
__anon83aa8fb60302	lib/flecs/examples/cpp/systems/mutate_entity/src/main.cpp	/^        .each([](flecs::entity e, Timeout&) {$/;"	f	function:main	file:
__anon87ffe4f40108	lib/uthash/src/utstring.h	/^typedef struct {$/;"	s
__anon8907aae30108	lib/uthash/include/utringbuffer.h	/^typedef struct {$/;"	s
__anon8b7ab8d00108	lib/uthash/include/utstring.h	/^typedef struct {$/;"	s
__anon8c3501f50108	lib/flecs/test/custom_builds/c/system/src/main.c	/^typedef struct {$/;"	s	file:
__anon8da83e450108	lib/flecs/src/query.c	/^typedef struct {$/;"	s	file:
__anon8da83e450208	lib/flecs/src/query.c	/^typedef struct {$/;"	s	file:
__anon8e06701c0108	lib/flecs/test/meta/include/meta.h	/^typedef struct {$/;"	s
__anon8e06701c0208	lib/flecs/test/meta/include/meta.h	/^typedef struct {$/;"	s
__anon91bc140a0108	lib/flecs/examples/c/entities/iterate_components/src/main.c	/^typedef struct {$/;"	s	file:
__anon920b6cbe0102	lib/flecs/test/cpp_api/src/Enum.cpp	/^    q.each([&](flecs::iter& it, size_t index) {$/;"	f	function:Enum_query_enum_wildcard	file:
__anon920b6cbe0202	lib/flecs/test/cpp_api/src/Enum.cpp	/^    q.each([&](flecs::iter& it, size_t index) {$/;"	f	function:Enum_query_enum_constant	file:
__anon95319c370108	lib/flecs/examples/c/queries/hierarchies/src/main.c	/^typedef struct {$/;"	s	file:
__anon95770e350102	lib/flecs/test/custom_builds/cpp/system/src/main.cpp	/^        .each([](Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anon980e45190102	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^    r.each([](flecs::entity e, RangedUnit) {$/;"	f	function:main	file:
__anon98b8c2480108	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_bool_1	file:
__anon98b8c2480208	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_bool_2	file:
__anon98b8c2480308	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_bool_3	file:
__anon98b8c2480408	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_bool_1_before_i32_member	file:
__anon98b8c2480508	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_bool_2_before_i32_member	file:
__anon98b8c2480608	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_bool_3_before_i32_member	file:
__anon98b8c2480708	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_i32_3	file:
__anon98b8c2480808	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_i32_3_before_i32_member	file:
__anon98b8c2480908	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_struct_bool_3	file:
__anon98b8c2480a08	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_struct_bool_3	file:
__anon98b8c2480b08	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_struct_bool_3_before_i32_member	file:
__anon98b8c2480c08	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_struct_bool_3_before_i32_member	file:
__anon98b8c2480d08	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_struct_array_bool_3	file:
__anon98b8c2480e08	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_struct_array_bool_3	file:
__anon98b8c2480f08	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_2_arrays_1_bool_1_i32	file:
__anon98b8c2481008	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_2_arrays_1_i32_1_bool	file:
__anon98b8c2481108	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_8_arrays_bool_w_padded_member	file:
__anon98b8c2481208	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_standaline_array_bool_1	file:
__anon98b8c2481308	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_standaline_array_bool_2	file:
__anon98b8c2481408	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_standaline_array_bool_3	file:
__anon98b8c2481508	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_of_standaline_array_bool_1	file:
__anon98b8c2481608	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_of_standaline_array_bool_2	file:
__anon98b8c2481708	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef struct {$/;"	s	function:ArrayTypes_array_of_standaline_array_bool_3	file:
__anon9c840e7f0108	lib/flecs/examples/c/systems/basics/src/main.c	/^typedef struct {$/;"	s	file:
__anon9d50ddff0102	lib/flecs/examples/cpp/systems/basics/src/main.cpp	/^        .each([](flecs::entity e, Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anon9d6d05bc0108	lib/flecs/examples/c/reflection/basics_bitmask/src/main.c	/^typedef struct {$/;"	s	file:
__anon9f68423d0102	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:Trigger_on_add	file:
__anon9f68423d0202	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:Trigger_on_remove	file:
__anon9f68423d0302	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .iter([&](flecs::iter it, MyTag*) {$/;"	f	function:Trigger_on_add_tag_action	file:
__anon9f68423d0402	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .iter([&](flecs::iter it, MyTag*) {$/;"	f	function:Trigger_on_add_tag_iter	file:
__anon9f68423d0502	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .each([&](flecs::entity e, MyTag) {$/;"	f	function:Trigger_on_add_tag_each	file:
__anon9f68423d0602	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:Trigger_trigger_w_self	file:
__anon9f68423d0702	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Trigger_on_add_id	file:
__anon9f68423d0802	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Trigger_on_add_id_arg	file:
__anon9f68423d0902	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Trigger_on_add_expr	file:
__anon9f68423d0a02	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Trigger_create_w_no_template_args	file:
__anon9f68423d0b02	lib/flecs/test/cpp_api/src/Trigger.cpp	/^        .each([&](flecs::entity e, TagA) {$/;"	f	function:Trigger_yield_existing	file:
__anona30c816c0108	lib/flecs/examples/c/entities/basics/src/main.c	/^typedef struct {$/;"	s	file:
__anona504cb430102	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^    r.each([&](flecs::iter& it, size_t index) {$/;"	f	function:main	file:
__anona52ddc0d0108	lib/flecs/test/api/src/Filter.c	/^typedef struct {$/;"	s	file:
__anona642c005010a	lib/flecs/flecs.c	/^    union {$/;"	u	struct:ecs_defer_op_t	file:
__anona642c0050208	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c005030a	lib/flecs/flecs.c	/^  union { const void *ptr; size_t i; } u;     \/* needed for Mac Powerbook G4 *\/$/;"	u	function:hashlittle2	file:
__anona642c0050408	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c005050a	lib/flecs/flecs.c	/^    union {$/;"	u	struct:ecs_rule_pair_t	file:
__anona642c005060a	lib/flecs/flecs.c	/^    union {$/;"	u	struct:ecs_rule_pair_t	file:
__anona642c005070a	lib/flecs/flecs.c	/^    union {$/;"	u	struct:ecs_rule_op_ctx_t	file:
__anona642c0050808	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c0050903	lib/flecs/flecs.c	/^typedef enum  {$/;"	g	file:
__anona642c0050a08	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c0050b08	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c0050c08	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c0050d08	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c0050e08	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c0050f08	lib/flecs/flecs.c	/^typedef struct {$/;"	s	file:
__anona642c005100a	lib/flecs/flecs.c	/^    union {$/;"	u	function:_flecs_ito	file:
__anona642c00a010a	lib/flecs/flecs.h	/^    union {$/;"	u	struct:ecs_iter_private_t
__anona642c00a0208	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0308	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0408	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0508	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0608	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0708	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0808	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0903	lib/flecs/flecs.h	/^typedef enum {$/;"	g
__anona642c00a0a08	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0b08	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0c08	lib/flecs/flecs.h	/^typedef struct {$/;"	s
__anona642c00a0d02	lib/flecs/flecs.h	/^    return this->each(rel, flecs::Wildcard, [&](flecs::id id) {$/;"	f	function:flecs::entity_view::each	file:
__anonab2585d10102	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .each([&](Position& p, Velocity& v) {$/;"	f	function:Observer_2_terms_on_add	file:
__anonab2585d10202	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .each([&](Position& p, Velocity& v) {$/;"	f	function:Observer_2_terms_on_remove	file:
__anonab2585d10302	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .each([&](Position& p, Velocity& v) {$/;"	f	function:Observer_2_terms_on_set	file:
__anonab2585d10402	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .each([&](Position& p, Velocity& v) {$/;"	f	function:Observer_2_terms_un_set	file:
__anonab2585d10502	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:Observer_observer_w_self	file:
__anonab2585d10602	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:Observer_10_terms	file:
__anonab2585d10702	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:Observer_20_terms	file:
__anonab2585d10802	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .iter([&](flecs::iter& it, const Position *p) {$/;"	f	function:Observer_2_entities_iter	file:
__anonab2585d10902	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:Observer_2_entities_table_column	file:
__anonab2585d10a02	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .each([&](flecs::entity e, const Position& p) {$/;"	f	function:Observer_2_entities_each	file:
__anonab2585d10b02	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:Observer_create_w_no_template_args	file:
__anonab2585d10c02	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .each([&](flecs::entity e, TagA) {$/;"	f	function:Observer_yield_existing	file:
__anonab2585d10d02	lib/flecs/test/cpp_api/src/Observer.cpp	/^        .each([&](flecs::entity e, TagA, TagB) {$/;"	f	function:Observer_yield_existing_2_terms	file:
__anonab3664440108	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^typedef struct {$/;"	s	file:
__anonab3664440208	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^typedef struct {$/;"	s	file:
__anonac6cf30b0102	lib/flecs/test/cpp_api/src/Type.cpp	/^        .iter([&](flecs::iter &it){$/;"	f	function:Type_has_from_stage	file:
__anonac6cf30b0202	lib/flecs/test/cpp_api/src/Type.cpp	/^    {$/;"	f	function:Type_create_type_from_system	file:
__anonac6cf30b0302	lib/flecs/test/cpp_api/src/Type.cpp	/^        {$/;"	f	function:Type_type_from_staged_iter	file:
__anonac6cf30b0402	lib/flecs/test/cpp_api/src/Type.cpp	/^        {$/;"	f	function:Type_type_from_iter	file:
__anonb57edf370108	lib/flecs/test/api/src/OnDelete.c	/^typedef struct {$/;"	s	file:
__anonb782dc9e0108	lib/libflint/include/lfbinarytree.h	/^typedef struct {$/;"	s
__anonb7ea1cde0108	lib/flecs/test/api/src/Plecs.c	/^    typedef struct {$/;"	s	function:Plecs_type_and_assign_in_plecs_w_3_members	file:
__anonb7ea1cde0203	lib/flecs/test/api/src/Plecs.c	/^    typedef enum {$/;"	g	function:Plecs_type_and_assign_in_plecs_w_enum	file:
__anonb7ea1cde0308	lib/flecs/test/api/src/Plecs.c	/^    typedef struct {$/;"	s	function:Plecs_type_and_assign_in_plecs_w_enum	file:
__anonb7ea1cde0403	lib/flecs/test/api/src/Plecs.c	/^    typedef enum {$/;"	g	function:Plecs_type_and_assign_in_plecs_w_enum_using_meta	file:
__anonb7ea1cde0508	lib/flecs/test/api/src/Plecs.c	/^    typedef struct {$/;"	s	function:Plecs_type_and_assign_in_plecs_w_enum_using_meta	file:
__anonb7ea1cde0603	lib/flecs/test/api/src/Plecs.c	/^    typedef enum {$/;"	g	function:Plecs_type_and_assign_in_plecs_w_enum_primitive_using_meta	file:
__anonb7ea1cde0703	lib/flecs/test/api/src/Plecs.c	/^    typedef enum {$/;"	g	function:Plecs_type_and_assign_in_plecs_w_enum_primitive_and_struct	file:
__anonb7ea1cde0808	lib/flecs/test/api/src/Plecs.c	/^    typedef struct {$/;"	s	function:Plecs_type_and_assign_in_plecs_nested_member	file:
__anonb7ea1cde0908	lib/flecs/test/api/src/Plecs.c	/^        struct {$/;"	s	struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808	file:
__anonb7ea1cde0a08	lib/flecs/test/api/src/Plecs.c	/^        struct {$/;"	s	struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808	file:
__anonb7ea1cde0b08	lib/flecs/test/api/src/Plecs.c	/^    typedef struct {$/;"	s	function:Plecs_using_w_entity_ref_in_value_3_members	file:
__anonb7ea1cde0c08	lib/flecs/test/api/src/Plecs.c	/^    typedef struct {$/;"	s	function:Plecs_struct_type_w_default_child_component_nested_member	file:
__anonb7ea1cde0d08	lib/flecs/test/api/src/Plecs.c	/^        struct {$/;"	s	struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08	file:
__anonb7ea1cde0e08	lib/flecs/test/api/src/Plecs.c	/^        struct {$/;"	s	struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08	file:
__anonb7ea1cde0f03	lib/flecs/test/api/src/Plecs.c	/^    typedef enum {$/;"	g	function:Plecs_enum_type_w_default_child_component	file:
__anonb97f8f360108	lib/flecs/examples/c/queries/sorting/src/main.c	/^typedef struct {$/;"	s	file:
__anonbb926b5d0108	lib/uthash/tests/test21.c	/^typedef struct {$/;"	s	file:
__anonbb926b5d0208	lib/uthash/tests/test21.c	/^typedef struct {$/;"	s	file:
__anonbb926f9e0108	lib/uthash/tests/test22.c	/^typedef struct {$/;"	s	file:
__anonbb926f9e0208	lib/uthash/tests/test22.c	/^typedef struct {$/;"	s	file:
__anonbb9273df0108	lib/uthash/tests/test23.c	/^typedef struct {$/;"	s	file:
__anonbb930d030108	lib/uthash/tests/test36.c	/^typedef struct {$/;"	s	file:
__anonbb9311440108	lib/uthash/tests/test37.c	/^typedef struct {$/;"	s	file:
__anonbb9319c60108	lib/uthash/tests/test39.c	/^typedef struct {$/;"	s	file:
__anonbb938ca10108	lib/uthash/tests/test43.c	/^typedef struct {$/;"	s	file:
__anonbb9410800108	lib/uthash/tests/test51.c	/^typedef struct {$/;"	s	file:
__anonbb9414c10108	lib/uthash/tests/test52.c	/^typedef struct {$/;"	s	file:
__anonbb942a060108	lib/uthash/tests/test57.c	/^typedef struct {$/;"	s	file:
__anonbb95cf290108	lib/uthash/tests/test87.c	/^typedef struct {$/;"	s	file:
__anonbc680b0b0108	lib/flecs/examples/c/reflection/basics_json/src/main.c	/^typedef struct {$/;"	s	file:
__anonc1fd1cd10102	lib/flecs/test/custom_builds/cpp/timer/src/main.cpp	/^        .each([](Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anonc203dd100108	lib/flecs/examples/c/systems/sync_point/src/main.c	/^typedef struct {$/;"	s	file:
__anonc2d932d70103	lib/flecs/src/addons/http.c	/^typedef enum  {$/;"	g	file:
__anonc2d932d70208	lib/flecs/src/addons/http.c	/^typedef struct {$/;"	s	file:
__anonc2d932d70308	lib/flecs/src/addons/http.c	/^typedef struct {$/;"	s	file:
__anonc2d932d70408	lib/flecs/src/addons/http.c	/^typedef struct {$/;"	s	file:
__anonc721aa060102	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .each([&invoked](flecs::entity e, Position& p) {$/;"	f	function:Entity_get_mut_generic	file:
__anonc721aa060202	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .each([&invoked](flecs::entity e, Position& p) {$/;"	f	function:Entity_get_mut_generic_w_id	file:
__anonc721aa060302	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .each([&invoked](flecs::entity e, Position& p) {$/;"	f	function:Entity_get_mut_generic_w_id_t	file:
__anonc721aa060402	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e_1.get([](const Position& p) {$/;"	f	function:Entity_get_1_component_w_callback	file:
__anonc721aa060502	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e_2.get([](const Position& p) {$/;"	f	function:Entity_get_1_component_w_callback	file:
__anonc721aa060602	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e_3.get([](const Position& p) {}), false);$/;"	f	function:Entity_get_1_component_w_callback	file:
__anonc721aa060702	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e_1.get([](const Position& p, const Velocity& v) {$/;"	f	function:Entity_get_2_components_w_callback	file:
__anonc721aa060802	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e_2.get([](const Position& p, const Velocity& v) {}), false);$/;"	f	function:Entity_get_2_components_w_callback	file:
__anonc721aa060902	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e_3.get([](const Position& p, const Velocity& v) {}), false);$/;"	f	function:Entity_get_2_components_w_callback	file:
__anonc721aa060a02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p){$/;"	f	function:Entity_set_1_component_w_callback	file:
__anonc721aa060b02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p, Velocity& v){$/;"	f	function:Entity_set_2_components_w_callback	file:
__anonc721aa060c02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p, Velocity& v, Mass& m){$/;"	f	function:Entity_set_3_components_w_callback	file:
__anonc721aa060d02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p){$/;"	f	function:Entity_defer_set_1_component	file:
__anonc721aa060e02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    e.get([](const Position& p) {$/;"	f	function:Entity_defer_set_1_component	file:
__anonc721aa060f02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p, Velocity& v){$/;"	f	function:Entity_defer_set_2_components	file:
__anonc721aa061002	lib/flecs/test/cpp_api/src/Entity.cpp	/^    e.get([](const Position& p, const Velocity& v) {$/;"	f	function:Entity_defer_set_2_components	file:
__anonc721aa061102	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p, Velocity& v, Mass& m){$/;"	f	function:Entity_defer_set_3_components	file:
__anonc721aa061202	lib/flecs/test/cpp_api/src/Entity.cpp	/^    e.get([](const Position& p, const Velocity& v, const Mass& m) {$/;"	f	function:Entity_defer_set_3_components	file:
__anonc721aa061302	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:Entity_set_2_w_on_set	file:
__anonc721aa061402	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .each([&](flecs::entity e, Velocity& v) {$/;"	f	function:Entity_set_2_w_on_set	file:
__anonc721aa061502	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p, Velocity& v){$/;"	f	function:Entity_set_2_w_on_set	file:
__anonc721aa061602	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e.get([](const Position& p, const Velocity& v) {$/;"	f	function:Entity_set_2_w_on_set	file:
__anonc721aa061702	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:Entity_defer_set_2_w_on_set	file:
__anonc721aa061802	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .each([&](flecs::entity e, Velocity& v) {$/;"	f	function:Entity_defer_set_2_w_on_set	file:
__anonc721aa061902	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p, Velocity& v){$/;"	f	function:Entity_defer_set_2_w_on_set	file:
__anonc721aa061a02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e.get([](const Position& p, const Velocity& v) {$/;"	f	function:Entity_defer_set_2_w_on_set	file:
__anonc721aa061b02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p, Velocity& v){$/;"	f	function:Entity_set_2_after_fluent	file:
__anonc721aa061c02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e.get([](const Position& p, const Velocity& v, const Mass& m) {$/;"	f	function:Entity_set_2_after_fluent	file:
__anonc721aa061d02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .set([](Position& p, Velocity& v){$/;"	f	function:Entity_set_2_before_fluent	file:
__anonc721aa061e02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e.get([](const Position& p, const Velocity& v, const Mass& m) {$/;"	f	function:Entity_set_2_before_fluent	file:
__anonc721aa061f02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e.get([](const Position& p) {$/;"	f	function:Entity_set_2_after_set_1	file:
__anonc721aa062002	lib/flecs/test/cpp_api/src/Entity.cpp	/^    e.set([](Position& p, Velocity& v) {$/;"	f	function:Entity_set_2_after_set_1	file:
__anonc721aa062102	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e.get([&](const Position& p, const Velocity& v) {$/;"	f	function:Entity_set_2_after_set_1	file:
__anonc721aa062202	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e.get([&](const Position& p, const Velocity& v) {$/;"	f	function:Entity_set_2_after_set_2	file:
__anonc721aa062302	lib/flecs/test/cpp_api/src/Entity.cpp	/^    e.set([](Position& p, Velocity& v) {$/;"	f	function:Entity_set_2_after_set_2	file:
__anonc721aa062402	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_bool(e.get([&](const Position& p, const Velocity& v) {$/;"	f	function:Entity_set_2_after_set_2	file:
__anonc721aa062502	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto Tag = ecs.entity().with([&]{$/;"	f	function:Entity_with_self	file:
__anonc721aa062602	lib/flecs/test/cpp_api/src/Entity.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:Entity_with_self	file:
__anonc721aa062702	lib/flecs/test/cpp_api/src/Entity.cpp	/^        test_bool(e.get([&](const Self& s){$/;"	f	function:Entity_with_self::__anonc721aa062602	file:
__anonc721aa062802	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto Bob = ecs.entity().with<Likes>([&]{$/;"	f	function:Entity_with_relation_type_self	file:
__anonc721aa062902	lib/flecs/test/cpp_api/src/Entity.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:Entity_with_relation_type_self	file:
__anonc721aa062a02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        test_bool(e.get([&](const Self& s){$/;"	f	function:Entity_with_relation_type_self::__anonc721aa062902	file:
__anonc721aa062b02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto Bob = ecs.entity().with(Likes, [&]{$/;"	f	function:Entity_with_relation_self	file:
__anonc721aa062c02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:Entity_with_relation_self	file:
__anonc721aa062d02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        test_bool(e.get([&](const Self& s){$/;"	f	function:Entity_with_relation_self::__anonc721aa062c02	file:
__anonc721aa062e02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto Tier1 = ecs.entity("Tier1").with([&]{$/;"	f	function:Entity_with_self_w_name	file:
__anonc721aa062f02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto Tier1 = ecs.entity("Tier1").with([&]{$/;"	f	function:Entity_with_self_nested	file:
__anonc721aa063002	lib/flecs/test/cpp_api/src/Entity.cpp	/^        ecs.entity("Tier2").with([&]{$/;"	f	function:Entity_with_self_nested::__anonc721aa062f02	file:
__anonc721aa063102	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto parent = ecs.entity("P").scope([&]{$/;"	f	function:Entity_with_scope	file:
__anonc721aa063202	lib/flecs/test/cpp_api/src/Entity.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:Entity_with_scope	file:
__anonc721aa063302	lib/flecs/test/cpp_api/src/Entity.cpp	/^        test_bool(e.get([&](const Self& s){$/;"	f	function:Entity_with_scope::__anonc721aa063202	file:
__anonc721aa063402	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto parent = ecs.entity("P").scope([&]{$/;"	f	function:Entity_with_scope_nested	file:
__anonc721aa063502	lib/flecs/test/cpp_api/src/Entity.cpp	/^        auto child = ecs.entity("C").scope([&]{$/;"	f	function:Entity_with_scope_nested::__anonc721aa063402	file:
__anonc721aa063602	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto parent = ecs.entity("P").scope([&]{$/;"	f	function:Entity_with_scope_nested_same_name_as_parent	file:
__anonc721aa063702	lib/flecs/test/cpp_api/src/Entity.cpp	/^        auto child = ecs.entity("C").scope([&]{$/;"	f	function:Entity_with_scope_nested_same_name_as_parent::__anonc721aa063602	file:
__anonc721aa063802	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_name	file:
__anonc721aa063902	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_nested_name	file:
__anonc721aa063a02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_scope_name	file:
__anonc721aa063b02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        parent.scope([&]{$/;"	f	function:Entity_defer_new_w_scope_name::__anonc721aa063a02	file:
__anonc721aa063c02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_scope_nested_name	file:
__anonc721aa063d02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        parent.scope([&]{$/;"	f	function:Entity_defer_new_w_scope_nested_name::__anonc721aa063c02	file:
__anonc721aa063e02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_deferred_scope_nested_name	file:
__anonc721aa063f02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        parent = ecs.entity("Parent").scope([&]{$/;"	f	function:Entity_defer_new_w_deferred_scope_nested_name::__anonc721aa063e02	file:
__anonc721aa064002	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_scope	file:
__anonc721aa064102	lib/flecs/test/cpp_api/src/Entity.cpp	/^        parent.scope([&]{$/;"	f	function:Entity_defer_new_w_scope::__anonc721aa064002	file:
__anonc721aa064202	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_with	file:
__anonc721aa064302	lib/flecs/test/cpp_api/src/Entity.cpp	/^        Tag.with([&]{$/;"	f	function:Entity_defer_new_w_with::__anonc721aa064202	file:
__anonc721aa064402	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_name_scope_with	file:
__anonc721aa064502	lib/flecs/test/cpp_api/src/Entity.cpp	/^        Tag.with([&]{$/;"	f	function:Entity_defer_new_w_name_scope_with::__anonc721aa064402	file:
__anonc721aa064602	lib/flecs/test/cpp_api/src/Entity.cpp	/^            parent.scope([&]{$/;"	f	function:Entity_defer_new_w_name_scope_with::__anonc721aa064402::__anonc721aa064502	file:
__anonc721aa064702	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_new_w_nested_name_scope_with	file:
__anonc721aa064802	lib/flecs/test/cpp_api/src/Entity.cpp	/^        Tag.with([&]{$/;"	f	function:Entity_defer_new_w_nested_name_scope_with::__anonc721aa064702	file:
__anonc721aa064902	lib/flecs/test/cpp_api/src/Entity.cpp	/^            parent.scope([&]{$/;"	f	function:Entity_defer_new_w_nested_name_scope_with::__anonc721aa064702::__anonc721aa064802	file:
__anonc721aa064a02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    ecs.defer([&]{$/;"	f	function:Entity_defer_w_with_implicit_component	file:
__anonc721aa064b02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        ecs.with<Tag>([&]{$/;"	f	function:Entity_defer_w_with_implicit_component::__anonc721aa064a02	file:
__anonc721aa064c02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .with([&]{$/;"	f	function:Entity_with_after_builder_method	file:
__anonc721aa064d02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .with<Likes>([&]{$/;"	f	function:Entity_with_after_builder_method	file:
__anonc721aa064e02	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .with(flecs::IsA, [&]{$/;"	f	function:Entity_with_after_builder_method	file:
__anonc721aa064f02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_assert(A.get([](const Position& p) {$/;"	f	function:Entity_with_after_builder_method	file:
__anonc721aa065002	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_assert(B.get([](const Position& p) {$/;"	f	function:Entity_with_after_builder_method	file:
__anonc721aa065102	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_assert(C.get([](const Position& p) {$/;"	f	function:Entity_with_after_builder_method	file:
__anonc721aa065202	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .with([&]{$/;"	f	function:Entity_with_before_builder_method	file:
__anonc721aa065302	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto B = ecs.entity().with<Likes>([&]{$/;"	f	function:Entity_with_before_builder_method	file:
__anonc721aa065402	lib/flecs/test/cpp_api/src/Entity.cpp	/^    auto C = ecs.entity().with(flecs::IsA, [&]{$/;"	f	function:Entity_with_before_builder_method	file:
__anonc721aa065502	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_assert(A.get([](const Position& p) {$/;"	f	function:Entity_with_before_builder_method	file:
__anonc721aa065602	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_assert(B.get([](const Position& p) {$/;"	f	function:Entity_with_before_builder_method	file:
__anonc721aa065702	lib/flecs/test/cpp_api/src/Entity.cpp	/^    test_assert(C.get([](const Position& p) {$/;"	f	function:Entity_with_before_builder_method	file:
__anonc721aa065802	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .scope([&]{$/;"	f	function:Entity_scope_after_builder_method	file:
__anonc721aa065902	lib/flecs/test/cpp_api/src/Entity.cpp	/^        .scope([&]{$/;"	f	function:Entity_scope_before_builder_method	file:
__anonc721aa065a02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    em.each<Rel>([&](flecs::entity obj) {$/;"	f	function:Entity_each_in_stage	file:
__anonc721aa065b02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    e2.children([&](flecs::entity child){$/;"	f	function:Entity_iter_recycled_parent	file:
__anonc721aa065c02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    e.mut(stage).get([&](const Position& p) {$/;"	f	function:Entity_get_lambda_from_stage	file:
__anonc721aa065d02	lib/flecs/test/cpp_api/src/Entity.cpp	/^    }).each([](flecs::entity e) { e.add<TagA>().add<TagB>(); });$/;"	f	function:Entity_entity_array	file:
__anonca0557440102	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^    q.iter([&](flecs::iter& it, Position *p, const Velocity *v) {$/;"	f	function:main	file:
__anoncabdecbc0108	lib/libflint/include/lflinkedlist.h	/^typedef struct {$/;"	s
__anonceb012f80108	lib/flecs/include/flecs/private/hashmap.h	/^typedef struct {$/;"	s
__anonceb012f80208	lib/flecs/include/flecs/private/hashmap.h	/^typedef struct {$/;"	s
__anonceb012f80308	lib/flecs/include/flecs/private/hashmap.h	/^typedef struct {$/;"	s
__anonceb012f80408	lib/flecs/include/flecs/private/hashmap.h	/^typedef struct {$/;"	s
__anond3e263be0108	lib/flecs/examples/c/hello_world/src/main.c	/^typedef struct {$/;"	s	file:
__anond4af8f000108	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_bool	file:
__anond4af8f000208	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_bool_bool	file:
__anond4af8f000308	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_i32	file:
__anond4af8f000408	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_i32_i32	file:
__anond4af8f000508	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_i32_bool	file:
__anond4af8f000608	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_bool_i32	file:
__anond4af8f000708	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool	file:
__anond4af8f000808	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool	file:
__anond4af8f000908	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32	file:
__anond4af8f000a08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32	file:
__anond4af8f000b08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_w_bool_member	file:
__anond4af8f000c08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_w_bool_member	file:
__anond4af8f000d08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_w_i32_member	file:
__anond4af8f000e08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_w_i32_member	file:
__anond4af8f000f08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_2_bool	file:
__anond4af8f001008	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_2_bool	file:
__anond4af8f001108	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_2_bool	file:
__anond4af8f001208	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_2_bool	file:
__anond4af8f001308	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_2_bool	file:
__anond4af8f001408	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool	file:
__anond4af8f001508	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool	file:
__anond4af8f001608	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool	file:
__anond4af8f001708	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32	file:
__anond4af8f001808	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32	file:
__anond4af8f001908	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32	file:
__anond4af8f001a08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32	file:
__anond4af8f001b08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32	file:
__anond4af8f001c08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32	file:
__anond4af8f001d08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool	file:
__anond4af8f001e08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool	file:
__anond4af8f001f08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool	file:
__anond4af8f002008	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool	file:
__anond4af8f002108	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool	file:
__anond4af8f002208	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool	file:
__anond4af8f002308	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool	file:
__anond4af8f002408	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool	file:
__anond4af8f002508	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool_bool	file:
__anond4af8f002608	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool_bool	file:
__anond4af8f002708	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool_bool	file:
__anond4af8f002808	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool_bool	file:
__anond4af8f002908	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_bool_bool	file:
__anond4af8f002a08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	file:
__anond4af8f002b08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	file:
__anond4af8f002c08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	file:
__anond4af8f002d08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	file:
__anond4af8f002e08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_i32_i32_w_member_before	file:
__anond4af8f002f08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	file:
__anond4af8f003008	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	file:
__anond4af8f003108	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	file:
__anond4af8f003208	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	file:
__anond4af8f003308	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before	file:
__anond4af8f003408	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	file:
__anond4af8f003508	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	file:
__anond4af8f003608	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	file:
__anond4af8f003708	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	file:
__anond4af8f003808	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before	file:
__anond4af8f003908	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_array_bool_1	file:
__anond4af8f003a08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_array_bool_2	file:
__anond4af8f003b08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_array_bool_3	file:
__anond4af8f003c08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_array_bool_1_w_i32_after	file:
__anond4af8f003d08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_array_bool_2_w_i32_after	file:
__anond4af8f003e08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_array_bool_3_w_i32_after	file:
__anond4af8f003f08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_array_struct_bool_3_w_i32_after	file:
__anond4af8f004008	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_array_struct_bool_3_w_i32_after	file:
__anond4af8f004108	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_standalone_array_bool_1	file:
__anond4af8f004208	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_standalone_array_bool_2	file:
__anond4af8f004308	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_standalone_array_bool_3	file:
__anond4af8f004408	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_standalone_array_bool_1_w_bool_after	file:
__anond4af8f004508	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_standalone_array_bool_2_w_bool_after	file:
__anond4af8f004608	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_standalone_array_bool_3_w_bool_after	file:
__anond4af8f004708	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_w_vector	file:
__anond4af8f004808	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_w_vector_w_bool_before	file:
__anond4af8f004908	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_w_vector_w_bool_after	file:
__anond4af8f004a08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_w_bitmask	file:
__anond4af8f004b08	lib/flecs/test/meta/src/Serialized.c	/^    typedef struct {$/;"	s	function:Serialized_ops_struct_w_enum	file:
__anond500aafe0102	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^        .each([](Position& p, Velocity& v) {$/;"	f	function:main	file:
__anond91404760102	lib/flecs/examples/cpp/queries/sorting/src/main.cpp	/^    q.each([](flecs::entity, Position& p) {$/;"	f	function:print_query	file:
__anond91404760202	lib/flecs/examples/cpp/queries/sorting/src/main.cpp	/^        .each([](Position &p) {$/;"	f	function:main	file:
__anond91cde350108	lib/flecs/src/addons/rest.c	/^typedef struct {$/;"	s	file:
__anondd81c28f0102	lib/flecs/examples/cpp/queries/hierarchy/src/main.cpp	/^    {$/;"	f	function:main	file:
__anondd81c28f0202	lib/flecs/examples/cpp/queries/hierarchy/src/main.cpp	/^    ecs.each([](flecs::entity e, flecs::pair<Position, World> p) {$/;"	f	function:main	file:
__anondfb074180102	lib/flecs/examples/cpp/relations/basics/src/main.cpp	/^    bob.each<Eats>([](flecs::entity second) {$/;"	f	function:main	file:
__anondfb074180202	lib/flecs/examples/cpp/relations/basics/src/main.cpp	/^    bob.each(flecs::Wildcard, pears, [](flecs::id id) {$/;"	f	function:main	file:
__anone28e46680102	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    item.each([&](flecs::id id) {$/;"	f	function:item_kind	file:
__anone28e46680202	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    item.each([&](flecs::id id) {$/;"	f	function:item_name	file:
__anone28e46680302	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    for_each_item(container, [&](flecs::entity item) {$/;"	f	function:find_item_w_kind	file:
__anone28e46680402	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    dst.world().defer([&] {$/;"	f	function:transfer_items	file:
__anone28e46680502	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^        for_each_item(src, [&](flecs::entity item) {$/;"	f	function:transfer_items::__anone28e46680402	file:
__anone28e46680602	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    for_each_item(container, [&](flecs::entity item) {$/;"	f	function:print_items	file:
__anone28e46680702	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^        item.get([&](const Amount& amt) {$/;"	f	function:print_items::__anone28e46680602	file:
__anone28e46680802	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    auto loot_box = ecs.entity("Chest").add<Container>().with<ContainedBy>([&]{$/;"	f	function:main	file:
__anone28e46680902	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^        ecs.entity().add<Container>().with<ContainedBy>([&]{$/;"	f	function:main	file:
__anone425e6800108	lib/flecs/examples/c/systems/pipeline/src/main.c	/^typedef struct {$/;"	s	file:
__anone6f392830108	lib/uthash/tests/hashscan.c	/^typedef struct {$/;"	s	file:
__anone6f392830208	lib/uthash/tests/hashscan.c	/^typedef struct {$/;"	s	file:
__anone7c55fc30102	lib/flecs/examples/cpp/queries/ad_hoc_query/src/main.cpp	/^    ecs.each([](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:main	file:
__anoneaa0a51b010a	lib/flecs/src/misc.c	/^    union {$/;"	u	function:_flecs_ito	file:
__anoneb6a2bf10102	lib/flecs/test/custom_builds/cpp/app/src/main.cpp	/^    ecs.system().iter([](flecs::iter& it) {$/;"	f	function:main	file:
__anonecc604d00102	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^        .each([](flecs::entity e) {$/;"	f	function:main	file:
__anonecc604d00202	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^        .each([](Position& p, const Velocity& v) {$/;"	f	function:main	file:
__anonecc604d00302	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^        .each([](flecs::entity e, const Position& p) {$/;"	f	function:main	file:
__anoneccc1c6a0108	lib/flecs/test/api/src/ComponentLifecycle.c	/^typedef struct {$/;"	s	file:
__anoneccc1c6a0208	lib/flecs/test/api/src/ComponentLifecycle.c	/^typedef struct {$/;"	s	file:
__anonf2e46c1b0108	lib/flecs/test/api/src/Trigger.c	/^typedef struct {$/;"	s	file:
__anonf30a79380108	lib/uthash/include/utarray.h	/^typedef struct {$/;"	s
__anonf30a79380208	lib/uthash/include/utarray.h	/^typedef struct {$/;"	s
__anonf330dd310102	lib/flecs/test/cpp_api/src/Iterable.cpp	/^    q.page(1, 3).each([&](flecs::entity e, Self& self) {$/;"	f	function:Iterable_page_each	file:
__anonf330dd310202	lib/flecs/test/cpp_api/src/Iterable.cpp	/^    q.page(1, 3).iter([&](flecs::iter it, Self* self) {$/;"	f	function:Iterable_page_iter	file:
__anonf330dd310302	lib/flecs/test/cpp_api/src/Iterable.cpp	/^    q.worker(0, 2).each([&](flecs::entity e, Self& self) {$/;"	f	function:Iterable_worker_each	file:
__anonf330dd310402	lib/flecs/test/cpp_api/src/Iterable.cpp	/^    q.worker(1, 2).each([&](flecs::entity e, Self& self) {$/;"	f	function:Iterable_worker_each	file:
__anonf330dd310502	lib/flecs/test/cpp_api/src/Iterable.cpp	/^    q.worker(0, 2).iter([&](flecs::iter it, Self* self) {$/;"	f	function:Iterable_worker_iter	file:
__anonf330dd310602	lib/flecs/test/cpp_api/src/Iterable.cpp	/^    q.worker(1, 2).iter([&](flecs::iter it, Self* self) {$/;"	f	function:Iterable_worker_iter	file:
__anonf633b8e80108	lib/flecs/src/private_api.h	/^typedef struct {$/;"	s
__anonf6ae0db50102	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^            .each([&](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:SystemBuilder_builder_assign_same_type	file:
__anonf6ae0db50202	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:SystemBuilder_builder_build_to_auto	file:
__anonf6ae0db50302	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^    auto s = qb.each([&](flecs::entity e) {$/;"	f	function:SystemBuilder_builder_build_n_statements	file:
__anonf6ae0db50402	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:SystemBuilder_1_type	file:
__anonf6ae0db50502	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:SystemBuilder_add_1_type	file:
__anonf6ae0db50602	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:SystemBuilder_add_2_types	file:
__anonf6ae0db50702	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:SystemBuilder_add_1_type_w_1_type	file:
__anonf6ae0db50802	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:SystemBuilder_add_2_types_w_1_type	file:
__anonf6ae0db50902	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:SystemBuilder_add_pair	file:
__anonf6ae0db50a02	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e, Position& p) {$/;"	f	function:SystemBuilder_add_not	file:
__anonf6ae0db50b02	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:SystemBuilder_add_or	file:
__anonf6ae0db50c02	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:SystemBuilder_add_optional	file:
__anonf6ae0db50d02	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e, Position& p, Velocity* v) {$/;"	f	function:SystemBuilder_ptr_type	file:
__anonf6ae0db50e02	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e, const Position& p) {$/;"	f	function:SystemBuilder_const_type	file:
__anonf6ae0db50f02	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:SystemBuilder_string_term	file:
__anonf6ae0db51002	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .iter([&](flecs::iter& it, Entity *e) {$/;"	f	function:SystemBuilder_singleton_term	file:
__anonf6ae0db51102	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:SystemBuilder_10_terms	file:
__anonf6ae0db51202	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .iter([&](flecs::iter& it) {$/;"	f	function:SystemBuilder_20_terms	file:
__anonf6ae0db51302	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        { });$/;"	f	function:SystemBuilder_name_arg	file:
__anonf6ae0db51402	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        .each([&](flecs::entity e) {$/;"	f	function:SystemBuilder_create_w_no_template_args	file:
__anonf7eabbd30102	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^        .each([&](flecs::iter& it, size_t index, RangedUnit) {$/;"	f	function:main	file:
__anonf9264af60108	lib/flecs/examples/c/entities/hierarchy/src/main.c	/^typedef struct {$/;"	s	file:
__anonfbee6d870108	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } Attack;$/;"	s	file:
__anonfbee6d870208	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } Defense;$/;"	s	file:
__anonfbee6d870308	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } FreightCapacity;$/;"	s	file:
__anonfbee6d870408	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } ImpulseSpeed;$/;"	s	file:
__anonfbee6d870508	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct {$/;"	s	file:
__anonffcbcc660102	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:QueryBuilder_builder_assign_same_type	file:
__anonffcbcc660202	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_builder_assign_to_empty	file:
__anonffcbcc660302	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_builder_assign_from_empty	file:
__anonffcbcc660402	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:QueryBuilder_builder_build	file:
__anonffcbcc660502	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p, Velocity& v) {$/;"	f	function:QueryBuilder_builder_build_to_auto	file:
__anonffcbcc660602	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_builder_build_n_statements	file:
__anonffcbcc660702	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:QueryBuilder_1_type	file:
__anonffcbcc660802	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_add_1_type	file:
__anonffcbcc660902	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_add_2_types	file:
__anonffcbcc660a02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:QueryBuilder_add_1_type_w_1_type	file:
__anonffcbcc660b02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:QueryBuilder_add_2_types_w_1_type	file:
__anonffcbcc660c02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_add_pair	file:
__anonffcbcc660d02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:QueryBuilder_add_not	file:
__anonffcbcc660e02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_add_or	file:
__anonffcbcc660f02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_add_optional	file:
__anonffcbcc661002	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p, Velocity* v) {$/;"	f	function:QueryBuilder_ptr_type	file:
__anonffcbcc661102	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, const Position& p) {$/;"	f	function:QueryBuilder_const_type	file:
__anonffcbcc661202	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_string_term	file:
__anonffcbcc661302	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_string_term_w_expr	file:
__anonffcbcc661402	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:QueryBuilder_singleton_term	file:
__anonffcbcc661502	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:QueryBuilder_isa_superset_term	file:
__anonffcbcc661602	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:QueryBuilder_isa_self_superset_term	file:
__anonffcbcc661702	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:QueryBuilder_childof_superset_term	file:
__anonffcbcc661802	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.iter([&](flecs::iter& it, Self *s) {$/;"	f	function:QueryBuilder_childof_self_superset_term	file:
__anonffcbcc661902	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_isa_superset_term_w_each	file:
__anonffcbcc661a02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_isa_self_superset_term_w_each	file:
__anonffcbcc661b02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_childof_superset_term_w_each	file:
__anonffcbcc661c02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_childof_self_superset_term_w_each	file:
__anonffcbcc661d02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_isa_superset_shortcut	file:
__anonffcbcc661e02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_isa_superset_shortcut_w_self	file:
__anonffcbcc661f02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_childof_superset_shortcut	file:
__anonffcbcc662002	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_childof_superset_shortcut_w_self	file:
__anonffcbcc662102	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_isa_superset_max_depth_1	file:
__anonffcbcc662202	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_isa_superset_max_depth_2	file:
__anonffcbcc662302	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_isa_superset_min_depth_2	file:
__anonffcbcc662402	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s, Other& o) {$/;"	f	function:QueryBuilder_isa_superset_min_depth_2_max_depth_3	file:
__anonffcbcc662502	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:QueryBuilder_role	file:
__anonffcbcc662602	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:QueryBuilder_relation	file:
__anonffcbcc662702	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:QueryBuilder_relation_w_object_wildcard	file:
__anonffcbcc662802	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:QueryBuilder_relation_w_predicate_wildcard	file:
__anonffcbcc662902	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Self& s) {$/;"	f	function:QueryBuilder_add_pair_w_rel_type	file:
__anonffcbcc662a02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:QueryBuilder_template_term	file:
__anonffcbcc662b02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:QueryBuilder_explicit_subject_w_id	file:
__anonffcbcc662c02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e, Position& p) {$/;"	f	function:QueryBuilder_explicit_subject_w_type	file:
__anonffcbcc662d02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_explicit_object_w_id	file:
__anonffcbcc662e02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_explicit_object_w_type	file:
__anonffcbcc662f02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_explicit_term	file:
__anonffcbcc663002	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_explicit_term_w_type	file:
__anonffcbcc663102	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_explicit_term_w_pair_type	file:
__anonffcbcc663202	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_explicit_term_w_id	file:
__anonffcbcc663302	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_explicit_term_w_pair_id	file:
__anonffcbcc663402	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^        .iter([&](flecs::iter it){$/;"	f	function:QueryBuilder_2_subsequent_args	file:
__anonffcbcc663502	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.iter([&](flecs::iter& it) {$/;"	f	function:QueryBuilder_optional_tag_is_set	file:
__anonffcbcc663602	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    f.iter([&](flecs::iter& it) {$/;"	f	function:QueryBuilder_10_terms	file:
__anonffcbcc663702	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    f.iter([&](flecs::iter& it) {$/;"	f	function:QueryBuilder_20_terms	file:
__anonffcbcc663802	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.iter([&](flecs::iter& it){$/;"	f	function:QueryBuilder_group_by_raw	file:
__anonffcbcc663902	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q_reverse.iter([&](flecs::iter& it){$/;"	f	function:QueryBuilder_group_by_raw	file:
__anonffcbcc663a02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.iter([&](flecs::iter& it){$/;"	f	function:QueryBuilder_group_by_template	file:
__anonffcbcc663b02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q_reverse.iter([&](flecs::iter& it){$/;"	f	function:QueryBuilder_group_by_template	file:
__anonffcbcc663c02	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    q.each([&](flecs::entity e) {$/;"	f	function:QueryBuilder_create_w_no_template_args	file:
_bootstrap_component	lib/flecs/flecs.c	/^void _bootstrap_component($/;"	f	typeref:typename:void	file:
_bootstrap_component	lib/flecs/src/bootstrap.c	/^void _bootstrap_component($/;"	f	typeref:typename:void	file:
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_bulk_desc_t	typeref:typename:int32_t
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_component_desc_t	typeref:typename:int32_t
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_entity_desc_t	typeref:typename:int32_t
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:int32_t
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:int32_t
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_query_desc_t	typeref:typename:int32_t
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_system_desc_t	typeref:typename:int32_t
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:int32_t
_canary	lib/flecs/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_type_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_bulk_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_component_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_entity_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_query_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs.h	/^    int32_t _canary;$/;"	m	struct:ecs_type_desc_t	typeref:typename:int32_t
_canary	lib/flecs/include/flecs/addons/system.h	/^    int32_t _canary;$/;"	m	struct:ecs_system_desc_t	typeref:typename:int32_t
_ecs_abort	lib/flecs/flecs.c	/^void _ecs_abort($/;"	f	typeref:typename:void
_ecs_abort	lib/flecs/src/addons/log.c	/^void _ecs_abort($/;"	f	typeref:typename:void
_ecs_assert	lib/flecs/flecs.c	/^bool _ecs_assert($/;"	f	typeref:typename:bool
_ecs_assert	lib/flecs/src/addons/log.c	/^bool _ecs_assert($/;"	f	typeref:typename:bool
_ecs_deprecated	lib/flecs/flecs.c	/^void _ecs_deprecated($/;"	f	typeref:typename:void
_ecs_deprecated	lib/flecs/src/addons/log.c	/^void _ecs_deprecated($/;"	f	typeref:typename:void
_ecs_err	lib/flecs/flecs.h	/^#define _ecs_err(/;"	d
_ecs_err	lib/flecs/include/flecs/addons/log.h	/^#define _ecs_err(/;"	d
_ecs_fatal	lib/flecs/flecs.h	/^#define _ecs_fatal(/;"	d
_ecs_fatal	lib/flecs/include/flecs/addons/log.h	/^#define _ecs_fatal(/;"	d
_ecs_log	lib/flecs/flecs.c	/^void _ecs_log($/;"	f	typeref:typename:void
_ecs_log	lib/flecs/src/addons/log.c	/^void _ecs_log($/;"	f	typeref:typename:void
_ecs_log_pop	lib/flecs/flecs.c	/^void _ecs_log_pop($/;"	f	typeref:typename:void
_ecs_log_pop	lib/flecs/src/addons/log.c	/^void _ecs_log_pop($/;"	f	typeref:typename:void
_ecs_log_push	lib/flecs/flecs.c	/^void _ecs_log_push($/;"	f	typeref:typename:void
_ecs_log_push	lib/flecs/src/addons/log.c	/^void _ecs_log_push($/;"	f	typeref:typename:void
_ecs_logv	lib/flecs/flecs.c	/^void _ecs_logv($/;"	f	typeref:typename:void
_ecs_logv	lib/flecs/src/addons/log.c	/^void _ecs_logv($/;"	f	typeref:typename:void
_ecs_map_ensure	lib/flecs/flecs.c	/^void* _ecs_map_ensure($/;"	f	typeref:typename:void *
_ecs_map_ensure	lib/flecs/src/datastructures/map.c	/^void* _ecs_map_ensure($/;"	f	typeref:typename:void *
_ecs_map_get	lib/flecs/flecs.c	/^void* _ecs_map_get($/;"	f	typeref:typename:void *
_ecs_map_get	lib/flecs/src/datastructures/map.c	/^void* _ecs_map_get($/;"	f	typeref:typename:void *
_ecs_map_get_ptr	lib/flecs/flecs.c	/^void* _ecs_map_get_ptr($/;"	f	typeref:typename:void *
_ecs_map_get_ptr	lib/flecs/src/datastructures/map.c	/^void* _ecs_map_get_ptr($/;"	f	typeref:typename:void *
_ecs_map_init	lib/flecs/flecs.c	/^void _ecs_map_init($/;"	f	typeref:typename:void
_ecs_map_init	lib/flecs/src/datastructures/map.c	/^void _ecs_map_init($/;"	f	typeref:typename:void
_ecs_map_new	lib/flecs/flecs.c	/^ecs_map_t* _ecs_map_new($/;"	f	typeref:typename:ecs_map_t *
_ecs_map_new	lib/flecs/src/datastructures/map.c	/^ecs_map_t* _ecs_map_new($/;"	f	typeref:typename:ecs_map_t *
_ecs_map_next	lib/flecs/flecs.c	/^void* _ecs_map_next($/;"	f	typeref:typename:void *
_ecs_map_next	lib/flecs/src/datastructures/map.c	/^void* _ecs_map_next($/;"	f	typeref:typename:void *
_ecs_map_next_ptr	lib/flecs/flecs.c	/^void* _ecs_map_next_ptr($/;"	f	typeref:typename:void *
_ecs_map_next_ptr	lib/flecs/src/datastructures/map.c	/^void* _ecs_map_next_ptr($/;"	f	typeref:typename:void *
_ecs_map_set	lib/flecs/flecs.c	/^void* _ecs_map_set($/;"	f	typeref:typename:void *
_ecs_map_set	lib/flecs/src/datastructures/map.c	/^void* _ecs_map_set($/;"	f	typeref:typename:void *
_ecs_parser_error	lib/flecs/flecs.c	/^void _ecs_parser_error($/;"	f	typeref:typename:void
_ecs_parser_error	lib/flecs/src/addons/log.c	/^void _ecs_parser_error($/;"	f	typeref:typename:void
_ecs_parser_errorv	lib/flecs/flecs.c	/^void _ecs_parser_errorv($/;"	f	typeref:typename:void
_ecs_parser_errorv	lib/flecs/src/addons/log.c	/^void _ecs_parser_errorv($/;"	f	typeref:typename:void
_ecs_poly_assert	lib/flecs/flecs.c	/^void _ecs_poly_assert($/;"	f	typeref:typename:void
_ecs_poly_assert	lib/flecs/src/poly.c	/^void _ecs_poly_assert($/;"	f	typeref:typename:void
_ecs_poly_fini	lib/flecs/flecs.c	/^void _ecs_poly_fini($/;"	f	typeref:typename:void
_ecs_poly_fini	lib/flecs/src/poly.c	/^void _ecs_poly_fini($/;"	f	typeref:typename:void
_ecs_poly_init	lib/flecs/flecs.c	/^void* _ecs_poly_init($/;"	f	typeref:typename:void *
_ecs_poly_init	lib/flecs/src/poly.c	/^void* _ecs_poly_init($/;"	f	typeref:typename:void *
_ecs_poly_is	lib/flecs/flecs.c	/^bool _ecs_poly_is($/;"	f	typeref:typename:bool
_ecs_poly_is	lib/flecs/src/poly.c	/^bool _ecs_poly_is($/;"	f	typeref:typename:bool
_ecs_sparse_add	lib/flecs/flecs.c	/^void* _ecs_sparse_add($/;"	f	typeref:typename:void *
_ecs_sparse_add	lib/flecs/src/datastructures/sparse.c	/^void* _ecs_sparse_add($/;"	f	typeref:typename:void *
_ecs_sparse_get	lib/flecs/flecs.c	/^void* _ecs_sparse_get($/;"	f	typeref:typename:void *
_ecs_sparse_get	lib/flecs/src/datastructures/sparse.c	/^void* _ecs_sparse_get($/;"	f	typeref:typename:void *
_ecs_sparse_get_dense	lib/flecs/flecs.c	/^void* _ecs_sparse_get_dense($/;"	f	typeref:typename:void *
_ecs_sparse_get_dense	lib/flecs/src/datastructures/sparse.c	/^void* _ecs_sparse_get_dense($/;"	f	typeref:typename:void *
_ecs_sparse_new	lib/flecs/flecs.c	/^ecs_sparse_t* _ecs_sparse_new($/;"	f	typeref:typename:ecs_sparse_t *
_ecs_sparse_new	lib/flecs/src/datastructures/sparse.c	/^ecs_sparse_t* _ecs_sparse_new($/;"	f	typeref:typename:ecs_sparse_t *
_ecs_trace	lib/flecs/flecs.h	/^#define _ecs_trace(/;"	d
_ecs_trace	lib/flecs/include/flecs/addons/log.h	/^#define _ecs_trace(/;"	d
_ecs_vector_add	lib/flecs/flecs.c	/^void* _ecs_vector_add($/;"	f	typeref:typename:void *
_ecs_vector_add	lib/flecs/src/datastructures/vector.c	/^void* _ecs_vector_add($/;"	f	typeref:typename:void *
_ecs_vector_addn	lib/flecs/flecs.c	/^void* _ecs_vector_addn($/;"	f	typeref:typename:void *
_ecs_vector_addn	lib/flecs/src/datastructures/vector.c	/^void* _ecs_vector_addn($/;"	f	typeref:typename:void *
_ecs_vector_copy	lib/flecs/flecs.c	/^ecs_vector_t* _ecs_vector_copy($/;"	f	typeref:typename:ecs_vector_t *
_ecs_vector_copy	lib/flecs/src/datastructures/vector.c	/^ecs_vector_t* _ecs_vector_copy($/;"	f	typeref:typename:ecs_vector_t *
_ecs_vector_first	lib/flecs/flecs.c	/^void* _ecs_vector_first($/;"	f	typeref:typename:void *
_ecs_vector_first	lib/flecs/src/datastructures/vector.c	/^void* _ecs_vector_first($/;"	f	typeref:typename:void *
_ecs_vector_from_array	lib/flecs/flecs.c	/^ecs_vector_t* _ecs_vector_from_array($/;"	f	typeref:typename:ecs_vector_t *
_ecs_vector_from_array	lib/flecs/src/datastructures/vector.c	/^ecs_vector_t* _ecs_vector_from_array($/;"	f	typeref:typename:ecs_vector_t *
_ecs_vector_get	lib/flecs/flecs.c	/^void* _ecs_vector_get($/;"	f	typeref:typename:void *
_ecs_vector_get	lib/flecs/src/datastructures/vector.c	/^void* _ecs_vector_get($/;"	f	typeref:typename:void *
_ecs_vector_grow	lib/flecs/flecs.c	/^int32_t _ecs_vector_grow($/;"	f	typeref:typename:int32_t
_ecs_vector_grow	lib/flecs/src/datastructures/vector.c	/^int32_t _ecs_vector_grow($/;"	f	typeref:typename:int32_t
_ecs_vector_insert_at	lib/flecs/flecs.c	/^void* _ecs_vector_insert_at($/;"	f	typeref:typename:void *
_ecs_vector_insert_at	lib/flecs/src/datastructures/vector.c	/^void* _ecs_vector_insert_at($/;"	f	typeref:typename:void *
_ecs_vector_last	lib/flecs/flecs.c	/^void* _ecs_vector_last($/;"	f	typeref:typename:void *
_ecs_vector_last	lib/flecs/src/datastructures/vector.c	/^void* _ecs_vector_last($/;"	f	typeref:typename:void *
_ecs_vector_memory	lib/flecs/flecs.c	/^void _ecs_vector_memory($/;"	f	typeref:typename:void
_ecs_vector_memory	lib/flecs/src/datastructures/vector.c	/^void _ecs_vector_memory($/;"	f	typeref:typename:void
_ecs_vector_move_index	lib/flecs/flecs.c	/^int32_t _ecs_vector_move_index($/;"	f	typeref:typename:int32_t
_ecs_vector_move_index	lib/flecs/src/datastructures/vector.c	/^int32_t _ecs_vector_move_index($/;"	f	typeref:typename:int32_t
_ecs_vector_new	lib/flecs/flecs.c	/^ecs_vector_t* _ecs_vector_new($/;"	f	typeref:typename:ecs_vector_t *
_ecs_vector_new	lib/flecs/src/datastructures/vector.c	/^ecs_vector_t* _ecs_vector_new($/;"	f	typeref:typename:ecs_vector_t *
_ecs_vector_pop	lib/flecs/flecs.c	/^bool _ecs_vector_pop($/;"	f	typeref:typename:bool
_ecs_vector_pop	lib/flecs/src/datastructures/vector.c	/^bool _ecs_vector_pop($/;"	f	typeref:typename:bool
_ecs_vector_reclaim	lib/flecs/flecs.c	/^void _ecs_vector_reclaim($/;"	f	typeref:typename:void
_ecs_vector_reclaim	lib/flecs/src/datastructures/vector.c	/^void _ecs_vector_reclaim($/;"	f	typeref:typename:void
_ecs_vector_remove	lib/flecs/flecs.c	/^int32_t _ecs_vector_remove($/;"	f	typeref:typename:int32_t
_ecs_vector_remove	lib/flecs/src/datastructures/vector.c	/^int32_t _ecs_vector_remove($/;"	f	typeref:typename:int32_t
_ecs_vector_set_count	lib/flecs/flecs.c	/^int32_t _ecs_vector_set_count($/;"	f	typeref:typename:int32_t
_ecs_vector_set_count	lib/flecs/src/datastructures/vector.c	/^int32_t _ecs_vector_set_count($/;"	f	typeref:typename:int32_t
_ecs_vector_set_min_count	lib/flecs/flecs.c	/^int32_t _ecs_vector_set_min_count($/;"	f	typeref:typename:int32_t
_ecs_vector_set_min_count	lib/flecs/src/datastructures/vector.c	/^int32_t _ecs_vector_set_min_count($/;"	f	typeref:typename:int32_t
_ecs_vector_set_min_size	lib/flecs/flecs.c	/^int32_t _ecs_vector_set_min_size($/;"	f	typeref:typename:int32_t
_ecs_vector_set_min_size	lib/flecs/src/datastructures/vector.c	/^int32_t _ecs_vector_set_min_size($/;"	f	typeref:typename:int32_t
_ecs_vector_set_size	lib/flecs/flecs.c	/^int32_t _ecs_vector_set_size($/;"	f	typeref:typename:int32_t
_ecs_vector_set_size	lib/flecs/src/datastructures/vector.c	/^int32_t _ecs_vector_set_size($/;"	f	typeref:typename:int32_t
_ecs_vector_sort	lib/flecs/flecs.c	/^void _ecs_vector_sort($/;"	f	typeref:typename:void
_ecs_vector_sort	lib/flecs/src/datastructures/vector.c	/^void _ecs_vector_sort($/;"	f	typeref:typename:void
_ecs_vector_zero	lib/flecs/flecs.c	/^void _ecs_vector_zero($/;"	f	typeref:typename:void
_ecs_vector_zero	lib/flecs/src/datastructures/vector.c	/^void _ecs_vector_zero($/;"	f	typeref:typename:void
_ecs_warn	lib/flecs/flecs.h	/^#define _ecs_warn(/;"	d
_ecs_warn	lib/flecs/include/flecs/addons/log.h	/^#define _ecs_warn(/;"	d
_flecs_hashmap_ensure	lib/flecs/flecs.c	/^flecs_hashmap_result_t _flecs_hashmap_ensure($/;"	f	typeref:typename:flecs_hashmap_result_t
_flecs_hashmap_ensure	lib/flecs/src/datastructures/hashmap.c	/^flecs_hashmap_result_t _flecs_hashmap_ensure($/;"	f	typeref:typename:flecs_hashmap_result_t
_flecs_hashmap_get	lib/flecs/flecs.c	/^void* _flecs_hashmap_get($/;"	f	typeref:typename:void *
_flecs_hashmap_get	lib/flecs/src/datastructures/hashmap.c	/^void* _flecs_hashmap_get($/;"	f	typeref:typename:void *
_flecs_hashmap_init	lib/flecs/flecs.c	/^void _flecs_hashmap_init($/;"	f	typeref:typename:void
_flecs_hashmap_init	lib/flecs/src/datastructures/hashmap.c	/^void _flecs_hashmap_init($/;"	f	typeref:typename:void
_flecs_hashmap_next	lib/flecs/flecs.c	/^void* _flecs_hashmap_next($/;"	f	typeref:typename:void *
_flecs_hashmap_next	lib/flecs/src/datastructures/hashmap.c	/^void* _flecs_hashmap_next($/;"	f	typeref:typename:void *
_flecs_hashmap_remove	lib/flecs/flecs.c	/^void _flecs_hashmap_remove($/;"	f	typeref:typename:void
_flecs_hashmap_remove	lib/flecs/src/datastructures/hashmap.c	/^void _flecs_hashmap_remove($/;"	f	typeref:typename:void
_flecs_hashmap_remove_w_hash	lib/flecs/flecs.c	/^void _flecs_hashmap_remove_w_hash($/;"	f	typeref:typename:void
_flecs_hashmap_remove_w_hash	lib/flecs/src/datastructures/hashmap.c	/^void _flecs_hashmap_remove_w_hash($/;"	f	typeref:typename:void
_flecs_hashmap_set	lib/flecs/flecs.c	/^void _flecs_hashmap_set($/;"	f	typeref:typename:void
_flecs_hashmap_set	lib/flecs/src/datastructures/hashmap.c	/^void _flecs_hashmap_set($/;"	f	typeref:typename:void
_flecs_ito	lib/flecs/flecs.c	/^uint64_t _flecs_ito($/;"	f	typeref:typename:uint64_t
_flecs_ito	lib/flecs/src/misc.c	/^uint64_t _flecs_ito($/;"	f	typeref:typename:uint64_t
_flecs_sparse_add	lib/flecs/flecs.c	/^void* _flecs_sparse_add($/;"	f	typeref:typename:void *
_flecs_sparse_add	lib/flecs/src/datastructures/sparse.c	/^void* _flecs_sparse_add($/;"	f	typeref:typename:void *
_flecs_sparse_ensure	lib/flecs/flecs.c	/^void* _flecs_sparse_ensure($/;"	f	typeref:typename:void *
_flecs_sparse_ensure	lib/flecs/src/datastructures/sparse.c	/^void* _flecs_sparse_ensure($/;"	f	typeref:typename:void *
_flecs_sparse_fini	lib/flecs/flecs.c	/^void _flecs_sparse_fini($/;"	f	typeref:typename:void
_flecs_sparse_fini	lib/flecs/src/datastructures/sparse.c	/^void _flecs_sparse_fini($/;"	f	typeref:typename:void
_flecs_sparse_get	lib/flecs/flecs.c	/^void* _flecs_sparse_get($/;"	f	typeref:typename:void *
_flecs_sparse_get	lib/flecs/src/datastructures/sparse.c	/^void* _flecs_sparse_get($/;"	f	typeref:typename:void *
_flecs_sparse_get_any	lib/flecs/flecs.c	/^void* _flecs_sparse_get_any($/;"	f	typeref:typename:void *
_flecs_sparse_get_any	lib/flecs/src/datastructures/sparse.c	/^void* _flecs_sparse_get_any($/;"	f	typeref:typename:void *
_flecs_sparse_get_dense	lib/flecs/flecs.c	/^void* _flecs_sparse_get_dense($/;"	f	typeref:typename:void *
_flecs_sparse_get_dense	lib/flecs/src/datastructures/sparse.c	/^void* _flecs_sparse_get_dense($/;"	f	typeref:typename:void *
_flecs_sparse_init	lib/flecs/flecs.c	/^void _flecs_sparse_init($/;"	f	typeref:typename:void
_flecs_sparse_init	lib/flecs/src/datastructures/sparse.c	/^void _flecs_sparse_init($/;"	f	typeref:typename:void
_flecs_sparse_iter	lib/flecs/flecs.c	/^ecs_sparse_iter_t _flecs_sparse_iter($/;"	f	typeref:typename:ecs_sparse_iter_t
_flecs_sparse_iter	lib/flecs/src/datastructures/sparse.c	/^ecs_sparse_iter_t _flecs_sparse_iter($/;"	f	typeref:typename:ecs_sparse_iter_t
_flecs_sparse_new	lib/flecs/flecs.c	/^ecs_sparse_t* _flecs_sparse_new($/;"	f	typeref:typename:ecs_sparse_t *
_flecs_sparse_new	lib/flecs/src/datastructures/sparse.c	/^ecs_sparse_t* _flecs_sparse_new($/;"	f	typeref:typename:ecs_sparse_t *
_flecs_sparse_remove_get	lib/flecs/flecs.c	/^void* _flecs_sparse_remove_get($/;"	f	typeref:typename:void *
_flecs_sparse_remove_get	lib/flecs/src/datastructures/sparse.c	/^void* _flecs_sparse_remove_get($/;"	f	typeref:typename:void *
_flecs_sparse_set	lib/flecs/flecs.c	/^void* _flecs_sparse_set($/;"	f	typeref:typename:void *
_flecs_sparse_set	lib/flecs/src/datastructures/sparse.c	/^void* _flecs_sparse_set($/;"	f	typeref:typename:void *
_flecs_table_cache_next	lib/flecs/flecs.c	/^ecs_table_cache_hdr_t* _flecs_table_cache_next($/;"	f	typeref:typename:ecs_table_cache_hdr_t *
_flecs_table_cache_next	lib/flecs/src/table_cache.c	/^ecs_table_cache_hdr_t* _flecs_table_cache_next($/;"	f	typeref:typename:ecs_table_cache_hdr_t *
_meta_test_member	lib/flecs/test/meta/src/StructTypes.c	/^void _meta_test_member($/;"	f	typeref:typename:void
_meta_test_struct	lib/flecs/test/meta/src/StructTypes.c	/^void _meta_test_struct($/;"	f	typeref:typename:void
_n	lib/flecs/flecs.c	/^        ecs_defer_op_n_t _n;$/;"	m	union:ecs_defer_op_t::__anona642c005010a	typeref:typename:ecs_defer_op_n_t	file:
_n	lib/flecs/src/private_types.h	/^        ecs_defer_op_n_t _n;$/;"	m	union:ecs_defer_op_t::__anon1e338c63010a	typeref:typename:ecs_defer_op_n_t
_record_counter	lib/flecs/flecs.c	/^float _record_counter($/;"	f	typeref:typename:float	file:
_record_counter	lib/flecs/src/addons/stats.c	/^float _record_counter($/;"	f	typeref:typename:float	file:
_record_gauge	lib/flecs/flecs.c	/^void _record_gauge($/;"	f	typeref:typename:void	file:
_record_gauge	lib/flecs/src/addons/stats.c	/^void _record_gauge($/;"	f	typeref:typename:void	file:
_test_member_op	lib/flecs/test/meta/src/Serialized.c	/^static void _test_member_op($/;"	f	typeref:typename:void	file:
_utarray_eltptr	lib/uthash/include/utarray.h	/^#define _utarray_eltptr(/;"	d
_utarray_eltptr	lib/uthash/src/utarray.h	/^#define _utarray_eltptr(/;"	d
_utringbuffer_fake_idx	lib/uthash/include/utringbuffer.h	/^#define _utringbuffer_fake_idx(/;"	d
_utringbuffer_fake_idx	lib/uthash/src/utringbuffer.h	/^#define _utringbuffer_fake_idx(/;"	d
_utringbuffer_internalidx	lib/uthash/include/utringbuffer.h	/^#define _utringbuffer_internalidx(/;"	d
_utringbuffer_internalidx	lib/uthash/src/utringbuffer.h	/^#define _utringbuffer_internalidx(/;"	d
_utringbuffer_internalptr	lib/uthash/include/utringbuffer.h	/^#define _utringbuffer_internalptr(/;"	d
_utringbuffer_internalptr	lib/uthash/src/utringbuffer.h	/^#define _utringbuffer_internalptr(/;"	d
_utringbuffer_real_idx	lib/uthash/include/utringbuffer.h	/^#define _utringbuffer_real_idx(/;"	d
_utringbuffer_real_idx	lib/uthash/src/utringbuffer.h	/^#define _utringbuffer_real_idx(/;"	d
_utstring_BuildTable	lib/uthash/include/utstring.h	/^UTSTRING_UNUSED static void _utstring_BuildTable($/;"	f	typeref:typename:UTSTRING_UNUSED void
_utstring_BuildTable	lib/uthash/src/utstring.h	/^UTSTRING_UNUSED static void _utstring_BuildTable($/;"	f	typeref:typename:UTSTRING_UNUSED void
_utstring_BuildTableR	lib/uthash/include/utstring.h	/^UTSTRING_UNUSED static void _utstring_BuildTableR($/;"	f	typeref:typename:UTSTRING_UNUSED void
_utstring_BuildTableR	lib/uthash/src/utstring.h	/^UTSTRING_UNUSED static void _utstring_BuildTableR($/;"	f	typeref:typename:UTSTRING_UNUSED void
_utstring_find	lib/uthash/include/utstring.h	/^UTSTRING_UNUSED static long _utstring_find($/;"	f	typeref:typename:UTSTRING_UNUSED long
_utstring_find	lib/uthash/src/utstring.h	/^UTSTRING_UNUSED static long _utstring_find($/;"	f	typeref:typename:UTSTRING_UNUSED long
_utstring_findR	lib/uthash/include/utstring.h	/^UTSTRING_UNUSED static long _utstring_findR($/;"	f	typeref:typename:UTSTRING_UNUSED long
_utstring_findR	lib/uthash/src/utstring.h	/^UTSTRING_UNUSED static long _utstring_findR($/;"	f	typeref:typename:UTSTRING_UNUSED long
a	lib/flecs/test/api/include/api.h	/^    float a;$/;"	m	struct:Color	typeref:typename:float
a	lib/flecs/test/cpp_api/src/Meta.cpp	/^        Test a;$/;"	m	struct:Meta_nested_struct::Nested	typeref:typename:Test	file:
a	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t a;$/;"	m	struct:Meta_struct::Test	typeref:typename:int32_t	file:
a	lib/flecs/test/cpp_api/src/Meta.cpp	/^        uintptr_t a;$/;"	m	struct:Meta_struct_w_portable_type::Test	typeref:typename:uintptr_t	file:
a	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t a[1];$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_bool_t[1]	file:
a	lib/uthash/tests/test16.c	/^    int a;$/;"	m	struct:inner	typeref:typename:int	file:
a	lib/uthash/tests/test21.c	/^    char a;$/;"	m	struct:__anonbb926b5d0108	typeref:typename:char	file:
a	lib/uthash/tests/test38.c	/^    int a;$/;"	m	struct:test_t	typeref:typename:int	file:
a	lib/uthash/tests/test43.c	/^    int a;$/;"	m	struct:__anonbb938ca10108	typeref:typename:int	file:
a	lib/uthash/tests/test51.c	/^    int a;$/;"	m	struct:__anonbb9410800108	typeref:typename:int	file:
a	lib/uthash/tests/test52.c	/^    int a;$/;"	m	struct:__anonbb9414c10108	typeref:typename:int	file:
a	lib/uthash/tests/test62.c	/^    int a;$/;"	m	struct:test_t	typeref:typename:int	file:
abort_	lib/flecs/flecs.h	/^    ecs_os_api_abort_t abort_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_abort_t
abort_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_abort_t abort_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_abort_t
accept_connections	lib/flecs/flecs.c	/^void accept_connections($/;"	f	typeref:typename:void	file:
accept_connections	lib/flecs/src/addons/http.c	/^void accept_connections($/;"	f	typeref:typename:void	file:
action	lib/flecs/flecs.c	/^    ecs_fini_action_t action;$/;"	m	struct:ecs_action_elem_t	typeref:typename:ecs_fini_action_t	file:
action	lib/flecs/flecs.c	/^    ecs_iter_action_t action;       \/* See ecs_system_desc_t *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_iter_action_t	file:
action	lib/flecs/src/addons/system/system.h	/^    ecs_iter_action_t action;       \/* See ecs_system_desc_t *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_iter_action_t
action	lib/flecs/src/private_types.h	/^    ecs_fini_action_t action;$/;"	m	struct:ecs_action_elem_t	typeref:typename:ecs_fini_action_t
action_a_invoked	lib/flecs/test/api/src/SystemMisc.c	/^static bool action_a_invoked;$/;"	v	typeref:typename:bool	file:
action_b_invoked	lib/flecs/test/api/src/SystemMisc.c	/^static bool action_b_invoked;$/;"	v	typeref:typename:bool	file:
active	lib/flecs/flecs.h	/^    bool active;                 \/* Is the timer active or not *\/$/;"	m	struct:EcsTimer	typeref:typename:bool
active	lib/flecs/flecs.h	/^    ecs_gauge_t active;             \/* Whether system is active (is matched with >0 entities) */;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_gauge_t
active	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t active;             \/* Whether system is active (is matched with >0 entities) */;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_gauge_t
active	lib/flecs/include/flecs/addons/timer.h	/^    bool active;                 \/* Is the timer active or not *\/$/;"	m	struct:EcsTimer	typeref:typename:bool
active_status	lib/flecs/test/api/src/SystemManual.c	/^static ecs_system_status_t active_status = EcsSystemStatusNone;$/;"	v	typeref:typename:ecs_system_status_t	file:
active_status	lib/flecs/test/api/src/SystemMisc.c	/^static ecs_system_status_t active_status = EcsSystemStatusNone;$/;"	v	typeref:typename:ecs_system_status_t	file:
active_system_count	lib/flecs/flecs.h	/^    int32_t active_system_count; \/* Number of active systems in pipeline *\/$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:int32_t
active_system_count	lib/flecs/include/flecs/addons/stats.h	/^    int32_t active_system_count; \/* Number of active systems in pipeline *\/$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:int32_t
actual_match_id	lib/flecs/flecs.c	/^ecs_id_t actual_match_id($/;"	f	typeref:typename:ecs_id_t	file:
actual_match_id	lib/flecs/src/filter.c	/^ecs_id_t actual_match_id($/;"	f	typeref:typename:ecs_id_t	file:
actual_type	lib/flecs/flecs.h	/^struct actual_type<T, if_not_t< is_pair<T>::value >> {$/;"	s	namespace:flecs
actual_type	lib/flecs/flecs.h	/^struct actual_type<T, if_t< is_pair<T>::value >> {$/;"	s	namespace:flecs
actual_type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^struct actual_type<T, if_not_t< is_pair<T>::value >> {$/;"	s	namespace:flecs
actual_type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^struct actual_type<T, if_t< is_pair<T>::value >> {$/;"	s	namespace:flecs
actual_type_t	lib/flecs/flecs.h	/^using actual_type_t = typename actual_type<T>::type;$/;"	t	namespace:flecs	typeref:typename:actual_type<T>::type
actual_type_t	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^using actual_type_t = typename actual_type<T>::type;$/;"	t	namespace:flecs	typeref:typename:actual_type<T>::type
acyclic	lib/flecs/flecs.c	/^    bool acyclic;    \/* Is predicate acyclic *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
acyclic	lib/flecs/src/addons/rules.c	/^    bool acyclic;    \/* Is predicate acyclic *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
add	lib/flecs/flecs.c	/^    ecs_graph_edges_t add;    $/;"	m	struct:ecs_graph_node_t	typeref:typename:ecs_graph_edges_t	file:
add	lib/flecs/flecs.h	/^    Base& add() {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add	lib/flecs/flecs.h	/^    Base& add(entity_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add	lib/flecs/flecs.h	/^    Base& add(entity_t relation, entity_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add	lib/flecs/flecs.h	/^    Base& add(id_t id) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add	lib/flecs/flecs.h	/^    Self& add() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/flecs.h	/^    Self& add(E value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/flecs.h	/^    Self& add(entity_t entity) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/flecs.h	/^    Self& add(entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/flecs.h	/^    Self& add(entity_t relation, entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/flecs.h	/^    ecs_id_t add[ECS_MAX_ADD_REMOVE];$/;"	m	struct:ecs_entity_desc_t	typeref:typename:ecs_id_t[]
add	lib/flecs/flecs.h	/^    void add(T& value) {$/;"	f	class:flecs::vector	typeref:typename:void
add	lib/flecs/flecs.h	/^    void add(T&& value) {$/;"	f	class:flecs::vector	typeref:typename:void
add	lib/flecs/flecs.h	/^void world::add() const {$/;"	f	class:flecs::world	typeref:typename:void
add	lib/flecs/include/flecs.h	/^    ecs_id_t add[ECS_MAX_ADD_REMOVE];$/;"	m	struct:ecs_entity_desc_t	typeref:typename:ecs_id_t[]
add	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^void world::add() const {$/;"	f	class:flecs::world	typeref:typename:void
add	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add(E value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add(entity_t entity) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add(entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add(entity_t relation, entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    Base& add() {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    Base& add(entity_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    Base& add(entity_t relation, entity_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    Base& add(id_t id) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add	lib/flecs/include/flecs/private/vector.h	/^    void add(T& value) {$/;"	f	class:flecs::vector	typeref:typename:void
add	lib/flecs/include/flecs/private/vector.h	/^    void add(T&& value) {$/;"	f	class:flecs::vector	typeref:typename:void
add	lib/flecs/src/private_types.h	/^    ecs_graph_edges_t add;    $/;"	m	struct:ecs_graph_node_t	typeref:typename:ecs_graph_edges_t
add_bitmask	lib/flecs/flecs.c	/^void add_bitmask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
add_bitmask	lib/flecs/src/addons/meta/meta.c	/^void add_bitmask(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
add_bitmask_constant	lib/flecs/flecs.c	/^int add_bitmask_constant($/;"	f	typeref:typename:int	file:
add_bitmask_constant	lib/flecs/src/addons/meta/cursor.c	/^int add_bitmask_constant($/;"	f	typeref:typename:int	file:
add_called	lib/flecs/test/api/src/TriggerOnSet.c	/^static bool add_called;$/;"	v	typeref:typename:bool	file:
add_case	lib/flecs/flecs.h	/^    Self& add_case() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_case	lib/flecs/flecs.h	/^    Self& add_case(entity_t sw_case) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_case	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add_case() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_case	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add_case(entity_t sw_case) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_color	src/colors.c	/^void add_color(struct DColor *colors, char *name, int a, int r, int g, int b) {$/;"	f	typeref:typename:void
add_constant	lib/flecs/flecs.c	/^void add_constant(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
add_constant	lib/flecs/src/addons/meta/meta.c	/^void add_constant(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
add_constant_to_bitmask	lib/flecs/flecs.c	/^int add_constant_to_bitmask($/;"	f	typeref:typename:int	file:
add_constant_to_bitmask	lib/flecs/src/addons/meta/meta.c	/^int add_constant_to_bitmask($/;"	f	typeref:typename:int	file:
add_constant_to_enum	lib/flecs/flecs.c	/^int add_constant_to_enum($/;"	f	typeref:typename:int	file:
add_constant_to_enum	lib/flecs/src/addons/meta/meta.c	/^int add_constant_to_enum($/;"	f	typeref:typename:int	file:
add_count	lib/flecs/flecs.c	/^    int32_t add_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
add_count	lib/flecs/flecs.h	/^    ecs_counter_t add_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
add_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t add_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
add_count	lib/flecs/src/private_types.h	/^    int32_t add_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
add_enum	lib/flecs/flecs.c	/^void add_enum(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
add_enum	lib/flecs/src/addons/meta/meta.c	/^void add_enum(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
add_expr	lib/flecs/flecs.h	/^    const char *add_expr;$/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
add_expr	lib/flecs/include/flecs.h	/^    const char *add_expr;$/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
add_id	lib/flecs/flecs.c	/^void add_id($/;"	f	typeref:typename:void	file:
add_id	lib/flecs/src/entity.c	/^void add_id($/;"	f	typeref:typename:void	file:
add_id_to_ids	lib/flecs/flecs.c	/^void add_id_to_ids($/;"	f	typeref:typename:void	file:
add_id_to_ids	lib/flecs/src/table_graph.c	/^void add_id_to_ids($/;"	f	typeref:typename:void	file:
add_id_w_info	lib/flecs/flecs.c	/^void add_id_w_info($/;"	f	typeref:typename:void	file:
add_id_w_info	lib/flecs/src/entity.c	/^void add_id_w_info($/;"	f	typeref:typename:void	file:
add_member_to_struct	lib/flecs/flecs.c	/^int add_member_to_struct($/;"	f	typeref:typename:int	file:
add_member_to_struct	lib/flecs/src/addons/meta/meta.c	/^int add_member_to_struct($/;"	f	typeref:typename:int	file:
add_pipeline_tags_to_sig	lib/flecs/flecs.c	/^void add_pipeline_tags_to_sig($/;"	f	typeref:typename:void	file:
add_pipeline_tags_to_sig	lib/flecs/src/addons/pipeline/pipeline.c	/^void add_pipeline_tags_to_sig($/;"	f	typeref:typename:void	file:
add_random	lib/flecs/test/api/src/Stresstests.c	/^void add_random($/;"	f	typeref:typename:void	file:
add_ref	lib/flecs/flecs.c	/^ecs_vector_t* add_ref($/;"	f	typeref:typename:ecs_vector_t *	file:
add_ref	lib/flecs/src/query.c	/^ecs_vector_t* add_ref($/;"	f	typeref:typename:ecs_vector_t *	file:
add_role	lib/flecs/flecs.h	/^inline flecs::entity id::add_role(flecs::id_t role) const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
add_role	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::add_role(flecs::id_t role) const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
add_subquery	lib/flecs/flecs.c	/^void add_subquery($/;"	f	typeref:typename:void	file:
add_subquery	lib/flecs/src/query.c	/^void add_subquery($/;"	f	typeref:typename:void	file:
add_switch	lib/flecs/flecs.h	/^    Self& add_switch() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_switch	lib/flecs/flecs.h	/^    Self& add_switch(entity_t sw) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_switch	lib/flecs/flecs.h	/^inline Self& entity_builder<Self>::add_switch(const flecs::type& sw) {$/;"	f	class:flecs::entity_builder	typeref:typename:Self &
add_switch	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add_switch() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_switch	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add_switch(entity_t sw) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_switch	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline Self& entity_builder<Self>::add_switch(const flecs::type& sw) {$/;"	f	class:flecs::entity_builder	typeref:typename:Self &
add_table	lib/flecs/flecs.c	/^void add_table($/;"	f	typeref:typename:void	file:
add_table	lib/flecs/src/query.c	/^void add_table($/;"	f	typeref:typename:void	file:
add_to_bucket	lib/flecs/flecs.c	/^int32_t add_to_bucket($/;"	f	typeref:typename:int32_t	file:
add_to_bucket	lib/flecs/src/datastructures/map.c	/^int32_t add_to_bucket($/;"	f	typeref:typename:int32_t	file:
add_to_cache	lib/uthash/tests/test65.c	/^static void add_to_cache(const char *key, const char *value)$/;"	f	typeref:typename:void	file:
add_user	lib/uthash/tests/example.c	/^void add_user(int user_id, const char *name)$/;"	f	typeref:typename:void
add_w_object	lib/flecs/flecs.h	/^    Base& add_w_object(entity_t relation) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add_w_object	lib/flecs/flecs.h	/^    Self& add_w_object(entity_t relation) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_w_object	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& add_w_object(entity_t relation) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
add_w_object	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    Base& add_w_object(entity_t relation) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
add_with_ids_to_ids	lib/flecs/flecs.c	/^void add_with_ids_to_ids($/;"	f	typeref:typename:void	file:
add_with_ids_to_ids	lib/flecs/src/table_graph.c	/^void add_with_ids_to_ids($/;"	f	typeref:typename:void	file:
added	lib/flecs/flecs.c	/^    ecs_ids_t added;         \/* Components added between tables *\/$/;"	m	struct:ecs_table_diff_t	typeref:typename:ecs_ids_t	file:
added	lib/flecs/src/private_types.h	/^    ecs_ids_t added;         \/* Components added between tables *\/$/;"	m	struct:ecs_table_diff_t	typeref:typename:ecs_ids_t
adec_	lib/flecs/flecs.h	/^    ecs_os_api_ainc_t adec_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_ainc_t
adec_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_ainc_t adec_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_ainc_t
after	lib/flecs/test/meta/src/BitmaskTypes.c	/^        ecs_bool_t after;$/;"	m	struct:BitmaskTypes_struct_w_bitmask::__anon4ec5b3140108	typeref:typename:ecs_bool_t	file:
after	lib/flecs/test/meta/src/EnumTypes.c	/^        ecs_bool_t after;$/;"	m	struct:EnumTypes_struct_w_enum::__anon4354dcde0108	typeref:typename:ecs_bool_t	file:
after	lib/flecs/test/meta/src/Serialized.c	/^        bool after;$/;"	m	struct:Serialized_ops_struct_w_bitmask::__anond4af8f004a08	typeref:typename:bool	file:
after	lib/flecs/test/meta/src/Serialized.c	/^        bool after;$/;"	m	struct:Serialized_ops_struct_w_enum::__anond4af8f004b08	typeref:typename:bool	file:
ah	lib/uthash/tests/test36.c	/^    UT_hash_handle ah;$/;"	m	struct:__anonbb930d030108	typeref:typename:UT_hash_handle	file:
ah	lib/uthash/tests/test37.c	/^    UT_hash_handle ah;$/;"	m	struct:__anonbb9311440108	typeref:typename:UT_hash_handle	file:
ainc_	lib/flecs/flecs.h	/^    ecs_os_api_ainc_t ainc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_ainc_t
ainc_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_ainc_t ainc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_ainc_t
aliases	lib/flecs/flecs.c	/^    ecs_hashmap_t aliases;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_hashmap_t	file:
aliases	lib/flecs/src/private_types.h	/^    ecs_hashmap_t aliases;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_hashmap_t
alignment	lib/flecs/flecs.c	/^    ecs_size_t alignment;$/;"	m	struct:ecs_type_info_t	typeref:typename:ecs_size_t	file:
alignment	lib/flecs/flecs.c	/^    int16_t alignment;           \/* Column element alignment *\/$/;"	m	struct:ecs_column_t	typeref:typename:int16_t	file:
alignment	lib/flecs/flecs.h	/^    ecs_size_t alignment;      \/* Component alignment *\/$/;"	m	struct:EcsComponent	typeref:typename:ecs_size_t
alignment	lib/flecs/flecs.h	/^    size_t alignment;                   \/* Component alignment *\/$/;"	m	struct:ecs_component_desc_t	typeref:typename:size_t
alignment	lib/flecs/flecs.h	/^    static size_t alignment() {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:size_t
alignment	lib/flecs/include/flecs.h	/^    ecs_size_t alignment;      \/* Component alignment *\/$/;"	m	struct:EcsComponent	typeref:typename:ecs_size_t
alignment	lib/flecs/include/flecs.h	/^    size_t alignment;                   \/* Component alignment *\/$/;"	m	struct:ecs_component_desc_t	typeref:typename:size_t
alignment	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static size_t alignment() {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:size_t
alignment	lib/flecs/src/private_types.h	/^    ecs_size_t alignment;$/;"	m	struct:ecs_type_info_t	typeref:typename:ecs_size_t
alignment	lib/flecs/src/private_types.h	/^    int16_t alignment;           \/* Column element alignment *\/$/;"	m	struct:ecs_column_t	typeref:typename:int16_t
all	cmake-build-debug/Makefile	/^all: cmake_check_build_system$/;"	t
all	cmake-build-debug/lib/flecs/Makefile	/^all: cmake_check_build_system$/;"	t
all	cmake-build-debug/lib/libflint/Makefile	/^all: cmake_check_build_system$/;"	t
all	cmake-build-release/Makefile	/^all: cmake_check_build_system$/;"	t
all	cmake-build-release/lib/flecs/Makefile	/^all: cmake_check_build_system$/;"	t
all	cmake-build-release/lib/libflint/Makefile	/^all: cmake_check_build_system$/;"	t
all	lib/uthash/doc/Makefile	/^all: $(HTML)$/;"	t
all	lib/uthash/tests/Makefile	/^all: $(PROGS) $(UTILS) $(PLAT_UTILS) keystat $(TEST_TARGET)$/;"	t
all	lib/uthash/tests/threads/Makefile	/^all: $(PROGS) run_tests$/;"	t
all_select	lib/uthash/tests/test92.c	/^#define all_select(/;"	d	file:
alloc_count	lib/flecs/flecs.c	/^    int32_t alloc_count;             \/* Increases when columns are reallocd *\/$/;"	m	struct:ecs_table_t	typeref:typename:int32_t	file:
alloc_count	lib/flecs/flecs.h	/^    int32_t alloc_count;    \/* Last known alloc count of table *\/$/;"	m	struct:ecs_ref_t	typeref:typename:int32_t
alloc_count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t alloc_count;    \/* Last known alloc count of table *\/$/;"	m	struct:ecs_ref_t	typeref:typename:int32_t
alloc_count	lib/flecs/src/private_types.h	/^    int32_t alloc_count;             \/* Increases when columns are reallocd *\/$/;"	m	struct:ecs_table_t	typeref:typename:int32_t
alloc_str	lib/flecs/flecs.h	/^    char *alloc_str;$/;"	m	struct:ecs_strbuf_element_str	typeref:typename:char *
alloc_str	lib/flecs/include/flecs/private/strbuf.h	/^    char *alloc_str;$/;"	m	struct:ecs_strbuf_element_str	typeref:typename:char *
alt_bzero	lib/uthash/tests/test6.c	/^static void alt_bzero(void *a, size_t n)$/;"	f	typeref:typename:void	file:
alt_bzero_count	lib/uthash/tests/test6.c	/^static int alt_bzero_count = 0;$/;"	v	typeref:typename:int	file:
alt_fatal	lib/uthash/tests/test93.c	/^static void alt_fatal(char const * s) {$/;"	f	typeref:typename:void	file:
alt_free	lib/uthash/tests/test6.c	/^static void alt_free(void *ptr, size_t sz)$/;"	f	typeref:typename:void	file:
alt_free	lib/uthash/tests/test92.c	/^static void alt_free(void *ptr) {$/;"	f	typeref:typename:void	file:
alt_keycmp	lib/uthash/tests/test6.c	/^static int alt_keycmp(const void *a, const void *b, size_t n)$/;"	f	typeref:typename:int	file:
alt_keycmp	lib/uthash/tests/test88.c	/^static int alt_keycmp(const void *a, const void *b, size_t n)$/;"	f	typeref:typename:int	file:
alt_keycmp_count	lib/uthash/tests/test6.c	/^static int alt_keycmp_count = 0;$/;"	v	typeref:typename:int	file:
alt_malloc	lib/uthash/tests/test6.c	/^static void *alt_malloc(size_t sz)$/;"	f	typeref:typename:void *	file:
alt_malloc	lib/uthash/tests/test92.c	/^static void *alt_malloc(size_t sz)$/;"	f	typeref:typename:void *	file:
alt_malloc	lib/uthash/tests/test93.c	/^static void *alt_malloc(size_t sz)$/;"	f	typeref:typename:void *	file:
alt_malloc_balance	lib/uthash/tests/test6.c	/^static int alt_malloc_balance = 0;$/;"	v	typeref:typename:int	file:
alt_malloc_sizes	lib/uthash/tests/test6.c	/^static size_t alt_malloc_sizes[10];$/;"	v	typeref:typename:size_t[10]	file:
alt_strlen	lib/uthash/tests/test88.c	/^static size_t alt_strlen(const char *s)$/;"	f	typeref:typename:size_t	file:
alth	lib/uthash/tests/test10.c	/^    UT_hash_handle alth;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
alth	lib/uthash/tests/test19.c	/^    UT_hash_handle alth;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
alth	lib/uthash/tests/test4.c	/^    UT_hash_handle alth;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
alth	lib/uthash/tests/test5.c	/^    UT_hash_handle alth;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
always_false	lib/flecs/flecs.h	/^struct always_false {$/;"	s	namespace:flecs::_
always_false	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^struct always_false {$/;"	s	namespace:flecs::_
amount	lib/flecs/examples/c/queries/wildcards/src/main.c	/^    int amount;$/;"	m	struct:__anon629a91ad0108	typeref:typename:int	file:
amount	lib/flecs/examples/cpp/queries/wildcards/src/main.cpp	/^    int amount;$/;"	m	struct:Eats	typeref:typename:int	file:
amount	lib/flecs/flecs.h	/^struct amount {$/;"	s	struct:flecs::units
amount	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct amount {$/;"	s	struct:flecs::units
amount	lib/flecs/test/cpp_api/src/Pairs.cpp	/^struct Eats { int amount; };$/;"	m	struct:Eats	typeref:typename:int	file:
amount	lib/flecs/test/cpp_api/src/Query.cpp	/^struct Eats { int amount; };$/;"	m	struct:Eats	typeref:typename:int	file:
angle	lib/flecs/flecs.h	/^struct angle {$/;"	s	struct:flecs::units
angle	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct angle {$/;"	s	struct:flecs::units
app	lib/flecs/flecs.h	/^flecs::app_builder app() const {$/;"	f	struct:flecs::world	typeref:typename:flecs::app_builder
app	lib/flecs/include/flecs/addons/cpp/mixins/app/mixin.inl	/^flecs::app_builder app() const {$/;"	f	typeref:typename:flecs::app_builder
app_builder	lib/flecs/flecs.h	/^    app_builder(flecs::world_t *world)$/;"	f	struct:flecs::app_builder
app_builder	lib/flecs/flecs.h	/^struct app_builder {$/;"	s	namespace:flecs
app_builder	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    app_builder(flecs::world_t *world)$/;"	f	struct:flecs::app_builder
app_builder	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^struct app_builder {$/;"	s	namespace:flecs
append_base	lib/flecs/flecs.c	/^int append_base($/;"	f	typeref:typename:int	file:
append_base	lib/flecs/src/addons/json/serialize.c	/^int append_base($/;"	f	typeref:typename:int	file:
append_send_headers	lib/flecs/flecs.c	/^void append_send_headers($/;"	f	typeref:typename:void	file:
append_send_headers	lib/flecs/src/addons/http.c	/^void append_send_headers($/;"	f	typeref:typename:void	file:
append_type	lib/flecs/flecs.c	/^int append_type($/;"	f	typeref:typename:int	file:
append_type	lib/flecs/src/addons/json/serialize.c	/^int append_type($/;"	f	typeref:typename:int	file:
append_type_hidden	lib/flecs/flecs.c	/^int append_type_hidden($/;"	f	typeref:typename:int	file:
append_type_hidden	lib/flecs/src/addons/json/serialize.c	/^int append_type_hidden($/;"	f	typeref:typename:int	file:
append_type_info	lib/flecs/flecs.c	/^int append_type_info($/;"	f	typeref:typename:int	file:
append_type_info	lib/flecs/src/addons/json/serialize.c	/^int append_type_info($/;"	f	typeref:typename:int	file:
append_type_labels	lib/flecs/flecs.c	/^int append_type_labels($/;"	f	typeref:typename:int	file:
append_type_labels	lib/flecs/src/addons/json/serialize.c	/^int append_type_labels($/;"	f	typeref:typename:int	file:
append_type_values	lib/flecs/flecs.c	/^int append_type_values($/;"	f	typeref:typename:int	file:
append_type_values	lib/flecs/src/addons/json/serialize.c	/^int append_type_values($/;"	f	typeref:typename:int	file:
appendch	lib/flecs/flecs.c	/^bool appendch($/;"	f	typeref:typename:bool	file:
appendch	lib/flecs/src/datastructures/strbuf.c	/^bool appendch($/;"	f	typeref:typename:bool	file:
appendstr	lib/flecs/flecs.c	/^bool appendstr($/;"	f	typeref:typename:bool	file:
appendstr	lib/flecs/src/datastructures/strbuf.c	/^bool appendstr($/;"	f	typeref:typename:bool	file:
arg	lib/flecs/flecs.h	/^    Base& arg(int32_t term_index) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
arg	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& arg(int32_t term_index) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
arg_list	lib/flecs/flecs.h	/^struct arg_list { };$/;"	s	namespace:flecs::_
arg_list	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct arg_list { };$/;"	s	namespace:flecs::_
arg_list_t	lib/flecs/flecs.h	/^using arg_list_t = typename _::function_traits<T>::args;$/;"	t	namespace:flecs	typeref:typename:_::function_traits<T>::args
arg_list_t	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^using arg_list_t = typename _::function_traits<T>::args;$/;"	t	namespace:flecs	typeref:typename:_::function_traits<T>::args
args	lib/flecs/flecs.h	/^    using args = arg_list<Args ...>;$/;"	t	struct:flecs::_::function_traits_defs	typeref:typename:arg_list<Args...>
args	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    using args = arg_list<Args ...>;$/;"	t	struct:flecs::_::function_traits_defs	typeref:typename:arg_list<Args...>
arity	lib/flecs/flecs.h	/^    static constexpr size_t arity = sizeof...(Args);$/;"	m	struct:flecs::_::function_traits_defs	typeref:typename:size_t
arity	lib/flecs/flecs.h	/^struct arity {$/;"	s	namespace:flecs
arity	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    static constexpr size_t arity = sizeof...(Args);$/;"	m	struct:flecs::_::function_traits_defs	typeref:typename:size_t
arity	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct arity {$/;"	s	namespace:flecs
array	lib/flecs/flecs.h	/^    array() {};$/;"	f	struct:flecs::array
array	lib/flecs/flecs.h	/^    array(const T (&elems)[Size]) {$/;"	f	struct:flecs::array
array	lib/flecs/flecs.h	/^    array(const T* (&elems)) { (void)elems; }$/;"	f	struct:flecs::array
array	lib/flecs/flecs.h	/^    ecs_id_t *array;        \/* An array with entity ids *\/$/;"	m	struct:ecs_ids_t	typeref:typename:ecs_id_t *
array	lib/flecs/flecs.h	/^    using array = flecs::array<_::term_ptr, sizeof...(Components)>;$/;"	t	struct:flecs::_::term_ptrs
array	lib/flecs/flecs.h	/^struct array final { };$/;"	s	namespace:flecs
array	lib/flecs/flecs.h	/^struct array<T, Size, enable_if_t<Size != 0> > final {$/;"	s	namespace:flecs
array	lib/flecs/flecs.h	/^struct array<T, Size, enable_if_t<Size == 0>> final {$/;"	s	namespace:flecs
array	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    using array = flecs::array<_::term_ptr, sizeof...(Components)>;$/;"	t	struct:flecs::_::term_ptrs
array	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    array() {};$/;"	f	struct:flecs::array
array	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    array(const T (&elems)[Size]) {$/;"	f	struct:flecs::array
array	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    array(const T* (&elems)) { (void)elems; }$/;"	f	struct:flecs::array
array	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^struct array final { };$/;"	s	namespace:flecs
array	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^struct array<T, Size, enable_if_t<Size != 0> > final {$/;"	s	namespace:flecs
array	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^struct array<T, Size, enable_if_t<Size == 0>> final {$/;"	s	namespace:flecs
array	lib/flecs/include/flecs/private/api_types.h	/^    ecs_id_t *array;        \/* An array with entity ids *\/$/;"	m	struct:ecs_ids_t	typeref:typename:ecs_id_t *
array_iterator	lib/flecs/flecs.h	/^    explicit array_iterator(T* value, int index) {$/;"	f	struct:flecs::array_iterator
array_iterator	lib/flecs/flecs.h	/^struct array_iterator$/;"	s	namespace:flecs
array_iterator	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    explicit array_iterator(T* value, int index) {$/;"	f	struct:flecs::array_iterator
array_iterator	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^struct array_iterator$/;"	s	namespace:flecs
array_to_json_buf_w_type_data	lib/flecs/flecs.c	/^int array_to_json_buf_w_type_data($/;"	f	typeref:typename:int	file:
array_to_json_buf_w_type_data	lib/flecs/src/addons/json/serialize.c	/^int array_to_json_buf_w_type_data($/;"	f	typeref:typename:int	file:
ascending_sort	lib/uthash/tests/test19.c	/^static int ascending_sort(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
assert_func	lib/flecs/flecs.c	/^#define assert_func(/;"	d	file:
assert_func	lib/flecs/src/private_api.h	/^#define assert_func(/;"	d
assert_mixin	lib/flecs/flecs.c	/^void* assert_mixin($/;"	f	typeref:typename:void *	file:
assert_mixin	lib/flecs/src/poly.c	/^void* assert_mixin($/;"	f	typeref:typename:void *	file:
assert_object	lib/flecs/flecs.c	/^#define assert_object(/;"	d	file:
assert_object	lib/flecs/src/poly.c	/^#define assert_object(/;"	d	file:
assert_relation_unused	lib/flecs/flecs.c	/^void assert_relation_unused($/;"	f	file:
assert_relation_unused	lib/flecs/src/bootstrap.c	/^void assert_relation_unused($/;"	f	file:
assign_index	lib/flecs/flecs.c	/^void assign_index($/;"	f	typeref:typename:void	file:
assign_index	lib/flecs/src/datastructures/sparse.c	/^void assign_index($/;"	f	typeref:typename:void	file:
assign_ptr_w_id	lib/flecs/flecs.c	/^ecs_entity_t assign_ptr_w_id($/;"	f	typeref:typename:ecs_entity_t	file:
assign_ptr_w_id	lib/flecs/src/entity.c	/^ecs_entity_t assign_ptr_w_id($/;"	f	typeref:typename:ecs_entity_t	file:
assign_stmt	lib/flecs/flecs.c	/^    bool assign_stmt;$/;"	m	struct:__anona642c0050408	typeref:typename:bool	file:
assign_stmt	lib/flecs/src/addons/plecs.c	/^    bool assign_stmt;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:bool	file:
assign_to	lib/flecs/flecs.c	/^    ecs_entity_t assign_to;$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_entity_t	file:
assign_to	lib/flecs/src/addons/plecs.c	/^    ecs_entity_t assign_to;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_entity_t	file:
astyle	lib/uthash/tests/Makefile	/^astyle:$/;"	t
async_stage	lib/flecs/flecs.h	/^    flecs::world async_stage() const {$/;"	f	struct:flecs::world	typeref:typename:flecs::world
async_stage	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    flecs::world async_stage() const {$/;"	f	struct:flecs::world	typeref:typename:flecs::world
asynchronous	lib/flecs/flecs.c	/^    bool asynchronous;           \/* Is stage asynchronous? (write only) *\/$/;"	m	struct:ecs_stage_t	typeref:typename:bool	file:
asynchronous	lib/flecs/src/private_types.h	/^    bool asynchronous;           \/* Is stage asynchronous? (write only) *\/$/;"	m	struct:ecs_stage_t	typeref:typename:bool
atfini	lib/flecs/flecs.h	/^    void atfini(ecs_fini_action_t action, void *ctx) const {$/;"	f	struct:flecs::world	typeref:typename:void
atfini	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void atfini(ecs_fini_action_t action, void *ctx) const {$/;"	f	struct:flecs::world	typeref:typename:void
attack	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^void attack(flecs::entity player, flecs::entity weapon) {$/;"	f	typeref:typename:void
auto_merge	lib/flecs/flecs.c	/^    bool auto_merge;             \/* Should this stage automatically merge? *\/$/;"	m	struct:ecs_stage_t	typeref:typename:bool	file:
auto_merge	lib/flecs/src/private_types.h	/^    bool auto_merge;             \/* Should this stage automatically merge? *\/$/;"	m	struct:ecs_stage_t	typeref:typename:bool
avg	lib/flecs/flecs.h	/^    float avg[ECS_STAT_WINDOW];$/;"	m	struct:ecs_gauge_t	typeref:typename:float[]
avg	lib/flecs/include/flecs/addons/stats.h	/^    float avg[ECS_STAT_WINDOW];$/;"	m	struct:ecs_gauge_t	typeref:typename:float[]
b	lib/flecs/test/api/include/api.h	/^    float b;$/;"	m	struct:Color	typeref:typename:float
b	lib/flecs/test/cpp_api/src/Meta.cpp	/^        float b;$/;"	m	struct:Meta_struct::Test	typeref:typename:float	file:
b	lib/flecs/test/cpp_api/src/Meta.cpp	/^        uintptr_t b;$/;"	m	struct:Meta_struct_w_portable_type::Test	typeref:typename:uintptr_t	file:
b	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t b[2];$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_bool_t[2]	file:
b	lib/uthash/tests/test16.c	/^    int b;$/;"	m	struct:inner	typeref:typename:int	file:
b	lib/uthash/tests/test21.c	/^    int b;$/;"	m	struct:__anonbb926b5d0108	typeref:typename:int	file:
b	lib/uthash/tests/test43.c	/^    int b;$/;"	m	struct:__anonbb938ca10108	typeref:typename:int	file:
b	lib/uthash/tests/test51.c	/^    int b;$/;"	m	struct:__anonbb9410800108	typeref:typename:int	file:
b	lib/uthash/tests/test62.c	/^    int b;$/;"	m	struct:test_t	typeref:typename:int	file:
b_entity	lib/flecs/test/api/src/SystemMisc.c	/^static ecs_entity_t b_entity;$/;"	v	typeref:typename:ecs_entity_t	file:
b_invoked	lib/flecs/test/api/src/SystemMisc.c	/^static int b_invoked;$/;"	v	typeref:typename:int	file:
bake_adec	lib/flecs/examples/os_api/bake/src/main.c	/^int32_t bake_adec(int32_t *value) {$/;"	f	typeref:typename:int32_t	file:
bake_ainc	lib/flecs/examples/os_api/bake/src/main.c	/^int32_t bake_ainc(int32_t *value) {$/;"	f	typeref:typename:int32_t	file:
bake_cond_broadcast	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_cond_broadcast(ecs_os_cond_t cond) {$/;"	f	typeref:typename:void	file:
bake_cond_free	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_cond_free(ecs_os_cond_t cond) {$/;"	f	typeref:typename:void	file:
bake_cond_new	lib/flecs/examples/os_api/bake/src/main.c	/^ecs_os_cond_t bake_cond_new(void) {$/;"	f	typeref:typename:ecs_os_cond_t	file:
bake_cond_signal	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_cond_signal(ecs_os_cond_t cond) {$/;"	f	typeref:typename:void	file:
bake_cond_wait	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_cond_wait(ecs_os_cond_t cond, ecs_os_mutex_t mutex) {$/;"	f	typeref:typename:void	file:
bake_dlclose	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_dlclose($/;"	f	typeref:typename:void	file:
bake_dlopen	lib/flecs/examples/os_api/bake/src/main.c	/^ecs_os_dl_t bake_dlopen($/;"	f	typeref:typename:ecs_os_dl_t	file:
bake_dlproc	lib/flecs/examples/os_api/bake/src/main.c	/^ecs_os_proc_t bake_dlproc($/;"	f	typeref:typename:ecs_os_proc_t	file:
bake_fini	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_fini(void)$/;"	f	typeref:typename:void	file:
bake_init	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_init(void)$/;"	f	typeref:typename:void	file:
bake_module_to_dl	lib/flecs/examples/os_api/bake/src/main.c	/^char* bake_module_to_dl($/;"	f	typeref:typename:char *	file:
bake_module_to_etc	lib/flecs/examples/os_api/bake/src/main.c	/^char* bake_module_to_etc($/;"	f	typeref:typename:char *	file:
bake_mutex_free	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_mutex_free(ecs_os_mutex_t mutex) {$/;"	f	typeref:typename:void	file:
bake_mutex_lock	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_mutex_lock(ecs_os_mutex_t mutex) {$/;"	f	typeref:typename:void	file:
bake_mutex_new	lib/flecs/examples/os_api/bake/src/main.c	/^ecs_os_mutex_t bake_mutex_new(void) {$/;"	f	typeref:typename:ecs_os_mutex_t	file:
bake_mutex_unlock	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_mutex_unlock(ecs_os_mutex_t mutex) {$/;"	f	typeref:typename:void	file:
bake_set_os_api	lib/flecs/examples/os_api/bake/src/main.c	/^void bake_set_os_api(void) {$/;"	f	typeref:typename:void
bake_thread_join	lib/flecs/examples/os_api/bake/src/main.c	/^void* bake_thread_join($/;"	f	typeref:typename:void *	file:
bake_thread_new	lib/flecs/examples/os_api/bake/src/main.c	/^ecs_os_thread_t bake_thread_new($/;"	f	typeref:typename:ecs_os_thread_t	file:
bar	lib/flecs/test/cpp_api/src/World.cpp	/^struct bar { };$/;"	s	namespace:foo	file:
base	lib/flecs/flecs.c	/^    ecs_entity_t base;           \/* Currently instantiated top-level base *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_entity_t	file:
base	lib/flecs/flecs.h	/^    ecs_entity_t base; \/* Base unit (e.g. "meters") *\/$/;"	m	struct:EcsUnit	typeref:typename:ecs_entity_t
base	lib/flecs/flecs.h	/^    ecs_entity_t base;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_t
base	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t base; \/* Base unit (e.g. "meters") *\/$/;"	m	struct:EcsUnit	typeref:typename:ecs_entity_t
base	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t base;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_t
base	lib/flecs/src/private_types.h	/^    ecs_entity_t base;           \/* Currently instantiated top-level base *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_entity_t
base	lib/uthash/doc/banner.svg	/^     inkscape:window-y="48" \/>$/;"	i
base	lib/uthash/doc/uthash-mini.svg	/^     inkscape:window-y="73" \/>$/;"	i
base_arg_type	lib/flecs/flecs.h	/^struct base_arg_type {$/;"	s	namespace:flecs
base_arg_type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^struct base_arg_type {$/;"	s	namespace:flecs
base_arg_type_t	lib/flecs/flecs.h	/^using base_arg_type_t = typename base_arg_type<T>::type;$/;"	t	namespace:flecs	typeref:typename:base_arg_type<T>::type
base_arg_type_t	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^using base_arg_type_t = typename base_arg_type<T>::type;$/;"	t	namespace:flecs	typeref:typename:base_arg_type<T>::type
base_ent	lib/flecs/test/api/src/Observer.c	/^static ecs_entity_t base_ent = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
base_ent	lib/flecs/test/api/src/Trigger.c	/^static ecs_entity_t base_ent = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
base_type	lib/flecs/flecs.h	/^struct base_type {$/;"	s	namespace:flecs
base_type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^struct base_type {$/;"	s	namespace:flecs
base_type_t	lib/flecs/flecs.h	/^using base_type_t = typename base_type<T>::type;$/;"	t	namespace:flecs	typeref:typename:base_type<T>::type
base_type_t	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^using base_type_t = typename base_type<T>::type;$/;"	t	namespace:flecs	typeref:typename:base_type<T>::type
before	lib/flecs/test/meta/src/BitmaskTypes.c	/^        ecs_bool_t before;$/;"	m	struct:BitmaskTypes_struct_w_bitmask::__anon4ec5b3140108	typeref:typename:ecs_bool_t	file:
before	lib/flecs/test/meta/src/EnumTypes.c	/^        ecs_bool_t before;$/;"	m	struct:EnumTypes_struct_w_enum::__anon4354dcde0108	typeref:typename:ecs_bool_t	file:
before	lib/flecs/test/meta/src/Serialized.c	/^        bool before;$/;"	m	struct:Serialized_ops_struct_w_bitmask::__anond4af8f004a08	typeref:typename:bool	file:
before	lib/flecs/test/meta/src/Serialized.c	/^        bool before;$/;"	m	struct:Serialized_ops_struct_w_enum::__anond4af8f004b08	typeref:typename:bool	file:
begin	lib/flecs/flecs.h	/^    array_iterator<T> begin() { return array_iterator<T>(nullptr, 0); }$/;"	f	struct:flecs::array	typeref:typename:array_iterator<T>
begin	lib/flecs/flecs.h	/^    array_iterator<T> begin() {$/;"	f	struct:flecs::array	typeref:typename:array_iterator<T>
begin	lib/flecs/flecs.h	/^    row_iterator begin() const {$/;"	f	struct:flecs::iter	typeref:typename:row_iterator
begin	lib/flecs/flecs.h	/^    vector_iterator<T> begin() {$/;"	f	class:flecs::vector	typeref:typename:vector_iterator<T>
begin	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    row_iterator begin() const {$/;"	f	struct:flecs::iter	typeref:typename:row_iterator
begin	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    array_iterator<T> begin() { return array_iterator<T>(nullptr, 0); }$/;"	f	struct:flecs::array	typeref:typename:array_iterator<T>
begin	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    array_iterator<T> begin() {$/;"	f	struct:flecs::array	typeref:typename:array_iterator<T>
begin	lib/flecs/include/flecs/private/vector.h	/^    vector_iterator<T> begin() {$/;"	f	class:flecs::vector	typeref:typename:vector_iterator<T>
bg	include/ecs/components.h	/^    color_t bg;$/;"	m	struct:__anon1ffac85e0308	typeref:typename:color_t
binding_ctx	lib/flecs/flecs.c	/^    void *binding_ctx;              \/* Optional language binding context *\/$/;"	m	struct:EcsSystem	typeref:typename:void *	file:
binding_ctx	lib/flecs/flecs.h	/^    void *binding_ctx;            \/* Binding context *\/$/;"	m	struct:ecs_iter_t	typeref:typename:void *
binding_ctx	lib/flecs/flecs.h	/^    void *binding_ctx;          \/* Binding context (for language bindings) *\/$/;"	m	struct:ecs_observer_t	typeref:typename:void *
binding_ctx	lib/flecs/flecs.h	/^    void *binding_ctx;          \/* Binding context (for language bindings) *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:void *
binding_ctx	lib/flecs/flecs.h	/^    void *binding_ctx;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:void *
binding_ctx	lib/flecs/flecs.h	/^    void *binding_ctx;$/;"	m	struct:ecs_system_desc_t	typeref:typename:void *
binding_ctx	lib/flecs/flecs.h	/^    void *binding_ctx;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:void *
binding_ctx	lib/flecs/include/flecs.h	/^    void *binding_ctx;          \/* Binding context (for language bindings) *\/$/;"	m	struct:ecs_observer_t	typeref:typename:void *
binding_ctx	lib/flecs/include/flecs.h	/^    void *binding_ctx;          \/* Binding context (for language bindings) *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:void *
binding_ctx	lib/flecs/include/flecs.h	/^    void *binding_ctx;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:void *
binding_ctx	lib/flecs/include/flecs.h	/^    void *binding_ctx;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:void *
binding_ctx	lib/flecs/include/flecs/addons/system.h	/^    void *binding_ctx;$/;"	m	struct:ecs_system_desc_t	typeref:typename:void *
binding_ctx	lib/flecs/include/flecs/private/api_types.h	/^    void *binding_ctx;            \/* Binding context *\/$/;"	m	struct:ecs_iter_t	typeref:typename:void *
binding_ctx	lib/flecs/src/addons/system/system.h	/^    void *binding_ctx;              \/* Optional language binding context *\/$/;"	m	struct:EcsSystem	typeref:typename:void *
binding_ctx_free	lib/flecs/flecs.c	/^    ecs_ctx_free_t binding_ctx_free;      $/;"	m	struct:EcsSystem	typeref:typename:ecs_ctx_free_t	file:
binding_ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t binding_ctx_free;   $/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t binding_ctx_free; \/* Callback to free binding_ctx *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t binding_ctx_free; \/* Callback to free binding_ctx *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t binding_ctx_free;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t binding_ctx_free;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t binding_ctx_free; \/* Callback to free binding_ctx *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t binding_ctx_free; \/* Callback to free binding_ctx *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t binding_ctx_free;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t binding_ctx_free;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/include/flecs/addons/system.h	/^    ecs_ctx_free_t binding_ctx_free;   $/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/src/addons/system/system.h	/^    ecs_ctx_free_t binding_ctx_free;      $/;"	m	struct:EcsSystem	typeref:typename:ecs_ctx_free_t
binding_ctx_free	lib/flecs/test/api/src/Observer.c	/^void binding_ctx_free(void *ctx) {$/;"	f	typeref:typename:void	file:
binding_ctx_free	lib/flecs/test/api/src/SystemMisc.c	/^void binding_ctx_free(void *ctx) {$/;"	f	typeref:typename:void	file:
binding_ctx_free	lib/flecs/test/api/src/Trigger.c	/^void binding_ctx_free(void *ctx) {$/;"	f	typeref:typename:void	file:
binding_ctx_value	lib/flecs/test/api/src/Observer.c	/^static int binding_ctx_value;$/;"	v	typeref:typename:int	file:
binding_ctx_value	lib/flecs/test/api/src/SystemMisc.c	/^static int binding_ctx_value;$/;"	v	typeref:typename:int	file:
binding_ctx_value	lib/flecs/test/api/src/Trigger.c	/^static int binding_ctx_value;$/;"	v	typeref:typename:int	file:
binstr_to_int	lib/libflint/src/lfmath.c	/^int binstr_to_int(const char *s) {$/;"	f	typeref:typename:int
bintree_debug_pfunc_int	lib/libflint/src/lfbinarytree.c	/^void bintree_debug_pfunc_int(void* data) {$/;"	f	typeref:typename:void
bintree_debug_print	lib/libflint/src/lfbinarytree.c	/^void bintree_debug_print(BinTree *tree) {$/;"	f	typeref:typename:void
bintree_destroy	lib/libflint/src/lfbinarytree.c	/^void bintree_destroy(BinTree *tree) {$/;"	f	typeref:typename:void
bintree_init	lib/libflint/src/lfbinarytree.c	/^void bintree_init(BinTree *tree, void (*destroy)(void *data)) {$/;"	f	typeref:typename:void
bintree_ins_left	lib/libflint/src/lfbinarytree.c	/^int bintree_ins_left(BinTree *tree, BinTreeNode *node, void *data) {$/;"	f	typeref:typename:int
bintree_ins_right	lib/libflint/src/lfbinarytree.c	/^int bintree_ins_right(BinTree *tree, BinTreeNode *node, void *data) {$/;"	f	typeref:typename:int
bintree_is_eob	lib/libflint/include/lfbinarytree.h	/^#define bintree_is_eob(/;"	d
bintree_is_leaf	lib/libflint/include/lfbinarytree.h	/^#define bintree_is_leaf(/;"	d
bintree_merge	lib/libflint/src/lfbinarytree.c	/^int bintree_merge(BinTree *merge, BinTree *left, BinTree *right, void *data) {$/;"	f	typeref:typename:int
bintree_rem_left	lib/libflint/src/lfbinarytree.c	/^void bintree_rem_left(BinTree *tree, BinTreeNode *node) {$/;"	f	typeref:typename:void
bintree_rem_right	lib/libflint/src/lfbinarytree.c	/^void bintree_rem_right(BinTree *tree, BinTreeNode *node) {$/;"	f	typeref:typename:void
bit	lib/flecs/flecs.h	/^untyped_component& bit(const char *name, uint32_t value) {$/;"	f	struct:flecs::untyped_component	typeref:typename:untyped_component &
bit	lib/flecs/include/flecs/addons/cpp/mixins/meta/component.inl	/^untyped_component& bit(const char *name, uint32_t value) {$/;"	f	typeref:typename:untyped_component &
bitmask_constant_t	lib/flecs/flecs.h	/^using bitmask_constant_t = ecs_bitmask_constant_t;$/;"	t	namespace:flecs	typeref:typename:ecs_bitmask_constant_t
bitmask_constant_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using bitmask_constant_t = ecs_bitmask_constant_t;$/;"	t	namespace:flecs	typeref:typename:ecs_bitmask_constant_t
bitset_column_count	lib/flecs/flecs.c	/^int32_t bitset_column_count($/;"	f	typeref:typename:int32_t	file:
bitset_column_count	lib/flecs/src/table.c	/^int32_t bitset_column_count($/;"	f	typeref:typename:int32_t	file:
bitset_column_next	lib/flecs/flecs.c	/^int bitset_column_next($/;"	f	typeref:typename:int	file:
bitset_column_next	lib/flecs/src/query.c	/^int bitset_column_next($/;"	f	typeref:typename:int	file:
bitset_columns	lib/flecs/flecs.c	/^    ecs_vector_t *bitset_columns;  \/* Column ids with disabled flags *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_vector_t *	file:
bitset_columns	lib/flecs/src/private_types.h	/^    ecs_vector_t *bitset_columns;  \/* Column ids with disabled flags *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_vector_t *
bitset_first	lib/flecs/flecs.h	/^    int32_t bitset_first;$/;"	m	struct:ecs_query_iter_t	typeref:typename:int32_t
bitset_first	lib/flecs/include/flecs/private/api_types.h	/^    int32_t bitset_first;$/;"	m	struct:ecs_query_iter_t	typeref:typename:int32_t
bkey	lib/uthash/tests/test20.c	/^    char bkey[5];              \/* "binary" key *\/$/;"	m	struct:my_struct	typeref:typename:char[5]	file:
bloom_bv	lib/uthash/include/uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table	typeref:typename:uint8_t *
bloom_bv	lib/uthash/src/uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table	typeref:typename:uint8_t *
bloom_nbits	lib/uthash/include/uthash.h	/^   uint8_t bloom_nbits;$/;"	m	struct:UT_hash_table	typeref:typename:uint8_t
bloom_nbits	lib/uthash/src/uthash.h	/^   uint8_t bloom_nbits;$/;"	m	struct:UT_hash_table	typeref:typename:uint8_t
bloom_sig	lib/uthash/include/uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table	typeref:typename:uint32_t
bloom_sig	lib/uthash/src/uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table	typeref:typename:uint32_t
bname	lib/uthash/tests/test26.c	/^    char bname[BUFLEN];$/;"	m	struct:el	typeref:typename:char[]	file:
bname	lib/uthash/tests/test29.c	/^    char bname[BUFLEN];$/;"	m	struct:el	typeref:typename:char[]	file:
bname	lib/uthash/tests/test30.c	/^    char bname[BUFLEN];$/;"	m	struct:el	typeref:typename:char[]	file:
bname	lib/uthash/tests/test31.c	/^    char bname[BUFLEN];$/;"	m	struct:el	typeref:typename:char[]	file:
bname	lib/uthash/tests/test32.c	/^    char bname[BUFLEN];$/;"	m	struct:el	typeref:typename:char[]	file:
bname	lib/uthash/tests/test33.c	/^    char bname[BUFLEN];$/;"	m	struct:el	typeref:typename:char[]	file:
bname	lib/uthash/tests/test34.c	/^    char bname[BUFLEN];$/;"	m	struct:el	typeref:typename:char[]	file:
bname	lib/uthash/tests/test56.c	/^    char bname[BUFLEN];$/;"	m	struct:el	typeref:typename:char[]	file:
body	lib/flecs/flecs.h	/^    char *body;$/;"	m	struct:__anona642c00a0a08	typeref:typename:char *
body	lib/flecs/flecs.h	/^    ecs_strbuf_t body;          \/* default = "" *\/$/;"	m	struct:__anona642c00a0b08	typeref:typename:ecs_strbuf_t
body	lib/flecs/include/flecs/addons/http.h	/^    char *body;$/;"	m	struct:__anon12cf63340408	typeref:typename:char *
body	lib/flecs/include/flecs/addons/http.h	/^    ecs_strbuf_t body;          \/* default = "" *\/$/;"	m	struct:__anon12cf63340508	typeref:typename:ecs_strbuf_t
body_offset	lib/flecs/flecs.c	/^    int32_t body_offset;$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t	file:
body_offset	lib/flecs/src/addons/http.c	/^    int32_t body_offset;$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t	file:
bool_1	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef ecs_bool_t bool_1[1];$/;"	t	function:ArrayTypes_array_of_standaline_array_bool_1	typeref:typename:ecs_bool_t[1]	file:
bool_2	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef ecs_bool_t bool_2[2];$/;"	t	function:ArrayTypes_array_of_standaline_array_bool_2	typeref:typename:ecs_bool_t[2]	file:
bool_2	lib/flecs/test/meta/src/ArrayTypes.c	/^    typedef ecs_bool_t bool_2[3];$/;"	t	function:ArrayTypes_array_of_standaline_array_bool_3	typeref:typename:ecs_bool_t[3]	file:
bool_t	lib/flecs/flecs.h	/^using bool_t = ecs_bool_t;$/;"	t	namespace:flecs	typeref:typename:ecs_bool_t
bool_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using bool_t = ecs_bool_t;$/;"	t	namespace:flecs	typeref:typename:ecs_bool_t
bootstrap_component	lib/flecs/flecs.c	/^#define bootstrap_component(/;"	d	file:
bootstrap_component	lib/flecs/src/bootstrap.c	/^#define bootstrap_component(/;"	d	file:
bootstrap_component_table	lib/flecs/flecs.c	/^ecs_table_t* bootstrap_component_table($/;"	f	typeref:typename:ecs_table_t *	file:
bootstrap_component_table	lib/flecs/src/bootstrap.c	/^ecs_table_t* bootstrap_component_table($/;"	f	typeref:typename:ecs_table_t *	file:
bootstrap_entity	lib/flecs/flecs.c	/^void bootstrap_entity($/;"	f	typeref:typename:void	file:
bootstrap_entity	lib/flecs/src/bootstrap.c	/^void bootstrap_entity($/;"	f	typeref:typename:void	file:
boy_name	lib/uthash/tests/bloom_perf.c	/^    char boy_name[BUFLEN];$/;"	m	struct:name_rec	typeref:typename:char[]	file:
boy_name	lib/uthash/tests/emit_keys.c	/^    char boy_name[BUFLEN];$/;"	m	struct:name_rec	typeref:typename:char[]	file:
boy_name	lib/uthash/tests/test11.c	/^    char boy_name[BUFLEN];$/;"	m	struct:name_rec	typeref:typename:char[]	file:
boy_name	lib/uthash/tests/test14.c	/^    char boy_name[BUFLEN];$/;"	m	struct:name_rec	typeref:typename:char[]	file:
bs_column	lib/flecs/flecs.c	/^    ecs_bs_column_t *bs_column;$/;"	m	struct:flecs_bitset_column_t	typeref:typename:ecs_bs_column_t *	file:
bs_column	lib/flecs/src/private_types.h	/^    ecs_bs_column_t *bs_column;$/;"	m	struct:flecs_bitset_column_t	typeref:typename:ecs_bs_column_t *
bs_column_count	lib/flecs/flecs.c	/^    int32_t bs_column_count;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t	file:
bs_column_count	lib/flecs/src/private_types.h	/^    int32_t bs_column_count;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t
bs_column_offset	lib/flecs/flecs.c	/^    int32_t bs_column_offset;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t	file:
bs_column_offset	lib/flecs/src/private_types.h	/^    int32_t bs_column_offset;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t
bs_columns	lib/flecs/flecs.c	/^    ecs_bs_column_t *bs_columns; \/* Bitset columns *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_bs_column_t *	file:
bs_columns	lib/flecs/src/private_types.h	/^    ecs_bs_column_t *bs_columns; \/* Bitset columns *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_bs_column_t *
bucket	lib/flecs/flecs.h	/^    ecs_hm_bucket_t *bucket;$/;"	m	struct:__anona642c00a0408	typeref:typename:ecs_hm_bucket_t *
bucket	lib/flecs/flecs.h	/^    struct ecs_bucket_t *bucket;$/;"	m	struct:ecs_map_iter_t	typeref:struct:ecs_bucket_t *
bucket	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_hm_bucket_t *bucket;$/;"	m	struct:__anonceb012f80308	typeref:typename:ecs_hm_bucket_t *
bucket	lib/flecs/include/flecs/private/map.h	/^    struct ecs_bucket_t *bucket;$/;"	m	struct:ecs_map_iter_t	typeref:struct:ecs_bucket_t *
bucket_count	lib/flecs/flecs.h	/^    int32_t bucket_count;$/;"	m	struct:ecs_map_t	typeref:typename:int32_t
bucket_count	lib/flecs/include/flecs/private/map.h	/^    int32_t bucket_count;$/;"	m	struct:ecs_map_t	typeref:typename:int32_t
bucket_index	lib/flecs/flecs.h	/^    int32_t bucket_index;$/;"	m	struct:ecs_map_iter_t	typeref:typename:int32_t
bucket_index	lib/flecs/include/flecs/private/map.h	/^    int32_t bucket_index;$/;"	m	struct:ecs_map_iter_t	typeref:typename:int32_t
bucket_shift	lib/flecs/flecs.h	/^    uint8_t bucket_shift;$/;"	m	struct:ecs_map_t	typeref:typename:uint8_t
bucket_shift	lib/flecs/include/flecs/private/map.h	/^    uint8_t bucket_shift;$/;"	m	struct:ecs_map_t	typeref:typename:uint8_t
buckets	lib/flecs/flecs.h	/^    ecs_bucket_t *buckets;$/;"	m	struct:ecs_map_t	typeref:typename:ecs_bucket_t *
buckets	lib/flecs/include/flecs/private/map.h	/^    ecs_bucket_t *buckets;$/;"	m	struct:ecs_map_t	typeref:typename:ecs_bucket_t *
buckets	lib/uthash/include/uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table	typeref:typename:UT_hash_bucket *
buckets	lib/uthash/src/uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table	typeref:typename:UT_hash_bucket *
buf	lib/flecs/flecs.c	/^    ecs_strbuf_t buf;$/;"	m	struct:__anona642c0050a08	typeref:typename:ecs_strbuf_t	file:
buf	lib/flecs/flecs.h	/^    char *buf;$/;"	m	struct:ecs_strbuf_element	typeref:typename:char *
buf	lib/flecs/flecs.h	/^    char *buf;$/;"	m	struct:ecs_strbuf_t	typeref:typename:char *
buf	lib/flecs/flecs.h	/^    char buf[ECS_STRBUF_ELEMENT_SIZE + 1];$/;"	m	struct:ecs_strbuf_element_embedded	typeref:typename:char[]
buf	lib/flecs/include/flecs/private/strbuf.h	/^    char *buf;$/;"	m	struct:ecs_strbuf_element	typeref:typename:char *
buf	lib/flecs/include/flecs/private/strbuf.h	/^    char *buf;$/;"	m	struct:ecs_strbuf_t	typeref:typename:char *
buf	lib/flecs/include/flecs/private/strbuf.h	/^    char buf[ECS_STRBUF_ELEMENT_SIZE + 1];$/;"	m	struct:ecs_strbuf_element_embedded	typeref:typename:char[]
buf	lib/flecs/src/addons/http.c	/^    ecs_strbuf_t buf;$/;"	m	struct:__anonc2d932d70208	typeref:typename:ecs_strbuf_t	file:
buffer_embedded	lib/flecs/flecs.h	/^    bool buffer_embedded;$/;"	m	struct:ecs_strbuf_element	typeref:typename:bool
buffer_embedded	lib/flecs/include/flecs/private/strbuf.h	/^    bool buffer_embedded;$/;"	m	struct:ecs_strbuf_element	typeref:typename:bool
build	lib/flecs/flecs.h	/^    T build(Func&& func) {$/;"	f	struct:flecs::_::node_builder	typeref:typename:T
build	lib/flecs/flecs.h	/^    T<Components ...> build() {$/;"	f	struct:flecs::_::builder	typeref:typename:T<Components...>
build	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    T<Components ...> build() {$/;"	f	struct:flecs::_::builder	typeref:typename:T<Components...>
build	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    T build(Func&& func) {$/;"	f	struct:flecs::_::node_builder	typeref:typename:T
build_pipeline	lib/flecs/flecs.c	/^bool build_pipeline($/;"	f	typeref:typename:bool	file:
build_pipeline	lib/flecs/src/addons/pipeline/pipeline.c	/^bool build_pipeline($/;"	f	typeref:typename:bool	file:
build_pipeline_query	lib/flecs/flecs.c	/^ecs_query_t* build_pipeline_query($/;"	f	typeref:typename:ecs_query_t *	file:
build_pipeline_query	lib/flecs/src/addons/pipeline/pipeline.c	/^ecs_query_t* build_pipeline_query($/;"	f	typeref:typename:ecs_query_t *	file:
build_query	lib/flecs/flecs.c	/^    ecs_query_t *build_query;$/;"	m	struct:EcsPipelineQuery	typeref:typename:ecs_query_t *	file:
build_query	lib/flecs/src/addons/pipeline/pipeline.h	/^    ecs_query_t *build_query;$/;"	m	struct:EcsPipelineQuery	typeref:typename:ecs_query_t *
build_sorted_table_range	lib/flecs/flecs.c	/^void build_sorted_table_range($/;"	f	typeref:typename:void	file:
build_sorted_table_range	lib/flecs/src/query.c	/^void build_sorted_table_range($/;"	f	typeref:typename:void	file:
build_sorted_tables	lib/flecs/flecs.c	/^void build_sorted_tables($/;"	f	typeref:typename:void	file:
build_sorted_tables	lib/flecs/src/query.c	/^void build_sorted_tables($/;"	f	typeref:typename:void	file:
builder	lib/flecs/flecs.h	/^    builder(builder&& f) $/;"	f	struct:flecs::_::builder
builder	lib/flecs/flecs.h	/^    builder(const builder& f) $/;"	f	struct:flecs::_::builder
builder	lib/flecs/flecs.h	/^    builder(flecs::world_t *world)$/;"	f	struct:flecs::_::builder
builder	lib/flecs/flecs.h	/^struct builder : IBuilder<Base, Components ...>$/;"	s	namespace:flecs::_
builder	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    builder(builder&& f) $/;"	f	struct:flecs::_::builder
builder	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    builder(const builder& f) $/;"	f	struct:flecs::_::builder
builder	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    builder(flecs::world_t *world)$/;"	f	struct:flecs::_::builder
builder	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^struct builder : IBuilder<Base, Components ...>$/;"	s	namespace:flecs::_
bulk_new_count	lib/flecs/flecs.c	/^    int32_t bulk_new_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
bulk_new_count	lib/flecs/flecs.h	/^    ecs_counter_t bulk_new_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
bulk_new_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t bulk_new_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
bulk_new_count	lib/flecs/src/private_types.h	/^    int32_t bulk_new_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
bulk_new_w_type	lib/flecs/test/api/src/util.c	/^const ecs_entity_t* bulk_new_w_type($/;"	f	typeref:typename:const ecs_entity_t *
busy_wait	lib/flecs/test/api/src/World.c	/^void busy_wait(float wait_time) {$/;"	f	typeref:typename:void	file:
by_id	lib/uthash/tests/example.c	/^int by_id(const struct my_struct *a, const struct my_struct *b)$/;"	f	typeref:typename:int
by_name	lib/uthash/tests/example.c	/^int by_name(const struct my_struct *a, const struct my_struct *b)$/;"	f	typeref:typename:int
c	lib/flecs/test/api/include/api.h	/^    ecs_entity_t c[MAX_INVOCATIONS][MAX_SYS_COLUMNS];$/;"	m	struct:Probe	typeref:typename:ecs_entity_t[][]
c	lib/flecs/test/cpp_api/src/Meta.cpp	/^        flecs::entity_t c;$/;"	m	struct:Meta_struct_w_portable_type::Test	typeref:typename:flecs::entity_t	file:
c	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t c[3];$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_bool_t[3]	file:
c_info	lib/flecs/flecs.c	/^    ecs_type_info_t **c_info;        \/* Cached pointers to component info *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_type_info_t **	file:
c_info	lib/flecs/src/private_types.h	/^    ecs_type_info_t **c_info;        \/* Cached pointers to component info *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_type_info_t **
c_ptr	lib/flecs/flecs.h	/^    const flecs::iter_t* c_ptr() const {$/;"	f	struct:flecs::iter	typeref:typename:const flecs::iter_t *
c_ptr	lib/flecs/flecs.h	/^    snapshot_t* c_ptr() const {$/;"	f	struct:flecs::snapshot	typeref:typename:snapshot_t *
c_ptr	lib/flecs/flecs.h	/^    type_t c_ptr() const {$/;"	f	struct:flecs::type_base	typeref:typename:type_t
c_ptr	lib/flecs/flecs.h	/^    world_t* c_ptr() const {$/;"	f	struct:flecs::world	typeref:typename:world_t *
c_ptr	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    const flecs::iter_t* c_ptr() const {$/;"	f	struct:flecs::iter	typeref:typename:const flecs::iter_t *
c_ptr	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    snapshot_t* c_ptr() const {$/;"	f	struct:flecs::snapshot	typeref:typename:snapshot_t *
c_ptr	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    type_t c_ptr() const {$/;"	f	struct:flecs::type_base	typeref:typename:type_t
c_ptr	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    world_t* c_ptr() const {$/;"	f	struct:flecs::world	typeref:typename:world_t *
c_str	lib/flecs/flecs.h	/^    const char* c_str() const {$/;"	f	struct:flecs::string	typeref:typename:const char *
c_str	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    const char* c_str() const {$/;"	f	struct:flecs::string	typeref:typename:const char *
cache	lib/flecs/flecs.c	/^    ecs_table_cache_t cache; \/* table_cache<ecs_table_record_t> *\/$/;"	m	struct:ecs_id_record_t	typeref:typename:ecs_table_cache_t	file:
cache	lib/flecs/flecs.c	/^    ecs_table_cache_t cache;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_table_cache_t	file:
cache	lib/flecs/flecs.c	/^    struct ecs_table_cache_t *cache;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:struct:ecs_table_cache_t *	file:
cache	lib/flecs/flecs.h	/^    ecs_iter_cache_t cache;       \/* Inline arrays to reduce allocations *\/$/;"	m	struct:ecs_iter_private_t	typeref:typename:ecs_iter_cache_t
cache	lib/flecs/include/flecs/private/api_types.h	/^    ecs_iter_cache_t cache;       \/* Inline arrays to reduce allocations *\/$/;"	m	struct:ecs_iter_private_t	typeref:typename:ecs_iter_cache_t
cache	lib/flecs/src/private_types.h	/^    ecs_table_cache_t cache; \/* table_cache<ecs_table_record_t> *\/$/;"	m	struct:ecs_id_record_t	typeref:typename:ecs_table_cache_t
cache	lib/flecs/src/private_types.h	/^    ecs_table_cache_t cache;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_table_cache_t
cache	lib/flecs/src/private_types.h	/^    struct ecs_table_cache_t *cache;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:struct:ecs_table_cache_t *
cache	lib/uthash/tests/lru_cache/Makefile	/^cache: main.o cache.o$/;"	t
cache	lib/uthash/tests/test65.c	/^struct CacheEntry *cache = NULL;$/;"	v	typeref:struct:CacheEntry *
cache.o	lib/uthash/tests/lru_cache/Makefile	/^cache.o: cache.c$/;"	t
cache_add	lib/flecs/flecs.c	/^ecs_query_table_match_t* cache_add($/;"	f	typeref:typename:ecs_query_table_match_t *	file:
cache_add	lib/flecs/src/query.c	/^ecs_query_table_match_t* cache_add($/;"	f	typeref:typename:ecs_query_table_match_t *	file:
cache_lock	lib/uthash/tests/lru_cache/cache.c	/^	pthread_rwlock_t cache_lock; \/**<A lock for concurrent access *\/$/;"	m	struct:foo_cache	typeref:typename:pthread_rwlock_t	file:
callback	lib/flecs/flecs.c	/^    ecs_http_reply_action_t callback;$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_http_reply_action_t	file:
callback	lib/flecs/flecs.h	/^    ecs_http_reply_action_t callback; \/* Function called for each request  *\/$/;"	m	struct:__anona642c00a0c08	typeref:typename:ecs_http_reply_action_t
callback	lib/flecs/flecs.h	/^    ecs_iter_action_t callback;   \/* Callback of system, trigger, observer *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/flecs.h	/^    ecs_iter_action_t callback; \/* Callback *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/flecs.h	/^    ecs_iter_action_t callback; \/* See ecs_observer_desc_t::callback *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/flecs.h	/^    ecs_iter_action_t callback;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/flecs.h	/^    ecs_iter_action_t callback;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/flecs.h	/^    ecs_iter_action_t callback;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/include/flecs.h	/^    ecs_iter_action_t callback; \/* Callback *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/include/flecs.h	/^    ecs_iter_action_t callback; \/* See ecs_observer_desc_t::callback *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/include/flecs.h	/^    ecs_iter_action_t callback;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/include/flecs.h	/^    ecs_iter_action_t callback;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/include/flecs/addons/http.h	/^    ecs_http_reply_action_t callback; \/* Function called for each request  *\/$/;"	m	struct:__anon12cf63340608	typeref:typename:ecs_http_reply_action_t
callback	lib/flecs/include/flecs/addons/system.h	/^    ecs_iter_action_t callback;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/include/flecs/private/api_types.h	/^    ecs_iter_action_t callback;   \/* Callback of system, trigger, observer *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_action_t
callback	lib/flecs/src/addons/http.c	/^    ecs_http_reply_action_t callback;$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_http_reply_action_t	file:
calloc_	lib/flecs/flecs.h	/^    ecs_os_api_calloc_t calloc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_calloc_t
calloc_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_calloc_t calloc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_calloc_t
cascade_by	lib/flecs/flecs.c	/^    int32_t cascade_by;         \/* Identify cascade column *\/$/;"	m	struct:ecs_query_t	typeref:typename:int32_t	file:
cascade_by	lib/flecs/src/private_types.h	/^    int32_t cascade_by;         \/* Identify cascade column *\/$/;"	m	struct:ecs_query_t	typeref:typename:int32_t
case_T	lib/flecs/flecs.c	/^#define case_T(/;"	d	file:
case_T	lib/flecs/src/addons/meta/cursor.c	/^#define case_T(/;"	d	file:
cases_T_bool	lib/flecs/flecs.c	/^#define cases_T_bool(/;"	d	file:
cases_T_bool	lib/flecs/src/addons/meta/cursor.c	/^#define cases_T_bool(/;"	d	file:
cases_T_float	lib/flecs/flecs.c	/^#define cases_T_float(/;"	d	file:
cases_T_float	lib/flecs/src/addons/meta/cursor.c	/^#define cases_T_float(/;"	d	file:
cases_T_signed	lib/flecs/flecs.c	/^#define cases_T_signed(/;"	d	file:
cases_T_signed	lib/flecs/src/addons/meta/cursor.c	/^#define cases_T_signed(/;"	d	file:
cases_T_unsigned	lib/flecs/flecs.c	/^#define cases_T_unsigned(/;"	d	file:
cases_T_unsigned	lib/flecs/src/addons/meta/cursor.c	/^#define cases_T_unsigned(/;"	d	file:
cb_first	lib/flecs/test/api/src/Pipeline.c	/^void cb_first(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
cb_second	lib/flecs/test/api/src/Pipeline.c	/^void cb_second(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
cb_third	lib/flecs/test/api/src/Pipeline.c	/^void cb_third(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
cc	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	n	uri:http://web.resource.org/cc/
cc	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	n	uri:http://web.resource.org/cc/
chain_it	lib/flecs/flecs.h	/^    ecs_iter_t *chain_it;         \/* Optional, allows for creating iterator chains *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_t *
chain_it	lib/flecs/include/flecs/private/api_types.h	/^    ecs_iter_t *chain_it;         \/* Optional, allows for creating iterator chains *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_t *
changed	lib/flecs/flecs.h	/^    bool changed() {$/;"	f	struct:flecs::iter	typeref:typename:bool
changed	lib/flecs/flecs.h	/^    bool changed() {$/;"	f	struct:flecs::query_base	typeref:typename:bool
changed	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    bool changed() {$/;"	f	struct:flecs::iter	typeref:typename:bool
changed	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    bool changed() {$/;"	f	struct:flecs::query_base	typeref:typename:bool
char_t	lib/flecs/flecs.h	/^using char_t = ecs_char_t;$/;"	t	namespace:flecs	typeref:typename:ecs_char_t
char_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using char_t = ecs_char_t;$/;"	t	namespace:flecs	typeref:typename:ecs_char_t
check_match_monitor	lib/flecs/flecs.c	/^bool check_match_monitor($/;"	f	typeref:typename:bool	file:
check_match_monitor	lib/flecs/src/query.c	/^bool check_match_monitor($/;"	f	typeref:typename:bool	file:
check_match_monitor_term	lib/flecs/flecs.c	/^bool check_match_monitor_term($/;"	f	typeref:typename:bool	file:
check_match_monitor_term	lib/flecs/src/query.c	/^bool check_match_monitor_term($/;"	f	typeref:typename:bool	file:
check_query_monitor	lib/flecs/flecs.c	/^bool check_query_monitor($/;"	f	typeref:typename:bool	file:
check_query_monitor	lib/flecs/src/query.c	/^bool check_query_monitor($/;"	f	typeref:typename:bool	file:
check_table_monitor	lib/flecs/flecs.c	/^bool check_table_monitor($/;"	f	typeref:typename:bool	file:
check_table_monitor	lib/flecs/src/query.c	/^bool check_table_monitor($/;"	f	typeref:typename:bool	file:
check_term	lib/flecs/flecs.c	/^bool check_term($/;"	f	typeref:typename:bool	file:
check_term	lib/flecs/src/addons/pipeline/pipeline.c	/^bool check_term($/;"	f	typeref:typename:bool	file:
check_term_component	lib/flecs/flecs.c	/^bool check_term_component($/;"	f	typeref:typename:bool	file:
check_term_component	lib/flecs/src/addons/pipeline/pipeline.c	/^bool check_term_component($/;"	f	typeref:typename:bool	file:
check_terms	lib/flecs/flecs.c	/^bool check_terms($/;"	f	typeref:typename:bool	file:
check_terms	lib/flecs/src/addons/pipeline/pipeline.c	/^bool check_terms($/;"	f	typeref:typename:bool	file:
child_count	lib/flecs/test/api/src/Prefab.c	/^int child_count(ecs_world_t *world, ecs_entity_t e) {$/;"	f	typeref:typename:int	file:
child_of	lib/flecs/flecs.h	/^    Base& child_of(entity_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
child_of	lib/flecs/flecs.h	/^    Self& child_of() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
child_of	lib/flecs/flecs.h	/^    Self& child_of(entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
child_of	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& child_of() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
child_of	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& child_of(entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
child_of	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    Base& child_of(entity_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
children	lib/flecs/flecs.h	/^    void children(Func&& func) const {$/;"	f	struct:flecs::entity_view	typeref:typename:void
children	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    void children(Func&& func) const {$/;"	f	struct:flecs::entity_view	typeref:typename:void
chunk_free	lib/flecs/flecs.c	/^void chunk_free($/;"	f	typeref:typename:void	file:
chunk_free	lib/flecs/src/datastructures/sparse.c	/^void chunk_free($/;"	f	typeref:typename:void	file:
chunk_new	lib/flecs/flecs.c	/^chunk_t* chunk_new($/;"	f	typeref:typename:chunk_t *	file:
chunk_new	lib/flecs/src/datastructures/sparse.c	/^chunk_t* chunk_new($/;"	f	typeref:typename:chunk_t *	file:
chunk_t	lib/flecs/flecs.c	/^typedef struct chunk_t {$/;"	s	file:
chunk_t	lib/flecs/flecs.c	/^} chunk_t;$/;"	t	typeref:struct:chunk_t	file:
chunk_t	lib/flecs/src/datastructures/sparse.c	/^typedef struct chunk_t {$/;"	s	file:
chunk_t	lib/flecs/src/datastructures/sparse.c	/^} chunk_t;$/;"	t	typeref:struct:chunk_t	file:
chunks	lib/flecs/flecs.h	/^    ecs_vector_t *chunks;       \/* Chunks with sparse arrays & data *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:ecs_vector_t *
chunks	lib/flecs/include/flecs/private/sparse.h	/^    ecs_vector_t *chunks;       \/* Chunks with sparse arrays & data *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:ecs_vector_t *
ci	lib/flecs/flecs.c	/^    const ecs_type_info_t *ci;$/;"	m	struct:ecs_column_info_t	typeref:typename:const ecs_type_info_t *	file:
ci	lib/flecs/src/private_types.h	/^    const ecs_type_info_t *ci;$/;"	m	struct:ecs_column_info_t	typeref:typename:const ecs_type_info_t *
cl_ctx	lib/flecs/test/api/src/ComponentLifecycle.c	/^typedef struct cl_ctx {$/;"	s	file:
cl_ctx	lib/flecs/test/api/src/ComponentLifecycle.c	/^} cl_ctx;$/;"	t	typeref:struct:cl_ctx	file:
clean	cmake-build-debug/Makefile	/^clean:$/;"	t
clean	cmake-build-debug/lib/flecs/Makefile	/^clean:$/;"	t
clean	cmake-build-debug/lib/libflint/Makefile	/^clean:$/;"	t
clean	cmake-build-release/Makefile	/^clean:$/;"	t
clean	cmake-build-release/lib/flecs/Makefile	/^clean:$/;"	t
clean	cmake-build-release/lib/libflint/Makefile	/^clean:$/;"	t
clean	lib/uthash/doc/Makefile	/^clean:$/;"	t
clean	lib/uthash/tests/Makefile	/^clean:$/;"	t
clean	lib/uthash/tests/lru_cache/Makefile	/^clean:$/;"	t
clean	lib/uthash/tests/threads/Makefile	/^clean:$/;"	t
clean/fast	cmake-build-debug/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	cmake-build-debug/lib/flecs/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	cmake-build-debug/lib/libflint/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	cmake-build-release/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	cmake-build-release/lib/flecs/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	cmake-build-release/lib/libflint/Makefile	/^clean\/fast: clean$/;"	t
clean_tables	lib/flecs/flecs.c	/^void clean_tables($/;"	f	typeref:typename:void	file:
clean_tables	lib/flecs/src/world.c	/^void clean_tables($/;"	f	typeref:typename:void	file:
clear	lib/flecs/flecs.h	/^    void clear() const {$/;"	f	struct:flecs::entity	typeref:typename:void
clear	lib/flecs/flecs.h	/^    void clear() {$/;"	f	class:flecs::vector	typeref:typename:void
clear	lib/flecs/flecs.h	/^    void clear() {$/;"	f	struct:flecs::string	typeref:typename:void
clear	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    void clear() const {$/;"	f	struct:flecs::entity	typeref:typename:void
clear	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    void clear() {$/;"	f	struct:flecs::string	typeref:typename:void
clear	lib/flecs/include/flecs/private/vector.h	/^    void clear() {$/;"	f	class:flecs::vector	typeref:typename:void
clear_bucket	lib/flecs/flecs.c	/^void clear_bucket($/;"	f	typeref:typename:void	file:
clear_bucket	lib/flecs/src/datastructures/map.c	/^void clear_bucket($/;"	f	typeref:typename:void	file:
clear_buckets	lib/flecs/flecs.c	/^void clear_buckets($/;"	f	typeref:typename:void	file:
clear_buckets	lib/flecs/src/datastructures/map.c	/^void clear_buckets($/;"	f	typeref:typename:void	file:
clear_colors	src/colors.c	/^void clear_colors(struct DColor *colors) {$/;"	f	typeref:typename:void
clear_comment	lib/flecs/flecs.c	/^void clear_comment($/;"	f	typeref:typename:void	file:
clear_comment	lib/flecs/src/addons/plecs.c	/^void clear_comment($/;"	f	typeref:typename:void	file:
clear_count	lib/flecs/flecs.c	/^    int32_t clear_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
clear_count	lib/flecs/flecs.h	/^    ecs_counter_t clear_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
clear_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t clear_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
clear_count	lib/flecs/src/private_types.h	/^    int32_t clear_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
clock_time_t	lib/uthash/tests/test89.c	/^typedef int clock_time_t;$/;"	t	typeref:typename:int	file:
clockface	lib/uthash/tests/test96.c	/^struct clockface {$/;"	s	file:
clockface_hash	lib/uthash/tests/test96.c	/^int clockface_hash(int time)$/;"	f	typeref:typename:int
clockface_neq	lib/uthash/tests/test96.c	/^int clockface_neq(int t1, int t2)$/;"	f	typeref:typename:int
clone	lib/flecs/flecs.h	/^inline flecs::entity entity_view::clone(bool copy_value, flecs::entity_t dst_id) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
clone	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::clone(bool copy_value, flecs::entity_t dst_id) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
clone_value	lib/flecs/flecs.c	/^    bool clone_value;           \/* Clone entity with value (used for clone) *\/ $/;"	m	struct:ecs_defer_op_1_t	typeref:typename:bool	file:
clone_value	lib/flecs/src/private_types.h	/^    bool clone_value;           \/* Clone entity with value (used for clone) *\/ $/;"	m	struct:ecs_defer_op_1_t	typeref:typename:bool
cmake_check_build_system	cmake-build-debug/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	cmake-build-debug/lib/flecs/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	cmake-build-debug/lib/libflint/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	cmake-build-release/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	cmake-build-release/lib/flecs/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	cmake-build-release/lib/libflint/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	cmake-build-debug/Makefile	/^cmake_force:$/;"	t
cmake_force	cmake-build-debug/lib/flecs/Makefile	/^cmake_force:$/;"	t
cmake_force	cmake-build-debug/lib/libflint/Makefile	/^cmake_force:$/;"	t
cmake_force	cmake-build-release/Makefile	/^cmake_force:$/;"	t
cmake_force	cmake-build-release/lib/flecs/Makefile	/^cmake_force:$/;"	t
cmake_force	cmake-build-release/lib/libflint/Makefile	/^cmake_force:$/;"	t
cmpfunc	lib/uthash/tests/test87.c	/^static int cmpfunc(const hstruct_t *s1, const hstruct_t *s2)$/;"	f	typeref:typename:int	file:
code	lib/flecs/flecs.c	/^    const char *code;$/;"	m	struct:__anona642c0050408	typeref:typename:const char *	file:
code	lib/flecs/flecs.h	/^    int code;                   \/* default = 200 *\/$/;"	m	struct:__anona642c00a0b08	typeref:typename:int
code	lib/flecs/include/flecs/addons/http.h	/^    int code;                   \/* default = 200 *\/$/;"	m	struct:__anon12cf63340508	typeref:typename:int
code	lib/flecs/src/addons/plecs.c	/^    const char *code;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:const char *	file:
color	include/colors.h	/^    color_t color;$/;"	m	struct:DColor	typeref:typename:color_t
color	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^    Color color;$/;"	m	struct:__anon0f08a1c60208	typeref:typename:Color	file:
color	lib/flecs/examples/cpp/reflection/basics_enum/src/main.cpp	/^    Color color;$/;"	m	struct:TypeWithEnum	typeref:typename:Color	file:
color_from_argb	include/BearLibTerminal.h	/^TERMINAL_INLINE color_t color_from_argb(uint8_t a, uint8_t r, uint8_t g, uint8_t b)$/;"	f	typeref:typename:TERMINAL_INLINE color_t
color_from_name	include/BearLibTerminal.h	/^TERMINAL_INLINE color_t color_from_name(const char* name)$/;"	f	typeref:typename:TERMINAL_INLINE color_t
color_from_name	include/BearLibTerminal.h	/^TERMINAL_INLINE color_t color_from_name(const wchar_t* name)$/;"	f	typeref:typename:TERMINAL_INLINE color_t
color_from_wname	include/BearLibTerminal.h	/^TERMINAL_INLINE color_t color_from_wname(const wchar_t* name)$/;"	f	typeref:typename:TERMINAL_INLINE color_t
color_t	include/BearLibTerminal.h	/^typedef uint32_t color_t;$/;"	t	typeref:typename:uint32_t
column	lib/flecs/flecs.c	/^    int32_t column;$/;"	m	struct:__anona642c0050d08	typeref:typename:int32_t	file:
column	lib/flecs/flecs.c	/^    int32_t column;$/;"	m	struct:ecs_column_info_t	typeref:typename:int32_t	file:
column	lib/flecs/flecs.c	/^    int32_t column;$/;"	m	struct:ecs_rule_subset_frame_t	typeref:typename:int32_t	file:
column	lib/flecs/flecs.c	/^    int32_t column;$/;"	m	struct:ecs_rule_superset_frame_t	typeref:typename:int32_t	file:
column	lib/flecs/flecs.c	/^    int32_t column;$/;"	m	struct:ecs_rule_with_ctx_t	typeref:typename:int32_t	file:
column	lib/flecs/flecs.c	/^    int32_t column;$/;"	m	struct:ecs_table_record_t	typeref:typename:int32_t	file:
column	lib/flecs/flecs.h	/^    column(T* array, size_t count, bool is_shared = false)$/;"	f	struct:flecs::column
column	lib/flecs/flecs.h	/^    int32_t column;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
column	lib/flecs/flecs.h	/^inline column<T>::column(iter &iter, int32_t index) {$/;"	f	class:flecs::column
column	lib/flecs/flecs.h	/^struct column {$/;"	s	namespace:flecs
column	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline column<T>::column(iter &iter, int32_t index) {$/;"	f	class:flecs::column
column	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    column(T* array, size_t count, bool is_shared = false)$/;"	f	struct:flecs::column
column	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^struct column {$/;"	s	namespace:flecs
column	lib/flecs/include/flecs/private/api_types.h	/^    int32_t column;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
column	lib/flecs/src/addons/rules.c	/^    int32_t column;$/;"	m	struct:ecs_rule_subset_frame_t	typeref:typename:int32_t	file:
column	lib/flecs/src/addons/rules.c	/^    int32_t column;$/;"	m	struct:ecs_rule_superset_frame_t	typeref:typename:int32_t	file:
column	lib/flecs/src/addons/rules.c	/^    int32_t column;$/;"	m	struct:ecs_rule_with_ctx_t	typeref:typename:int32_t	file:
column	lib/flecs/src/private_types.h	/^    int32_t column;$/;"	m	struct:ecs_column_info_t	typeref:typename:int32_t
column	lib/flecs/src/private_types.h	/^    int32_t column;$/;"	m	struct:ecs_table_record_t	typeref:typename:int32_t
column	lib/flecs/src/query.c	/^    int32_t column;$/;"	m	struct:__anon8da83e450108	typeref:typename:int32_t	file:
column_index	lib/flecs/flecs.c	/^    int32_t column_index;$/;"	m	struct:flecs_bitset_column_t	typeref:typename:int32_t	file:
column_index	lib/flecs/src/private_types.h	/^    int32_t column_index;$/;"	m	struct:flecs_bitset_column_t	typeref:typename:int32_t
columns	lib/flecs/flecs.c	/^    ecs_column_t *columns;       \/* Component columns *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_column_t *	file:
columns	lib/flecs/flecs.c	/^    int32_t *columns;         \/* Mapping from query terms to table columns *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:int32_t *	file:
columns	lib/flecs/flecs.h	/^    int32_t *columns;                    \/* Column indices *\/$/;"	m	struct:ecs_rule_iter_t	typeref:typename:int32_t *
columns	lib/flecs/flecs.h	/^    int32_t *columns;             \/* Query term to table column mapping *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t *
columns	lib/flecs/flecs.h	/^    int32_t columns[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:int32_t[]
columns	lib/flecs/include/flecs/private/api_types.h	/^    int32_t *columns;                    \/* Column indices *\/$/;"	m	struct:ecs_rule_iter_t	typeref:typename:int32_t *
columns	lib/flecs/include/flecs/private/api_types.h	/^    int32_t *columns;             \/* Query term to table column mapping *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t *
columns	lib/flecs/include/flecs/private/api_types.h	/^    int32_t columns[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:int32_t[]
columns	lib/flecs/src/private_types.h	/^    ecs_column_t *columns;       \/* Component columns *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_column_t *
columns	lib/flecs/src/private_types.h	/^    int32_t *columns;         \/* Mapping from query terms to table columns *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:int32_t *
columns_alloc	lib/flecs/flecs.h	/^    bool columns_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
columns_alloc	lib/flecs/include/flecs/private/api_types.h	/^    bool columns_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
comment	lib/flecs/flecs.c	/^    char *comment;$/;"	m	struct:__anona642c0050408	typeref:typename:char *	file:
comment	lib/flecs/src/addons/plecs.c	/^    char *comment;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:char *	file:
commit	lib/flecs/flecs.c	/^void commit($/;"	f	typeref:typename:void	file:
commit	lib/flecs/src/entity.c	/^void commit($/;"	f	typeref:typename:void	file:
comp	lib/flecs/flecs.h	/^    const EcsComponent *comp; \/* Pointer to component, in case size\/alignment is needed *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:const EcsComponent *
comp	lib/flecs/include/flecs/addons/meta.h	/^    const EcsComponent *comp; \/* Pointer to component, in case size\/alignment is needed *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:const EcsComponent *
comp_copy	lib/flecs/test/api/src/ComponentLifecycle.c	/^void comp_copy($/;"	f	typeref:typename:void	file:
comp_ctor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void comp_ctor($/;"	f	typeref:typename:void	file:
comp_dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void comp_dtor($/;"	f	typeref:typename:void	file:
comp_move	lib/flecs/test/api/src/ComponentLifecycle.c	/^void comp_move($/;"	f	typeref:typename:void	file:
comp_move	lib/flecs/test/api/src/Reference.c	/^void comp_move($/;"	f	typeref:typename:void	file:
compare	lib/flecs/flecs.h	/^    ecs_compare_action_t compare;$/;"	m	struct:__anona642c00a0308	typeref:typename:ecs_compare_action_t
compare	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_compare_action_t compare;$/;"	m	struct:__anonceb012f80208	typeref:typename:ecs_compare_action_t
compare	lib/libflint/include/lfbinarytree.h	/^    int (*compare)(const void *a, const void *b);$/;"	m	struct:__anonb782dc9e0108	typeref:typename:int (*)(const void * a,const void * b)
compare_entity	lib/flecs/flecs.c	/^int compare_entity($/;"	f	typeref:typename:ECS_DTOR (EcsPipelineQuery,ptr,{ ecs_vector_free(ptr->ops); })int	file:
compare_entity	lib/flecs/src/addons/pipeline/pipeline.c	/^int compare_entity($/;"	f	typeref:typename:ECS_DTOR (EcsPipelineQuery,ptr,{ ecs_vector_free(ptr->ops); })int	file:
compare_entity	lib/flecs/test/api/src/Sorting.c	/^int compare_entity($/;"	f	typeref:typename:int	file:
compare_int	lib/flecs/test/collections/src/Vector.c	/^int compare_int($/;"	f	typeref:typename:int	file:
compare_position	lib/flecs/examples/c/queries/sorting/src/main.c	/^int compare_position($/;"	f	typeref:typename:int
compare_position	lib/flecs/examples/cpp/queries/sorting/src/main.cpp	/^int compare_position($/;"	f	typeref:typename:int
compare_position	lib/flecs/test/api/src/EnabledComponents.c	/^int compare_position(ecs_entity_t e1, const void *ptr1, ecs_entity_t e2, const void *ptr2) {$/;"	f	typeref:typename:int	file:
compare_position	lib/flecs/test/api/src/Sorting.c	/^int compare_position($/;"	f	typeref:typename:int	file:
compare_position	lib/flecs/test/api/src/Switch.c	/^int compare_position(ecs_entity_t e1, const void *ptr1, ecs_entity_t e2, const void *ptr2) {$/;"	f	typeref:typename:int	file:
compare_position	lib/flecs/test/cpp_api/src/Query.cpp	/^int compare_position($/;"	f	typeref:typename:int	file:
compare_variable	lib/flecs/flecs.c	/^int compare_variable($/;"	f	typeref:typename:int	file:
compare_variable	lib/flecs/src/addons/rules.c	/^int compare_variable($/;"	f	typeref:typename:int	file:
compile_program	lib/flecs/flecs.c	/^void compile_program($/;"	f	typeref:typename:void	file:
compile_program	lib/flecs/src/addons/rules.c	/^void compile_program($/;"	f	typeref:typename:void	file:
complain	lib/uthash/tests/test92.c	/^static void complain(int index, example_user_t *users, example_user_t *user)$/;"	f	typeref:typename:void	file:
component	lib/flecs/flecs.c	/^    ecs_entity_t component;$/;"	m	struct:ecs_table_event_t	typeref:typename:ecs_entity_t	file:
component	lib/flecs/flecs.c	/^    ecs_entity_t component;$/;"	m	struct:ecs_type_info_t	typeref:typename:ecs_entity_t	file:
component	lib/flecs/flecs.h	/^    component($/;"	f	struct:flecs::component
component	lib/flecs/flecs.h	/^    ecs_entity_t component; \/* Component of the reference *\/$/;"	m	struct:ecs_ref_t	typeref:typename:ecs_entity_t
component	lib/flecs/flecs.h	/^inline flecs::component<T> world::component(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::component<T>
component	lib/flecs/flecs.h	/^inline flecs::untyped_component world::component(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::untyped_component
component	lib/flecs/flecs.h	/^struct component : untyped_component {$/;"	s	namespace:flecs
component	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    component($/;"	f	struct:flecs::component
component	lib/flecs/include/flecs/addons/cpp/component.hpp	/^struct component : untyped_component {$/;"	s	namespace:flecs
component	lib/flecs/include/flecs/addons/cpp/mixins/component/impl.hpp	/^inline flecs::component<T> world::component(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::component<T>
component	lib/flecs/include/flecs/addons/cpp/mixins/component/impl.hpp	/^inline flecs::untyped_component world::component(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::untyped_component
component	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t component; \/* Component of the reference *\/$/;"	m	struct:ecs_ref_t	typeref:typename:ecs_entity_t
component	lib/flecs/src/private_types.h	/^    ecs_entity_t component;$/;"	m	struct:ecs_table_event_t	typeref:typename:ecs_entity_t
component	lib/flecs/src/private_types.h	/^    ecs_entity_t component;$/;"	m	struct:ecs_type_info_t	typeref:typename:ecs_entity_t
component	lib/flecs/test/api/include/api.h	/^    ecs_entity_t component;$/;"	m	struct:IterData	typeref:typename:ecs_entity_t
component	lib/flecs/test/api/src/ComponentLifecycle.c	/^    ecs_entity_t component;$/;"	m	struct:copy_ctx	typeref:typename:ecs_entity_t	file:
component	lib/flecs/test/api/src/ComponentLifecycle.c	/^    ecs_entity_t component;$/;"	m	struct:xtor_ctx	typeref:typename:ecs_entity_t	file:
component_2	lib/flecs/test/api/include/api.h	/^    ecs_entity_t component_2;$/;"	m	struct:IterData	typeref:typename:ecs_entity_t
component_3	lib/flecs/test/api/include/api.h	/^    ecs_entity_t component_3;$/;"	m	struct:IterData	typeref:typename:ecs_entity_t
component_count	lib/flecs/flecs.h	/^    ecs_gauge_t component_count;              \/* Number of components *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
component_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t component_count;              \/* Number of components *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
components	lib/flecs/flecs.c	/^    ecs_map_t *components;$/;"	m	struct:write_state_t	typeref:typename:ecs_map_t *	file:
components	lib/flecs/src/addons/pipeline/pipeline.c	/^    ecs_map_t *components;$/;"	m	struct:write_state_t	typeref:typename:ecs_map_t *	file:
components_override	lib/flecs/flecs.c	/^void components_override($/;"	f	typeref:typename:void	file:
components_override	lib/flecs/src/entity.c	/^void components_override($/;"	f	typeref:typename:void	file:
compute_group_id	lib/flecs/flecs.c	/^void compute_group_id($/;"	f	typeref:typename:void	file:
compute_group_id	lib/flecs/src/query.c	/^void compute_group_id($/;"	f	typeref:typename:void	file:
compute_table_diff	lib/flecs/flecs.c	/^void compute_table_diff($/;"	f	typeref:typename:void	file:
compute_table_diff	lib/flecs/src/table_graph.c	/^void compute_table_diff($/;"	f	typeref:typename:void	file:
cond_broadcast_	lib/flecs/flecs.h	/^    ecs_os_api_cond_broadcast_t cond_broadcast_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_broadcast_t
cond_broadcast_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_cond_broadcast_t cond_broadcast_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_broadcast_t
cond_free_	lib/flecs/flecs.h	/^    ecs_os_api_cond_free_t cond_free_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_free_t
cond_free_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_cond_free_t cond_free_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_free_t
cond_new_	lib/flecs/flecs.h	/^    ecs_os_api_cond_new_t cond_new_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_new_t
cond_new_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_cond_new_t cond_new_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_new_t
cond_signal_	lib/flecs/flecs.h	/^    ecs_os_api_cond_signal_t cond_signal_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_signal_t
cond_signal_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_cond_signal_t cond_signal_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_signal_t
cond_wait_	lib/flecs/flecs.h	/^    ecs_os_api_cond_wait_t cond_wait_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_wait_t
cond_wait_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_cond_wait_t cond_wait_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_cond_wait_t
conditional_t	lib/flecs/flecs.h	/^using conditional_t = typename std::conditional<V, T, F>::type;$/;"	t	namespace:flecs	typeref:typename:std::conditional<V,T,F>::type
conditional_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using conditional_t = typename std::conditional<V, T, F>::type;$/;"	t	namespace:flecs	typeref:typename:std::conditional<V,T,F>::type
conn	lib/flecs/flecs.h	/^    ecs_http_connection_t *conn;$/;"	m	struct:__anona642c00a0a08	typeref:typename:ecs_http_connection_t *
conn	lib/flecs/include/flecs/addons/http.h	/^    ecs_http_connection_t *conn;$/;"	m	struct:__anon12cf63340408	typeref:typename:ecs_http_connection_t *
conn_id	lib/flecs/flecs.c	/^    uint64_t conn_id; \/* for sanity check *\/$/;"	m	struct:__anona642c0050c08	typeref:typename:uint64_t	file:
conn_id	lib/flecs/src/addons/http.c	/^    uint64_t conn_id; \/* for sanity check *\/$/;"	m	struct:__anonc2d932d70408	typeref:typename:uint64_t	file:
connection_free	lib/flecs/flecs.c	/^void connection_free(ecs_http_connection_impl_t *conn) {$/;"	f	typeref:typename:void	file:
connection_free	lib/flecs/src/addons/http.c	/^void connection_free(ecs_http_connection_impl_t *conn) {$/;"	f	typeref:typename:void	file:
connections	lib/flecs/flecs.c	/^    ecs_sparse_t *connections; \/* sparse<http_connection_t> *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_sparse_t *	file:
connections	lib/flecs/src/addons/http.c	/^    ecs_sparse_t *connections; \/* sparse<http_connection_t> *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_sparse_t *	file:
constant	lib/flecs/flecs.h	/^    ecs_entity_t constant;$/;"	m	struct:ecs_bitmask_constant_t	typeref:typename:ecs_entity_t
constant	lib/flecs/flecs.h	/^    ecs_entity_t constant;$/;"	m	struct:ecs_enum_constant_t	typeref:typename:ecs_entity_t
constant	lib/flecs/flecs.h	/^untyped_component& constant(const char *name, int32_t value) {$/;"	f	struct:flecs::untyped_component	typeref:typename:untyped_component &
constant	lib/flecs/include/flecs/addons/cpp/mixins/meta/component.inl	/^untyped_component& constant(const char *name, int32_t value) {$/;"	f	typeref:typename:untyped_component &
constant	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t constant;$/;"	m	struct:ecs_bitmask_constant_t	typeref:typename:ecs_entity_t
constant	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t constant;$/;"	m	struct:ecs_enum_constant_t	typeref:typename:ecs_entity_t
constants	lib/flecs/flecs.h	/^    ecs_bitmask_constant_t constants[ECS_MEMBER_DESC_CACHE_SIZE];$/;"	m	struct:ecs_bitmask_desc_t	typeref:typename:ecs_bitmask_constant_t[]
constants	lib/flecs/flecs.h	/^    ecs_enum_constant_t constants[ECS_MEMBER_DESC_CACHE_SIZE];$/;"	m	struct:ecs_enum_desc_t	typeref:typename:ecs_enum_constant_t[]
constants	lib/flecs/flecs.h	/^    ecs_map_t *constants; \/* map<i32_t, ecs_enum_constant_t> *\/$/;"	m	struct:EcsEnum	typeref:typename:ecs_map_t *
constants	lib/flecs/flecs.h	/^    ecs_map_t *constants; \/* map<u32_t, ecs_bitmask_constant_t> *\/$/;"	m	struct:EcsBitmask	typeref:typename:ecs_map_t *
constants	lib/flecs/flecs.h	/^    enum_constant_data constants[FLECS_ENUM_MAX_COUNT];$/;"	m	struct:flecs::_::enum_data_impl	typeref:typename:enum_constant_data[]
constants	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    enum_constant_data constants[FLECS_ENUM_MAX_COUNT];$/;"	m	struct:flecs::_::enum_data_impl	typeref:typename:enum_constant_data[]
constants	lib/flecs/include/flecs/addons/meta.h	/^    ecs_bitmask_constant_t constants[ECS_MEMBER_DESC_CACHE_SIZE];$/;"	m	struct:ecs_bitmask_desc_t	typeref:typename:ecs_bitmask_constant_t[]
constants	lib/flecs/include/flecs/addons/meta.h	/^    ecs_enum_constant_t constants[ECS_MEMBER_DESC_CACHE_SIZE];$/;"	m	struct:ecs_enum_desc_t	typeref:typename:ecs_enum_constant_t[]
constants	lib/flecs/include/flecs/addons/meta.h	/^    ecs_map_t *constants; \/* map<i32_t, ecs_enum_constant_t> *\/$/;"	m	struct:EcsEnum	typeref:typename:ecs_map_t *
constants	lib/flecs/include/flecs/addons/meta.h	/^    ecs_map_t *constants; \/* map<u32_t, ecs_bitmask_constant_t> *\/$/;"	m	struct:EcsBitmask	typeref:typename:ecs_map_t *
constraints_satisfied	lib/flecs/flecs.c	/^    bool constraints_satisfied; \/* Are all term constraints satisfied *\/$/;"	m	struct:ecs_query_t	typeref:typename:bool	file:
constraints_satisfied	lib/flecs/src/private_types.h	/^    bool constraints_satisfied; \/* Are all term constraints satisfied *\/$/;"	m	struct:ecs_query_t	typeref:typename:bool
consumer	lib/uthash/tests/lru_cache/main.c	/^void *consumer(void *arg)$/;"	f	typeref:typename:void *
content	lib/flecs/flecs.h	/^    char *content;$/;"	m	struct:ecs_strbuf_t	typeref:typename:char *
content	lib/flecs/include/flecs/private/strbuf.h	/^    char *content;$/;"	m	struct:ecs_strbuf_t	typeref:typename:char *
content_length	lib/flecs/flecs.c	/^    int32_t content_length;$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t	file:
content_length	lib/flecs/src/addons/http.c	/^    int32_t content_length;$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t	file:
content_type	lib/flecs/flecs.h	/^    const char* content_type;   \/* default = application\/json *\/$/;"	m	struct:__anona642c00a0b08	typeref:typename:const char *
content_type	lib/flecs/include/flecs/addons/http.h	/^    const char* content_type;   \/* default = application\/json *\/$/;"	m	struct:__anon12cf63340508	typeref:typename:const char *
context	lib/flecs/flecs.c	/^    void *context;               \/* Application context *\/$/;"	m	struct:ecs_world_t	typeref:typename:void *	file:
context	lib/flecs/src/private_types.h	/^    void *context;               \/* Application context *\/$/;"	m	struct:ecs_world_t	typeref:typename:void *
conversion_error	lib/flecs/flecs.c	/^void conversion_error($/;"	f	typeref:typename:void	file:
conversion_error	lib/flecs/src/addons/meta/cursor.c	/^void conversion_error($/;"	f	typeref:typename:void	file:
cookie	lib/uthash/tests/sleep_test.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test1.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test10.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test13.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test17.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test18.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test19.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test2.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test24.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test3.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test4.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test5.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test56.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test58.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test6.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test7.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test8.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test85.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test88.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test9.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test92.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
cookie	lib/uthash/tests/test93.c	/^    int cookie;$/;"	m	struct:example_user_t	typeref:typename:int	file:
copy	lib/flecs/flecs.h	/^    ecs_copy_t copy;            \/* copy assignment *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_copy_t
copy	lib/flecs/flecs.h	/^ecs_copy_t copy() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_copy_t
copy	lib/flecs/include/flecs.h	/^    ecs_copy_t copy;            \/* copy assignment *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_copy_t
copy	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^ecs_copy_t copy() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_copy_t
copy	lib/flecs/test/api/src/ComponentLifecycle.c	/^    copy_ctx copy;$/;"	m	struct:cl_ctx	typeref:typename:copy_ctx	file:
copy	lib/uthash/include/utarray.h	/^    ctor_f *copy;$/;"	m	struct:__anonf30a79380108	typeref:typename:ctor_f *
copy	lib/uthash/src/utarray.h	/^    ctor_f *copy;$/;"	m	struct:__anon57c8b0dc0108	typeref:typename:ctor_f *
copy_ctor	lib/flecs/flecs.h	/^    ecs_copy_ctor_t copy_ctor;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_copy_ctor_t
copy_ctor	lib/flecs/flecs.h	/^ecs_copy_ctor_t copy_ctor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_copy_ctor_t
copy_ctor	lib/flecs/include/flecs.h	/^    ecs_copy_ctor_t copy_ctor;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_copy_ctor_t
copy_ctor	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^ecs_copy_ctor_t copy_ctor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_copy_ctor_t
copy_ctor_impl	lib/flecs/flecs.h	/^void copy_ctor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
copy_ctor_impl	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^void copy_ctor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
copy_ctor_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int copy_ctor_invoked;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
copy_ctor_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int copy_ctor_invoked;$/;"	m	class:Pod	typeref:typename:int
copy_ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CountNoDefaultCtor::copy_ctor_invoked = 0;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
copy_ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int Pod::copy_ctor_invoked = 0;$/;"	m	class:Pod	typeref:typename:int
copy_ctx	lib/flecs/test/api/src/ComponentLifecycle.c	/^typedef struct copy_ctx {$/;"	s	file:
copy_ctx	lib/flecs/test/api/src/ComponentLifecycle.c	/^} copy_ctx;$/;"	t	typeref:struct:copy_ctx	file:
copy_impl	lib/flecs/flecs.h	/^void copy_impl($/;"	f	namespace:flecs::_	typeref:typename:void
copy_impl	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^void copy_impl($/;"	f	namespace:flecs::_	typeref:typename:void
copy_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int copy_invoked;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
copy_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int copy_invoked;$/;"	m	class:Pod	typeref:typename:int
copy_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CountNoDefaultCtor::copy_invoked = 0;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
copy_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int Pod::copy_invoked = 0;$/;"	m	class:Pod	typeref:typename:int
count	lib/flecs/flecs.c	/^    int32_t count;                   \/* Number of entities to iterate in table *\/$/;"	m	struct:ecs_query_table_node_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;              \/* Number of systems to run before merge *\/$/;"	m	struct:ecs_pipeline_op_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;          \/* Number of elements for value *\/$/;"	m	struct:flecs_switch_header_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:__anona642c0050e08	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:__anona642c0050f08	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:ecs_bitset_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:ecs_defer_op_n_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:ecs_query_table_list_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:ecs_table_cache_list_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:ecs_table_record_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:ecs_table_slice_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:ecs_vector_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:pair_offset_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int32_t count;$/;"	m	struct:sort_helper_t	typeref:typename:int32_t	file:
count	lib/flecs/flecs.c	/^    int64_t count;$/;"	m	struct:meta_member_t	typeref:typename:int64_t	file:
count	lib/flecs/flecs.c	/^    int64_t count;$/;"	m	struct:meta_params_t	typeref:typename:int64_t	file:
count	lib/flecs/flecs.h	/^    int count() const {$/;"	f	struct:flecs::world	typeref:typename:int
count	lib/flecs/flecs.h	/^    int count(flecs::entity_t obj) const {$/;"	f	struct:flecs::world	typeref:typename:int
count	lib/flecs/flecs.h	/^    int count(flecs::entity_t rel, flecs::entity_t obj) const {$/;"	f	struct:flecs::world	typeref:typename:int
count	lib/flecs/flecs.h	/^    int count(flecs::id_t component_id) const {$/;"	f	struct:flecs::world	typeref:typename:int
count	lib/flecs/flecs.h	/^    int32_t count() {$/;"	f	class:flecs::vector	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count() {$/;"	f	struct:flecs::iter_iterable	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;                \/* Number of entities to iterate *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;              \/* Number of alive entries *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;          \/* Number of elements in bucket *\/$/;"	m	struct:ecs_bucket_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;          \/* The number of entities in the array *\/$/;"	m	struct:ecs_ids_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;        $/;"	m	struct:ecs_meta_type_op_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;      \/* Number of entities to create\/populate *\/$/;"	m	struct:ecs_bulk_desc_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:EcsArray	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:EcsMember	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:ecs_array_desc_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:ecs_event_desc_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:ecs_map_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:ecs_member_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:ecs_strbuf_list_elem	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    int32_t count;$/;"	m	struct:ecs_worker_iter_t	typeref:typename:int32_t
count	lib/flecs/flecs.h	/^    size_t count() const {$/;"	f	struct:flecs::iter	typeref:typename:size_t
count	lib/flecs/flecs.h	/^    size_t count() {$/;"	f	struct:flecs::type_base	typeref:typename:size_t
count	lib/flecs/include/flecs.h	/^    int32_t count;      \/* Number of entities to create\/populate *\/$/;"	m	struct:ecs_bulk_desc_t	typeref:typename:int32_t
count	lib/flecs/include/flecs.h	/^    int32_t count;$/;"	m	struct:ecs_event_desc_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    size_t count() const {$/;"	f	struct:flecs::iter	typeref:typename:size_t
count	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    size_t count() {$/;"	f	struct:flecs::type_base	typeref:typename:size_t
count	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    int32_t count() {$/;"	f	struct:flecs::iter_iterable	typeref:typename:int32_t
count	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    int count() const {$/;"	f	struct:flecs::world	typeref:typename:int
count	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    int count(flecs::entity_t obj) const {$/;"	f	struct:flecs::world	typeref:typename:int
count	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    int count(flecs::entity_t rel, flecs::entity_t obj) const {$/;"	f	struct:flecs::world	typeref:typename:int
count	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    int count(flecs::id_t component_id) const {$/;"	f	struct:flecs::world	typeref:typename:int
count	lib/flecs/include/flecs/addons/meta.h	/^    int32_t count;        $/;"	m	struct:ecs_meta_type_op_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/addons/meta.h	/^    int32_t count;$/;"	m	struct:EcsArray	typeref:typename:int32_t
count	lib/flecs/include/flecs/addons/meta.h	/^    int32_t count;$/;"	m	struct:EcsMember	typeref:typename:int32_t
count	lib/flecs/include/flecs/addons/meta.h	/^    int32_t count;$/;"	m	struct:ecs_array_desc_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/addons/meta.h	/^    int32_t count;$/;"	m	struct:ecs_member_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t count;                \/* Number of entities to iterate *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t count;          \/* The number of entities in the array *\/$/;"	m	struct:ecs_ids_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t count;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t count;$/;"	m	struct:ecs_worker_iter_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/bitset.h	/^    int32_t count;$/;"	m	struct:ecs_bitset_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/map.h	/^    int32_t count;          \/* Number of elements in bucket *\/$/;"	m	struct:ecs_bucket_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/map.h	/^    int32_t count;$/;"	m	struct:ecs_map_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/sparse.h	/^    int32_t count;              \/* Number of alive entries *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/strbuf.h	/^    int32_t count;$/;"	m	struct:ecs_strbuf_list_elem	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/switch_list.h	/^    int32_t count;          \/* Number of elements for value *\/$/;"	m	struct:flecs_switch_header_t	typeref:typename:int32_t
count	lib/flecs/include/flecs/private/vector.h	/^    int32_t count() {$/;"	f	class:flecs::vector	typeref:typename:int32_t
count	lib/flecs/src/addons/meta_c.c	/^    int64_t count;$/;"	m	struct:meta_member_t	typeref:typename:int64_t	file:
count	lib/flecs/src/addons/meta_c.c	/^    int64_t count;$/;"	m	struct:meta_params_t	typeref:typename:int64_t	file:
count	lib/flecs/src/addons/pipeline/pipeline.h	/^    int32_t count;              \/* Number of systems to run before merge *\/$/;"	m	struct:ecs_pipeline_op_t	typeref:typename:int32_t
count	lib/flecs/src/addons/rules.c	/^    int32_t count;$/;"	m	struct:ecs_table_slice_t	typeref:typename:int32_t	file:
count	lib/flecs/src/datastructures/vector.c	/^    int32_t count;$/;"	m	struct:ecs_vector_t	typeref:typename:int32_t	file:
count	lib/flecs/src/private_types.h	/^    int32_t count;                   \/* Number of entities to iterate in table *\/$/;"	m	struct:ecs_query_table_node_t	typeref:typename:int32_t
count	lib/flecs/src/private_types.h	/^    int32_t count;$/;"	m	struct:ecs_defer_op_n_t	typeref:typename:int32_t
count	lib/flecs/src/private_types.h	/^    int32_t count;$/;"	m	struct:ecs_query_table_list_t	typeref:typename:int32_t
count	lib/flecs/src/private_types.h	/^    int32_t count;$/;"	m	struct:ecs_table_cache_list_t	typeref:typename:int32_t
count	lib/flecs/src/private_types.h	/^    int32_t count;$/;"	m	struct:ecs_table_record_t	typeref:typename:int32_t
count	lib/flecs/src/query.c	/^    int32_t count;$/;"	m	struct:__anon8da83e450208	typeref:typename:int32_t	file:
count	lib/flecs/src/query.c	/^    int32_t count;$/;"	m	struct:pair_offset_t	typeref:typename:int32_t	file:
count	lib/flecs/src/query.c	/^    int32_t count;$/;"	m	struct:sort_helper_t	typeref:typename:int32_t	file:
count	lib/flecs/src/table_graph.c	/^    int32_t count;$/;"	m	struct:__anon5c65d2280108	typeref:typename:int32_t	file:
count	lib/flecs/test/api/include/api.h	/^    int32_t count;$/;"	m	struct:Probe	typeref:typename:int32_t
count	lib/flecs/test/api/src/ComponentLifecycle.c	/^    int32_t count;$/;"	m	struct:copy_ctx	typeref:typename:int32_t	file:
count	lib/flecs/test/api/src/ComponentLifecycle.c	/^    int32_t count;$/;"	m	struct:xtor_ctx	typeref:typename:int32_t	file:
count	lib/flecs/test/api/src/MultiThread.c	/^    int count;$/;"	m	struct:Param	typeref:typename:int	file:
count	lib/flecs/test/api/src/Run.c	/^    int count;$/;"	m	struct:Param	typeref:typename:int	file:
count	lib/flecs/test/api/src/Trigger.c	/^    int32_t count;$/;"	m	struct:__anonf2e46c1b0108	typeref:typename:int32_t	file:
count	lib/uthash/include/uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket	typeref:typename:unsigned
count	lib/uthash/src/uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket	typeref:typename:unsigned
count_events	lib/flecs/flecs.c	/^int32_t count_events($/;"	f	typeref:typename:int32_t	file:
count_events	lib/flecs/src/trigger.c	/^int32_t count_events($/;"	f	typeref:typename:int32_t	file:
count_pairs	lib/flecs/flecs.c	/^int32_t count_pairs($/;"	f	typeref:typename:int32_t	file:
count_pairs	lib/flecs/src/query.c	/^int32_t count_pairs($/;"	f	typeref:typename:int32_t	file:
cplusplus	lib/uthash/tests/Makefile	/^cplusplus:$/;"	t
cpp_func_max	lib/flecs/flecs.c	/^const char* cpp_func_max($/;"	f	typeref:typename:const char *	file:
cpp_func_max	lib/flecs/src/addons/flecs_cpp.c	/^const char* cpp_func_max($/;"	f	typeref:typename:const char *	file:
cpp_func_rchr	lib/flecs/flecs.c	/^const char* cpp_func_rchr($/;"	f	typeref:typename:const char *	file:
cpp_func_rchr	lib/flecs/src/addons/flecs_cpp.c	/^const char* cpp_func_rchr($/;"	f	typeref:typename:const char *	file:
cpp_type	lib/flecs/flecs.h	/^struct cpp_type<T, if_not_t< is_pair<T>::value >> $/;"	s	namespace:flecs::_
cpp_type	lib/flecs/flecs.h	/^struct cpp_type<T, if_t< is_pair<T>::value >>$/;"	s	namespace:flecs::_
cpp_type	lib/flecs/include/flecs/addons/cpp/component.hpp	/^struct cpp_type<T, if_not_t< is_pair<T>::value >> $/;"	s	namespace:flecs::_
cpp_type	lib/flecs/include/flecs/addons/cpp/component.hpp	/^struct cpp_type<T, if_t< is_pair<T>::value >>$/;"	s	namespace:flecs::_
cpp_type_impl	lib/flecs/flecs.h	/^struct cpp_type_impl {$/;"	s	namespace:flecs::_
cpp_type_impl	lib/flecs/include/flecs/addons/cpp/component.hpp	/^struct cpp_type_impl {$/;"	s	namespace:flecs::_
crawl_variable	lib/flecs/flecs.c	/^int32_t crawl_variable($/;"	f	typeref:typename:int32_t	file:
crawl_variable	lib/flecs/src/addons/rules.c	/^int32_t crawl_variable($/;"	f	typeref:typename:int32_t	file:
create_anonymous_variable	lib/flecs/flecs.c	/^ecs_rule_var_t* create_anonymous_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
create_anonymous_variable	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* create_anonymous_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
create_delete_entity_random_components_staged	lib/flecs/test/api/src/Stresstests.c	/^void create_delete_entity_random_components_staged($/;"	f	typeref:typename:void	file:
create_entity	lib/flecs/test/api/src/GlobalComponentIds.c	/^ecs_entity_t create_entity(ecs_world_t *world) {$/;"	f	typeref:typename:ecs_entity_t	file:
create_entity_w_entity	lib/flecs/test/api/src/GlobalComponentIds.c	/^ecs_entity_t create_entity_w_entity(ecs_world_t *world) {$/;"	f	typeref:typename:ecs_entity_t	file:
create_group	lib/flecs/flecs.c	/^void create_group($/;"	f	typeref:typename:void	file:
create_group	lib/flecs/src/query.c	/^void create_group($/;"	f	typeref:typename:void	file:
create_id	lib/flecs/flecs.c	/^uint64_t create_id($/;"	f	typeref:typename:uint64_t	file:
create_id	lib/flecs/src/datastructures/sparse.c	/^uint64_t create_id($/;"	f	typeref:typename:uint64_t	file:
create_ids	lib/flecs/test/api/src/Filter.c	/^void create_ids(ecs_world_t *world, int count) {$/;"	f	typeref:typename:void	file:
create_operation	lib/flecs/flecs.c	/^ecs_rule_op_t* create_operation($/;"	f	typeref:typename:ecs_rule_op_t *	file:
create_operation	lib/flecs/src/addons/rules.c	/^ecs_rule_op_t* create_operation($/;"	f	typeref:typename:ecs_rule_op_t *	file:
create_table	lib/flecs/flecs.c	/^ecs_table_t *create_table($/;"	f	typeref:typename:ecs_table_t *	file:
create_table	lib/flecs/src/table_graph.c	/^ecs_table_t *create_table($/;"	f	typeref:typename:ecs_table_t *	file:
create_tag_entity	lib/flecs/test/api/src/GlobalComponentIds.c	/^ecs_entity_t create_tag_entity(ecs_world_t *world) {$/;"	f	typeref:typename:ecs_entity_t	file:
create_tag_entity_w_entity	lib/flecs/test/api/src/GlobalComponentIds.c	/^ecs_entity_t create_tag_entity_w_entity(ecs_world_t *world) {$/;"	f	typeref:typename:ecs_entity_t	file:
create_term	lib/flecs/flecs.c	/^int create_term($/;"	f	typeref:typename:int	file:
create_term	lib/flecs/src/addons/plecs.c	/^int create_term($/;"	f	typeref:typename:int	file:
create_trigger_invoked	lib/flecs/test/api/src/Trigger.c	/^static int create_trigger_invoked = 0;$/;"	v	typeref:typename:int	file:
create_variable	lib/flecs/flecs.c	/^ecs_rule_var_t* create_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
create_variable	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* create_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
create_variable_cross_references	lib/flecs/flecs.c	/^void create_variable_cross_references($/;"	f	typeref:typename:void	file:
create_variable_cross_references	lib/flecs/src/addons/rules.c	/^void create_variable_cross_references($/;"	f	typeref:typename:void	file:
create_variable_name_array	lib/flecs/flecs.c	/^void create_variable_name_array($/;"	f	typeref:typename:void	file:
create_variable_name_array	lib/flecs/src/addons/rules.c	/^void create_variable_name_array($/;"	f	typeref:typename:void	file:
ctor	lib/flecs/flecs.h	/^    ecs_xtor_t ctor;            \/* ctor *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_xtor_t
ctor	lib/flecs/flecs.h	/^ecs_xtor_t ctor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_xtor_t
ctor	lib/flecs/include/flecs.h	/^    ecs_xtor_t ctor;            \/* ctor *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_xtor_t
ctor	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^ecs_xtor_t ctor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_xtor_t
ctor	lib/flecs/test/api/src/ComponentLifecycle.c	/^    xtor_ctx ctor;$/;"	m	struct:cl_ctx	typeref:typename:xtor_ctx	file:
ctor_component	lib/flecs/flecs.c	/^void ctor_component($/;"	f	typeref:typename:void	file:
ctor_component	lib/flecs/src/table.c	/^void ctor_component($/;"	f	typeref:typename:void	file:
ctor_f	lib/uthash/include/utarray.h	/^typedef void (ctor_f)(void *dst, const void *src);$/;"	t	typeref:typename:void ()(void * dst,const void * src)
ctor_f	lib/uthash/src/utarray.h	/^typedef void (ctor_f)(void *dst, const void *src);$/;"	t	typeref:typename:void ()(void * dst,const void * src)
ctor_impl	lib/flecs/flecs.h	/^void ctor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
ctor_impl	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^void ctor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
ctor_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int ctor_invoked;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
ctor_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int ctor_invoked;$/;"	m	class:Pod	typeref:typename:int
ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    static int ctor_invoked;$/;"	m	class:CtorDtorNonTrivial	typeref:typename:int	file:
ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    static int ctor_invoked;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int	file:
ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CountNoDefaultCtor::ctor_invoked = 0;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CtorDtorNonTrivial::ctor_invoked;$/;"	m	class:CtorDtorNonTrivial	typeref:typename:int
ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CtorDtor_w_MoveAssign::ctor_invoked;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int
ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int Pod::ctor_invoked = 0;$/;"	m	class:Pod	typeref:typename:int
ctor_move_dtor	lib/flecs/flecs.h	/^    ecs_move_ctor_t ctor_move_dtor;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_move_ctor_t
ctor_move_dtor	lib/flecs/flecs.h	/^ecs_move_ctor_t ctor_move_dtor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_move_ctor_t
ctor_move_dtor	lib/flecs/include/flecs.h	/^    ecs_move_ctor_t ctor_move_dtor;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_move_ctor_t
ctor_move_dtor	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^ecs_move_ctor_t ctor_move_dtor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_move_ctor_t
ctor_move_dtor_impl	lib/flecs/flecs.h	/^void ctor_move_dtor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
ctor_move_dtor_impl	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^void ctor_move_dtor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
ctor_position	lib/flecs/test/api/src/ComponentLifecycle.c	/^static int ctor_position = 0;$/;"	v	typeref:typename:int	file:
ctor_to_zero	lib/flecs/test/api/src/Prefab.c	/^void ctor_to_zero($/;"	f	typeref:typename:void
ctor_world_entity_impl	lib/flecs/flecs.h	/^inline void ctor_world_entity_impl($/;"	f	namespace:flecs::_	typeref:typename:void
ctor_world_entity_impl	lib/flecs/include/flecs/addons/cpp/impl/lifecycle_traits.hpp	/^inline void ctor_world_entity_impl($/;"	f	namespace:flecs::_	typeref:typename:void
ctx	lib/flecs/flecs.c	/^    void *ctx;                      \/* Userdata for system *\/$/;"	m	struct:EcsSystem	typeref:typename:void *	file:
ctx	lib/flecs/flecs.c	/^    void *ctx;$/;"	m	struct:ecs_action_elem_t	typeref:typename:void *	file:
ctx	lib/flecs/flecs.c	/^    void *ctx;$/;"	m	struct:ecs_http_server_t	typeref:typename:void *	file:
ctx	lib/flecs/flecs.h	/^    Base& ctx(const E* ptr) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
ctx	lib/flecs/flecs.h	/^    Base& ctx(void *ptr) {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
ctx	lib/flecs/flecs.h	/^    Base& ctx(void *ptr) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
ctx	lib/flecs/flecs.h	/^    Base& ctx(void *ptr) {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
ctx	lib/flecs/flecs.h	/^    Class& ctx(const E& ptr) {$/;"	f	struct:flecs::event_builder_typed	typeref:typename:Class &
ctx	lib/flecs/flecs.h	/^    app_builder& ctx(void *value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
ctx	lib/flecs/flecs.h	/^    void *ctx;                        \/* Passed to callback (optional) *\/$/;"	m	struct:__anona642c00a0c08	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void *ctx;                    \/* System context *\/$/;"	m	struct:ecs_iter_t	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void *ctx;                  \/* Callback context *\/$/;"	m	struct:ecs_observer_t	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void *ctx;                  \/* Callback context *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void *ctx;                  \/* User defined context *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void *ctx;                \/* Reserved for custom run\/frame actions *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void *ctx;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void *ctx;$/;"	m	struct:ecs_system_desc_t	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void *ctx;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void ctx(void *ctx) {$/;"	f	struct:flecs::observer	typeref:typename:void
ctx	lib/flecs/flecs.h	/^    void ctx(void *ctx) {$/;"	f	struct:flecs::system	typeref:typename:void
ctx	lib/flecs/flecs.h	/^    void ctx(void *ctx) {$/;"	f	struct:flecs::trigger	typeref:typename:void
ctx	lib/flecs/flecs.h	/^    void* ctx() const {$/;"	f	struct:flecs::observer	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void* ctx() const {$/;"	f	struct:flecs::system	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void* ctx() const {$/;"	f	struct:flecs::trigger	typeref:typename:void *
ctx	lib/flecs/flecs.h	/^    void* ctx() {$/;"	f	struct:flecs::iter	typeref:typename:void *
ctx	lib/flecs/include/flecs.h	/^    void *ctx;                  \/* Callback context *\/$/;"	m	struct:ecs_observer_t	typeref:typename:void *
ctx	lib/flecs/include/flecs.h	/^    void *ctx;                  \/* Callback context *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:void *
ctx	lib/flecs/include/flecs.h	/^    void *ctx;                  \/* User defined context *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:void *
ctx	lib/flecs/include/flecs.h	/^    void *ctx;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:void *
ctx	lib/flecs/include/flecs.h	/^    void *ctx;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:void *
ctx	lib/flecs/include/flecs/addons/app.h	/^    void *ctx;                \/* Reserved for custom run\/frame actions *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:void *
ctx	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    void* ctx() {$/;"	f	struct:flecs::iter	typeref:typename:void *
ctx	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    app_builder& ctx(void *value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
ctx	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    Base& ctx(const E* ptr) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
ctx	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    Class& ctx(const E& ptr) {$/;"	f	struct:flecs::event_builder_typed	typeref:typename:Class &
ctx	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    Base& ctx(void *ptr) {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
ctx	lib/flecs/include/flecs/addons/cpp/mixins/observer/impl.hpp	/^    void ctx(void *ctx) {$/;"	f	struct:flecs::observer	typeref:typename:void
ctx	lib/flecs/include/flecs/addons/cpp/mixins/observer/impl.hpp	/^    void* ctx() const {$/;"	f	struct:flecs::observer	typeref:typename:void *
ctx	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& ctx(void *ptr) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
ctx	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    void ctx(void *ctx) {$/;"	f	struct:flecs::system	typeref:typename:void
ctx	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    void* ctx() const {$/;"	f	struct:flecs::system	typeref:typename:void *
ctx	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    Base& ctx(void *ptr) {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
ctx	lib/flecs/include/flecs/addons/cpp/mixins/trigger/impl.hpp	/^    void ctx(void *ctx) {$/;"	f	struct:flecs::trigger	typeref:typename:void
ctx	lib/flecs/include/flecs/addons/cpp/mixins/trigger/impl.hpp	/^    void* ctx() const {$/;"	f	struct:flecs::trigger	typeref:typename:void *
ctx	lib/flecs/include/flecs/addons/http.h	/^    void *ctx;                        \/* Passed to callback (optional) *\/$/;"	m	struct:__anon12cf63340608	typeref:typename:void *
ctx	lib/flecs/include/flecs/addons/system.h	/^    void *ctx;$/;"	m	struct:ecs_system_desc_t	typeref:typename:void *
ctx	lib/flecs/include/flecs/private/api_types.h	/^    void *ctx;                    \/* System context *\/$/;"	m	struct:ecs_iter_t	typeref:typename:void *
ctx	lib/flecs/src/addons/http.c	/^    void *ctx;$/;"	m	struct:ecs_http_server_t	typeref:typename:void *	file:
ctx	lib/flecs/src/addons/system/system.h	/^    void *ctx;                      \/* Userdata for system *\/$/;"	m	struct:EcsSystem	typeref:typename:void *
ctx	lib/flecs/src/private_types.h	/^    void *ctx;$/;"	m	struct:ecs_action_elem_t	typeref:typename:void *
ctx_free	lib/flecs/flecs.c	/^    ecs_ctx_free_t ctx_free;$/;"	m	struct:EcsSystem	typeref:typename:ecs_ctx_free_t	file:
ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t ctx_free;    \/* Callback to free ctx *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t ctx_free;    \/* Callback to free ctx *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t ctx_free;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t ctx_free;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t ctx_free;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t ctx_free;    \/* Callback to free ctx *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t ctx_free;    \/* Callback to free ctx *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t ctx_free;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t ctx_free;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/include/flecs/addons/system.h	/^    ecs_ctx_free_t ctx_free;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/src/addons/system/system.h	/^    ecs_ctx_free_t ctx_free;$/;"	m	struct:EcsSystem	typeref:typename:ecs_ctx_free_t
ctx_free	lib/flecs/test/api/src/Observer.c	/^void ctx_free(void *ctx) {$/;"	f	typeref:typename:void	file:
ctx_free	lib/flecs/test/api/src/SystemMisc.c	/^void ctx_free(void *ctx) {$/;"	f	typeref:typename:void	file:
ctx_free	lib/flecs/test/api/src/Trigger.c	/^void ctx_free(void *ctx) {$/;"	f	typeref:typename:void	file:
ctx_value	lib/flecs/test/api/src/Observer.c	/^static int ctx_value;$/;"	v	typeref:typename:int	file:
ctx_value	lib/flecs/test/api/src/Query.c	/^static int ctx_value;$/;"	v	typeref:typename:int	file:
ctx_value	lib/flecs/test/api/src/SystemMisc.c	/^static int ctx_value;$/;"	v	typeref:typename:int	file:
ctx_value	lib/flecs/test/api/src/Trigger.c	/^static int ctx_value;$/;"	v	typeref:typename:int	file:
ctx_value_free	lib/flecs/test/api/src/Query.c	/^void ctx_value_free(void *ctx) {$/;"	f	typeref:typename:void	file:
ctx_value_free_invoked	lib/flecs/test/api/src/Query.c	/^static int ctx_value_free_invoked = 0;$/;"	v	typeref:typename:int	file:
cur	lib/flecs/flecs.h	/^    ecs_id_record_t *cur;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_id_record_t *
cur	lib/flecs/flecs.h	/^    struct ecs_table_cache_hdr_t *cur, *next;$/;"	m	struct:ecs_table_cache_iter_t	typeref:struct:ecs_table_cache_hdr_t *
cur	lib/flecs/include/flecs/private/api_types.h	/^    ecs_id_record_t *cur;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_id_record_t *
cur	lib/flecs/include/flecs/private/api_types.h	/^    struct ecs_table_cache_hdr_t *cur, *next;$/;"	m	struct:ecs_table_cache_iter_t	typeref:struct:ecs_table_cache_hdr_t *
cur_match	lib/flecs/flecs.h	/^    int32_t cur_match;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
cur_match	lib/flecs/include/flecs/private/api_types.h	/^    int32_t cur_match;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
current	lib/flecs/flecs.h	/^    ecs_strbuf_element *current;$/;"	m	struct:ecs_strbuf_t	typeref:typename:ecs_strbuf_element *
current	lib/flecs/include/flecs/private/strbuf.h	/^    ecs_strbuf_element *current;$/;"	m	struct:ecs_strbuf_t	typeref:typename:ecs_strbuf_element *
current_map	include/gamestate.h	/^    struct Map *current_map;$/;"	m	struct:GameState	typeref:struct:Map *
cursor	lib/flecs/flecs.h	/^    cursor(flecs::world_t *world, flecs::entity_t type_id, void *ptr) {$/;"	f	struct:flecs::meta::cursor
cursor	lib/flecs/flecs.h	/^flecs::meta::cursor cursor(flecs::entity_t tid, void *ptr) {$/;"	f	struct:flecs::world	typeref:typename:flecs::meta::cursor
cursor	lib/flecs/flecs.h	/^flecs::meta::cursor cursor(void *ptr) {$/;"	f	struct:flecs::world	typeref:typename:flecs::meta::cursor
cursor	lib/flecs/flecs.h	/^struct cursor {$/;"	s	namespace:flecs::meta
cursor	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    cursor(flecs::world_t *world, flecs::entity_t type_id, void *ptr) {$/;"	f	struct:flecs::meta::cursor
cursor	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^struct cursor {$/;"	s	namespace:flecs::meta
cursor	lib/flecs/include/flecs/addons/cpp/mixins/meta/world.inl	/^flecs::meta::cursor cursor(flecs::entity_t tid, void *ptr) {$/;"	f	typeref:typename:flecs::meta::cursor
cursor	lib/flecs/include/flecs/addons/cpp/mixins/meta/world.inl	/^flecs::meta::cursor cursor(void *ptr) {$/;"	f	typeref:typename:flecs::meta::cursor
custom_unit	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t custom_unit;$/;"	m	struct:Meta_units::Test	typeref:typename:int32_t	file:
d	lib/flecs/test/cpp_api/src/Meta.cpp	/^        flecs::entity_t d;$/;"	m	struct:Meta_struct_w_portable_type::Test	typeref:typename:flecs::entity_t	file:
d	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t d[4];$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_bool_t[4]	file:
d	lib/uthash/include/utarray.h	/^    char *d;     \/* n slots of size icd->sz*\/$/;"	m	struct:__anonf30a79380208	typeref:typename:char *
d	lib/uthash/include/utringbuffer.h	/^    char *d;          \/* n slots of size icd->sz *\/$/;"	m	struct:__anon8907aae30108	typeref:typename:char *
d	lib/uthash/include/utstring.h	/^    char *d;  \/* pointer to allocated buffer *\/$/;"	m	struct:__anon8b7ab8d00108	typeref:typename:char *
d	lib/uthash/src/utarray.h	/^    char *d;     \/* n slots of size icd->sz*\/$/;"	m	struct:__anon57c8b0dc0208	typeref:typename:char *
d	lib/uthash/src/utringbuffer.h	/^    char *d;          \/* n slots of size icd->sz *\/$/;"	m	struct:__anon5ece49070108	typeref:typename:char *
d	lib/uthash/src/utstring.h	/^    char *d;  \/* pointer to allocated buffer *\/$/;"	m	struct:__anon87ffe4f40108	typeref:typename:char *
data	lib/flecs/flecs.c	/^    ecs_bitset_t data;           \/* Column data *\/$/;"	m	struct:ecs_bs_column_t	typeref:typename:ecs_bitset_t	file:
data	lib/flecs/flecs.c	/^    ecs_data_t *data;           \/* Stage-specific table columns *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:ecs_data_t *	file:
data	lib/flecs/flecs.c	/^    ecs_data_t *data;$/;"	m	struct:ecs_table_leaf_t	typeref:typename:ecs_data_t *	file:
data	lib/flecs/flecs.c	/^    ecs_switch_t *data;          \/* Column data *\/$/;"	m	struct:ecs_sw_column_t	typeref:typename:ecs_switch_t *	file:
data	lib/flecs/flecs.c	/^    ecs_vector_t *data;          \/* Column data *\/$/;"	m	struct:ecs_column_t	typeref:typename:ecs_vector_t *	file:
data	lib/flecs/flecs.c	/^    uint64_t *data;$/;"	m	struct:ecs_bitset_t	typeref:typename:uint64_t *	file:
data	lib/flecs/flecs.c	/^    void *data;                 \/* Store data in sparse array to reduce  $/;"	m	struct:chunk_t	typeref:typename:void *	file:
data	lib/flecs/flecs.h	/^    static enum_data_impl data;$/;"	m	struct:flecs::_::enum_type	typeref:typename:enum_data_impl
data	lib/flecs/flecs.h	/^    void **data;       \/* Array with component data to insert. Each element in $/;"	m	struct:ecs_bulk_desc_t	typeref:typename:void **
data	lib/flecs/flecs.h	/^enum_data_impl enum_type<E>::data;$/;"	m	class:flecs::_::enum_type<E>	typeref:typename:enum_data_impl
data	lib/flecs/flecs.h	/^struct data {$/;"	s	struct:flecs::units
data	lib/flecs/include/flecs.h	/^    void **data;       \/* Array with component data to insert. Each element in $/;"	m	struct:ecs_bulk_desc_t	typeref:typename:void **
data	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct data {$/;"	s	struct:flecs::units
data	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static enum_data_impl data;$/;"	m	struct:flecs::_::enum_type	typeref:typename:enum_data_impl
data	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^enum_data_impl enum_type<E>::data;$/;"	m	class:flecs::_::enum_type<E>	typeref:typename:enum_data_impl
data	lib/flecs/include/flecs/private/bitset.h	/^    uint64_t *data;$/;"	m	struct:ecs_bitset_t	typeref:typename:uint64_t *
data	lib/flecs/src/addons/snapshot.c	/^    ecs_data_t *data;$/;"	m	struct:ecs_table_leaf_t	typeref:typename:ecs_data_t *	file:
data	lib/flecs/src/datastructures/sparse.c	/^    void *data;                 \/* Store data in sparse array to reduce  $/;"	m	struct:chunk_t	typeref:typename:void *	file:
data	lib/flecs/src/private_types.h	/^    ecs_bitset_t data;           \/* Column data *\/$/;"	m	struct:ecs_bs_column_t	typeref:typename:ecs_bitset_t
data	lib/flecs/src/private_types.h	/^    ecs_data_t *data;           \/* Stage-specific table columns *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:ecs_data_t *
data	lib/flecs/src/private_types.h	/^    ecs_switch_t *data;          \/* Column data *\/$/;"	m	struct:ecs_sw_column_t	typeref:typename:ecs_switch_t *
data	lib/flecs/src/private_types.h	/^    ecs_vector_t *data;          \/* Column data *\/$/;"	m	struct:ecs_column_t	typeref:typename:ecs_vector_t *
data	lib/libflint/include/lfbinarytree.h	/^    void *data;$/;"	m	struct:BinTreeNode	typeref:typename:void *
data	lib/libflint/include/lflinkedlist.h	/^    void* data;$/;"	m	struct:ListNode	typeref:typename:void *
data	lib/uthash/tests/lru_cache/cache.c	/^	void *data; \/**<Payload *\/$/;"	m	struct:foo_cache_entry	typeref:typename:void *	file:
data	lib/uthash/tests/test20.c	/^    int data;$/;"	m	struct:my_struct	typeref:typename:int	file:
data	lib/uthash/tests/test23.c	/^    int data;$/;"	m	struct:__anonbb9273df0108	typeref:typename:int	file:
datarate	lib/flecs/flecs.h	/^struct datarate {$/;"	s	struct:flecs::units
datarate	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct datarate {$/;"	s	struct:flecs::units
dbg	lib/flecs/flecs.h	/^inline void dbg(const char *fmt, ...) {$/;"	f	namespace:flecs::log	typeref:typename:void
dbg	lib/flecs/include/flecs/addons/cpp/log.hpp	/^inline void dbg(const char *fmt, ...) {$/;"	f	namespace:flecs::log	typeref:typename:void
dc	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	n	uri:http://purl.org/dc/elements/1.1/
dc	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	n	uri:http://purl.org/dc/elements/1.1/
deactivate_systems	lib/flecs/flecs.h	/^inline void world::deactivate_systems() const {$/;"	f	class:flecs::world	typeref:typename:void
deactivate_systems	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline void world::deactivate_systems() const {$/;"	f	class:flecs::world	typeref:typename:void
debug	lib/uthash/tests/Makefile	/^debug:$/;"	t
debug	lib/uthash/tests/threads/Makefile	/^debug:$/;"	t
decay_t	lib/flecs/flecs.h	/^using decay_t = typename std::decay<T>::type;$/;"	t	namespace:flecs	typeref:typename:std::decay<T>::type
decay_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using decay_t = typename std::decay<T>::type;$/;"	t	namespace:flecs	typeref:typename:std::decay<T>::type
decode_url_str	lib/flecs/flecs.c	/^void decode_url_str($/;"	f	typeref:typename:void	file:
decode_url_str	lib/flecs/src/addons/http.c	/^void decode_url_str($/;"	f	typeref:typename:void	file:
default_copy_ctor	lib/flecs/flecs.c	/^void default_copy_ctor($/;"	f	typeref:typename:void	file:
default_copy_ctor	lib/flecs/src/world.c	/^void default_copy_ctor($/;"	f	typeref:typename:void	file:
default_ctor_w_move_w_dtor	lib/flecs/flecs.c	/^void default_ctor_w_move_w_dtor($/;"	f	typeref:typename:void	file:
default_ctor_w_move_w_dtor	lib/flecs/src/world.c	/^void default_ctor_w_move_w_dtor($/;"	f	typeref:typename:void	file:
default_dtor	lib/flecs/flecs.c	/^void default_dtor($/;"	f	typeref:typename:void	file:
default_dtor	lib/flecs/src/world.c	/^void default_dtor($/;"	f	typeref:typename:void	file:
default_frame_action	lib/flecs/flecs.c	/^int default_frame_action($/;"	f	typeref:typename:int	file:
default_frame_action	lib/flecs/src/addons/app.c	/^int default_frame_action($/;"	f	typeref:typename:int	file:
default_move	lib/flecs/flecs.c	/^void default_move($/;"	f	typeref:typename:void	file:
default_move	lib/flecs/src/world.c	/^void default_move($/;"	f	typeref:typename:void	file:
default_move_ctor	lib/flecs/flecs.c	/^void default_move_ctor($/;"	f	typeref:typename:void	file:
default_move_ctor	lib/flecs/src/world.c	/^void default_move_ctor($/;"	f	typeref:typename:void	file:
default_move_ctor_w_dtor	lib/flecs/flecs.c	/^void default_move_ctor_w_dtor($/;"	f	typeref:typename:void	file:
default_move_ctor_w_dtor	lib/flecs/src/world.c	/^void default_move_ctor_w_dtor($/;"	f	typeref:typename:void	file:
default_move_w_dtor	lib/flecs/flecs.c	/^void default_move_w_dtor($/;"	f	typeref:typename:void	file:
default_move_w_dtor	lib/flecs/src/world.c	/^void default_move_w_dtor($/;"	f	typeref:typename:void	file:
default_observer_next_callback	lib/flecs/flecs.c	/^bool default_observer_next_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:bool	file:
default_observer_next_callback	lib/flecs/src/observer.c	/^bool default_observer_next_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:bool	file:
default_observer_run_callback	lib/flecs/flecs.c	/^void default_observer_run_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
default_observer_run_callback	lib/flecs/src/observer.c	/^void default_observer_run_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
default_run_action	lib/flecs/flecs.c	/^int default_run_action($/;"	f	typeref:typename:int	file:
default_run_action	lib/flecs/src/addons/app.c	/^int default_run_action($/;"	f	typeref:typename:int	file:
default_scope_type	lib/flecs/flecs.c	/^    ecs_entity_t default_scope_type[STACK_MAX_SIZE];$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_entity_t[]	file:
default_scope_type	lib/flecs/src/addons/plecs.c	/^    ecs_entity_t default_scope_type[STACK_MAX_SIZE];$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_entity_t[]	file:
default_target	cmake-build-debug/Makefile	/^default_target: all$/;"	t
default_target	cmake-build-debug/lib/flecs/Makefile	/^default_target: all$/;"	t
default_target	cmake-build-debug/lib/libflint/Makefile	/^default_target: all$/;"	t
default_target	cmake-build-release/Makefile	/^default_target: all$/;"	t
default_target	cmake-build-release/lib/flecs/Makefile	/^default_target: all$/;"	t
default_target	cmake-build-release/lib/libflint/Makefile	/^default_target: all$/;"	t
defer	lib/flecs/flecs.c	/^    int32_t defer;$/;"	m	struct:ecs_stage_t	typeref:typename:int32_t	file:
defer	lib/flecs/flecs.h	/^    void defer(const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
defer	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void defer(const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
defer	lib/flecs/src/private_types.h	/^    int32_t defer;$/;"	m	struct:ecs_stage_t	typeref:typename:int32_t
defer_add_remove	lib/flecs/flecs.c	/^bool defer_add_remove($/;"	f	typeref:typename:bool	file:
defer_add_remove	lib/flecs/src/stage.c	/^bool defer_add_remove($/;"	f	typeref:typename:bool	file:
defer_begin	lib/flecs/flecs.h	/^    bool defer_begin() {$/;"	f	struct:flecs::world	typeref:typename:bool
defer_begin	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool defer_begin() {$/;"	f	struct:flecs::world	typeref:typename:bool
defer_count	lib/flecs/flecs.c	/^    int32_t defer_count;$/;"	m	struct:__anona642c0050208	typeref:typename:int32_t	file:
defer_count	lib/flecs/src/private_api.h	/^    int32_t defer_count;$/;"	m	struct:__anonf633b8e80108	typeref:typename:int32_t
defer_end	lib/flecs/flecs.h	/^    bool defer_end() {$/;"	f	struct:flecs::world	typeref:typename:bool
defer_end	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool defer_end() {$/;"	f	struct:flecs::world	typeref:typename:bool
defer_from_expr	lib/flecs/flecs.c	/^void defer_from_expr($/;"	f	typeref:typename:void	file:
defer_from_expr	lib/flecs/src/entity.c	/^void defer_from_expr($/;"	f	typeref:typename:void	file:
defer_queue	lib/flecs/flecs.c	/^    ecs_vector_t *defer_queue;$/;"	m	struct:__anona642c0050208	typeref:typename:ecs_vector_t *	file:
defer_queue	lib/flecs/flecs.c	/^    ecs_vector_t *defer_queue;$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_vector_t *	file:
defer_queue	lib/flecs/src/private_api.h	/^    ecs_vector_t *defer_queue;$/;"	m	struct:__anonf633b8e80108	typeref:typename:ecs_vector_t *
defer_queue	lib/flecs/src/private_types.h	/^    ecs_vector_t *defer_queue;$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_vector_t *
deferred_add_remove	lib/flecs/flecs.c	/^void deferred_add_remove($/;"	f	typeref:typename:void	file:
deferred_add_remove	lib/flecs/src/entity.c	/^void deferred_add_remove($/;"	f	typeref:typename:void	file:
defs1309	lib/uthash/doc/banner.svg	/^     id="defs1309">$/;"	i
defs3	lib/uthash/doc/uthash-mini.svg	/^     id="defs3">$/;"	i
del_lines	lib/libflint/src/lfinput.c	/^void del_lines(char **lines) {$/;"	f	typeref:typename:void
del_split	lib/libflint/src/lfinput.c	/^void del_split(char **sp) {$/;"	f	typeref:typename:void
delete_all	lib/uthash/tests/example.c	/^void delete_all()$/;"	f	typeref:typename:void
delete_count	lib/flecs/flecs.c	/^    int32_t delete_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
delete_count	lib/flecs/flecs.h	/^    ecs_counter_t delete_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
delete_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t delete_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
delete_count	lib/flecs/src/private_types.h	/^    int32_t delete_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
delete_entity	lib/flecs/flecs.c	/^void delete_entity($/;"	f	typeref:typename:void	file:
delete_entity	lib/flecs/src/entity.c	/^void delete_entity($/;"	f	typeref:typename:void	file:
delete_objects	lib/flecs/flecs.c	/^void delete_objects($/;"	f	typeref:typename:void	file:
delete_objects	lib/flecs/src/entity.c	/^void delete_objects($/;"	f	typeref:typename:void	file:
delete_on_remove	lib/flecs/test/api/src/OnDelete.c	/^void delete_on_remove(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
delete_self_on_remove	lib/flecs/test/api/src/OnDelete.c	/^void delete_self_on_remove(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
delete_user	lib/uthash/tests/example.c	/^void delete_user(struct my_struct *user)$/;"	f	typeref:typename:void
delete_with	lib/flecs/flecs.h	/^    void delete_with() const {$/;"	f	struct:flecs::world	typeref:typename:void
delete_with	lib/flecs/flecs.h	/^    void delete_with(entity_t rel, entity_t obj) const {$/;"	f	struct:flecs::world	typeref:typename:void
delete_with	lib/flecs/flecs.h	/^    void delete_with(id_t the_id) const {$/;"	f	struct:flecs::world	typeref:typename:void
delete_with	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void delete_with() const {$/;"	f	struct:flecs::world	typeref:typename:void
delete_with	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void delete_with(entity_t rel, entity_t obj) const {$/;"	f	struct:flecs::world	typeref:typename:void
delete_with	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void delete_with(id_t the_id) const {$/;"	f	struct:flecs::world	typeref:typename:void
delitem	lib/uthash/tests/test87.c	/^void delitem(hstruct_t **hTable, const char *name)$/;"	f	typeref:typename:void
delta_system_time	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_system_time() const {$/;"	f	struct:flecs::iter	typeref:typename:FLECS_FLOAT
delta_system_time	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_system_time;\/* Time elapsed since last system invocation *\/$/;"	m	struct:ecs_iter_t	typeref:typename:FLECS_FLOAT
delta_system_time	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    FLECS_FLOAT delta_system_time() const {$/;"	f	struct:flecs::iter	typeref:typename:FLECS_FLOAT
delta_system_time	lib/flecs/include/flecs/private/api_types.h	/^    FLECS_FLOAT delta_system_time;\/* Time elapsed since last system invocation *\/$/;"	m	struct:ecs_iter_t	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_time() const {$/;"	f	struct:flecs::entity_view	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_time() const {$/;"	f	struct:flecs::iter	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_time() const {$/;"	f	struct:flecs::world	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_time;           \/* Time passed to or computed by ecs_progress *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_time;       \/* Time elapsed since last frame *\/$/;"	m	struct:ecs_iter_t	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_time;   \/* Frame time increment (0 for measured values) *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/flecs.h	/^    app_builder& delta_time(FLECS_FLOAT value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
delta_time	lib/flecs/flecs.h	/^    ecs_gauge_t delta_time;                   \/* Delta_time. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
delta_time	lib/flecs/include/flecs.h	/^    FLECS_FLOAT delta_time;           \/* Time passed to or computed by ecs_progress *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/include/flecs/addons/app.h	/^    FLECS_FLOAT delta_time;   \/* Frame time increment (0 for measured values) *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    FLECS_FLOAT delta_time() const {$/;"	f	struct:flecs::entity_view	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    FLECS_FLOAT delta_time() const {$/;"	f	struct:flecs::iter	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    app_builder& delta_time(FLECS_FLOAT value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
delta_time	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    FLECS_FLOAT delta_time() const {$/;"	f	struct:flecs::world	typeref:typename:FLECS_FLOAT
delta_time	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t delta_time;                   \/* Delta_time. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
delta_time	lib/flecs/include/flecs/private/api_types.h	/^    FLECS_FLOAT delta_time;       \/* Time elapsed since last frame *\/$/;"	m	struct:ecs_iter_t	typeref:typename:FLECS_FLOAT
delta_time_raw	lib/flecs/flecs.h	/^    FLECS_FLOAT delta_time_raw;       \/* Raw delta time (no time scaling) *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
delta_time_raw	lib/flecs/include/flecs.h	/^    FLECS_FLOAT delta_time_raw;       \/* Raw delta time (no time scaling) *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
dense	lib/flecs/flecs.h	/^    ecs_vector_t *dense;        \/* Dense array with indices to sparse array. The$/;"	m	struct:ecs_sparse_t	typeref:typename:ecs_vector_t *
dense	lib/flecs/include/flecs/private/sparse.h	/^    ecs_vector_t *dense;        \/* Dense array with indices to sparse array. The$/;"	m	struct:ecs_sparse_t	typeref:typename:ecs_vector_t *
depend	cmake-build-debug/Makefile	/^depend:$/;"	t
depend	cmake-build-debug/lib/flecs/Makefile	/^depend:$/;"	t
depend	cmake-build-debug/lib/libflint/Makefile	/^depend:$/;"	t
depend	cmake-build-release/Makefile	/^depend:$/;"	t
depend	cmake-build-release/lib/flecs/Makefile	/^depend:$/;"	t
depend	cmake-build-release/lib/libflint/Makefile	/^depend:$/;"	t
depth	lib/flecs/flecs.c	/^    int32_t depth;  \/* Depth in dependency tree (used for operation ordering) *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:int32_t	file:
depth	lib/flecs/flecs.h	/^    int32_t depth;$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:int32_t
depth	lib/flecs/include/flecs/addons/meta.h	/^    int32_t depth;$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:int32_t
depth	lib/flecs/src/addons/rules.c	/^    int32_t depth;  \/* Depth in dependency tree (used for operation ordering) *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:int32_t	file:
dequeue_count	lib/flecs/flecs.c	/^    int32_t dequeue_count; \/* number of dequeues in last stats interval *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:int32_t	file:
dequeue_count	lib/flecs/src/addons/http.c	/^    int32_t dequeue_count; \/* number of dequeues in last stats interval *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:int32_t	file:
dequeue_requests	lib/flecs/flecs.c	/^int32_t dequeue_requests($/;"	f	typeref:typename:int32_t	file:
dequeue_requests	lib/flecs/src/addons/http.c	/^int32_t dequeue_requests($/;"	f	typeref:typename:int32_t	file:
dequeue_retries	lib/flecs/flecs.c	/^    int32_t dequeue_retries;    $/;"	m	struct:__anona642c0050b08	typeref:typename:int32_t	file:
dequeue_retries	lib/flecs/src/addons/http.c	/^    int32_t dequeue_retries;    $/;"	m	struct:__anonc2d932d70308	typeref:typename:int32_t	file:
dequeue_timeout	lib/flecs/flecs.c	/^    FLECS_FLOAT dequeue_timeout; \/* used to not lock request queue too often *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:FLECS_FLOAT	file:
dequeue_timeout	lib/flecs/flecs.c	/^    FLECS_FLOAT dequeue_timeout;$/;"	m	struct:__anona642c0050b08	typeref:typename:FLECS_FLOAT	file:
dequeue_timeout	lib/flecs/src/addons/http.c	/^    FLECS_FLOAT dequeue_timeout; \/* used to not lock request queue too often *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:FLECS_FLOAT	file:
dequeue_timeout	lib/flecs/src/addons/http.c	/^    FLECS_FLOAT dequeue_timeout;$/;"	m	struct:__anonc2d932d70308	typeref:typename:FLECS_FLOAT	file:
derelict	CMakeLists.txt	/^add_executable(derelict ${SRC})$/;"	t
derelict	CMakeLists.txt	/^project(derelict C)$/;"	p
derelict	cmake-build-debug/Makefile	/^derelict: cmake_check_build_system$/;"	t
derelict	cmake-build-release/Makefile	/^derelict: cmake_check_build_system$/;"	t
derelict/fast	cmake-build-debug/Makefile	/^derelict\/fast:$/;"	t
derelict/fast	cmake-build-release/Makefile	/^derelict\/fast:$/;"	t
desc	lib/flecs/flecs.c	/^    const char *desc;$/;"	m	struct:meta_parse_ctx_t	typeref:typename:const char *	file:
desc	lib/flecs/src/addons/meta_c.c	/^    const char *desc;$/;"	m	struct:meta_parse_ctx_t	typeref:typename:const char *	file:
descending_sort	lib/uthash/tests/test19.c	/^static int descending_sort(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
destroy	lib/libflint/include/lfbinarytree.h	/^    void (*destroy)(void *data);$/;"	m	struct:__anonb782dc9e0108	typeref:typename:void (*)(void * data)
destroy	lib/libflint/include/lflinkedlist.h	/^    void (*destroy)(void* data);$/;"	m	struct:__anoncabdecbc0108	typeref:typename:void (*)(void * data)
destroy_GameState	src/gamestate.c	/^void destroy_GameState(struct GameState* gs) {$/;"	f	typeref:typename:void
destroy_Map	src/mapping/map.c	/^void destroy_Map(struct Map *map) {$/;"	f	typeref:typename:void
destroy_screen_manager	src/screens/manager.c	/^void destroy_screen_manager() {$/;"	f	typeref:typename:void
destruct	lib/flecs/flecs.h	/^    void destruct() const {$/;"	f	struct:flecs::entity	typeref:typename:void
destruct	lib/flecs/flecs.h	/^    void destruct() {$/;"	f	class:flecs::vector	typeref:typename:void
destruct	lib/flecs/flecs.h	/^    void destruct() {$/;"	f	struct:flecs::query_base	typeref:typename:void
destruct	lib/flecs/flecs.h	/^    void destruct() {$/;"	f	struct:flecs::rule_base	typeref:typename:void
destruct	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    void destruct() const {$/;"	f	struct:flecs::entity	typeref:typename:void
destruct	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    void destruct() {$/;"	f	struct:flecs::query_base	typeref:typename:void
destruct	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    void destruct() {$/;"	f	struct:flecs::rule_base	typeref:typename:void
destruct	lib/flecs/include/flecs/private/vector.h	/^    void destruct() {$/;"	f	class:flecs::vector	typeref:typename:void
destruct_obj	lib/flecs/flecs.h	/^template<class Ty> inline void destruct_obj(Ty* _ptr) { _ptr->~Ty(); }$/;"	f	namespace:flecs::_	typeref:typename:void
destruct_obj	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^template<class Ty> inline void destruct_obj(Ty* _ptr) { _ptr->~Ty(); }$/;"	f	namespace:flecs::_	typeref:typename:void
device	lib/uthash/tests/hashscan.c	/^    char device[5];  \/* fd:01 or 00:00 *\/$/;"	m	struct:__anone6f392830208	typeref:typename:char[5]	file:
die	lib/uthash/tests/keystat.c	/^static void die()$/;"	f	typeref:typename:void	file:
diff	lib/flecs/flecs.c	/^    ecs_table_diff_t *diff;  \/* Index into diff vector, if non trivial edge *\/$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_table_diff_t *	file:
diff	lib/flecs/src/private_types.h	/^    ecs_table_diff_t *diff;  \/* Index into diff vector, if non trivial edge *\/$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_table_diff_t *
diff_append	lib/flecs/flecs.c	/^void diff_append($/;"	f	typeref:typename:void	file:
diff_append	lib/flecs/src/entity.c	/^void diff_append($/;"	f	typeref:typename:void	file:
diff_free	lib/flecs/flecs.c	/^void diff_free($/;"	f	typeref:typename:void	file:
diff_free	lib/flecs/src/entity.c	/^void diff_free($/;"	f	typeref:typename:void	file:
diff_insert_added	lib/flecs/flecs.c	/^void diff_insert_added($/;"	f	typeref:typename:void	file:
diff_insert_added	lib/flecs/src/table_graph.c	/^void diff_insert_added($/;"	f	typeref:typename:void	file:
diff_insert_added_isa	lib/flecs/flecs.c	/^void diff_insert_added_isa($/;"	f	typeref:typename:void	file:
diff_insert_added_isa	lib/flecs/src/table_graph.c	/^void diff_insert_added_isa($/;"	f	typeref:typename:void	file:
diff_insert_isa	lib/flecs/flecs.c	/^void diff_insert_isa($/;"	f	typeref:typename:void	file:
diff_insert_isa	lib/flecs/src/table_graph.c	/^void diff_insert_isa($/;"	f	typeref:typename:void	file:
diff_insert_removed	lib/flecs/flecs.c	/^void diff_insert_removed($/;"	f	typeref:typename:void	file:
diff_insert_removed	lib/flecs/src/table_graph.c	/^void diff_insert_removed($/;"	f	typeref:typename:void	file:
diff_insert_removed_isa	lib/flecs/flecs.c	/^void diff_insert_removed_isa($/;"	f	typeref:typename:void	file:
diff_insert_removed_isa	lib/flecs/src/table_graph.c	/^void diff_insert_removed_isa($/;"	f	typeref:typename:void	file:
dim	lib/flecs/flecs.h	/^    void dim(int32_t entity_count) const {$/;"	f	struct:flecs::world	typeref:typename:void
dim	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void dim(int32_t entity_count) const {$/;"	f	struct:flecs::world	typeref:typename:void
dimensions_t	include/BearLibTerminal.h	/^dimensions_t;$/;"	t	typeref:struct:dimensions_t_
dimensions_t_	include/BearLibTerminal.h	/^typedef struct dimensions_t_$/;"	s
dirty_state	lib/flecs/flecs.c	/^    int32_t *dirty_state;            \/* Keep track of changes in columns *\/$/;"	m	struct:ecs_table_t	typeref:typename:int32_t *	file:
dirty_state	lib/flecs/flecs.c	/^    int32_t *dirty_state;$/;"	m	struct:__anona642c0050d08	typeref:typename:int32_t *	file:
dirty_state	lib/flecs/src/private_types.h	/^    int32_t *dirty_state;            \/* Keep track of changes in columns *\/$/;"	m	struct:ecs_table_t	typeref:typename:int32_t *
dirty_state	lib/flecs/src/query.c	/^    int32_t *dirty_state;$/;"	m	struct:__anon8da83e450108	typeref:typename:int32_t *	file:
disable	lib/flecs/flecs.h	/^    Self& disable() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
disable	lib/flecs/flecs.h	/^    Self& disable(entity_t comp) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
disable	lib/flecs/flecs.h	/^    void disable() const {$/;"	f	struct:flecs::type_base	typeref:typename:void
disable	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& disable() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
disable	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& disable(entity_t comp) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
disable	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    void disable() const {$/;"	f	struct:flecs::type_base	typeref:typename:void
discard_count	lib/flecs/flecs.c	/^    int32_t discard_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
discard_count	lib/flecs/flecs.h	/^    ecs_counter_t discard_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
discard_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t discard_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
discard_count	lib/flecs/src/private_types.h	/^    int32_t discard_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
discard_op	lib/flecs/flecs.c	/^void discard_op($/;"	f	typeref:typename:void	file:
discard_op	lib/flecs/src/entity.c	/^void discard_op($/;"	f	typeref:typename:void	file:
disconnect_edge	lib/flecs/flecs.c	/^void disconnect_edge($/;"	f	typeref:typename:void	file:
disconnect_edge	lib/flecs/src/table_graph.c	/^void disconnect_edge($/;"	f	typeref:typename:void	file:
dlclose_	lib/flecs/flecs.h	/^    ecs_os_api_dlclose_t dlclose_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_dlclose_t
dlclose_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_dlclose_t dlclose_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_dlclose_t
dlopen_	lib/flecs/flecs.h	/^    ecs_os_api_dlopen_t dlopen_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_dlopen_t
dlopen_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_dlopen_t dlopen_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_dlopen_t
dlproc_	lib/flecs/flecs.h	/^    ecs_os_api_dlproc_t dlproc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_dlproc_t
dlproc_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_dlproc_t dlproc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_dlproc_t
do_auto_merge	lib/flecs/flecs.c	/^void do_auto_merge($/;"	f	typeref:typename:void	file:
do_auto_merge	lib/flecs/src/stage.c	/^void do_auto_merge($/;"	f	typeref:typename:void	file:
do_import	lib/flecs/flecs.h	/^ecs_entity_t do_import(world& world, const char *symbol) {$/;"	f	namespace:flecs	typeref:typename:ecs_entity_t
do_import	lib/flecs/include/flecs/addons/cpp/mixins/module/impl.hpp	/^ecs_entity_t do_import(world& world, const char *symbol) {$/;"	f	namespace:flecs	typeref:typename:ecs_entity_t
do_manual_merge	lib/flecs/flecs.c	/^void do_manual_merge($/;"	f	typeref:typename:void	file:
do_manual_merge	lib/flecs/src/stage.c	/^void do_manual_merge($/;"	f	typeref:typename:void	file:
doc	lib/flecs/flecs.h	/^namespace doc {$/;"	n	namespace:flecs
doc	lib/flecs/include/flecs/addons/cpp/mixins/doc/decl.hpp	/^namespace doc {$/;"	n	namespace:flecs
doc	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^namespace doc {$/;"	n	namespace:flecs
doc_brief	lib/flecs/flecs.h	/^const char* doc_brief() {$/;"	f	struct:flecs::entity_view	typeref:typename:const char *
doc_brief	lib/flecs/include/flecs/addons/cpp/mixins/doc/entity_view.inl	/^const char* doc_brief() {$/;"	f	typeref:typename:const char *
doc_detail	lib/flecs/flecs.h	/^const char* doc_detail() {$/;"	f	struct:flecs::entity_view	typeref:typename:const char *
doc_detail	lib/flecs/include/flecs/addons/cpp/mixins/doc/entity_view.inl	/^const char* doc_detail() {$/;"	f	typeref:typename:const char *
doc_link	lib/flecs/flecs.h	/^const char* doc_link() {$/;"	f	struct:flecs::entity_view	typeref:typename:const char *
doc_link	lib/flecs/include/flecs/addons/cpp/mixins/doc/entity_view.inl	/^const char* doc_link() {$/;"	f	typeref:typename:const char *
doc_name	lib/flecs/flecs.h	/^const char* doc_name() {$/;"	f	struct:flecs::entity_view	typeref:typename:const char *
doc_name	lib/flecs/include/flecs/addons/cpp/mixins/doc/entity_view.inl	/^const char* doc_name() {$/;"	f	typeref:typename:const char *
draw_ui_box	src/screens/utility.c	/^void draw_ui_box(int x, int y, int w, int h) {$/;"	f	typeref:typename:void
dtor	lib/flecs/flecs.h	/^    ecs_xtor_t dtor;            \/* dtor *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_xtor_t
dtor	lib/flecs/flecs.h	/^ecs_xtor_t dtor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_xtor_t
dtor	lib/flecs/include/flecs.h	/^    ecs_xtor_t dtor;            \/* dtor *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_xtor_t
dtor	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^ecs_xtor_t dtor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_xtor_t
dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^    xtor_ctx dtor;$/;"	m	struct:cl_ctx	typeref:typename:xtor_ctx	file:
dtor	lib/uthash/include/utarray.h	/^    dtor_f *dtor;$/;"	m	struct:__anonf30a79380108	typeref:typename:dtor_f *
dtor	lib/uthash/src/utarray.h	/^    dtor_f *dtor;$/;"	m	struct:__anon57c8b0dc0108	typeref:typename:dtor_f *
dtor_all_components	lib/flecs/flecs.c	/^void dtor_all_components($/;"	f	typeref:typename:void	file:
dtor_all_components	lib/flecs/src/table.c	/^void dtor_all_components($/;"	f	typeref:typename:void	file:
dtor_bitmask	lib/flecs/flecs.c	/^static void dtor_bitmask($/;"	f	file:
dtor_bitmask	lib/flecs/src/addons/meta/meta.c	/^static void dtor_bitmask($/;"	f	file:
dtor_component	lib/flecs/flecs.c	/^void dtor_component($/;"	f	typeref:typename:void	file:
dtor_component	lib/flecs/src/table.c	/^void dtor_component($/;"	f	typeref:typename:void	file:
dtor_count	lib/flecs/test/api/src/Hierarchies.c	/^static int dtor_count = 0;$/;"	v	typeref:typename:int	file:
dtor_enum	lib/flecs/flecs.c	/^static void dtor_enum($/;"	f	file:
dtor_enum	lib/flecs/src/addons/meta/meta.c	/^static void dtor_enum($/;"	f	file:
dtor_f	lib/uthash/include/utarray.h	/^typedef void (dtor_f)(void *elt);$/;"	t	typeref:typename:void ()(void * elt)
dtor_f	lib/uthash/src/utarray.h	/^typedef void (dtor_f)(void *elt);$/;"	t	typeref:typename:void ()(void * elt)
dtor_impl	lib/flecs/flecs.h	/^void dtor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
dtor_impl	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^void dtor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
dtor_invoked	lib/flecs/test/api/src/Delete.c	/^static int dtor_invoked = 0;$/;"	v	typeref:typename:int	file:
dtor_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int dtor_invoked;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
dtor_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int dtor_invoked;$/;"	m	class:Pod	typeref:typename:int
dtor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    static int dtor_invoked;$/;"	m	class:CtorDtorNonTrivial	typeref:typename:int	file:
dtor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    static int dtor_invoked;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int	file:
dtor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CountNoDefaultCtor::dtor_invoked = 0;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
dtor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CtorDtorNonTrivial::dtor_invoked;$/;"	m	class:CtorDtorNonTrivial	typeref:typename:int
dtor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CtorDtor_w_MoveAssign::dtor_invoked;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int
dtor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int Pod::dtor_invoked = 0;$/;"	m	class:Pod	typeref:typename:int
dtor_struct	lib/flecs/flecs.c	/^static void dtor_struct($/;"	f	file:
dtor_struct	lib/flecs/src/addons/meta/meta.c	/^static void dtor_struct($/;"	f	file:
dtor_unit	lib/flecs/flecs.c	/^static void dtor_unit($/;"	f	file:
dtor_unit	lib/flecs/src/addons/meta/meta.c	/^static void dtor_unit($/;"	f	file:
dtor_unit_prefix	lib/flecs/flecs.c	/^static void dtor_unit_prefix($/;"	f	file:
dtor_unit_prefix	lib/flecs/src/addons/meta/meta.c	/^static void dtor_unit_prefix($/;"	f	file:
dtor_value	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    static int dtor_value;$/;"	m	class:CtorDtorNonTrivial	typeref:typename:int	file:
dtor_value	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    static int dtor_value;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int	file:
dtor_value	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CtorDtorNonTrivial::dtor_value;$/;"	m	class:CtorDtorNonTrivial	typeref:typename:int
dtor_value	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CtorDtor_w_MoveAssign::dtor_value;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int
dtor_x	lib/flecs/test/api/src/Delete.c	/^static int dtor_x;$/;"	v	typeref:typename:int	file:
dtor_y	lib/flecs/test/api/src/Delete.c	/^static int dtor_y;$/;"	v	typeref:typename:int	file:
dummy	lib/flecs/test/cpp_api/src/World.cpp	/^    int dummy;$/;"	m	struct:TestInteropModule	typeref:typename:int	file:
dummy_	lib/flecs/flecs.h	/^    int32_t dummy_;$/;"	m	struct:ecs_world_stats_t	typeref:typename:int32_t
dummy_	lib/flecs/include/flecs/addons/stats.h	/^    int32_t dummy_;$/;"	m	struct:ecs_world_stats_t	typeref:typename:int32_t
dummy_called	lib/flecs/test/api/src/Observer.c	/^static bool dummy_called = false;$/;"	v	typeref:typename:bool	file:
dummy_called	lib/flecs/test/api/src/TriggerOnAdd.c	/^static bool dummy_called = false;$/;"	v	typeref:typename:bool	file:
dummy_called	lib/flecs/test/api/src/TriggerOnRemove.c	/^static bool dummy_called = false;$/;"	v	typeref:typename:bool	file:
dummy_called	lib/flecs/test/api/src/TriggerOnSet.c	/^static bool dummy_called = false;$/;"	v	typeref:typename:bool	file:
dummy_compare	lib/flecs/test/api/src/Sorting.c	/^int dummy_compare($/;"	f	typeref:typename:int	file:
dummy_compare_invoked	lib/flecs/test/api/src/Sorting.c	/^bool dummy_compare_invoked;$/;"	v	typeref:typename:bool
dummy_component	lib/flecs/test/api/src/System_w_FromEntity.c	/^static ecs_entity_t dummy_component = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
dummy_dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void dummy_dtor($/;"	f	typeref:typename:void	file:
dummy_dtor_invoked	lib/flecs/test/api/src/ComponentLifecycle.c	/^static int dummy_dtor_invoked = 0;$/;"	v	typeref:typename:int	file:
dummy_dtor_invoked	lib/flecs/test/api/src/TriggerOnRemove.c	/^static int dummy_dtor_invoked = 0;$/;"	v	typeref:typename:int	file:
dummy_frame_action	lib/flecs/test/api/src/App.c	/^static int dummy_frame_action($/;"	f	typeref:typename:int	file:
dummy_invoked	lib/flecs/test/api/src/SystemMisc.c	/^int32_t dummy_invoked = false;$/;"	v	typeref:typename:int32_t	file:
dummy_invoked	lib/flecs/test/api/src/SystemOnSet.c	/^static int dummy_invoked = 0;$/;"	v	typeref:typename:int	file:
dummy_invoked	lib/flecs/test/api/src/SystemPeriodic.c	/^static ecs_entity_t dummy_invoked = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
dummy_invoked	lib/flecs/test/api/src/System_w_FromEntity.c	/^static bool dummy_invoked = 0;$/;"	v	typeref:typename:bool	file:
dummy_on_remove	lib/flecs/test/api/src/OnDelete.c	/^void dummy_on_remove(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
dummy_ran	lib/flecs/test/api/src/SystemManual.c	/^static int dummy_ran = 0;$/;"	v	typeref:typename:int	file:
dummy_reset	lib/flecs/test/api/src/System_w_FromEntity.c	/^void dummy_reset() {$/;"	f	typeref:typename:void	file:
dummy_source	lib/flecs/test/api/src/System_w_FromEntity.c	/^static ecs_entity_t dummy_source = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
dump_backtrace	lib/flecs/flecs.c	/^void dump_backtrace($/;"	f	typeref:typename:void	file:
dump_backtrace	lib/flecs/src/os_api.c	/^void dump_backtrace($/;"	f	typeref:typename:void	file:
dump_queue	lib/uthash/tests/test89.c	/^void dump_queue(struct netq_t *queue)$/;"	f	typeref:typename:void
duplicate_data	lib/flecs/flecs.c	/^ecs_data_t* duplicate_data($/;"	f	typeref:typename:ecs_data_t *	file:
duplicate_data	lib/flecs/src/addons/snapshot.c	/^ecs_data_t* duplicate_data($/;"	f	typeref:typename:ecs_data_t *	file:
duration	lib/flecs/flecs.h	/^struct duration {$/;"	s	struct:flecs::units
duration	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct duration {$/;"	s	struct:flecs::units
dx	include/ecs/components.h	/^    int dx, dy;$/;"	m	struct:__anon1ffac85e0208	typeref:typename:int
dy	include/ecs/components.h	/^    int dx, dy;$/;"	m	struct:__anon1ffac85e0208	typeref:typename:int
e	lib/flecs/examples/cpp/reflection/entity_type/src/main.cpp	/^    flecs::entity_t e; \/* Only naked entity ids are supported at the moment *\/$/;"	m	struct:TypeWithEntity	typeref:typename:flecs::entity_t	file:
e	lib/flecs/test/api/include/api.h	/^    ecs_entity_t e[MAX_ENTITIES];$/;"	m	struct:Probe	typeref:typename:ecs_entity_t[]
e	lib/flecs/test/api/src/ComponentLifecycle.c	/^    ecs_entity_t e;$/;"	m	struct:__anoneccc1c6a0108	typeref:typename:ecs_entity_t	file:
e	lib/flecs/test/cpp_api/src/System.cpp	/^    flecs::entity e;$/;"	m	struct:Entity	typeref:typename:flecs::entity	file:
e	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t e[5];$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_bool_t[5]	file:
e	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_entity_t e;$/;"	m	struct:SerializeToExpr_entity_entity_after_float::__anon35ed1d3e0808	typeref:typename:ecs_entity_t	file:
e	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_entity_t e;$/;"	m	struct:SerializeToExpr_struct_entity::__anon35ed1d3e0708	typeref:typename:ecs_entity_t	file:
e	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_entity_t e;$/;"	m	struct:SerializeToJson_struct_entity_after_float::__anon413bd0791708	typeref:typename:ecs_entity_t	file:
e_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    flecs::entity e_;$/;"	m	struct:FlecsCtor	typeref:typename:flecs::entity
e_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    flecs::entity e_;$/;"	m	struct:FlecsCtorDefaultCtor	typeref:typename:flecs::entity
e_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    flecs::entity e_;$/;"	m	struct:FlecsCtorValueCtor	typeref:typename:flecs::entity
e_	lib/flecs/test/cpp_api/src/Entity.cpp	/^    flecs::entity e_;$/;"	m	class:SelfCtor	typeref:typename:flecs::entity	file:
e_from_helper	lib/flecs/flecs.c	/^ecs_entity_t e_from_helper($/;"	f	typeref:typename:ecs_entity_t	file:
e_from_helper	lib/flecs/src/query.c	/^ecs_entity_t e_from_helper($/;"	f	typeref:typename:ecs_entity_t	file:
each	lib/flecs/flecs.c	/^        ecs_rule_each_ctx_t each;$/;"	m	union:ecs_rule_op_ctx_t::__anona642c005070a	typeref:typename:ecs_rule_each_ctx_t	file:
each	lib/flecs/flecs.h	/^    T each(Func&& func) {$/;"	f	struct:flecs::_::node_builder	typeref:typename:T
each	lib/flecs/flecs.h	/^    void each(Func&& func) const {$/;"	f	struct:flecs::iterable	typeref:typename:void
each	lib/flecs/flecs.h	/^    void each(const Func& func) const { $/;"	f	struct:flecs::entity_view	typeref:typename:void
each	lib/flecs/flecs.h	/^    void each(const Func& func) {$/;"	f	struct:flecs::array	typeref:typename:void
each	lib/flecs/flecs.h	/^inline void entity_view::each(const Func& func) const {$/;"	f	class:flecs::entity_view	typeref:typename:void
each	lib/flecs/flecs.h	/^inline void entity_view::each(const flecs::entity_view& rel, const Func& func) const {$/;"	f	class:flecs::entity_view	typeref:typename:void
each	lib/flecs/flecs.h	/^inline void entity_view::each(flecs::id_t pred, flecs::id_t obj, const Func& func) const {$/;"	f	class:flecs::entity_view	typeref:typename:void
each	lib/flecs/flecs.h	/^inline void world::each(Func&& func) const {$/;"	f	class:flecs::world	typeref:typename:void
each	lib/flecs/flecs.h	/^inline void world::each(flecs::id_t term_id, Func&& func) const {$/;"	f	class:flecs::world	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    void each(const Func& func) const { $/;"	f	struct:flecs::entity_view	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline void entity_view::each(const Func& func) const {$/;"	f	class:flecs::entity_view	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline void entity_view::each(const flecs::entity_view& rel, const Func& func) const {$/;"	f	class:flecs::entity_view	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline void entity_view::each(flecs::id_t pred, flecs::id_t obj, const Func& func) const {$/;"	f	class:flecs::entity_view	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^inline void world::each(Func&& func) const {$/;"	f	class:flecs::world	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^inline void world::each(flecs::id_t term_id, Func&& func) const {$/;"	f	class:flecs::world	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    void each(const Func& func) {$/;"	f	struct:flecs::array	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    void each(Func&& func) const {$/;"	f	struct:flecs::iterable	typeref:typename:void
each	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    T each(Func&& func) {$/;"	f	struct:flecs::_::node_builder	typeref:typename:T
each	lib/flecs/src/addons/rules.c	/^        ecs_rule_each_ctx_t each;$/;"	m	union:ecs_rule_op_ctx_t::__anon218568c2030a	typeref:typename:ecs_rule_each_ctx_t	file:
each_column	lib/flecs/flecs.h	/^    each_column(const _::term_ptr& term, size_t row) $/;"	f	struct:flecs::_::each_column
each_column	lib/flecs/flecs.h	/^struct each_column { };$/;"	s	namespace:flecs::_
each_column	lib/flecs/flecs.h	/^struct each_column<T, if_t< !is_pointer<T>::value && $/;"	s	namespace:flecs::_
each_column	lib/flecs/flecs.h	/^struct each_column<T, if_t< !is_pointer<T>::value &&$/;"	s	namespace:flecs::_
each_column	lib/flecs/flecs.h	/^struct each_column<T, if_t< is_empty<actual_type_t<T>>::value && $/;"	s	namespace:flecs::_
each_column	lib/flecs/flecs.h	/^struct each_column<T, if_t< is_pointer<T>::value && $/;"	s	namespace:flecs::_
each_column	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    each_column(const _::term_ptr& term, size_t row) $/;"	f	struct:flecs::_::each_column
each_column	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct each_column { };$/;"	s	namespace:flecs::_
each_column	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct each_column<T, if_t< !is_pointer<T>::value && $/;"	s	namespace:flecs::_
each_column	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct each_column<T, if_t< !is_pointer<T>::value &&$/;"	s	namespace:flecs::_
each_column	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct each_column<T, if_t< is_empty<actual_type_t<T>>::value && $/;"	s	namespace:flecs::_
each_column	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct each_column<T, if_t< is_pointer<T>::value && $/;"	s	namespace:flecs::_
each_column_base	lib/flecs/flecs.h	/^    each_column_base(const _::term_ptr& term, size_t row) $/;"	f	struct:flecs::_::each_column_base
each_column_base	lib/flecs/flecs.h	/^struct each_column_base {$/;"	s	namespace:flecs::_
each_column_base	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    each_column_base(const _::term_ptr& term, size_t row) $/;"	f	struct:flecs::_::each_column_base
each_column_base	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct each_column_base {$/;"	s	namespace:flecs::_
each_invoker	lib/flecs/flecs.h	/^    explicit each_invoker(Func&& func) noexcept $/;"	f	struct:flecs::_::each_invoker
each_invoker	lib/flecs/flecs.h	/^    explicit each_invoker(const Func& func) noexcept $/;"	f	struct:flecs::_::each_invoker
each_invoker	lib/flecs/flecs.h	/^struct each_invoker : public invoker {$/;"	s	namespace:flecs::_
each_invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    explicit each_invoker(Func&& func) noexcept $/;"	f	struct:flecs::_::each_invoker
each_invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    explicit each_invoker(const Func& func) noexcept $/;"	f	struct:flecs::_::each_invoker
each_invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct each_invoker : public invoker {$/;"	s	namespace:flecs::_
each_ref_column	lib/flecs/flecs.h	/^    each_ref_column(const _::term_ptr& term, size_t row) $/;"	f	struct:flecs::_::each_ref_column
each_ref_column	lib/flecs/flecs.h	/^struct each_ref_column : public each_column<T> {$/;"	s	namespace:flecs::_
each_ref_column	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    each_ref_column(const _::term_ptr& term, size_t row) $/;"	f	struct:flecs::_::each_ref_column
each_ref_column	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct each_ref_column : public each_column<T> {$/;"	s	namespace:flecs::_
each_term	lib/flecs/flecs.h	/^    void each_term(const Func& func) {$/;"	f	struct:flecs::filter_base	typeref:typename:void
each_term	lib/flecs/flecs.h	/^    void each_term(const Func& func) {$/;"	f	struct:flecs::query_base	typeref:typename:void
each_term	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    void each_term(const Func& func) {$/;"	f	struct:flecs::filter_base	typeref:typename:void
each_term	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    void each_term(const Func& func) {$/;"	f	struct:flecs::query_base	typeref:typename:void
ecs	include/gamestate.h	/^    ecs_world_t *ecs;$/;"	m	struct:GameState	typeref:typename:ecs_world_t *
ecs_abort	lib/flecs/flecs.h	/^#define ecs_abort(/;"	d
ecs_abort	lib/flecs/include/flecs/addons/log.h	/^#define ecs_abort(/;"	d
ecs_action_elem_t	lib/flecs/flecs.c	/^typedef struct ecs_action_elem_t {$/;"	s	file:
ecs_action_elem_t	lib/flecs/flecs.c	/^} ecs_action_elem_t;$/;"	t	typeref:struct:ecs_action_elem_t	file:
ecs_action_elem_t	lib/flecs/src/private_types.h	/^typedef struct ecs_action_elem_t {$/;"	s
ecs_action_elem_t	lib/flecs/src/private_types.h	/^} ecs_action_elem_t;$/;"	t	typeref:struct:ecs_action_elem_t
ecs_add	lib/flecs/flecs.h	/^#define ecs_add(/;"	d
ecs_add	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_add(/;"	d
ecs_add_fullpath	lib/flecs/flecs.h	/^#define ecs_add_fullpath(/;"	d
ecs_add_fullpath	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_add_fullpath(/;"	d
ecs_add_id	lib/flecs/flecs.c	/^void ecs_add_id($/;"	f	typeref:typename:void
ecs_add_id	lib/flecs/src/entity.c	/^void ecs_add_id($/;"	f	typeref:typename:void
ecs_add_pair	lib/flecs/flecs.h	/^#define ecs_add_pair(/;"	d
ecs_add_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_add_pair(/;"	d
ecs_add_path	lib/flecs/flecs.h	/^#define ecs_add_path(/;"	d
ecs_add_path	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_add_path(/;"	d
ecs_add_path_w_sep	lib/flecs/flecs.c	/^ecs_entity_t ecs_add_path_w_sep($/;"	f	typeref:typename:ecs_entity_t
ecs_add_path_w_sep	lib/flecs/src/hierarchy.c	/^ecs_entity_t ecs_add_path_w_sep($/;"	f	typeref:typename:ecs_entity_t
ecs_app_desc	lib/flecs/flecs.c	/^static ecs_app_desc_t ecs_app_desc;$/;"	v	typeref:typename:ecs_app_desc_t	file:
ecs_app_desc	lib/flecs/src/addons/app.c	/^static ecs_app_desc_t ecs_app_desc;$/;"	v	typeref:typename:ecs_app_desc_t	file:
ecs_app_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_app_desc_t {$/;"	s
ecs_app_desc_t	lib/flecs/flecs.h	/^} ecs_app_desc_t;$/;"	t	typeref:struct:ecs_app_desc_t
ecs_app_desc_t	lib/flecs/include/flecs/addons/app.h	/^typedef struct ecs_app_desc_t {$/;"	s
ecs_app_desc_t	lib/flecs/include/flecs/addons/app.h	/^} ecs_app_desc_t;$/;"	t	typeref:struct:ecs_app_desc_t
ecs_app_frame_action_t	lib/flecs/flecs.h	/^typedef int(*ecs_app_frame_action_t)($/;"	t	typeref:typename:int (*)(ecs_world_t * world,const ecs_app_desc_t * desc)
ecs_app_frame_action_t	lib/flecs/include/flecs/addons/app.h	/^typedef int(*ecs_app_frame_action_t)($/;"	t	typeref:typename:int (*)(ecs_world_t * world,const ecs_app_desc_t * desc)
ecs_app_init_action_t	lib/flecs/flecs.h	/^typedef int(*ecs_app_init_action_t)($/;"	t	typeref:typename:int (*)(ecs_world_t * world)
ecs_app_init_action_t	lib/flecs/include/flecs/addons/app.h	/^typedef int(*ecs_app_init_action_t)($/;"	t	typeref:typename:int (*)(ecs_world_t * world)
ecs_app_run	lib/flecs/flecs.c	/^int ecs_app_run($/;"	f	typeref:typename:int
ecs_app_run	lib/flecs/src/addons/app.c	/^int ecs_app_run($/;"	f	typeref:typename:int
ecs_app_run_action_t	lib/flecs/flecs.h	/^typedef int(*ecs_app_run_action_t)($/;"	t	typeref:typename:int (*)(ecs_world_t * world,ecs_app_desc_t * desc)
ecs_app_run_action_t	lib/flecs/include/flecs/addons/app.h	/^typedef int(*ecs_app_run_action_t)($/;"	t	typeref:typename:int (*)(ecs_world_t * world,ecs_app_desc_t * desc)
ecs_app_run_frame	lib/flecs/flecs.c	/^int ecs_app_run_frame($/;"	f	typeref:typename:int
ecs_app_run_frame	lib/flecs/src/addons/app.c	/^int ecs_app_run_frame($/;"	f	typeref:typename:int
ecs_app_set_frame_action	lib/flecs/flecs.c	/^int ecs_app_set_frame_action($/;"	f	typeref:typename:int
ecs_app_set_frame_action	lib/flecs/src/addons/app.c	/^int ecs_app_set_frame_action($/;"	f	typeref:typename:int
ecs_app_set_run_action	lib/flecs/flecs.c	/^int ecs_app_set_run_action($/;"	f	typeref:typename:int
ecs_app_set_run_action	lib/flecs/src/addons/app.c	/^int ecs_app_set_run_action($/;"	f	typeref:typename:int
ecs_array_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_array_desc_t {$/;"	s
ecs_array_desc_t	lib/flecs/flecs.h	/^} ecs_array_desc_t;$/;"	t	typeref:struct:ecs_array_desc_t
ecs_array_desc_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_array_desc_t {$/;"	s
ecs_array_desc_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_array_desc_t;$/;"	t	typeref:struct:ecs_array_desc_t
ecs_array_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_array_init($/;"	f	typeref:typename:ecs_entity_t
ecs_array_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_array_init($/;"	f	typeref:typename:ecs_entity_t
ecs_array_to_json	lib/flecs/flecs.c	/^char* ecs_array_to_json($/;"	f	typeref:typename:char *
ecs_array_to_json	lib/flecs/src/addons/json/serialize.c	/^char* ecs_array_to_json($/;"	f	typeref:typename:char *
ecs_array_to_json_buf	lib/flecs/flecs.c	/^int ecs_array_to_json_buf($/;"	f	typeref:typename:int
ecs_array_to_json_buf	lib/flecs/src/addons/json/serialize.c	/^int ecs_array_to_json_buf($/;"	f	typeref:typename:int
ecs_assert	lib/flecs/flecs.h	/^#define ecs_assert(/;"	d
ecs_assert	lib/flecs/include/flecs/addons/log.h	/^#define ecs_assert(/;"	d
ecs_astresc	lib/flecs/flecs.c	/^char* ecs_astresc($/;"	f	typeref:typename:char *
ecs_astresc	lib/flecs/src/addons/expr/strutil.c	/^char* ecs_astresc($/;"	f	typeref:typename:char *
ecs_async_stage_free	lib/flecs/flecs.c	/^void ecs_async_stage_free($/;"	f	typeref:typename:void
ecs_async_stage_free	lib/flecs/src/stage.c	/^void ecs_async_stage_free($/;"	f	typeref:typename:void
ecs_async_stage_new	lib/flecs/flecs.c	/^ecs_world_t* ecs_async_stage_new($/;"	f	typeref:typename:ecs_world_t *
ecs_async_stage_new	lib/flecs/src/stage.c	/^ecs_world_t* ecs_async_stage_new($/;"	f	typeref:typename:ecs_world_t *
ecs_atfini	lib/flecs/flecs.c	/^void ecs_atfini($/;"	f	typeref:typename:void
ecs_atfini	lib/flecs/src/world.c	/^void ecs_atfini($/;"	f	typeref:typename:void
ecs_begin_wait	lib/flecs/flecs.c	/^void ecs_begin_wait($/;"	f	typeref:typename:void
ecs_begin_wait	lib/flecs/src/world.c	/^void ecs_begin_wait($/;"	f	typeref:typename:void
ecs_bitmask_constant_t	lib/flecs/flecs.h	/^typedef struct ecs_bitmask_constant_t {$/;"	s
ecs_bitmask_constant_t	lib/flecs/flecs.h	/^} ecs_bitmask_constant_t;$/;"	t	typeref:struct:ecs_bitmask_constant_t
ecs_bitmask_constant_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_bitmask_constant_t {$/;"	s
ecs_bitmask_constant_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_bitmask_constant_t;$/;"	t	typeref:struct:ecs_bitmask_constant_t
ecs_bitmask_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_bitmask_desc_t {$/;"	s
ecs_bitmask_desc_t	lib/flecs/flecs.h	/^} ecs_bitmask_desc_t;$/;"	t	typeref:struct:ecs_bitmask_desc_t
ecs_bitmask_desc_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_bitmask_desc_t {$/;"	s
ecs_bitmask_desc_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_bitmask_desc_t;$/;"	t	typeref:struct:ecs_bitmask_desc_t
ecs_bitmask_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_bitmask_init($/;"	f	typeref:typename:ecs_entity_t
ecs_bitmask_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_bitmask_init($/;"	f	typeref:typename:ecs_entity_t
ecs_bitset_t	lib/flecs/flecs.c	/^typedef struct ecs_bitset_t {$/;"	s	file:
ecs_bitset_t	lib/flecs/flecs.c	/^} ecs_bitset_t;$/;"	t	typeref:struct:ecs_bitset_t	file:
ecs_bitset_t	lib/flecs/include/flecs/private/bitset.h	/^typedef struct ecs_bitset_t {$/;"	s
ecs_bitset_t	lib/flecs/include/flecs/private/bitset.h	/^} ecs_bitset_t;$/;"	t	typeref:struct:ecs_bitset_t
ecs_bool_t	lib/flecs/flecs.h	/^typedef bool ecs_bool_t;$/;"	t	typeref:typename:bool
ecs_bool_t	lib/flecs/include/flecs/addons/meta.h	/^typedef bool ecs_bool_t;$/;"	t	typeref:typename:bool
ecs_bs_column_t	lib/flecs/flecs.c	/^typedef struct ecs_bs_column_t {$/;"	s	file:
ecs_bs_column_t	lib/flecs/flecs.c	/^} ecs_bs_column_t;$/;"	t	typeref:struct:ecs_bs_column_t	file:
ecs_bs_column_t	lib/flecs/src/private_types.h	/^typedef struct ecs_bs_column_t {$/;"	s
ecs_bs_column_t	lib/flecs/src/private_types.h	/^} ecs_bs_column_t;$/;"	t	typeref:struct:ecs_bs_column_t
ecs_bucket_t	lib/flecs/flecs.h	/^typedef struct ecs_bucket_t {$/;"	s
ecs_bucket_t	lib/flecs/flecs.h	/^} ecs_bucket_t;$/;"	t	typeref:struct:ecs_bucket_t
ecs_bucket_t	lib/flecs/include/flecs/private/map.h	/^typedef struct ecs_bucket_t {$/;"	s
ecs_bucket_t	lib/flecs/include/flecs/private/map.h	/^} ecs_bucket_t;$/;"	t	typeref:struct:ecs_bucket_t
ecs_bulk_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_bulk_desc_t { $/;"	s
ecs_bulk_desc_t	lib/flecs/flecs.h	/^} ecs_bulk_desc_t;$/;"	t	typeref:struct:ecs_bulk_desc_t
ecs_bulk_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_bulk_desc_t { $/;"	s
ecs_bulk_desc_t	lib/flecs/include/flecs.h	/^} ecs_bulk_desc_t;$/;"	t	typeref:struct:ecs_bulk_desc_t
ecs_bulk_init	lib/flecs/flecs.c	/^const ecs_entity_t* ecs_bulk_init($/;"	f	typeref:typename:const ecs_entity_t *
ecs_bulk_init	lib/flecs/src/entity.c	/^const ecs_entity_t* ecs_bulk_init($/;"	f	typeref:typename:const ecs_entity_t *
ecs_bulk_new	lib/flecs/flecs.h	/^#define ecs_bulk_new(/;"	d
ecs_bulk_new	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_bulk_new(/;"	d
ecs_bulk_new_w_id	lib/flecs/flecs.c	/^const ecs_entity_t* ecs_bulk_new_w_id($/;"	f	typeref:typename:const ecs_entity_t *
ecs_bulk_new_w_id	lib/flecs/src/entity.c	/^const ecs_entity_t* ecs_bulk_new_w_id($/;"	f	typeref:typename:const ecs_entity_t *
ecs_byte_t	lib/flecs/flecs.h	/^typedef unsigned char ecs_byte_t;$/;"	t	typeref:typename:unsigned char
ecs_byte_t	lib/flecs/include/flecs/addons/meta.h	/^typedef unsigned char ecs_byte_t;$/;"	t	typeref:typename:unsigned char
ecs_case	lib/flecs/flecs.h	/^#define ecs_case(/;"	d
ecs_case	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_case(/;"	d
ecs_char_t	lib/flecs/flecs.h	/^typedef char ecs_char_t;$/;"	t	typeref:typename:char
ecs_char_t	lib/flecs/include/flecs/addons/meta.h	/^typedef char ecs_char_t;$/;"	t	typeref:typename:char
ecs_check	lib/flecs/flecs.h	/^#define ecs_check(/;"	d
ecs_check	lib/flecs/include/flecs/addons/log.h	/^#define ecs_check(/;"	d
ecs_childof	lib/flecs/flecs.h	/^#define ecs_childof(/;"	d
ecs_childof	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_childof(/;"	d
ecs_chresc	lib/flecs/flecs.c	/^char* ecs_chresc($/;"	f	typeref:typename:char *
ecs_chresc	lib/flecs/src/addons/expr/strutil.c	/^char* ecs_chresc($/;"	f	typeref:typename:char *
ecs_chrparse	lib/flecs/flecs.c	/^const char* ecs_chrparse($/;"	f	typeref:typename:const char *
ecs_chrparse	lib/flecs/src/addons/expr/strutil.c	/^const char* ecs_chrparse($/;"	f	typeref:typename:const char *
ecs_clear	lib/flecs/flecs.c	/^void ecs_clear($/;"	f	typeref:typename:void
ecs_clear	lib/flecs/src/entity.c	/^void ecs_clear($/;"	f	typeref:typename:void
ecs_clone	lib/flecs/flecs.c	/^ecs_entity_t ecs_clone($/;"	f	typeref:typename:ecs_entity_t
ecs_clone	lib/flecs/src/entity.c	/^ecs_entity_t ecs_clone($/;"	f	typeref:typename:ecs_entity_t
ecs_colorize_buf	lib/flecs/flecs.c	/^void ecs_colorize_buf($/;"	f	typeref:typename:void	file:
ecs_colorize_buf	lib/flecs/src/addons/log.c	/^void ecs_colorize_buf($/;"	f	typeref:typename:void	file:
ecs_colsystem_dtor	lib/flecs/flecs.c	/^void ecs_colsystem_dtor($/;"	f	typeref:typename:void	file:
ecs_colsystem_dtor	lib/flecs/src/addons/system/system.c	/^void ecs_colsystem_dtor($/;"	f	typeref:typename:void	file:
ecs_column_info_t	lib/flecs/flecs.c	/^typedef struct ecs_column_info_t {$/;"	s	file:
ecs_column_info_t	lib/flecs/flecs.c	/^} ecs_column_info_t;$/;"	t	typeref:struct:ecs_column_info_t	file:
ecs_column_info_t	lib/flecs/src/private_types.h	/^typedef struct ecs_column_info_t {$/;"	s
ecs_column_info_t	lib/flecs/src/private_types.h	/^} ecs_column_info_t;$/;"	t	typeref:struct:ecs_column_info_t
ecs_column_t	lib/flecs/flecs.c	/^struct ecs_column_t {$/;"	s	file:
ecs_column_t	lib/flecs/flecs.h	/^typedef struct ecs_column_t ecs_column_t;$/;"	t	typeref:struct:ecs_column_t
ecs_column_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_column_t ecs_column_t;$/;"	t	typeref:struct:ecs_column_t
ecs_column_t	lib/flecs/src/private_types.h	/^struct ecs_column_t {$/;"	s
ecs_commit	lib/flecs/flecs.c	/^bool ecs_commit($/;"	f	typeref:typename:bool
ecs_commit	lib/flecs/src/entity.c	/^bool ecs_commit($/;"	f	typeref:typename:bool
ecs_comparator_t	lib/flecs/flecs.h	/^typedef int (*ecs_comparator_t)($/;"	t	typeref:typename:int (*)(const void * p1,const void * p2)
ecs_comparator_t	lib/flecs/include/flecs/private/vector.h	/^typedef int (*ecs_comparator_t)($/;"	t	typeref:typename:int (*)(const void * p1,const void * p2)
ecs_compare_action_t	lib/flecs/flecs.h	/^typedef int (*ecs_compare_action_t)($/;"	t	typeref:typename:int (*)(const void * ptr1,const void * ptr2)
ecs_compare_action_t	lib/flecs/include/flecs.h	/^typedef int (*ecs_compare_action_t)($/;"	t	typeref:typename:int (*)(const void * ptr1,const void * ptr2)
ecs_component_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_component_desc_t {$/;"	s
ecs_component_desc_t	lib/flecs/flecs.h	/^} ecs_component_desc_t;$/;"	t	typeref:struct:ecs_component_desc_t
ecs_component_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_component_desc_t {$/;"	s
ecs_component_desc_t	lib/flecs/include/flecs.h	/^} ecs_component_desc_t;$/;"	t	typeref:struct:ecs_component_desc_t
ecs_component_has_actions	lib/flecs/flecs.c	/^bool ecs_component_has_actions($/;"	f	typeref:typename:bool
ecs_component_has_actions	lib/flecs/src/world.c	/^bool ecs_component_has_actions($/;"	f	typeref:typename:bool
ecs_component_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_component_init($/;"	f	typeref:typename:ecs_entity_t
ecs_component_init	lib/flecs/src/entity.c	/^ecs_entity_t ecs_component_init($/;"	f	typeref:typename:ecs_entity_t
ecs_components_switch	lib/flecs/flecs.c	/^void ecs_components_switch($/;"	f	typeref:typename:void	file:
ecs_components_switch	lib/flecs/src/entity.c	/^void ecs_components_switch($/;"	f	typeref:typename:void	file:
ecs_copy	lib/flecs/flecs.h	/^#define ecs_copy(/;"	d
ecs_copy	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_copy(/;"	d
ecs_copy_ctor_illegal	lib/flecs/flecs.h	/^inline void ecs_copy_ctor_illegal(ecs_world_t* w, ecs_entity_t id, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_copy_ctor_illegal	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^inline void ecs_copy_ctor_illegal(ecs_world_t* w, ecs_entity_t id, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_copy_ctor_t	lib/flecs/flecs.h	/^typedef void (*ecs_copy_ctor_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const EcsComponentLifecycle * callbacks,const ecs_entity_t * dst_entity,const ecs_entity_t * src_entity,void * dst_ptr,const void * src_ptr,size_t size,int32_t count,void * ctx)
ecs_copy_ctor_t	lib/flecs/include/flecs/private/api_types.h	/^typedef void (*ecs_copy_ctor_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const EcsComponentLifecycle * callbacks,const ecs_entity_t * dst_entity,const ecs_entity_t * src_entity,void * dst_ptr,const void * src_ptr,size_t size,int32_t count,void * ctx)
ecs_copy_illegal	lib/flecs/flecs.h	/^inline void ecs_copy_illegal(ecs_world_t* w, ecs_entity_t id, const ecs_entity_t*, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_copy_illegal	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^inline void ecs_copy_illegal(ecs_world_t* w, ecs_entity_t id, const ecs_entity_t*, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_copy_t	lib/flecs/flecs.h	/^typedef void (*ecs_copy_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const ecs_entity_t * dst_entity,const ecs_entity_t * src_entity,void * dst_ptr,const void * src_ptr,size_t size,int32_t count,void * ctx)
ecs_copy_t	lib/flecs/include/flecs/private/api_types.h	/^typedef void (*ecs_copy_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const ecs_entity_t * dst_entity,const ecs_entity_t * src_entity,void * dst_ptr,const void * src_ptr,size_t size,int32_t count,void * ctx)
ecs_count	lib/flecs/flecs.h	/^#define ecs_count(/;"	d
ecs_count	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_count(/;"	d
ecs_count_id	lib/flecs/flecs.c	/^int32_t ecs_count_id($/;"	f	typeref:typename:int32_t
ecs_count_id	lib/flecs/src/entity.c	/^int32_t ecs_count_id($/;"	f	typeref:typename:int32_t
ecs_counter_t	lib/flecs/flecs.h	/^typedef struct ecs_counter_t {$/;"	s
ecs_counter_t	lib/flecs/flecs.h	/^} ecs_counter_t;$/;"	t	typeref:struct:ecs_counter_t
ecs_counter_t	lib/flecs/include/flecs/addons/stats.h	/^typedef struct ecs_counter_t {$/;"	s
ecs_counter_t	lib/flecs/include/flecs/addons/stats.h	/^} ecs_counter_t;$/;"	t	typeref:struct:ecs_counter_t
ecs_cpp_component_register	lib/flecs/flecs.c	/^ecs_entity_t ecs_cpp_component_register($/;"	f	typeref:typename:ecs_entity_t
ecs_cpp_component_register	lib/flecs/src/addons/flecs_cpp.c	/^ecs_entity_t ecs_cpp_component_register($/;"	f	typeref:typename:ecs_entity_t
ecs_cpp_component_register_explicit	lib/flecs/flecs.c	/^ecs_entity_t ecs_cpp_component_register_explicit($/;"	f	typeref:typename:ecs_entity_t
ecs_cpp_component_register_explicit	lib/flecs/src/addons/flecs_cpp.c	/^ecs_entity_t ecs_cpp_component_register_explicit($/;"	f	typeref:typename:ecs_entity_t
ecs_cpp_component_validate	lib/flecs/flecs.c	/^void ecs_cpp_component_validate($/;"	f	typeref:typename:void
ecs_cpp_component_validate	lib/flecs/src/addons/flecs_cpp.c	/^void ecs_cpp_component_validate($/;"	f	typeref:typename:void
ecs_cpp_enum_constant_register	lib/flecs/flecs.c	/^ecs_entity_t ecs_cpp_enum_constant_register($/;"	f	typeref:typename:ecs_entity_t
ecs_cpp_enum_constant_register	lib/flecs/src/addons/flecs_cpp.c	/^ecs_entity_t ecs_cpp_enum_constant_register($/;"	f	typeref:typename:ecs_entity_t
ecs_cpp_get_constant_name	lib/flecs/flecs.c	/^char* ecs_cpp_get_constant_name($/;"	f	typeref:typename:char *
ecs_cpp_get_constant_name	lib/flecs/src/addons/flecs_cpp.c	/^char* ecs_cpp_get_constant_name($/;"	f	typeref:typename:char *
ecs_cpp_get_symbol_name	lib/flecs/flecs.c	/^char* ecs_cpp_get_symbol_name($/;"	f	typeref:typename:char *
ecs_cpp_get_symbol_name	lib/flecs/src/addons/flecs_cpp.c	/^char* ecs_cpp_get_symbol_name($/;"	f	typeref:typename:char *
ecs_cpp_get_type_name	lib/flecs/flecs.c	/^char* ecs_cpp_get_type_name($/;"	f	typeref:typename:char *
ecs_cpp_get_type_name	lib/flecs/src/addons/flecs_cpp.c	/^char* ecs_cpp_get_type_name($/;"	f	typeref:typename:char *
ecs_cpp_reset_count_get	lib/flecs/flecs.c	/^int32_t ecs_cpp_reset_count_get(void) {$/;"	f	typeref:typename:int32_t
ecs_cpp_reset_count_get	lib/flecs/src/addons/flecs_cpp.c	/^int32_t ecs_cpp_reset_count_get(void) {$/;"	f	typeref:typename:int32_t
ecs_cpp_reset_count_inc	lib/flecs/flecs.c	/^int32_t ecs_cpp_reset_count_inc(void) {$/;"	f	typeref:typename:int32_t
ecs_cpp_reset_count_inc	lib/flecs/src/addons/flecs_cpp.c	/^int32_t ecs_cpp_reset_count_inc(void) {$/;"	f	typeref:typename:int32_t
ecs_cpp_strip_prefix	lib/flecs/flecs.c	/^ecs_size_t ecs_cpp_strip_prefix($/;"	f	typeref:typename:ecs_size_t	file:
ecs_cpp_strip_prefix	lib/flecs/src/addons/flecs_cpp.c	/^ecs_size_t ecs_cpp_strip_prefix($/;"	f	typeref:typename:ecs_size_t	file:
ecs_cpp_trim_module	lib/flecs/flecs.c	/^const char* ecs_cpp_trim_module($/;"	f	typeref:typename:const char *
ecs_cpp_trim_module	lib/flecs/src/addons/flecs_cpp.c	/^const char* ecs_cpp_trim_module($/;"	f	typeref:typename:const char *
ecs_cpp_trim_type_name	lib/flecs/flecs.c	/^void ecs_cpp_trim_type_name($/;"	f	typeref:typename:void	file:
ecs_cpp_trim_type_name	lib/flecs/src/addons/flecs_cpp.c	/^void ecs_cpp_trim_type_name($/;"	f	typeref:typename:void	file:
ecs_ctor	lib/flecs/flecs.h	/^#define ecs_ctor(/;"	d
ecs_ctor	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_ctor(/;"	d
ecs_ctor_illegal	lib/flecs/flecs.h	/^inline void ecs_ctor_illegal(ecs_world_t* w, ecs_entity_t id, const ecs_entity_t*, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_ctor_illegal	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^inline void ecs_ctor_illegal(ecs_world_t* w, ecs_entity_t id, const ecs_entity_t*, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_ctx_free_t	lib/flecs/flecs.h	/^typedef void (*ecs_ctx_free_t)($/;"	t	typeref:typename:void (*)(void * ctx)
ecs_ctx_free_t	lib/flecs/include/flecs.h	/^typedef void (*ecs_ctx_free_t)($/;"	t	typeref:typename:void (*)(void * ctx)
ecs_data_t	lib/flecs/flecs.c	/^struct ecs_data_t {$/;"	s	file:
ecs_data_t	lib/flecs/flecs.h	/^typedef struct ecs_data_t ecs_data_t;$/;"	t	typeref:struct:ecs_data_t
ecs_data_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_data_t ecs_data_t;$/;"	t	typeref:struct:ecs_data_t
ecs_data_t	lib/flecs/src/private_types.h	/^struct ecs_data_t {$/;"	s
ecs_dbg	lib/flecs/flecs.h	/^#define ecs_dbg /;"	d
ecs_dbg	lib/flecs/include/flecs/addons/log.h	/^#define ecs_dbg /;"	d
ecs_dbg_1	lib/flecs/flecs.h	/^#define ecs_dbg_1(/;"	d
ecs_dbg_1	lib/flecs/include/flecs/addons/log.h	/^#define ecs_dbg_1(/;"	d
ecs_dbg_2	lib/flecs/flecs.h	/^#define ecs_dbg_2(/;"	d
ecs_dbg_2	lib/flecs/include/flecs/addons/log.h	/^#define ecs_dbg_2(/;"	d
ecs_dbg_3	lib/flecs/flecs.h	/^#define ecs_dbg_3(/;"	d
ecs_dbg_3	lib/flecs/include/flecs/addons/log.h	/^#define ecs_dbg_3(/;"	d
ecs_dbg_assert	lib/flecs/flecs.h	/^#define ecs_dbg_assert(/;"	d
ecs_dbg_assert	lib/flecs/include/flecs/addons/log.h	/^#define ecs_dbg_assert(/;"	d
ecs_deactivate_systems	lib/flecs/flecs.c	/^void ecs_deactivate_systems($/;"	f	typeref:typename:void
ecs_deactivate_systems	lib/flecs/src/addons/pipeline/pipeline.c	/^void ecs_deactivate_systems($/;"	f	typeref:typename:void
ecs_default_ctor	lib/flecs/flecs.c	/^void ecs_default_ctor($/;"	f	typeref:typename:void
ecs_default_ctor	lib/flecs/src/world.c	/^void ecs_default_ctor($/;"	f	typeref:typename:void
ecs_default_lookup_path	lib/flecs/flecs.c	/^static ecs_entity_t ecs_default_lookup_path[2] = { 0, 0 };$/;"	v	typeref:typename:ecs_entity_t[2]	file:
ecs_default_lookup_path	lib/flecs/src/world.c	/^static ecs_entity_t ecs_default_lookup_path[2] = { 0, 0 };$/;"	v	typeref:typename:ecs_entity_t[2]	file:
ecs_defer_begin	lib/flecs/flecs.c	/^bool ecs_defer_begin($/;"	f	typeref:typename:bool
ecs_defer_begin	lib/flecs/src/entity.c	/^bool ecs_defer_begin($/;"	f	typeref:typename:bool
ecs_defer_end	lib/flecs/flecs.c	/^bool ecs_defer_end($/;"	f	typeref:typename:bool
ecs_defer_end	lib/flecs/src/entity.c	/^bool ecs_defer_end($/;"	f	typeref:typename:bool
ecs_defer_op_1_t	lib/flecs/flecs.c	/^typedef struct ecs_defer_op_1_t {$/;"	s	file:
ecs_defer_op_1_t	lib/flecs/flecs.c	/^} ecs_defer_op_1_t;$/;"	t	typeref:struct:ecs_defer_op_1_t	file:
ecs_defer_op_1_t	lib/flecs/src/private_types.h	/^typedef struct ecs_defer_op_1_t {$/;"	s
ecs_defer_op_1_t	lib/flecs/src/private_types.h	/^} ecs_defer_op_1_t;$/;"	t	typeref:struct:ecs_defer_op_1_t
ecs_defer_op_kind_t	lib/flecs/flecs.c	/^typedef enum ecs_defer_op_kind_t {$/;"	g	file:
ecs_defer_op_kind_t	lib/flecs/flecs.c	/^} ecs_defer_op_kind_t;$/;"	t	typeref:enum:ecs_defer_op_kind_t	file:
ecs_defer_op_kind_t	lib/flecs/src/private_types.h	/^typedef enum ecs_defer_op_kind_t {$/;"	g
ecs_defer_op_kind_t	lib/flecs/src/private_types.h	/^} ecs_defer_op_kind_t;$/;"	t	typeref:enum:ecs_defer_op_kind_t
ecs_defer_op_n_t	lib/flecs/flecs.c	/^typedef struct ecs_defer_op_n_t {$/;"	s	file:
ecs_defer_op_n_t	lib/flecs/flecs.c	/^} ecs_defer_op_n_t;$/;"	t	typeref:struct:ecs_defer_op_n_t	file:
ecs_defer_op_n_t	lib/flecs/src/private_types.h	/^typedef struct ecs_defer_op_n_t {$/;"	s
ecs_defer_op_n_t	lib/flecs/src/private_types.h	/^} ecs_defer_op_n_t;$/;"	t	typeref:struct:ecs_defer_op_n_t
ecs_defer_op_t	lib/flecs/flecs.c	/^typedef struct ecs_defer_op_t {$/;"	s	file:
ecs_defer_op_t	lib/flecs/flecs.c	/^} ecs_defer_op_t;$/;"	t	typeref:struct:ecs_defer_op_t	file:
ecs_defer_op_t	lib/flecs/src/private_types.h	/^typedef struct ecs_defer_op_t {$/;"	s
ecs_defer_op_t	lib/flecs/src/private_types.h	/^} ecs_defer_op_t;$/;"	t	typeref:struct:ecs_defer_op_t
ecs_delete	lib/flecs/flecs.c	/^void ecs_delete($/;"	f	typeref:typename:void
ecs_delete	lib/flecs/src/entity.c	/^void ecs_delete($/;"	f	typeref:typename:void
ecs_delete_children	lib/flecs/flecs.h	/^#define ecs_delete_children(/;"	d
ecs_delete_children	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_delete_children(/;"	d
ecs_delete_with	lib/flecs/flecs.c	/^void ecs_delete_with($/;"	f	typeref:typename:void
ecs_delete_with	lib/flecs/src/entity.c	/^void ecs_delete_with($/;"	f	typeref:typename:void
ecs_deprecated	lib/flecs/flecs.h	/^#define ecs_deprecated(/;"	d
ecs_deprecated	lib/flecs/include/flecs/addons/log.h	/^#define ecs_deprecated(/;"	d
ecs_dim	lib/flecs/flecs.c	/^void ecs_dim($/;"	f	typeref:typename:void
ecs_dim	lib/flecs/src/world.c	/^void ecs_dim($/;"	f	typeref:typename:void
ecs_doc_get_brief	lib/flecs/flecs.c	/^const char* ecs_doc_get_brief($/;"	f	typeref:typename:const char *
ecs_doc_get_brief	lib/flecs/src/addons/doc.c	/^const char* ecs_doc_get_brief($/;"	f	typeref:typename:const char *
ecs_doc_get_detail	lib/flecs/flecs.c	/^const char* ecs_doc_get_detail($/;"	f	typeref:typename:const char *
ecs_doc_get_detail	lib/flecs/src/addons/doc.c	/^const char* ecs_doc_get_detail($/;"	f	typeref:typename:const char *
ecs_doc_get_link	lib/flecs/flecs.c	/^const char* ecs_doc_get_link($/;"	f	typeref:typename:const char *
ecs_doc_get_link	lib/flecs/src/addons/doc.c	/^const char* ecs_doc_get_link($/;"	f	typeref:typename:const char *
ecs_doc_get_name	lib/flecs/flecs.c	/^const char* ecs_doc_get_name($/;"	f	typeref:typename:const char *
ecs_doc_get_name	lib/flecs/src/addons/doc.c	/^const char* ecs_doc_get_name($/;"	f	typeref:typename:const char *
ecs_doc_set_brief	lib/flecs/flecs.c	/^void ecs_doc_set_brief($/;"	f	typeref:typename:void
ecs_doc_set_brief	lib/flecs/src/addons/doc.c	/^void ecs_doc_set_brief($/;"	f	typeref:typename:void
ecs_doc_set_detail	lib/flecs/flecs.c	/^void ecs_doc_set_detail($/;"	f	typeref:typename:void
ecs_doc_set_detail	lib/flecs/src/addons/doc.c	/^void ecs_doc_set_detail($/;"	f	typeref:typename:void
ecs_doc_set_link	lib/flecs/flecs.c	/^void ecs_doc_set_link($/;"	f	typeref:typename:void
ecs_doc_set_link	lib/flecs/src/addons/doc.c	/^void ecs_doc_set_link($/;"	f	typeref:typename:void
ecs_doc_set_name	lib/flecs/flecs.c	/^void ecs_doc_set_name($/;"	f	file:
ecs_doc_set_name	lib/flecs/src/addons/doc.c	/^void ecs_doc_set_name($/;"	f	file:
ecs_dtor	lib/flecs/flecs.h	/^#define ecs_dtor(/;"	d
ecs_dtor	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_dtor(/;"	d
ecs_dtor_illegal	lib/flecs/flecs.h	/^inline void ecs_dtor_illegal(ecs_world_t* w, ecs_entity_t id, const ecs_entity_t*, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_dtor_illegal	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^inline void ecs_dtor_illegal(ecs_world_t* w, ecs_entity_t id, const ecs_entity_t*, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_dummy_check	lib/flecs/flecs.h	/^#define ecs_dummy_check\\/;"	d
ecs_dummy_check	lib/flecs/include/flecs/addons/log.h	/^#define ecs_dummy_check\\/;"	d
ecs_dump_world_stats	lib/flecs/flecs.c	/^void ecs_dump_world_stats($/;"	f	typeref:typename:void
ecs_dump_world_stats	lib/flecs/src/addons/stats.c	/^void ecs_dump_world_stats($/;"	f	typeref:typename:void
ecs_eis	lib/flecs/flecs.c	/^#define ecs_eis(/;"	d	file:
ecs_eis	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis(/;"	d
ecs_eis_clear	lib/flecs/flecs.c	/^#define ecs_eis_clear(/;"	d	file:
ecs_eis_clear	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_clear(/;"	d
ecs_eis_clear_entity	lib/flecs/flecs.c	/^#define ecs_eis_clear_entity(/;"	d	file:
ecs_eis_clear_entity	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_clear_entity(/;"	d
ecs_eis_copy	lib/flecs/flecs.c	/^#define ecs_eis_copy(/;"	d	file:
ecs_eis_copy	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_copy(/;"	d
ecs_eis_count	lib/flecs/flecs.c	/^#define ecs_eis_count(/;"	d	file:
ecs_eis_count	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_count(/;"	d
ecs_eis_delete	lib/flecs/flecs.c	/^#define ecs_eis_delete(/;"	d	file:
ecs_eis_delete	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_delete(/;"	d
ecs_eis_ensure	lib/flecs/flecs.c	/^#define ecs_eis_ensure(/;"	d	file:
ecs_eis_ensure	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_ensure(/;"	d
ecs_eis_exists	lib/flecs/flecs.c	/^#define ecs_eis_exists(/;"	d	file:
ecs_eis_exists	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_exists(/;"	d
ecs_eis_free	lib/flecs/flecs.c	/^#define ecs_eis_free(/;"	d	file:
ecs_eis_free	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_free(/;"	d
ecs_eis_get	lib/flecs/flecs.c	/^#define ecs_eis_get(/;"	d	file:
ecs_eis_get	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_get(/;"	d
ecs_eis_get_any	lib/flecs/flecs.c	/^#define ecs_eis_get_any(/;"	d	file:
ecs_eis_get_any	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_get_any(/;"	d
ecs_eis_get_current	lib/flecs/flecs.c	/^#define ecs_eis_get_current(/;"	d	file:
ecs_eis_get_current	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_get_current(/;"	d
ecs_eis_is_alive	lib/flecs/flecs.c	/^#define ecs_eis_is_alive(/;"	d	file:
ecs_eis_is_alive	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_is_alive(/;"	d
ecs_eis_memory	lib/flecs/flecs.c	/^#define ecs_eis_memory(/;"	d	file:
ecs_eis_memory	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_memory(/;"	d
ecs_eis_recycle	lib/flecs/flecs.c	/^#define ecs_eis_recycle(/;"	d	file:
ecs_eis_recycle	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_recycle(/;"	d
ecs_eis_set	lib/flecs/flecs.c	/^#define ecs_eis_set(/;"	d	file:
ecs_eis_set	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_set(/;"	d
ecs_eis_set_generation	lib/flecs/flecs.c	/^#define ecs_eis_set_generation(/;"	d	file:
ecs_eis_set_generation	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_set_generation(/;"	d
ecs_eis_set_size	lib/flecs/flecs.c	/^#define ecs_eis_set_size(/;"	d	file:
ecs_eis_set_size	lib/flecs/src/datastructures/entity_index.h	/^#define ecs_eis_set_size(/;"	d
ecs_emit	lib/flecs/flecs.c	/^void ecs_emit($/;"	f	typeref:typename:void
ecs_emit	lib/flecs/src/observable.c	/^void ecs_emit($/;"	f	typeref:typename:void
ecs_emplace	lib/flecs/flecs.h	/^#define ecs_emplace(/;"	d
ecs_emplace	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_emplace(/;"	d
ecs_emplace_id	lib/flecs/flecs.c	/^void* ecs_emplace_id($/;"	f	typeref:typename:void *
ecs_emplace_id	lib/flecs/src/entity.c	/^void* ecs_emplace_id($/;"	f	typeref:typename:void *
ecs_enable	lib/flecs/flecs.c	/^void ecs_enable($/;"	f	typeref:typename:void
ecs_enable	lib/flecs/src/entity.c	/^void ecs_enable($/;"	f	typeref:typename:void
ecs_enable_component	lib/flecs/flecs.h	/^#define ecs_enable_component(/;"	d
ecs_enable_component	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_enable_component(/;"	d
ecs_enable_component_w_id	lib/flecs/flecs.c	/^void ecs_enable_component_w_id($/;"	f	typeref:typename:void
ecs_enable_component_w_id	lib/flecs/src/entity.c	/^void ecs_enable_component_w_id($/;"	f	typeref:typename:void
ecs_enable_locking	lib/flecs/flecs.c	/^bool ecs_enable_locking($/;"	f	typeref:typename:bool
ecs_enable_locking	lib/flecs/src/world.c	/^bool ecs_enable_locking($/;"	f	typeref:typename:bool
ecs_enable_range_check	lib/flecs/flecs.c	/^bool ecs_enable_range_check($/;"	f	typeref:typename:bool
ecs_enable_range_check	lib/flecs/src/world.c	/^bool ecs_enable_range_check($/;"	f	typeref:typename:bool
ecs_enable_system	lib/flecs/flecs.c	/^void ecs_enable_system($/;"	f	typeref:typename:void	file:
ecs_enable_system	lib/flecs/src/addons/system/system.c	/^void ecs_enable_system($/;"	f	typeref:typename:void	file:
ecs_end_wait	lib/flecs/flecs.c	/^void ecs_end_wait($/;"	f	typeref:typename:void
ecs_end_wait	lib/flecs/src/world.c	/^void ecs_end_wait($/;"	f	typeref:typename:void
ecs_ensure	lib/flecs/flecs.c	/^void ecs_ensure($/;"	f	typeref:typename:void
ecs_ensure	lib/flecs/src/entity.c	/^void ecs_ensure($/;"	f	typeref:typename:void
ecs_ensure_id	lib/flecs/flecs.c	/^void ecs_ensure_id($/;"	f	typeref:typename:void
ecs_ensure_id	lib/flecs/src/entity.c	/^void ecs_ensure_id($/;"	f	typeref:typename:void
ecs_entity_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_entity_desc_t {$/;"	s
ecs_entity_desc_t	lib/flecs/flecs.h	/^} ecs_entity_desc_t;$/;"	t	typeref:struct:ecs_entity_desc_t
ecs_entity_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_entity_desc_t {$/;"	s
ecs_entity_desc_t	lib/flecs/include/flecs.h	/^} ecs_entity_desc_t;$/;"	t	typeref:struct:ecs_entity_desc_t
ecs_entity_info_t	lib/flecs/flecs.c	/^typedef struct ecs_entity_info_t {$/;"	s	file:
ecs_entity_info_t	lib/flecs/flecs.c	/^} ecs_entity_info_t;$/;"	t	typeref:struct:ecs_entity_info_t	file:
ecs_entity_info_t	lib/flecs/src/private_types.h	/^typedef struct ecs_entity_info_t {$/;"	s
ecs_entity_info_t	lib/flecs/src/private_types.h	/^} ecs_entity_info_t;$/;"	t	typeref:struct:ecs_entity_info_t
ecs_entity_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_entity_init($/;"	f	typeref:typename:ecs_entity_t
ecs_entity_init	lib/flecs/src/entity.c	/^ecs_entity_t ecs_entity_init($/;"	f	typeref:typename:ecs_entity_t
ecs_entity_t	lib/flecs/flecs.h	/^typedef ecs_id_t ecs_entity_t;$/;"	t	typeref:typename:ecs_id_t
ecs_entity_t	lib/flecs/include/flecs.h	/^typedef ecs_id_t ecs_entity_t;$/;"	t	typeref:typename:ecs_id_t
ecs_entity_t_comb	lib/flecs/flecs.h	/^#define ecs_entity_t_comb(/;"	d
ecs_entity_t_comb	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_entity_t_comb(/;"	d
ecs_entity_t_hi	lib/flecs/flecs.h	/^#define ecs_entity_t_hi(/;"	d
ecs_entity_t_hi	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_entity_t_hi(/;"	d
ecs_entity_t_lo	lib/flecs/flecs.h	/^#define ecs_entity_t_lo(/;"	d
ecs_entity_t_lo	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_entity_t_lo(/;"	d
ecs_entity_to_json	lib/flecs/flecs.c	/^char* ecs_entity_to_json($/;"	f	typeref:typename:char *
ecs_entity_to_json	lib/flecs/src/addons/json/serialize.c	/^char* ecs_entity_to_json($/;"	f	typeref:typename:char *
ecs_entity_to_json_buf	lib/flecs/flecs.c	/^int ecs_entity_to_json_buf($/;"	f	typeref:typename:int
ecs_entity_to_json_buf	lib/flecs/src/addons/json/serialize.c	/^int ecs_entity_to_json_buf($/;"	f	typeref:typename:int
ecs_entity_to_json_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_entity_to_json_desc_t {$/;"	s
ecs_entity_to_json_desc_t	lib/flecs/flecs.h	/^} ecs_entity_to_json_desc_t;$/;"	t	typeref:struct:ecs_entity_to_json_desc_t
ecs_entity_to_json_desc_t	lib/flecs/include/flecs/addons/json.h	/^typedef struct ecs_entity_to_json_desc_t {$/;"	s
ecs_entity_to_json_desc_t	lib/flecs/include/flecs/addons/json.h	/^} ecs_entity_to_json_desc_t;$/;"	t	typeref:struct:ecs_entity_to_json_desc_t
ecs_enum_constant_t	lib/flecs/flecs.h	/^typedef struct ecs_enum_constant_t {$/;"	s
ecs_enum_constant_t	lib/flecs/flecs.h	/^} ecs_enum_constant_t;$/;"	t	typeref:struct:ecs_enum_constant_t
ecs_enum_constant_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_enum_constant_t {$/;"	s
ecs_enum_constant_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_enum_constant_t;$/;"	t	typeref:struct:ecs_enum_constant_t
ecs_enum_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_enum_desc_t {$/;"	s
ecs_enum_desc_t	lib/flecs/flecs.h	/^} ecs_enum_desc_t;$/;"	t	typeref:struct:ecs_enum_desc_t
ecs_enum_desc_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_enum_desc_t {$/;"	s
ecs_enum_desc_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_enum_desc_t;$/;"	t	typeref:struct:ecs_enum_desc_t
ecs_enum_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_enum_init($/;"	f	typeref:typename:ecs_entity_t
ecs_enum_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_enum_init($/;"	f	typeref:typename:ecs_entity_t
ecs_err	lib/flecs/flecs.h	/^#define ecs_err(/;"	d
ecs_err	lib/flecs/include/flecs/addons/log.h	/^#define ecs_err(/;"	d
ecs_event_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_event_desc_t {$/;"	s
ecs_event_desc_t	lib/flecs/flecs.h	/^} ecs_event_desc_t;$/;"	t	typeref:struct:ecs_event_desc_t
ecs_event_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_event_desc_t {$/;"	s
ecs_event_desc_t	lib/flecs/include/flecs.h	/^} ecs_event_desc_t;$/;"	t	typeref:struct:ecs_event_desc_t
ecs_event_id_record_t	lib/flecs/flecs.c	/^typedef struct ecs_event_id_record_t {$/;"	s	file:
ecs_event_id_record_t	lib/flecs/flecs.c	/^} ecs_event_id_record_t;$/;"	t	typeref:struct:ecs_event_id_record_t	file:
ecs_event_id_record_t	lib/flecs/src/private_types.h	/^typedef struct ecs_event_id_record_t {$/;"	s
ecs_event_id_record_t	lib/flecs/src/private_types.h	/^} ecs_event_id_record_t;$/;"	t	typeref:struct:ecs_event_id_record_t
ecs_event_record_t	lib/flecs/flecs.c	/^typedef struct ecs_event_record_t {$/;"	s	file:
ecs_event_record_t	lib/flecs/flecs.c	/^} ecs_event_record_t;$/;"	t	typeref:struct:ecs_event_record_t	file:
ecs_event_record_t	lib/flecs/src/private_types.h	/^typedef struct ecs_event_record_t {$/;"	s
ecs_event_record_t	lib/flecs/src/private_types.h	/^} ecs_event_record_t;$/;"	t	typeref:struct:ecs_event_record_t
ecs_exists	lib/flecs/flecs.c	/^bool ecs_exists($/;"	f	typeref:typename:bool
ecs_exists	lib/flecs/src/entity.c	/^bool ecs_exists($/;"	f	typeref:typename:bool
ecs_f32_t	lib/flecs/flecs.h	/^typedef float ecs_f32_t;$/;"	t	typeref:typename:float
ecs_f32_t	lib/flecs/include/flecs/addons/meta.h	/^typedef float ecs_f32_t;$/;"	t	typeref:typename:float
ecs_f64_t	lib/flecs/flecs.h	/^typedef double ecs_f64_t;$/;"	t	typeref:typename:double
ecs_f64_t	lib/flecs/include/flecs/addons/meta.h	/^typedef double ecs_f64_t;$/;"	t	typeref:typename:double
ecs_fatal	lib/flecs/flecs.h	/^#define ecs_fatal(/;"	d
ecs_fatal	lib/flecs/include/flecs/addons/log.h	/^#define ecs_fatal(/;"	d
ecs_filter_chain_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_filter_chain_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_filter_chain_iter	lib/flecs/src/filter.c	/^ecs_iter_t ecs_filter_chain_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_filter_copy	lib/flecs/flecs.c	/^void ecs_filter_copy($/;"	f	typeref:typename:void
ecs_filter_copy	lib/flecs/src/filter.c	/^void ecs_filter_copy($/;"	f	typeref:typename:void
ecs_filter_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_filter_desc_t {$/;"	s
ecs_filter_desc_t	lib/flecs/flecs.h	/^} ecs_filter_desc_t;$/;"	t	typeref:struct:ecs_filter_desc_t
ecs_filter_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_filter_desc_t {$/;"	s
ecs_filter_desc_t	lib/flecs/include/flecs.h	/^} ecs_filter_desc_t;$/;"	t	typeref:struct:ecs_filter_desc_t
ecs_filter_finalize	lib/flecs/flecs.c	/^int ecs_filter_finalize($/;"	f	typeref:typename:int
ecs_filter_finalize	lib/flecs/src/filter.c	/^int ecs_filter_finalize($/;"	f	typeref:typename:int
ecs_filter_fini	lib/flecs/flecs.c	/^void ecs_filter_fini($/;"	f	typeref:typename:void
ecs_filter_fini	lib/flecs/src/filter.c	/^void ecs_filter_fini($/;"	f	typeref:typename:void
ecs_filter_init	lib/flecs/flecs.c	/^int ecs_filter_init($/;"	f	typeref:typename:int
ecs_filter_init	lib/flecs/src/filter.c	/^int ecs_filter_init($/;"	f	typeref:typename:int
ecs_filter_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_filter_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_filter_iter	lib/flecs/src/filter.c	/^ecs_iter_t ecs_filter_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_filter_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_filter_iter_t {$/;"	s
ecs_filter_iter_t	lib/flecs/flecs.h	/^} ecs_filter_iter_t;$/;"	t	typeref:struct:ecs_filter_iter_t
ecs_filter_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_filter_iter_t {$/;"	s
ecs_filter_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_filter_iter_t;$/;"	t	typeref:struct:ecs_filter_iter_t
ecs_filter_move	lib/flecs/flecs.c	/^void ecs_filter_move($/;"	f	typeref:typename:void
ecs_filter_move	lib/flecs/src/filter.c	/^void ecs_filter_move($/;"	f	typeref:typename:void
ecs_filter_next	lib/flecs/flecs.c	/^bool ecs_filter_next($/;"	f	typeref:typename:bool
ecs_filter_next	lib/flecs/src/filter.c	/^bool ecs_filter_next($/;"	f	typeref:typename:bool
ecs_filter_next_instanced	lib/flecs/flecs.c	/^bool ecs_filter_next_instanced($/;"	f	typeref:typename:bool
ecs_filter_next_instanced	lib/flecs/src/filter.c	/^bool ecs_filter_next_instanced($/;"	f	typeref:typename:bool
ecs_filter_pivot_term	lib/flecs/flecs.c	/^int32_t ecs_filter_pivot_term($/;"	f	typeref:typename:int32_t
ecs_filter_pivot_term	lib/flecs/src/filter.c	/^int32_t ecs_filter_pivot_term($/;"	f	typeref:typename:int32_t
ecs_filter_str	lib/flecs/flecs.c	/^char* ecs_filter_str($/;"	f	typeref:typename:char *
ecs_filter_str	lib/flecs/src/filter.c	/^char* ecs_filter_str($/;"	f	typeref:typename:char *
ecs_filter_t	lib/flecs/flecs.h	/^struct ecs_filter_t {$/;"	s
ecs_filter_t	lib/flecs/flecs.h	/^typedef struct ecs_filter_t ecs_filter_t;$/;"	t	typeref:struct:ecs_filter_t
ecs_filter_t	lib/flecs/include/flecs.h	/^struct ecs_filter_t {$/;"	s
ecs_filter_t	lib/flecs/include/flecs.h	/^typedef struct ecs_filter_t ecs_filter_t;$/;"	t	typeref:struct:ecs_filter_t
ecs_filter_t_magic	lib/flecs/flecs.c	/^#define ecs_filter_t_magic /;"	d	file:
ecs_filter_t_magic	lib/flecs/src/private_types.h	/^#define ecs_filter_t_magic /;"	d
ecs_filter_t_mixins	lib/flecs/flecs.c	/^ecs_mixins_t ecs_filter_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_filter_t_mixins	lib/flecs/src/poly.c	/^ecs_mixins_t ecs_filter_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_fini	lib/flecs/flecs.c	/^int ecs_fini($/;"	f	typeref:typename:int
ecs_fini	lib/flecs/src/world.c	/^int ecs_fini($/;"	f	typeref:typename:int
ecs_fini_action_t	lib/flecs/flecs.h	/^typedef void (*ecs_fini_action_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,void * ctx)
ecs_fini_action_t	lib/flecs/include/flecs.h	/^typedef void (*ecs_fini_action_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,void * ctx)
ecs_flags32_t	lib/flecs/flecs.h	/^typedef uint32_t ecs_flags32_t;$/;"	t	typeref:typename:uint32_t
ecs_flags32_t	lib/flecs/include/flecs/private/api_defines.h	/^typedef uint32_t ecs_flags32_t;$/;"	t	typeref:typename:uint32_t
ecs_flags64_t	lib/flecs/flecs.h	/^typedef uint64_t ecs_flags64_t;$/;"	t	typeref:typename:uint64_t
ecs_flags64_t	lib/flecs/include/flecs/private/api_defines.h	/^typedef uint64_t ecs_flags64_t;$/;"	t	typeref:typename:uint64_t
ecs_force_aperiodic	lib/flecs/flecs.c	/^void ecs_force_aperiodic($/;"	f	typeref:typename:void
ecs_force_aperiodic	lib/flecs/src/world.c	/^void ecs_force_aperiodic($/;"	f	typeref:typename:void
ecs_frame_begin	lib/flecs/flecs.c	/^FLECS_FLOAT ecs_frame_begin($/;"	f	typeref:typename:FLECS_FLOAT
ecs_frame_begin	lib/flecs/src/world.c	/^FLECS_FLOAT ecs_frame_begin($/;"	f	typeref:typename:FLECS_FLOAT
ecs_frame_end	lib/flecs/flecs.c	/^void ecs_frame_end($/;"	f	typeref:typename:void
ecs_frame_end	lib/flecs/src/world.c	/^void ecs_frame_end($/;"	f	typeref:typename:void
ecs_gauge_reduce	lib/flecs/flecs.c	/^void ecs_gauge_reduce($/;"	f	typeref:typename:void
ecs_gauge_reduce	lib/flecs/src/addons/stats.c	/^void ecs_gauge_reduce($/;"	f	typeref:typename:void
ecs_gauge_t	lib/flecs/flecs.h	/^typedef struct ecs_gauge_t {$/;"	s
ecs_gauge_t	lib/flecs/flecs.h	/^} ecs_gauge_t;$/;"	t	typeref:struct:ecs_gauge_t
ecs_gauge_t	lib/flecs/include/flecs/addons/stats.h	/^typedef struct ecs_gauge_t {$/;"	s
ecs_gauge_t	lib/flecs/include/flecs/addons/stats.h	/^} ecs_gauge_t;$/;"	t	typeref:struct:ecs_gauge_t
ecs_get	lib/flecs/flecs.h	/^#define ecs_get(/;"	d
ecs_get	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get(/;"	d
ecs_get_alive	lib/flecs/flecs.c	/^ecs_entity_t ecs_get_alive($/;"	f	typeref:typename:ecs_entity_t
ecs_get_alive	lib/flecs/src/entity.c	/^ecs_entity_t ecs_get_alive($/;"	f	typeref:typename:ecs_entity_t
ecs_get_case	lib/flecs/flecs.c	/^ecs_entity_t ecs_get_case($/;"	f	typeref:typename:ecs_entity_t
ecs_get_case	lib/flecs/src/entity.c	/^ecs_entity_t ecs_get_case($/;"	f	typeref:typename:ecs_entity_t
ecs_get_context	lib/flecs/flecs.c	/^void* ecs_get_context($/;"	f	typeref:typename:void *
ecs_get_context	lib/flecs/src/world.c	/^void* ecs_get_context($/;"	f	typeref:typename:void *
ecs_get_fullpath	lib/flecs/flecs.h	/^#define ecs_get_fullpath(/;"	d
ecs_get_fullpath	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_fullpath(/;"	d
ecs_get_fullpath_buf	lib/flecs/flecs.h	/^#define ecs_get_fullpath_buf(/;"	d
ecs_get_fullpath_buf	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_fullpath_buf(/;"	d
ecs_get_id	lib/flecs/flecs.c	/^const void* ecs_get_id($/;"	f	typeref:typename:const void *
ecs_get_id	lib/flecs/src/entity.c	/^const void* ecs_get_id($/;"	f	typeref:typename:const void *
ecs_get_interval	lib/flecs/flecs.c	/^FLECS_FLOAT ecs_get_interval($/;"	f	typeref:typename:FLECS_FLOAT
ecs_get_interval	lib/flecs/src/addons/timer.c	/^FLECS_FLOAT ecs_get_interval($/;"	f	typeref:typename:FLECS_FLOAT
ecs_get_iterable	lib/flecs/flecs.c	/^ecs_iterable_t* ecs_get_iterable($/;"	f	typeref:typename:ecs_iterable_t *
ecs_get_iterable	lib/flecs/src/poly.c	/^ecs_iterable_t* ecs_get_iterable($/;"	f	typeref:typename:ecs_iterable_t *
ecs_get_lookup_path	lib/flecs/flecs.c	/^ecs_entity_t* ecs_get_lookup_path($/;"	f	typeref:typename:ecs_entity_t *
ecs_get_lookup_path	lib/flecs/src/hierarchy.c	/^ecs_entity_t* ecs_get_lookup_path($/;"	f	typeref:typename:ecs_entity_t *
ecs_get_mut	lib/flecs/flecs.h	/^#define ecs_get_mut(/;"	d
ecs_get_mut	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_mut(/;"	d
ecs_get_mut_id	lib/flecs/flecs.c	/^void* ecs_get_mut_id($/;"	f	typeref:typename:void *
ecs_get_mut_id	lib/flecs/src/entity.c	/^void* ecs_get_mut_id($/;"	f	typeref:typename:void *
ecs_get_mut_pair	lib/flecs/flecs.h	/^#define ecs_get_mut_pair(/;"	d
ecs_get_mut_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_mut_pair(/;"	d
ecs_get_mut_pair_object	lib/flecs/flecs.h	/^#define ecs_get_mut_pair_object(/;"	d
ecs_get_mut_pair_object	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_mut_pair_object(/;"	d
ecs_get_name	lib/flecs/flecs.c	/^const char* ecs_get_name($/;"	f	typeref:typename:const char *
ecs_get_name	lib/flecs/src/entity.c	/^const char* ecs_get_name($/;"	f	typeref:typename:const char *
ecs_get_object	lib/flecs/flecs.c	/^ecs_entity_t ecs_get_object($/;"	f	typeref:typename:ecs_entity_t
ecs_get_object	lib/flecs/src/entity.c	/^ecs_entity_t ecs_get_object($/;"	f	typeref:typename:ecs_entity_t
ecs_get_object_for_id	lib/flecs/flecs.c	/^ecs_entity_t ecs_get_object_for_id($/;"	f	typeref:typename:ecs_entity_t
ecs_get_object_for_id	lib/flecs/src/entity.c	/^ecs_entity_t ecs_get_object_for_id($/;"	f	typeref:typename:ecs_entity_t
ecs_get_observable	lib/flecs/flecs.c	/^ecs_observable_t* ecs_get_observable($/;"	f	typeref:typename:ecs_observable_t *
ecs_get_observable	lib/flecs/src/poly.c	/^ecs_observable_t* ecs_get_observable($/;"	f	typeref:typename:ecs_observable_t *
ecs_get_observer_binding_ctx	lib/flecs/flecs.c	/^void* ecs_get_observer_binding_ctx($/;"	f	typeref:typename:void *
ecs_get_observer_binding_ctx	lib/flecs/src/observer.c	/^void* ecs_get_observer_binding_ctx($/;"	f	typeref:typename:void *
ecs_get_observer_ctx	lib/flecs/flecs.c	/^void* ecs_get_observer_ctx($/;"	f	typeref:typename:void *
ecs_get_observer_ctx	lib/flecs/src/observer.c	/^void* ecs_get_observer_ctx($/;"	f	typeref:typename:void *
ecs_get_pair	lib/flecs/flecs.h	/^#define ecs_get_pair(/;"	d
ecs_get_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_pair(/;"	d
ecs_get_pair_object	lib/flecs/flecs.h	/^#define ecs_get_pair_object(/;"	d
ecs_get_pair_object	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_pair_object(/;"	d
ecs_get_path	lib/flecs/flecs.h	/^#define ecs_get_path(/;"	d
ecs_get_path	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_path(/;"	d
ecs_get_path_w_sep	lib/flecs/flecs.c	/^char* ecs_get_path_w_sep($/;"	f	typeref:typename:char *
ecs_get_path_w_sep	lib/flecs/src/hierarchy.c	/^char* ecs_get_path_w_sep($/;"	f	typeref:typename:char *
ecs_get_path_w_sep_buf	lib/flecs/flecs.c	/^void ecs_get_path_w_sep_buf($/;"	f	typeref:typename:void
ecs_get_path_w_sep_buf	lib/flecs/src/hierarchy.c	/^void ecs_get_path_w_sep_buf($/;"	f	typeref:typename:void
ecs_get_pipeline	lib/flecs/flecs.c	/^ecs_entity_t ecs_get_pipeline($/;"	f	typeref:typename:ecs_entity_t
ecs_get_pipeline	lib/flecs/src/addons/pipeline/pipeline.c	/^ecs_entity_t ecs_get_pipeline($/;"	f	typeref:typename:ecs_entity_t
ecs_get_pipeline_stats	lib/flecs/flecs.c	/^bool ecs_get_pipeline_stats($/;"	f	typeref:typename:bool
ecs_get_pipeline_stats	lib/flecs/src/addons/stats.c	/^bool ecs_get_pipeline_stats($/;"	f	typeref:typename:bool
ecs_get_query_stats	lib/flecs/flecs.c	/^void ecs_get_query_stats($/;"	f	typeref:typename:void
ecs_get_query_stats	lib/flecs/src/addons/stats.c	/^void ecs_get_query_stats($/;"	f	typeref:typename:void
ecs_get_ref	lib/flecs/flecs.h	/^#define ecs_get_ref(/;"	d
ecs_get_ref	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_get_ref(/;"	d
ecs_get_ref_id	lib/flecs/flecs.c	/^const void* ecs_get_ref_id($/;"	f	typeref:typename:const void *
ecs_get_ref_id	lib/flecs/src/entity.c	/^const void* ecs_get_ref_id($/;"	f	typeref:typename:const void *
ecs_get_scope	lib/flecs/flecs.c	/^ecs_entity_t ecs_get_scope($/;"	f	typeref:typename:ecs_entity_t
ecs_get_scope	lib/flecs/src/hierarchy.c	/^ecs_entity_t ecs_get_scope($/;"	f	typeref:typename:ecs_entity_t
ecs_get_stage	lib/flecs/flecs.c	/^ecs_world_t* ecs_get_stage($/;"	f	typeref:typename:ecs_world_t *
ecs_get_stage	lib/flecs/src/stage.c	/^ecs_world_t* ecs_get_stage($/;"	f	typeref:typename:ecs_world_t *
ecs_get_stage_count	lib/flecs/flecs.c	/^int32_t ecs_get_stage_count($/;"	f	typeref:typename:int32_t
ecs_get_stage_count	lib/flecs/src/stage.c	/^int32_t ecs_get_stage_count($/;"	f	typeref:typename:int32_t
ecs_get_stage_id	lib/flecs/flecs.c	/^int32_t ecs_get_stage_id($/;"	f	typeref:typename:int32_t
ecs_get_stage_id	lib/flecs/src/stage.c	/^int32_t ecs_get_stage_id($/;"	f	typeref:typename:int32_t
ecs_get_storage_table	lib/flecs/flecs.c	/^ecs_table_t* ecs_get_storage_table($/;"	f	typeref:typename:ecs_table_t *
ecs_get_storage_table	lib/flecs/src/entity.c	/^ecs_table_t* ecs_get_storage_table($/;"	f	typeref:typename:ecs_table_t *
ecs_get_symbol	lib/flecs/flecs.c	/^const char* ecs_get_symbol($/;"	f	typeref:typename:const char *
ecs_get_symbol	lib/flecs/src/entity.c	/^const char* ecs_get_symbol($/;"	f	typeref:typename:const char *
ecs_get_system_binding_ctx	lib/flecs/flecs.c	/^void* ecs_get_system_binding_ctx($/;"	f	typeref:typename:void *
ecs_get_system_binding_ctx	lib/flecs/src/addons/system/system.c	/^void* ecs_get_system_binding_ctx($/;"	f	typeref:typename:void *
ecs_get_system_ctx	lib/flecs/flecs.c	/^void* ecs_get_system_ctx($/;"	f	typeref:typename:void *
ecs_get_system_ctx	lib/flecs/src/addons/system/system.c	/^void* ecs_get_system_ctx($/;"	f	typeref:typename:void *
ecs_get_system_stats	lib/flecs/flecs.c	/^bool ecs_get_system_stats($/;"	f	typeref:typename:bool
ecs_get_system_stats	lib/flecs/src/addons/stats.c	/^bool ecs_get_system_stats($/;"	f	typeref:typename:bool
ecs_get_table	lib/flecs/flecs.c	/^ecs_table_t* ecs_get_table($/;"	f	typeref:typename:ecs_table_t *
ecs_get_table	lib/flecs/src/entity.c	/^ecs_table_t* ecs_get_table($/;"	f	typeref:typename:ecs_table_t *
ecs_get_threads	lib/flecs/flecs.c	/^int32_t ecs_get_threads($/;"	f	typeref:typename:int32_t
ecs_get_threads	lib/flecs/src/world.c	/^int32_t ecs_get_threads($/;"	f	typeref:typename:int32_t
ecs_get_timeout	lib/flecs/flecs.c	/^FLECS_FLOAT ecs_get_timeout($/;"	f	typeref:typename:FLECS_FLOAT
ecs_get_timeout	lib/flecs/src/addons/timer.c	/^FLECS_FLOAT ecs_get_timeout($/;"	f	typeref:typename:FLECS_FLOAT
ecs_get_trigger_binding_ctx	lib/flecs/flecs.c	/^void* ecs_get_trigger_binding_ctx($/;"	f	typeref:typename:void *
ecs_get_trigger_binding_ctx	lib/flecs/src/trigger.c	/^void* ecs_get_trigger_binding_ctx($/;"	f	typeref:typename:void *
ecs_get_trigger_ctx	lib/flecs/flecs.c	/^void* ecs_get_trigger_ctx($/;"	f	typeref:typename:void *
ecs_get_trigger_ctx	lib/flecs/src/trigger.c	/^void* ecs_get_trigger_ctx($/;"	f	typeref:typename:void *
ecs_get_type	lib/flecs/flecs.c	/^ecs_type_t ecs_get_type($/;"	f	typeref:typename:ecs_type_t
ecs_get_type	lib/flecs/src/entity.c	/^ecs_type_t ecs_get_type($/;"	f	typeref:typename:ecs_type_t
ecs_get_typeid	lib/flecs/flecs.c	/^ecs_entity_t ecs_get_typeid($/;"	f	typeref:typename:ecs_entity_t
ecs_get_typeid	lib/flecs/src/entity.c	/^ecs_entity_t ecs_get_typeid($/;"	f	typeref:typename:ecs_entity_t
ecs_get_with	lib/flecs/flecs.c	/^ecs_id_t ecs_get_with($/;"	f	typeref:typename:ecs_id_t
ecs_get_with	lib/flecs/src/entity.c	/^ecs_id_t ecs_get_with($/;"	f	typeref:typename:ecs_id_t
ecs_get_world	lib/flecs/flecs.c	/^const ecs_world_t* ecs_get_world($/;"	f	typeref:typename:const ecs_world_t *
ecs_get_world	lib/flecs/src/poly.c	/^const ecs_world_t* ecs_get_world($/;"	f	typeref:typename:const ecs_world_t *
ecs_get_world_info	lib/flecs/flecs.c	/^const ecs_world_info_t* ecs_get_world_info($/;"	f	typeref:typename:const ecs_world_info_t *
ecs_get_world_info	lib/flecs/src/world.c	/^const ecs_world_info_t* ecs_get_world_info($/;"	f	typeref:typename:const ecs_world_info_t *
ecs_get_world_stats	lib/flecs/flecs.c	/^void ecs_get_world_stats($/;"	f	typeref:typename:void
ecs_get_world_stats	lib/flecs/src/addons/stats.c	/^void ecs_get_world_stats($/;"	f	typeref:typename:void
ecs_graph_edge_hdr_t	lib/flecs/flecs.c	/^typedef struct ecs_graph_edge_hdr_t {$/;"	s	file:
ecs_graph_edge_hdr_t	lib/flecs/flecs.c	/^} ecs_graph_edge_hdr_t;$/;"	t	typeref:struct:ecs_graph_edge_hdr_t	file:
ecs_graph_edge_hdr_t	lib/flecs/src/private_types.h	/^typedef struct ecs_graph_edge_hdr_t {$/;"	s
ecs_graph_edge_hdr_t	lib/flecs/src/private_types.h	/^} ecs_graph_edge_hdr_t;$/;"	t	typeref:struct:ecs_graph_edge_hdr_t
ecs_graph_edge_t	lib/flecs/flecs.c	/^typedef struct ecs_graph_edge_t {$/;"	s	file:
ecs_graph_edge_t	lib/flecs/flecs.c	/^} ecs_graph_edge_t;$/;"	t	typeref:struct:ecs_graph_edge_t	file:
ecs_graph_edge_t	lib/flecs/src/private_types.h	/^typedef struct ecs_graph_edge_t {$/;"	s
ecs_graph_edge_t	lib/flecs/src/private_types.h	/^} ecs_graph_edge_t;$/;"	t	typeref:struct:ecs_graph_edge_t
ecs_graph_edges_t	lib/flecs/flecs.c	/^typedef struct ecs_graph_edges_t {$/;"	s	file:
ecs_graph_edges_t	lib/flecs/flecs.c	/^} ecs_graph_edges_t;$/;"	t	typeref:struct:ecs_graph_edges_t	file:
ecs_graph_edges_t	lib/flecs/src/private_types.h	/^typedef struct ecs_graph_edges_t {$/;"	s
ecs_graph_edges_t	lib/flecs/src/private_types.h	/^} ecs_graph_edges_t;$/;"	t	typeref:struct:ecs_graph_edges_t
ecs_graph_node_t	lib/flecs/flecs.c	/^typedef struct ecs_graph_node_t {$/;"	s	file:
ecs_graph_node_t	lib/flecs/flecs.c	/^} ecs_graph_node_t;$/;"	t	typeref:struct:ecs_graph_node_t	file:
ecs_graph_node_t	lib/flecs/src/private_types.h	/^typedef struct ecs_graph_node_t {$/;"	s
ecs_graph_node_t	lib/flecs/src/private_types.h	/^} ecs_graph_node_t;$/;"	t	typeref:struct:ecs_graph_node_t
ecs_group_by_action_t	lib/flecs/flecs.h	/^typedef uint64_t (*ecs_group_by_action_t)($/;"	t	typeref:typename:uint64_t (*)(ecs_world_t * world,ecs_type_t type,ecs_id_t id,void * ctx)
ecs_group_by_action_t	lib/flecs/include/flecs.h	/^typedef uint64_t (*ecs_group_by_action_t)($/;"	t	typeref:typename:uint64_t (*)(ecs_world_t * world,ecs_type_t type,ecs_id_t id,void * ctx)
ecs_has	lib/flecs/flecs.h	/^#define ecs_has(/;"	d
ecs_has	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_has(/;"	d
ecs_has_id	lib/flecs/flecs.c	/^bool ecs_has_id($/;"	f	typeref:typename:bool
ecs_has_id	lib/flecs/src/entity.c	/^bool ecs_has_id($/;"	f	typeref:typename:bool
ecs_has_pair	lib/flecs/flecs.h	/^#define ecs_has_pair(/;"	d
ecs_has_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_has_pair(/;"	d
ecs_hash_value_action_t	lib/flecs/flecs.h	/^typedef uint64_t (*ecs_hash_value_action_t)($/;"	t	typeref:typename:uint64_t (*)(const void * ptr)
ecs_hash_value_action_t	lib/flecs/include/flecs.h	/^typedef uint64_t (*ecs_hash_value_action_t)($/;"	t	typeref:typename:uint64_t (*)(const void * ptr)
ecs_hashed_string_t	lib/flecs/flecs.c	/^typedef struct ecs_hashed_string_t {$/;"	s	file:
ecs_hashed_string_t	lib/flecs/flecs.c	/^} ecs_hashed_string_t;$/;"	t	typeref:struct:ecs_hashed_string_t	file:
ecs_hashed_string_t	lib/flecs/src/private_types.h	/^typedef struct ecs_hashed_string_t {$/;"	s
ecs_hashed_string_t	lib/flecs/src/private_types.h	/^} ecs_hashed_string_t;$/;"	t	typeref:struct:ecs_hashed_string_t
ecs_hashmap_t	lib/flecs/flecs.h	/^} ecs_hashmap_t;$/;"	t	typeref:struct:__anona642c00a0308
ecs_hashmap_t	lib/flecs/include/flecs/private/hashmap.h	/^} ecs_hashmap_t;$/;"	t	typeref:struct:__anonceb012f80208
ecs_header_t	lib/flecs/flecs.h	/^typedef struct ecs_header_t {$/;"	s
ecs_header_t	lib/flecs/flecs.h	/^} ecs_header_t;$/;"	t	typeref:struct:ecs_header_t
ecs_header_t	lib/flecs/include/flecs.h	/^typedef struct ecs_header_t {$/;"	s
ecs_header_t	lib/flecs/include/flecs.h	/^} ecs_header_t;$/;"	t	typeref:struct:ecs_header_t
ecs_hm_bucket_t	lib/flecs/flecs.h	/^} ecs_hm_bucket_t;$/;"	t	typeref:struct:__anona642c00a0208
ecs_hm_bucket_t	lib/flecs/include/flecs/private/hashmap.h	/^} ecs_hm_bucket_t;$/;"	t	typeref:struct:__anonceb012f80108
ecs_http_connection_impl_t	lib/flecs/flecs.c	/^} ecs_http_connection_impl_t;$/;"	t	typeref:struct:__anona642c0050b08	file:
ecs_http_connection_impl_t	lib/flecs/src/addons/http.c	/^} ecs_http_connection_impl_t;$/;"	t	typeref:struct:__anonc2d932d70308	file:
ecs_http_connection_t	lib/flecs/flecs.h	/^} ecs_http_connection_t;$/;"	t	typeref:struct:__anona642c00a0708
ecs_http_connection_t	lib/flecs/include/flecs/addons/http.h	/^} ecs_http_connection_t;$/;"	t	typeref:struct:__anon12cf63340108
ecs_http_fragment_t	lib/flecs/flecs.c	/^} ecs_http_fragment_t;$/;"	t	typeref:struct:__anona642c0050a08	file:
ecs_http_fragment_t	lib/flecs/src/addons/http.c	/^} ecs_http_fragment_t;$/;"	t	typeref:struct:__anonc2d932d70208	file:
ecs_http_get_header	lib/flecs/flecs.c	/^const char* ecs_http_get_header($/;"	f	typeref:typename:const char *
ecs_http_get_header	lib/flecs/src/addons/http.c	/^const char* ecs_http_get_header($/;"	f	typeref:typename:const char *
ecs_http_get_param	lib/flecs/flecs.c	/^const char* ecs_http_get_param($/;"	f	typeref:typename:const char *
ecs_http_get_param	lib/flecs/src/addons/http.c	/^const char* ecs_http_get_param($/;"	f	typeref:typename:const char *
ecs_http_key_value_t	lib/flecs/flecs.h	/^} ecs_http_key_value_t;$/;"	t	typeref:struct:__anona642c00a0808
ecs_http_key_value_t	lib/flecs/include/flecs/addons/http.h	/^} ecs_http_key_value_t;$/;"	t	typeref:struct:__anon12cf63340208
ecs_http_method_t	lib/flecs/flecs.h	/^} ecs_http_method_t;$/;"	t	typeref:enum:__anona642c00a0903
ecs_http_method_t	lib/flecs/include/flecs/addons/http.h	/^} ecs_http_method_t;$/;"	t	typeref:enum:__anon12cf63340303
ecs_http_reply_action_t	lib/flecs/flecs.h	/^typedef bool (*ecs_http_reply_action_t)($/;"	t	typeref:typename:bool (*)(const ecs_http_request_t * request,ecs_http_reply_t * reply,void * ctx)
ecs_http_reply_action_t	lib/flecs/include/flecs/addons/http.h	/^typedef bool (*ecs_http_reply_action_t)($/;"	t	typeref:typename:bool (*)(const ecs_http_request_t * request,ecs_http_reply_t * reply,void * ctx)
ecs_http_reply_t	lib/flecs/flecs.h	/^} ecs_http_reply_t;$/;"	t	typeref:struct:__anona642c00a0b08
ecs_http_reply_t	lib/flecs/include/flecs/addons/http.h	/^} ecs_http_reply_t;$/;"	t	typeref:struct:__anon12cf63340508
ecs_http_request_impl_t	lib/flecs/flecs.c	/^} ecs_http_request_impl_t;$/;"	t	typeref:struct:__anona642c0050c08	file:
ecs_http_request_impl_t	lib/flecs/src/addons/http.c	/^} ecs_http_request_impl_t;$/;"	t	typeref:struct:__anonc2d932d70408	file:
ecs_http_request_t	lib/flecs/flecs.h	/^} ecs_http_request_t;$/;"	t	typeref:struct:__anona642c00a0a08
ecs_http_request_t	lib/flecs/include/flecs/addons/http.h	/^} ecs_http_request_t;$/;"	t	typeref:struct:__anon12cf63340408
ecs_http_server_dequeue	lib/flecs/flecs.c	/^void ecs_http_server_dequeue($/;"	f	typeref:typename:void
ecs_http_server_dequeue	lib/flecs/src/addons/http.c	/^void ecs_http_server_dequeue($/;"	f	typeref:typename:void
ecs_http_server_desc_t	lib/flecs/flecs.h	/^} ecs_http_server_desc_t;$/;"	t	typeref:struct:__anona642c00a0c08
ecs_http_server_desc_t	lib/flecs/include/flecs/addons/http.h	/^} ecs_http_server_desc_t;$/;"	t	typeref:struct:__anon12cf63340608
ecs_http_server_fini	lib/flecs/flecs.c	/^void ecs_http_server_fini($/;"	f	typeref:typename:void
ecs_http_server_fini	lib/flecs/src/addons/http.c	/^void ecs_http_server_fini($/;"	f	typeref:typename:void
ecs_http_server_init	lib/flecs/flecs.c	/^ecs_http_server_t* ecs_http_server_init($/;"	f	typeref:typename:ecs_http_server_t *
ecs_http_server_init	lib/flecs/src/addons/http.c	/^ecs_http_server_t* ecs_http_server_init($/;"	f	typeref:typename:ecs_http_server_t *
ecs_http_server_start	lib/flecs/flecs.c	/^int ecs_http_server_start($/;"	f	typeref:typename:int
ecs_http_server_start	lib/flecs/src/addons/http.c	/^int ecs_http_server_start($/;"	f	typeref:typename:int
ecs_http_server_stop	lib/flecs/flecs.c	/^void ecs_http_server_stop($/;"	f	typeref:typename:void
ecs_http_server_stop	lib/flecs/src/addons/http.c	/^void ecs_http_server_stop($/;"	f	typeref:typename:void
ecs_http_server_t	lib/flecs/flecs.c	/^struct ecs_http_server_t {$/;"	s	file:
ecs_http_server_t	lib/flecs/flecs.h	/^typedef struct ecs_http_server_t ecs_http_server_t;$/;"	t	typeref:struct:ecs_http_server_t
ecs_http_server_t	lib/flecs/include/flecs/addons/http.h	/^typedef struct ecs_http_server_t ecs_http_server_t;$/;"	t	typeref:struct:ecs_http_server_t
ecs_http_server_t	lib/flecs/src/addons/http.c	/^struct ecs_http_server_t {$/;"	s	file:
ecs_http_socket_t	lib/flecs/flecs.c	/^typedef SOCKET ecs_http_socket_t;$/;"	t	typeref:typename:SOCKET	file:
ecs_http_socket_t	lib/flecs/flecs.c	/^typedef int ecs_http_socket_t;$/;"	t	typeref:typename:int	file:
ecs_http_socket_t	lib/flecs/src/addons/http.c	/^typedef SOCKET ecs_http_socket_t;$/;"	t	typeref:typename:SOCKET	file:
ecs_http_socket_t	lib/flecs/src/addons/http.c	/^typedef int ecs_http_socket_t;$/;"	t	typeref:typename:int	file:
ecs_i16_t	lib/flecs/flecs.h	/^typedef int16_t ecs_i16_t;$/;"	t	typeref:typename:int16_t
ecs_i16_t	lib/flecs/include/flecs/addons/meta.h	/^typedef int16_t ecs_i16_t;$/;"	t	typeref:typename:int16_t
ecs_i32_t	lib/flecs/flecs.h	/^typedef int32_t ecs_i32_t;$/;"	t	typeref:typename:int32_t
ecs_i32_t	lib/flecs/include/flecs/addons/meta.h	/^typedef int32_t ecs_i32_t;$/;"	t	typeref:typename:int32_t
ecs_i64_t	lib/flecs/flecs.h	/^typedef int64_t ecs_i64_t;$/;"	t	typeref:typename:int64_t
ecs_i64_t	lib/flecs/include/flecs/addons/meta.h	/^typedef int64_t ecs_i64_t;$/;"	t	typeref:typename:int64_t
ecs_i8_t	lib/flecs/flecs.h	/^typedef int8_t ecs_i8_t;$/;"	t	typeref:typename:int8_t
ecs_i8_t	lib/flecs/include/flecs/addons/meta.h	/^typedef int8_t ecs_i8_t;$/;"	t	typeref:typename:int8_t
ecs_id	lib/flecs/flecs.h	/^#define ecs_id(/;"	d
ecs_id	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_id(/;"	d
ecs_id_is_pair	lib/flecs/flecs.c	/^bool ecs_id_is_pair($/;"	f	typeref:typename:bool
ecs_id_is_pair	lib/flecs/src/filter.c	/^bool ecs_id_is_pair($/;"	f	typeref:typename:bool
ecs_id_is_tag	lib/flecs/flecs.c	/^ecs_entity_t ecs_id_is_tag($/;"	f	typeref:typename:ecs_entity_t
ecs_id_is_tag	lib/flecs/src/entity.c	/^ecs_entity_t ecs_id_is_tag($/;"	f	typeref:typename:ecs_entity_t
ecs_id_is_wildcard	lib/flecs/flecs.c	/^bool ecs_id_is_wildcard($/;"	f	typeref:typename:bool
ecs_id_is_wildcard	lib/flecs/src/filter.c	/^bool ecs_id_is_wildcard($/;"	f	typeref:typename:bool
ecs_id_match	lib/flecs/flecs.c	/^bool ecs_id_match($/;"	f	typeref:typename:bool
ecs_id_match	lib/flecs/src/filter.c	/^bool ecs_id_match($/;"	f	typeref:typename:bool
ecs_id_record_t	lib/flecs/flecs.c	/^struct ecs_id_record_t {$/;"	s	file:
ecs_id_record_t	lib/flecs/flecs.h	/^typedef struct ecs_id_record_t ecs_id_record_t;$/;"	t	typeref:struct:ecs_id_record_t
ecs_id_record_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_id_record_t ecs_id_record_t;$/;"	t	typeref:struct:ecs_id_record_t
ecs_id_record_t	lib/flecs/src/private_types.h	/^struct ecs_id_record_t {$/;"	s
ecs_id_str	lib/flecs/flecs.c	/^char* ecs_id_str($/;"	f	typeref:typename:char *
ecs_id_str	lib/flecs/src/entity.c	/^char* ecs_id_str($/;"	f	typeref:typename:char *
ecs_id_str_buf	lib/flecs/flecs.c	/^void ecs_id_str_buf($/;"	f	typeref:typename:void
ecs_id_str_buf	lib/flecs/src/entity.c	/^void ecs_id_str_buf($/;"	f	typeref:typename:void
ecs_id_t	lib/flecs/flecs.h	/^typedef uint64_t ecs_id_t;$/;"	t	typeref:typename:uint64_t
ecs_id_t	lib/flecs/include/flecs.h	/^typedef uint64_t ecs_id_t;$/;"	t	typeref:typename:uint64_t
ecs_identifier_is_0	lib/flecs/flecs.c	/^bool ecs_identifier_is_0($/;"	f	typeref:typename:bool
ecs_identifier_is_0	lib/flecs/src/filter.c	/^bool ecs_identifier_is_0($/;"	f	typeref:typename:bool
ecs_identifier_is_var	lib/flecs/flecs.c	/^const char* ecs_identifier_is_var($/;"	f	typeref:typename:const char *
ecs_identifier_is_var	lib/flecs/src/filter.c	/^const char* ecs_identifier_is_var($/;"	f	typeref:typename:const char *
ecs_ids_t	lib/flecs/flecs.h	/^typedef struct ecs_ids_t {$/;"	s
ecs_ids_t	lib/flecs/flecs.h	/^} ecs_ids_t;$/;"	t	typeref:struct:ecs_ids_t
ecs_ids_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_ids_t {$/;"	s
ecs_ids_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_ids_t;$/;"	t	typeref:struct:ecs_ids_t
ecs_import	lib/flecs/flecs.c	/^ecs_entity_t ecs_import($/;"	f	typeref:typename:ecs_entity_t
ecs_import	lib/flecs/src/addons/module.c	/^ecs_entity_t ecs_import($/;"	f	typeref:typename:ecs_entity_t
ecs_import_from_library	lib/flecs/flecs.c	/^ecs_entity_t ecs_import_from_library($/;"	f	typeref:typename:ecs_entity_t
ecs_import_from_library	lib/flecs/src/addons/module.c	/^ecs_entity_t ecs_import_from_library($/;"	f	typeref:typename:ecs_entity_t
ecs_init	lib/flecs/flecs.c	/^ecs_world_t *ecs_init(void) {$/;"	f	typeref:typename:ecs_world_t *
ecs_init	lib/flecs/src/world.c	/^ecs_world_t *ecs_init(void) {$/;"	f	typeref:typename:ecs_world_t *
ecs_init_w_args	lib/flecs/flecs.c	/^ecs_world_t* ecs_init_w_args($/;"	f	typeref:typename:ecs_world_t *
ecs_init_w_args	lib/flecs/src/world.c	/^ecs_world_t* ecs_init_w_args($/;"	f	typeref:typename:ecs_world_t *
ecs_inout_kind_t	lib/flecs/flecs.h	/^typedef enum ecs_inout_kind_t {$/;"	g
ecs_inout_kind_t	lib/flecs/flecs.h	/^} ecs_inout_kind_t;$/;"	t	typeref:enum:ecs_inout_kind_t
ecs_inout_kind_t	lib/flecs/include/flecs.h	/^typedef enum ecs_inout_kind_t {$/;"	g
ecs_inout_kind_t	lib/flecs/include/flecs.h	/^} ecs_inout_kind_t;$/;"	t	typeref:enum:ecs_inout_kind_t
ecs_iptr_t	lib/flecs/flecs.h	/^typedef intptr_t ecs_iptr_t;$/;"	t	typeref:typename:intptr_t
ecs_iptr_t	lib/flecs/include/flecs/addons/meta.h	/^typedef intptr_t ecs_iptr_t;$/;"	t	typeref:typename:intptr_t
ecs_is_alive	lib/flecs/flecs.c	/^bool ecs_is_alive($/;"	f	typeref:typename:bool
ecs_is_alive	lib/flecs/src/entity.c	/^bool ecs_is_alive($/;"	f	typeref:typename:bool
ecs_is_component_enabled	lib/flecs/flecs.h	/^#define ecs_is_component_enabled(/;"	d
ecs_is_component_enabled	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_is_component_enabled(/;"	d
ecs_is_component_enabled_w_id	lib/flecs/flecs.c	/^bool ecs_is_component_enabled_w_id($/;"	f	typeref:typename:bool
ecs_is_component_enabled_w_id	lib/flecs/src/entity.c	/^bool ecs_is_component_enabled_w_id($/;"	f	typeref:typename:bool
ecs_is_deferred	lib/flecs/flecs.c	/^bool ecs_is_deferred($/;"	f	typeref:typename:bool
ecs_is_deferred	lib/flecs/src/stage.c	/^bool ecs_is_deferred($/;"	f	typeref:typename:bool
ecs_is_fini	lib/flecs/flecs.c	/^bool ecs_is_fini($/;"	f	typeref:typename:bool
ecs_is_fini	lib/flecs/src/world.c	/^bool ecs_is_fini($/;"	f	typeref:typename:bool
ecs_is_valid	lib/flecs/flecs.c	/^bool ecs_is_valid($/;"	f	typeref:typename:bool
ecs_is_valid	lib/flecs/src/entity.c	/^bool ecs_is_valid($/;"	f	typeref:typename:bool
ecs_isa	lib/flecs/flecs.h	/^#define ecs_isa(/;"	d
ecs_isa	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_isa(/;"	d
ecs_iter_action	lib/flecs/flecs.h	/^#define ecs_iter_action(/;"	d
ecs_iter_action	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_iter_action(/;"	d
ecs_iter_action_t	lib/flecs/flecs.h	/^typedef void (*ecs_iter_action_t)($/;"	t	typeref:typename:void (*)(ecs_iter_t * it)
ecs_iter_action_t	lib/flecs/include/flecs.h	/^typedef void (*ecs_iter_action_t)($/;"	t	typeref:typename:void (*)(ecs_iter_t * it)
ecs_iter_cache_t	lib/flecs/flecs.h	/^typedef struct ecs_iter_cache_t {$/;"	s
ecs_iter_cache_t	lib/flecs/flecs.h	/^} ecs_iter_cache_t;$/;"	t	typeref:struct:ecs_iter_cache_t
ecs_iter_cache_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_iter_cache_t {$/;"	s
ecs_iter_cache_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_iter_cache_t;$/;"	t	typeref:struct:ecs_iter_cache_t
ecs_iter_column	lib/flecs/flecs.h	/^#define ecs_iter_column(/;"	d
ecs_iter_column	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_iter_column(/;"	d
ecs_iter_column_size	lib/flecs/flecs.c	/^size_t ecs_iter_column_size($/;"	f	typeref:typename:size_t
ecs_iter_column_size	lib/flecs/src/iter.c	/^size_t ecs_iter_column_size($/;"	f	typeref:typename:size_t
ecs_iter_column_w_size	lib/flecs/flecs.c	/^void* ecs_iter_column_w_size($/;"	f	typeref:typename:void *
ecs_iter_column_w_size	lib/flecs/src/iter.c	/^void* ecs_iter_column_w_size($/;"	f	typeref:typename:void *
ecs_iter_count	lib/flecs/flecs.c	/^bool ecs_iter_count($/;"	f	typeref:typename:bool
ecs_iter_count	lib/flecs/src/iter.c	/^bool ecs_iter_count($/;"	f	typeref:typename:bool
ecs_iter_find_column	lib/flecs/flecs.c	/^int32_t ecs_iter_find_column($/;"	f	typeref:typename:int32_t
ecs_iter_find_column	lib/flecs/src/iter.c	/^int32_t ecs_iter_find_column($/;"	f	typeref:typename:int32_t
ecs_iter_fini	lib/flecs/flecs.c	/^void ecs_iter_fini($/;"	f	typeref:typename:void
ecs_iter_fini	lib/flecs/src/iter.c	/^void ecs_iter_fini($/;"	f	typeref:typename:void
ecs_iter_fini_action_t	lib/flecs/flecs.h	/^typedef void (*ecs_iter_fini_action_t)($/;"	t	typeref:typename:void (*)(ecs_iter_t * it)
ecs_iter_fini_action_t	lib/flecs/include/flecs.h	/^typedef void (*ecs_iter_fini_action_t)($/;"	t	typeref:typename:void (*)(ecs_iter_t * it)
ecs_iter_init_action_t	lib/flecs/flecs.h	/^typedef void (*ecs_iter_init_action_t)($/;"	t	typeref:typename:void (*)(const ecs_world_t * world,const ecs_poly_t * iterable,ecs_iter_t * it,ecs_term_t * filter)
ecs_iter_init_action_t	lib/flecs/include/flecs.h	/^typedef void (*ecs_iter_init_action_t)($/;"	t	typeref:typename:void (*)(const ecs_world_t * world,const ecs_poly_t * iterable,ecs_iter_t * it,ecs_term_t * filter)
ecs_iter_is_true	lib/flecs/flecs.c	/^bool ecs_iter_is_true($/;"	f	typeref:typename:bool
ecs_iter_is_true	lib/flecs/src/iter.c	/^bool ecs_iter_is_true($/;"	f	typeref:typename:bool
ecs_iter_kind_t	lib/flecs/flecs.h	/^typedef enum ecs_iter_kind_t {$/;"	g
ecs_iter_kind_t	lib/flecs/flecs.h	/^} ecs_iter_kind_t;$/;"	t	typeref:enum:ecs_iter_kind_t
ecs_iter_kind_t	lib/flecs/include/flecs/private/api_types.h	/^typedef enum ecs_iter_kind_t {$/;"	g
ecs_iter_kind_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_iter_kind_t;$/;"	t	typeref:enum:ecs_iter_kind_t
ecs_iter_next	lib/flecs/flecs.c	/^bool ecs_iter_next($/;"	f	typeref:typename:bool
ecs_iter_next	lib/flecs/src/iter.c	/^bool ecs_iter_next($/;"	f	typeref:typename:bool
ecs_iter_next_action_t	lib/flecs/flecs.h	/^typedef bool (*ecs_iter_next_action_t)($/;"	t	typeref:typename:bool (*)(ecs_iter_t * it)
ecs_iter_next_action_t	lib/flecs/include/flecs.h	/^typedef bool (*ecs_iter_next_action_t)($/;"	t	typeref:typename:bool (*)(ecs_iter_t * it)
ecs_iter_poly	lib/flecs/flecs.c	/^void ecs_iter_poly($/;"	f	typeref:typename:void
ecs_iter_poly	lib/flecs/src/iter.c	/^void ecs_iter_poly($/;"	f	typeref:typename:void
ecs_iter_private_t	lib/flecs/flecs.h	/^typedef struct ecs_iter_private_t {$/;"	s
ecs_iter_private_t	lib/flecs/flecs.h	/^} ecs_iter_private_t;$/;"	t	typeref:struct:ecs_iter_private_t
ecs_iter_private_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_iter_private_t {$/;"	s
ecs_iter_private_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_iter_private_t;$/;"	t	typeref:struct:ecs_iter_private_t
ecs_iter_str	lib/flecs/flecs.c	/^char* ecs_iter_str($/;"	f	typeref:typename:char *
ecs_iter_str	lib/flecs/src/iter.c	/^char* ecs_iter_str($/;"	f	typeref:typename:char *
ecs_iter_t	lib/flecs/flecs.h	/^struct ecs_iter_t {$/;"	s
ecs_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_iter_t ecs_iter_t;$/;"	t	typeref:struct:ecs_iter_t
ecs_iter_t	lib/flecs/include/flecs.h	/^typedef struct ecs_iter_t ecs_iter_t;$/;"	t	typeref:struct:ecs_iter_t
ecs_iter_t	lib/flecs/include/flecs/private/api_types.h	/^struct ecs_iter_t {$/;"	s
ecs_iter_to_json	lib/flecs/flecs.c	/^char* ecs_iter_to_json($/;"	f	typeref:typename:char *
ecs_iter_to_json	lib/flecs/src/addons/json/serialize.c	/^char* ecs_iter_to_json($/;"	f	typeref:typename:char *
ecs_iter_to_json_buf	lib/flecs/flecs.c	/^int ecs_iter_to_json_buf($/;"	f	typeref:typename:int
ecs_iter_to_json_buf	lib/flecs/src/addons/json/serialize.c	/^int ecs_iter_to_json_buf($/;"	f	typeref:typename:int
ecs_iter_to_json_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_iter_to_json_desc_t {$/;"	s
ecs_iter_to_json_desc_t	lib/flecs/flecs.h	/^} ecs_iter_to_json_desc_t;$/;"	t	typeref:struct:ecs_iter_to_json_desc_t
ecs_iter_to_json_desc_t	lib/flecs/include/flecs/addons/json.h	/^typedef struct ecs_iter_to_json_desc_t {$/;"	s
ecs_iter_to_json_desc_t	lib/flecs/include/flecs/addons/json.h	/^} ecs_iter_to_json_desc_t;$/;"	t	typeref:struct:ecs_iter_to_json_desc_t
ecs_iterable_t	lib/flecs/flecs.h	/^typedef struct ecs_iterable_t {$/;"	s
ecs_iterable_t	lib/flecs/flecs.h	/^} ecs_iterable_t;$/;"	t	typeref:struct:ecs_iterable_t
ecs_iterable_t	lib/flecs/include/flecs.h	/^typedef struct ecs_iterable_t {$/;"	s
ecs_iterable_t	lib/flecs/include/flecs.h	/^} ecs_iterable_t;$/;"	t	typeref:struct:ecs_iterable_t
ecs_lock	lib/flecs/flecs.c	/^void ecs_lock($/;"	f	typeref:typename:void
ecs_lock	lib/flecs/src/world.c	/^void ecs_lock($/;"	f	typeref:typename:void
ecs_log	lib/flecs/flecs.h	/^#define ecs_log(/;"	d
ecs_log	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log(/;"	d
ecs_log2	lib/flecs/flecs.c	/^uint8_t ecs_log2(uint32_t v) {$/;"	f	typeref:typename:uint8_t	file:
ecs_log2	lib/flecs/src/datastructures/map.c	/^uint8_t ecs_log2(uint32_t v) {$/;"	f	typeref:typename:uint8_t	file:
ecs_log_enable_colors	lib/flecs/flecs.c	/^bool ecs_log_enable_colors($/;"	f	typeref:typename:bool
ecs_log_enable_colors	lib/flecs/src/addons/log.c	/^bool ecs_log_enable_colors($/;"	f	typeref:typename:bool
ecs_log_last_error	lib/flecs/flecs.c	/^int ecs_log_last_error(void)$/;"	f	typeref:typename:int
ecs_log_last_error	lib/flecs/src/addons/log.c	/^int ecs_log_last_error(void)$/;"	f	typeref:typename:int
ecs_log_pop	lib/flecs/flecs.h	/^#define ecs_log_pop(/;"	d
ecs_log_pop	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log_pop(/;"	d
ecs_log_pop_1	lib/flecs/flecs.h	/^#define ecs_log_pop_1(/;"	d
ecs_log_pop_1	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log_pop_1(/;"	d
ecs_log_pop_2	lib/flecs/flecs.h	/^#define ecs_log_pop_2(/;"	d
ecs_log_pop_2	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log_pop_2(/;"	d
ecs_log_pop_3	lib/flecs/flecs.h	/^#define ecs_log_pop_3(/;"	d
ecs_log_pop_3	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log_pop_3(/;"	d
ecs_log_push	lib/flecs/flecs.h	/^#define ecs_log_push(/;"	d
ecs_log_push	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log_push(/;"	d
ecs_log_push_1	lib/flecs/flecs.h	/^#define ecs_log_push_1(/;"	d
ecs_log_push_1	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log_push_1(/;"	d
ecs_log_push_2	lib/flecs/flecs.h	/^#define ecs_log_push_2(/;"	d
ecs_log_push_2	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log_push_2(/;"	d
ecs_log_push_3	lib/flecs/flecs.h	/^#define ecs_log_push_3(/;"	d
ecs_log_push_3	lib/flecs/include/flecs/addons/log.h	/^#define ecs_log_push_3(/;"	d
ecs_log_set_level	lib/flecs/flecs.c	/^int ecs_log_set_level($/;"	f	typeref:typename:int
ecs_log_set_level	lib/flecs/src/addons/log.c	/^int ecs_log_set_level($/;"	f	typeref:typename:int
ecs_logv	lib/flecs/flecs.h	/^#define ecs_logv(/;"	d
ecs_logv	lib/flecs/include/flecs/addons/log.h	/^#define ecs_logv(/;"	d
ecs_lookup	lib/flecs/flecs.c	/^ecs_entity_t ecs_lookup($/;"	f	typeref:typename:ecs_entity_t
ecs_lookup	lib/flecs/src/hierarchy.c	/^ecs_entity_t ecs_lookup($/;"	f	typeref:typename:ecs_entity_t
ecs_lookup_child	lib/flecs/flecs.c	/^ecs_entity_t ecs_lookup_child($/;"	f	typeref:typename:ecs_entity_t
ecs_lookup_child	lib/flecs/src/hierarchy.c	/^ecs_entity_t ecs_lookup_child($/;"	f	typeref:typename:ecs_entity_t
ecs_lookup_fullpath	lib/flecs/flecs.h	/^#define ecs_lookup_fullpath(/;"	d
ecs_lookup_fullpath	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_lookup_fullpath(/;"	d
ecs_lookup_path	lib/flecs/flecs.h	/^#define ecs_lookup_path(/;"	d
ecs_lookup_path	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_lookup_path(/;"	d
ecs_lookup_path_w_sep	lib/flecs/flecs.c	/^ecs_entity_t ecs_lookup_path_w_sep($/;"	f	typeref:typename:ecs_entity_t
ecs_lookup_path_w_sep	lib/flecs/src/hierarchy.c	/^ecs_entity_t ecs_lookup_path_w_sep($/;"	f	typeref:typename:ecs_entity_t
ecs_lookup_symbol	lib/flecs/flecs.c	/^ecs_entity_t ecs_lookup_symbol($/;"	f	typeref:typename:ecs_entity_t
ecs_lookup_symbol	lib/flecs/src/hierarchy.c	/^ecs_entity_t ecs_lookup_symbol($/;"	f	typeref:typename:ecs_entity_t
ecs_make_pair	lib/flecs/flecs.c	/^ecs_id_t ecs_make_pair($/;"	f	typeref:typename:ecs_id_t
ecs_make_pair	lib/flecs/src/entity.c	/^ecs_id_t ecs_make_pair($/;"	f	typeref:typename:ecs_id_t
ecs_map_bucket_count	lib/flecs/flecs.c	/^int32_t ecs_map_bucket_count($/;"	f	typeref:typename:int32_t
ecs_map_bucket_count	lib/flecs/src/datastructures/map.c	/^int32_t ecs_map_bucket_count($/;"	f	typeref:typename:int32_t
ecs_map_clear	lib/flecs/flecs.c	/^void ecs_map_clear($/;"	f	typeref:typename:void
ecs_map_clear	lib/flecs/src/datastructures/map.c	/^void ecs_map_clear($/;"	f	typeref:typename:void
ecs_map_copy	lib/flecs/flecs.c	/^ecs_map_t* ecs_map_copy($/;"	f	typeref:typename:ecs_map_t *
ecs_map_copy	lib/flecs/src/datastructures/map.c	/^ecs_map_t* ecs_map_copy($/;"	f	typeref:typename:ecs_map_t *
ecs_map_count	lib/flecs/flecs.c	/^int32_t ecs_map_count($/;"	f	typeref:typename:int32_t
ecs_map_count	lib/flecs/src/datastructures/map.c	/^int32_t ecs_map_count($/;"	f	typeref:typename:int32_t
ecs_map_each	lib/flecs/flecs.h	/^#define ecs_map_each(/;"	d
ecs_map_each	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_each(/;"	d
ecs_map_ensure	lib/flecs/flecs.h	/^#define ecs_map_ensure(/;"	d
ecs_map_ensure	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_ensure(/;"	d
ecs_map_fini	lib/flecs/flecs.c	/^void ecs_map_fini($/;"	f	typeref:typename:void
ecs_map_fini	lib/flecs/src/datastructures/map.c	/^void ecs_map_fini($/;"	f	typeref:typename:void
ecs_map_free	lib/flecs/flecs.c	/^void ecs_map_free($/;"	f	typeref:typename:void
ecs_map_free	lib/flecs/src/datastructures/map.c	/^void ecs_map_free($/;"	f	typeref:typename:void
ecs_map_get	lib/flecs/flecs.h	/^#define ecs_map_get(/;"	d
ecs_map_get	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_get(/;"	d
ecs_map_get_ptr	lib/flecs/flecs.h	/^#define ecs_map_get_ptr(/;"	d
ecs_map_get_ptr	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_get_ptr(/;"	d
ecs_map_grow	lib/flecs/flecs.c	/^void ecs_map_grow($/;"	f	typeref:typename:void
ecs_map_grow	lib/flecs/src/datastructures/map.c	/^void ecs_map_grow($/;"	f	typeref:typename:void
ecs_map_has	lib/flecs/flecs.c	/^bool ecs_map_has($/;"	f	typeref:typename:bool
ecs_map_has	lib/flecs/src/datastructures/map.c	/^bool ecs_map_has($/;"	f	typeref:typename:bool
ecs_map_init	lib/flecs/flecs.h	/^#define ecs_map_init(/;"	d
ecs_map_init	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_init(/;"	d
ecs_map_is_initialized	lib/flecs/flecs.c	/^bool ecs_map_is_initialized($/;"	f	typeref:typename:bool
ecs_map_is_initialized	lib/flecs/src/datastructures/map.c	/^bool ecs_map_is_initialized($/;"	f	typeref:typename:bool
ecs_map_iter	lib/flecs/flecs.c	/^ecs_map_iter_t ecs_map_iter($/;"	f	typeref:typename:ecs_map_iter_t
ecs_map_iter	lib/flecs/src/datastructures/map.c	/^ecs_map_iter_t ecs_map_iter($/;"	f	typeref:typename:ecs_map_iter_t
ecs_map_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_map_iter_t {$/;"	s
ecs_map_iter_t	lib/flecs/flecs.h	/^} ecs_map_iter_t;$/;"	t	typeref:struct:ecs_map_iter_t
ecs_map_iter_t	lib/flecs/include/flecs/private/map.h	/^typedef struct ecs_map_iter_t {$/;"	s
ecs_map_iter_t	lib/flecs/include/flecs/private/map.h	/^} ecs_map_iter_t;$/;"	t	typeref:struct:ecs_map_iter_t
ecs_map_key_t	lib/flecs/flecs.h	/^typedef uint64_t ecs_map_key_t;$/;"	t	typeref:typename:uint64_t
ecs_map_key_t	lib/flecs/include/flecs/private/map.h	/^typedef uint64_t ecs_map_key_t;$/;"	t	typeref:typename:uint64_t
ecs_map_memory	lib/flecs/flecs.c	/^void ecs_map_memory($/;"	f	typeref:typename:void
ecs_map_memory	lib/flecs/src/datastructures/map.c	/^void ecs_map_memory($/;"	f	typeref:typename:void
ecs_map_new	lib/flecs/flecs.h	/^#define ecs_map_new(/;"	d
ecs_map_new	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_new(/;"	d
ecs_map_next	lib/flecs/flecs.h	/^#define ecs_map_next(/;"	d
ecs_map_next	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_next(/;"	d
ecs_map_next_ptr	lib/flecs/flecs.h	/^#define ecs_map_next_ptr(/;"	d
ecs_map_next_ptr	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_next_ptr(/;"	d
ecs_map_remove	lib/flecs/flecs.c	/^int32_t ecs_map_remove($/;"	f	typeref:typename:int32_t
ecs_map_remove	lib/flecs/src/datastructures/map.c	/^int32_t ecs_map_remove($/;"	f	typeref:typename:int32_t
ecs_map_set	lib/flecs/flecs.h	/^#define ecs_map_set(/;"	d
ecs_map_set	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_set(/;"	d
ecs_map_set_ptr	lib/flecs/flecs.h	/^#define ecs_map_set_ptr(/;"	d
ecs_map_set_ptr	lib/flecs/include/flecs/private/map.h	/^#define ecs_map_set_ptr(/;"	d
ecs_map_set_size	lib/flecs/flecs.c	/^void ecs_map_set_size($/;"	f	typeref:typename:void
ecs_map_set_size	lib/flecs/src/datastructures/map.c	/^void ecs_map_set_size($/;"	f	typeref:typename:void
ecs_map_t	lib/flecs/flecs.h	/^typedef struct ecs_map_t {$/;"	s
ecs_map_t	lib/flecs/flecs.h	/^} ecs_map_t;$/;"	t	typeref:struct:ecs_map_t
ecs_map_t	lib/flecs/include/flecs/private/map.h	/^typedef struct ecs_map_t {$/;"	s
ecs_map_t	lib/flecs/include/flecs/private/map.h	/^} ecs_map_t;$/;"	t	typeref:struct:ecs_map_t
ecs_measure_frame_time	lib/flecs/flecs.c	/^void ecs_measure_frame_time($/;"	f	typeref:typename:void
ecs_measure_frame_time	lib/flecs/src/world.c	/^void ecs_measure_frame_time($/;"	f	typeref:typename:void
ecs_measure_system_time	lib/flecs/flecs.c	/^void ecs_measure_system_time($/;"	f	typeref:typename:void
ecs_measure_system_time	lib/flecs/src/world.c	/^void ecs_measure_system_time($/;"	f	typeref:typename:void
ecs_member_t	lib/flecs/flecs.h	/^typedef struct ecs_member_t {$/;"	s
ecs_member_t	lib/flecs/flecs.h	/^} ecs_member_t;$/;"	t	typeref:struct:ecs_member_t
ecs_member_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_member_t {$/;"	s
ecs_member_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_member_t;$/;"	t	typeref:struct:ecs_member_t
ecs_merge	lib/flecs/flecs.c	/^void ecs_merge($/;"	f	typeref:typename:void
ecs_merge	lib/flecs/src/stage.c	/^void ecs_merge($/;"	f	typeref:typename:void
ecs_meta_cursor	lib/flecs/flecs.c	/^ecs_meta_cursor_t ecs_meta_cursor($/;"	f	typeref:typename:ecs_meta_cursor_t
ecs_meta_cursor	lib/flecs/src/addons/meta/cursor.c	/^ecs_meta_cursor_t ecs_meta_cursor($/;"	f	typeref:typename:ecs_meta_cursor_t
ecs_meta_cursor_t	lib/flecs/flecs.h	/^typedef struct ecs_meta_cursor_t {$/;"	s
ecs_meta_cursor_t	lib/flecs/flecs.h	/^} ecs_meta_cursor_t;$/;"	t	typeref:struct:ecs_meta_cursor_t
ecs_meta_cursor_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_meta_cursor_t {$/;"	s
ecs_meta_cursor_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_meta_cursor_t;$/;"	t	typeref:struct:ecs_meta_cursor_t
ecs_meta_dtor_serialized	lib/flecs/flecs.c	/^void ecs_meta_dtor_serialized($/;"	f	typeref:typename:void
ecs_meta_dtor_serialized	lib/flecs/src/addons/meta/meta.c	/^void ecs_meta_dtor_serialized($/;"	f	typeref:typename:void
ecs_meta_error	lib/flecs/flecs.c	/^#define ecs_meta_error(/;"	d	file:
ecs_meta_error	lib/flecs/src/addons/meta_c.c	/^#define ecs_meta_error(/;"	d	file:
ecs_meta_from_desc	lib/flecs/flecs.c	/^int ecs_meta_from_desc($/;"	f	typeref:typename:int
ecs_meta_from_desc	lib/flecs/src/addons/meta_c.c	/^int ecs_meta_from_desc($/;"	f	typeref:typename:int
ecs_meta_get_bool	lib/flecs/flecs.c	/^bool ecs_meta_get_bool($/;"	f	typeref:typename:bool
ecs_meta_get_bool	lib/flecs/src/addons/meta/cursor.c	/^bool ecs_meta_get_bool($/;"	f	typeref:typename:bool
ecs_meta_get_char	lib/flecs/flecs.c	/^char ecs_meta_get_char($/;"	f	typeref:typename:char
ecs_meta_get_char	lib/flecs/src/addons/meta/cursor.c	/^char ecs_meta_get_char($/;"	f	typeref:typename:char
ecs_meta_get_entity	lib/flecs/flecs.c	/^ecs_entity_t ecs_meta_get_entity($/;"	f	typeref:typename:ecs_entity_t
ecs_meta_get_entity	lib/flecs/src/addons/meta/cursor.c	/^ecs_entity_t ecs_meta_get_entity($/;"	f	typeref:typename:ecs_entity_t
ecs_meta_get_float	lib/flecs/flecs.c	/^double ecs_meta_get_float($/;"	f	typeref:typename:double
ecs_meta_get_float	lib/flecs/src/addons/meta/cursor.c	/^double ecs_meta_get_float($/;"	f	typeref:typename:double
ecs_meta_get_int	lib/flecs/flecs.c	/^int64_t ecs_meta_get_int($/;"	f	typeref:typename:int64_t
ecs_meta_get_int	lib/flecs/src/addons/meta/cursor.c	/^int64_t ecs_meta_get_int($/;"	f	typeref:typename:int64_t
ecs_meta_get_member	lib/flecs/flecs.c	/^const char* ecs_meta_get_member($/;"	f	typeref:typename:const char *
ecs_meta_get_member	lib/flecs/src/addons/meta/cursor.c	/^const char* ecs_meta_get_member($/;"	f	typeref:typename:const char *
ecs_meta_get_ptr	lib/flecs/flecs.c	/^void* ecs_meta_get_ptr($/;"	f	typeref:typename:void *
ecs_meta_get_ptr	lib/flecs/src/addons/meta/cursor.c	/^void* ecs_meta_get_ptr($/;"	f	typeref:typename:void *
ecs_meta_get_string	lib/flecs/flecs.c	/^const char* ecs_meta_get_string($/;"	f	typeref:typename:const char *
ecs_meta_get_string	lib/flecs/src/addons/meta/cursor.c	/^const char* ecs_meta_get_string($/;"	f	typeref:typename:const char *
ecs_meta_get_type	lib/flecs/flecs.c	/^ecs_entity_t ecs_meta_get_type($/;"	f	typeref:typename:ecs_entity_t
ecs_meta_get_type	lib/flecs/src/addons/meta/cursor.c	/^ecs_entity_t ecs_meta_get_type($/;"	f	typeref:typename:ecs_entity_t
ecs_meta_get_uint	lib/flecs/flecs.c	/^uint64_t ecs_meta_get_uint($/;"	f	typeref:typename:uint64_t
ecs_meta_get_uint	lib/flecs/src/addons/meta/cursor.c	/^uint64_t ecs_meta_get_uint($/;"	f	typeref:typename:uint64_t
ecs_meta_get_unit	lib/flecs/flecs.c	/^ecs_entity_t ecs_meta_get_unit($/;"	f	typeref:typename:ecs_entity_t
ecs_meta_get_unit	lib/flecs/src/addons/meta/cursor.c	/^ecs_entity_t ecs_meta_get_unit($/;"	f	typeref:typename:ecs_entity_t
ecs_meta_is_collection	lib/flecs/flecs.c	/^bool ecs_meta_is_collection($/;"	f	typeref:typename:bool
ecs_meta_is_collection	lib/flecs/src/addons/meta/cursor.c	/^bool ecs_meta_is_collection($/;"	f	typeref:typename:bool
ecs_meta_member	lib/flecs/flecs.c	/^int ecs_meta_member($/;"	f	typeref:typename:int
ecs_meta_member	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_member($/;"	f	typeref:typename:int
ecs_meta_next	lib/flecs/flecs.c	/^int ecs_meta_next($/;"	f	typeref:typename:int
ecs_meta_next	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_next($/;"	f	typeref:typename:int
ecs_meta_pop	lib/flecs/flecs.c	/^int ecs_meta_pop($/;"	f	typeref:typename:int
ecs_meta_pop	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_pop($/;"	f	typeref:typename:int
ecs_meta_push	lib/flecs/flecs.c	/^int ecs_meta_push($/;"	f	typeref:typename:int
ecs_meta_push	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_push($/;"	f	typeref:typename:int
ecs_meta_scope_t	lib/flecs/flecs.h	/^typedef struct ecs_meta_scope_t {$/;"	s
ecs_meta_scope_t	lib/flecs/flecs.h	/^} ecs_meta_scope_t;$/;"	t	typeref:struct:ecs_meta_scope_t
ecs_meta_scope_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_meta_scope_t {$/;"	s
ecs_meta_scope_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_meta_scope_t;$/;"	t	typeref:struct:ecs_meta_scope_t
ecs_meta_set_bool	lib/flecs/flecs.c	/^int ecs_meta_set_bool($/;"	f	typeref:typename:int
ecs_meta_set_bool	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_bool($/;"	f	typeref:typename:int
ecs_meta_set_char	lib/flecs/flecs.c	/^int ecs_meta_set_char($/;"	f	typeref:typename:int
ecs_meta_set_char	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_char($/;"	f	typeref:typename:int
ecs_meta_set_entity	lib/flecs/flecs.c	/^int ecs_meta_set_entity($/;"	f	typeref:typename:int
ecs_meta_set_entity	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_entity($/;"	f	typeref:typename:int
ecs_meta_set_float	lib/flecs/flecs.c	/^int ecs_meta_set_float($/;"	f	typeref:typename:int
ecs_meta_set_float	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_float($/;"	f	typeref:typename:int
ecs_meta_set_int	lib/flecs/flecs.c	/^int ecs_meta_set_int($/;"	f	typeref:typename:int
ecs_meta_set_int	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_int($/;"	f	typeref:typename:int
ecs_meta_set_null	lib/flecs/flecs.c	/^int ecs_meta_set_null($/;"	f	typeref:typename:int
ecs_meta_set_null	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_null($/;"	f	typeref:typename:int
ecs_meta_set_string	lib/flecs/flecs.c	/^int ecs_meta_set_string($/;"	f	typeref:typename:int
ecs_meta_set_string	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_string($/;"	f	typeref:typename:int
ecs_meta_set_string_literal	lib/flecs/flecs.c	/^int ecs_meta_set_string_literal($/;"	f	typeref:typename:int
ecs_meta_set_string_literal	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_string_literal($/;"	f	typeref:typename:int
ecs_meta_set_uint	lib/flecs/flecs.c	/^int ecs_meta_set_uint($/;"	f	typeref:typename:int
ecs_meta_set_uint	lib/flecs/src/addons/meta/cursor.c	/^int ecs_meta_set_uint($/;"	f	typeref:typename:int
ecs_meta_token_t	lib/flecs/flecs.c	/^typedef char ecs_meta_token_t[ECS_META_IDENTIFIER_LENGTH];$/;"	t	typeref:typename:char[ECS_META_IDENTIFIER_LENGTH]	file:
ecs_meta_token_t	lib/flecs/src/addons/meta_c.c	/^typedef char ecs_meta_token_t[ECS_META_IDENTIFIER_LENGTH];$/;"	t	typeref:typename:char[ECS_META_IDENTIFIER_LENGTH]	file:
ecs_meta_type_init_default_ctor	lib/flecs/flecs.c	/^void ecs_meta_type_init_default_ctor(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ecs_meta_type_init_default_ctor	lib/flecs/src/addons/meta/meta.c	/^void ecs_meta_type_init_default_ctor(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ecs_meta_type_op_kind_t	lib/flecs/flecs.h	/^typedef enum ecs_meta_type_op_kind_t {$/;"	g
ecs_meta_type_op_kind_t	lib/flecs/flecs.h	/^} ecs_meta_type_op_kind_t;$/;"	t	typeref:enum:ecs_meta_type_op_kind_t
ecs_meta_type_op_kind_t	lib/flecs/include/flecs/addons/meta.h	/^typedef enum ecs_meta_type_op_kind_t {$/;"	g
ecs_meta_type_op_kind_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_meta_type_op_kind_t;$/;"	t	typeref:enum:ecs_meta_type_op_kind_t
ecs_meta_type_op_t	lib/flecs/flecs.h	/^typedef struct ecs_meta_type_op_t {$/;"	s
ecs_meta_type_op_t	lib/flecs/flecs.h	/^} ecs_meta_type_op_t;$/;"	t	typeref:struct:ecs_meta_type_op_t
ecs_meta_type_op_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_meta_type_op_t {$/;"	s
ecs_meta_type_op_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_meta_type_op_t;$/;"	t	typeref:struct:ecs_meta_type_op_t
ecs_meta_type_serialized_init	lib/flecs/flecs.c	/^void ecs_meta_type_serialized_init($/;"	f	typeref:typename:void
ecs_meta_type_serialized_init	lib/flecs/src/addons/meta/serialized.c	/^void ecs_meta_type_serialized_init($/;"	f	typeref:typename:void
ecs_mini	lib/flecs/flecs.c	/^ecs_world_t *ecs_mini(void) {$/;"	f	typeref:typename:ecs_world_t *
ecs_mini	lib/flecs/src/world.c	/^ecs_world_t *ecs_mini(void) {$/;"	f	typeref:typename:ecs_world_t *
ecs_mixin_kind_t	lib/flecs/flecs.c	/^typedef enum ecs_mixin_kind_t {$/;"	g	file:
ecs_mixin_kind_t	lib/flecs/flecs.c	/^} ecs_mixin_kind_t;$/;"	t	typeref:enum:ecs_mixin_kind_t	file:
ecs_mixin_kind_t	lib/flecs/src/private_types.h	/^typedef enum ecs_mixin_kind_t {$/;"	g
ecs_mixin_kind_t	lib/flecs/src/private_types.h	/^} ecs_mixin_kind_t;$/;"	t	typeref:enum:ecs_mixin_kind_t
ecs_mixins_t	lib/flecs/flecs.c	/^struct ecs_mixins_t {$/;"	s	file:
ecs_mixins_t	lib/flecs/flecs.h	/^typedef struct ecs_mixins_t ecs_mixins_t;$/;"	t	typeref:struct:ecs_mixins_t
ecs_mixins_t	lib/flecs/include/flecs.h	/^typedef struct ecs_mixins_t ecs_mixins_t;$/;"	t	typeref:struct:ecs_mixins_t
ecs_mixins_t	lib/flecs/src/private_types.h	/^struct ecs_mixins_t {$/;"	s
ecs_modified	lib/flecs/flecs.h	/^#define ecs_modified(/;"	d
ecs_modified	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_modified(/;"	d
ecs_modified_id	lib/flecs/flecs.c	/^void ecs_modified_id($/;"	f	typeref:typename:void
ecs_modified_id	lib/flecs/src/entity.c	/^void ecs_modified_id($/;"	f	typeref:typename:void
ecs_modified_pair	lib/flecs/flecs.h	/^#define ecs_modified_pair(/;"	d
ecs_modified_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_modified_pair(/;"	d
ecs_module_action_t	lib/flecs/flecs.h	/^typedef void (*ecs_module_action_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world)
ecs_module_action_t	lib/flecs/include/flecs.h	/^typedef void (*ecs_module_action_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world)
ecs_module_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_module_init($/;"	f	typeref:typename:ecs_entity_t
ecs_module_init	lib/flecs/src/addons/module.c	/^ecs_entity_t ecs_module_init($/;"	f	typeref:typename:ecs_entity_t
ecs_module_path_from_c	lib/flecs/flecs.c	/^char* ecs_module_path_from_c($/;"	f	typeref:typename:char *
ecs_module_path_from_c	lib/flecs/src/addons/module.c	/^char* ecs_module_path_from_c($/;"	f	typeref:typename:char *
ecs_monitor_set_t	lib/flecs/flecs.c	/^typedef struct ecs_monitor_set_t {$/;"	s	file:
ecs_monitor_set_t	lib/flecs/flecs.c	/^} ecs_monitor_set_t;$/;"	t	typeref:struct:ecs_monitor_set_t	file:
ecs_monitor_set_t	lib/flecs/src/private_types.h	/^typedef struct ecs_monitor_set_t {$/;"	s
ecs_monitor_set_t	lib/flecs/src/private_types.h	/^} ecs_monitor_set_t;$/;"	t	typeref:struct:ecs_monitor_set_t
ecs_monitor_t	lib/flecs/flecs.c	/^typedef struct ecs_monitor_t {$/;"	s	file:
ecs_monitor_t	lib/flecs/flecs.c	/^} ecs_monitor_t;$/;"	t	typeref:struct:ecs_monitor_t	file:
ecs_monitor_t	lib/flecs/src/private_types.h	/^typedef struct ecs_monitor_t {$/;"	s
ecs_monitor_t	lib/flecs/src/private_types.h	/^} ecs_monitor_t;$/;"	t	typeref:struct:ecs_monitor_t
ecs_move	lib/flecs/flecs.h	/^#define ecs_move(/;"	d
ecs_move	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_move(/;"	d
ecs_move_ctor_illegal	lib/flecs/flecs.h	/^inline void ecs_move_ctor_illegal(ecs_world_t* w, ecs_entity_t id, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_move_ctor_illegal	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^inline void ecs_move_ctor_illegal(ecs_world_t* w, ecs_entity_t id, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_move_ctor_t	lib/flecs/flecs.h	/^typedef void (*ecs_move_ctor_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const EcsComponentLifecycle * callbacks,const ecs_entity_t * dst_entity,const ecs_entity_t * src_entity,void * dst_ptr,void * src_ptr,size_t size,int32_t count,void * ctx)
ecs_move_ctor_t	lib/flecs/include/flecs/private/api_types.h	/^typedef void (*ecs_move_ctor_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const EcsComponentLifecycle * callbacks,const ecs_entity_t * dst_entity,const ecs_entity_t * src_entity,void * dst_ptr,void * src_ptr,size_t size,int32_t count,void * ctx)
ecs_move_illegal	lib/flecs/flecs.h	/^inline void ecs_move_illegal(ecs_world_t* w, ecs_entity_t id, const ecs_entity_t*, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_move_illegal	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^inline void ecs_move_illegal(ecs_world_t* w, ecs_entity_t id, const ecs_entity_t*, $/;"	f	namespace:flecs::_	typeref:typename:void
ecs_move_t	lib/flecs/flecs.h	/^typedef void (*ecs_move_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const ecs_entity_t * dst_entity,const ecs_entity_t * src_entity,void * dst_ptr,void * src_ptr,size_t size,int32_t count,void * ctx)
ecs_move_t	lib/flecs/include/flecs/private/api_types.h	/^typedef void (*ecs_move_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const ecs_entity_t * dst_entity,const ecs_entity_t * src_entity,void * dst_ptr,void * src_ptr,size_t size,int32_t count,void * ctx)
ecs_new	lib/flecs/flecs.h	/^#define ecs_new(/;"	d
ecs_new	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_new(/;"	d
ecs_new_entity	lib/flecs/flecs.h	/^#define ecs_new_entity(/;"	d
ecs_new_entity	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_new_entity(/;"	d
ecs_new_from_fullpath	lib/flecs/flecs.h	/^#define ecs_new_from_fullpath(/;"	d
ecs_new_from_fullpath	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_new_from_fullpath(/;"	d
ecs_new_from_path	lib/flecs/flecs.h	/^#define ecs_new_from_path(/;"	d
ecs_new_from_path	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_new_from_path(/;"	d
ecs_new_from_path_w_sep	lib/flecs/flecs.c	/^ecs_entity_t ecs_new_from_path_w_sep($/;"	f	typeref:typename:ecs_entity_t
ecs_new_from_path_w_sep	lib/flecs/src/hierarchy.c	/^ecs_entity_t ecs_new_from_path_w_sep($/;"	f	typeref:typename:ecs_entity_t
ecs_new_id	lib/flecs/flecs.c	/^ecs_entity_t ecs_new_id($/;"	f	typeref:typename:ecs_entity_t
ecs_new_id	lib/flecs/src/entity.c	/^ecs_entity_t ecs_new_id($/;"	f	typeref:typename:ecs_entity_t
ecs_new_low_id	lib/flecs/flecs.c	/^ecs_entity_t ecs_new_low_id($/;"	f	typeref:typename:ecs_entity_t
ecs_new_low_id	lib/flecs/src/entity.c	/^ecs_entity_t ecs_new_low_id($/;"	f	typeref:typename:ecs_entity_t
ecs_new_prefab	lib/flecs/flecs.h	/^#define ecs_new_prefab(/;"	d
ecs_new_prefab	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_new_prefab(/;"	d
ecs_new_w_id	lib/flecs/flecs.c	/^ecs_entity_t ecs_new_w_id($/;"	f	typeref:typename:ecs_entity_t
ecs_new_w_id	lib/flecs/src/entity.c	/^ecs_entity_t ecs_new_w_id($/;"	f	typeref:typename:ecs_entity_t
ecs_new_w_pair	lib/flecs/flecs.h	/^#define ecs_new_w_pair(/;"	d
ecs_new_w_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_new_w_pair(/;"	d
ecs_observable_t	lib/flecs/flecs.h	/^struct ecs_observable_t {$/;"	s
ecs_observable_t	lib/flecs/flecs.h	/^typedef struct ecs_observable_t ecs_observable_t;$/;"	t	typeref:struct:ecs_observable_t
ecs_observable_t	lib/flecs/include/flecs.h	/^typedef struct ecs_observable_t ecs_observable_t;$/;"	t	typeref:struct:ecs_observable_t
ecs_observable_t	lib/flecs/include/flecs/private/api_types.h	/^struct ecs_observable_t {$/;"	s
ecs_observer_default_run_action	lib/flecs/flecs.c	/^bool ecs_observer_default_run_action(ecs_iter_t *it) {$/;"	f	typeref:typename:bool
ecs_observer_default_run_action	lib/flecs/src/observer.c	/^bool ecs_observer_default_run_action(ecs_iter_t *it) {$/;"	f	typeref:typename:bool
ecs_observer_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_observer_desc_t {$/;"	s
ecs_observer_desc_t	lib/flecs/flecs.h	/^} ecs_observer_desc_t;$/;"	t	typeref:struct:ecs_observer_desc_t
ecs_observer_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_observer_desc_t {$/;"	s
ecs_observer_desc_t	lib/flecs/include/flecs.h	/^} ecs_observer_desc_t;$/;"	t	typeref:struct:ecs_observer_desc_t
ecs_observer_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_observer_init($/;"	f	typeref:typename:ecs_entity_t
ecs_observer_init	lib/flecs/src/observer.c	/^ecs_entity_t ecs_observer_init($/;"	f	typeref:typename:ecs_entity_t
ecs_observer_t	lib/flecs/flecs.h	/^struct ecs_observer_t {$/;"	s
ecs_observer_t	lib/flecs/flecs.h	/^typedef struct ecs_observer_t ecs_observer_t;$/;"	t	typeref:struct:ecs_observer_t
ecs_observer_t	lib/flecs/include/flecs.h	/^struct ecs_observer_t {$/;"	s
ecs_observer_t	lib/flecs/include/flecs.h	/^typedef struct ecs_observer_t ecs_observer_t;$/;"	t	typeref:struct:ecs_observer_t
ecs_observer_t_magic	lib/flecs/flecs.c	/^#define ecs_observer_t_magic /;"	d	file:
ecs_observer_t_magic	lib/flecs/src/private_types.h	/^#define ecs_observer_t_magic /;"	d
ecs_offset	lib/flecs/flecs.h	/^#define ecs_offset(/;"	d
ecs_offset	lib/flecs/include/flecs/os_api.h	/^#define ecs_offset(/;"	d
ecs_on_set	lib/flecs/flecs.c	/^void ecs_on_set(EcsIdentifier)(ecs_iter_t *it) {$/;"	f	file:
ecs_on_set	lib/flecs/flecs.h	/^#define ecs_on_set(/;"	d
ecs_on_set	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_on_set(/;"	d
ecs_on_set	lib/flecs/src/bootstrap.c	/^void ecs_on_set(EcsIdentifier)(ecs_iter_t *it) {$/;"	f	file:
ecs_oper_kind_t	lib/flecs/flecs.h	/^typedef enum ecs_oper_kind_t {$/;"	g
ecs_oper_kind_t	lib/flecs/flecs.h	/^} ecs_oper_kind_t;$/;"	t	typeref:enum:ecs_oper_kind_t
ecs_oper_kind_t	lib/flecs/include/flecs.h	/^typedef enum ecs_oper_kind_t {$/;"	g
ecs_oper_kind_t	lib/flecs/include/flecs.h	/^} ecs_oper_kind_t;$/;"	t	typeref:enum:ecs_oper_kind_t
ecs_order_by_action_t	lib/flecs/flecs.h	/^typedef int (*ecs_order_by_action_t)($/;"	t	typeref:typename:int (*)(ecs_entity_t e1,const void * ptr1,ecs_entity_t e2,const void * ptr2)
ecs_order_by_action_t	lib/flecs/include/flecs.h	/^typedef int (*ecs_order_by_action_t)($/;"	t	typeref:typename:int (*)(ecs_entity_t e1,const void * ptr1,ecs_entity_t e2,const void * ptr2)
ecs_os_abort	lib/flecs/flecs.h	/^#define ecs_os_abort(/;"	d
ecs_os_abort	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_abort(/;"	d
ecs_os_adec	lib/flecs/flecs.h	/^#define ecs_os_adec(/;"	d
ecs_os_adec	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_adec(/;"	d
ecs_os_ainc	lib/flecs/flecs.h	/^#define ecs_os_ainc(/;"	d
ecs_os_ainc	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_ainc(/;"	d
ecs_os_alloca	lib/flecs/flecs.h	/^#define ecs_os_alloca(/;"	d
ecs_os_alloca	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_alloca(/;"	d
ecs_os_alloca_n	lib/flecs/flecs.h	/^#define ecs_os_alloca_n(/;"	d
ecs_os_alloca_n	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_alloca_n(/;"	d
ecs_os_alloca_t	lib/flecs/flecs.h	/^#define ecs_os_alloca_t(/;"	d
ecs_os_alloca_t	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_alloca_t(/;"	d
ecs_os_api	lib/flecs/flecs.c	/^ecs_os_api_t ecs_os_api = {$/;"	v	typeref:typename:ecs_os_api_t
ecs_os_api	lib/flecs/src/os_api.c	/^ecs_os_api_t ecs_os_api = {$/;"	v	typeref:typename:ecs_os_api_t
ecs_os_api_abort_t	lib/flecs/flecs.h	/^void (*ecs_os_api_abort_t)($/;"	t	typeref:typename:void (*)(void)
ecs_os_api_abort_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_abort_t)($/;"	t	typeref:typename:void (*)(void)
ecs_os_api_ainc_t	lib/flecs/flecs.h	/^int (*ecs_os_api_ainc_t)($/;"	t	typeref:typename:int (*)(int32_t * value)
ecs_os_api_ainc_t	lib/flecs/include/flecs/os_api.h	/^int (*ecs_os_api_ainc_t)($/;"	t	typeref:typename:int (*)(int32_t * value)
ecs_os_api_calloc	lib/flecs/flecs.c	/^void* ecs_os_api_calloc(ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
ecs_os_api_calloc	lib/flecs/src/os_api.c	/^void* ecs_os_api_calloc(ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
ecs_os_api_calloc_count	lib/flecs/flecs.c	/^int64_t ecs_os_api_calloc_count = 0;$/;"	v	typeref:typename:int64_t
ecs_os_api_calloc_count	lib/flecs/src/os_api.c	/^int64_t ecs_os_api_calloc_count = 0;$/;"	v	typeref:typename:int64_t
ecs_os_api_calloc_t	lib/flecs/flecs.h	/^void* (*ecs_os_api_calloc_t)($/;"	t	typeref:typename:void * (*)(ecs_size_t size)
ecs_os_api_calloc_t	lib/flecs/include/flecs/os_api.h	/^void* (*ecs_os_api_calloc_t)($/;"	t	typeref:typename:void * (*)(ecs_size_t size)
ecs_os_api_cond_broadcast_t	lib/flecs/flecs.h	/^void (*ecs_os_api_cond_broadcast_t)($/;"	t	typeref:typename:void (*)(ecs_os_cond_t cond)
ecs_os_api_cond_broadcast_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_cond_broadcast_t)($/;"	t	typeref:typename:void (*)(ecs_os_cond_t cond)
ecs_os_api_cond_free_t	lib/flecs/flecs.h	/^void (*ecs_os_api_cond_free_t)($/;"	t	typeref:typename:void (*)(ecs_os_cond_t cond)
ecs_os_api_cond_free_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_cond_free_t)($/;"	t	typeref:typename:void (*)(ecs_os_cond_t cond)
ecs_os_api_cond_new_t	lib/flecs/flecs.h	/^ecs_os_cond_t (*ecs_os_api_cond_new_t)($/;"	t	typeref:typename:ecs_os_cond_t (*)(void)
ecs_os_api_cond_new_t	lib/flecs/include/flecs/os_api.h	/^ecs_os_cond_t (*ecs_os_api_cond_new_t)($/;"	t	typeref:typename:ecs_os_cond_t (*)(void)
ecs_os_api_cond_signal_t	lib/flecs/flecs.h	/^void (*ecs_os_api_cond_signal_t)($/;"	t	typeref:typename:void (*)(ecs_os_cond_t cond)
ecs_os_api_cond_signal_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_cond_signal_t)($/;"	t	typeref:typename:void (*)(ecs_os_cond_t cond)
ecs_os_api_cond_wait_t	lib/flecs/flecs.h	/^void (*ecs_os_api_cond_wait_t)($/;"	t	typeref:typename:void (*)(ecs_os_cond_t cond,ecs_os_mutex_t mutex)
ecs_os_api_cond_wait_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_cond_wait_t)($/;"	t	typeref:typename:void (*)(ecs_os_cond_t cond,ecs_os_mutex_t mutex)
ecs_os_api_dlclose_t	lib/flecs/flecs.h	/^void (*ecs_os_api_dlclose_t)($/;"	t	typeref:typename:void (*)(ecs_os_dl_t lib)
ecs_os_api_dlclose_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_dlclose_t)($/;"	t	typeref:typename:void (*)(ecs_os_dl_t lib)
ecs_os_api_dlopen_t	lib/flecs/flecs.h	/^ecs_os_dl_t (*ecs_os_api_dlopen_t)($/;"	t	typeref:typename:ecs_os_dl_t (*)(const char * libname)
ecs_os_api_dlopen_t	lib/flecs/include/flecs/os_api.h	/^ecs_os_dl_t (*ecs_os_api_dlopen_t)($/;"	t	typeref:typename:ecs_os_dl_t (*)(const char * libname)
ecs_os_api_dlproc_t	lib/flecs/flecs.h	/^ecs_os_proc_t (*ecs_os_api_dlproc_t)($/;"	t	typeref:typename:ecs_os_proc_t (*)(ecs_os_dl_t lib,const char * procname)
ecs_os_api_dlproc_t	lib/flecs/include/flecs/os_api.h	/^ecs_os_proc_t (*ecs_os_api_dlproc_t)($/;"	t	typeref:typename:ecs_os_proc_t (*)(ecs_os_dl_t lib,const char * procname)
ecs_os_api_enable_high_timer_resolution_t	lib/flecs/flecs.h	/^void (*ecs_os_api_enable_high_timer_resolution_t)($/;"	t	typeref:typename:void (*)(bool enable)
ecs_os_api_enable_high_timer_resolution_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_enable_high_timer_resolution_t)($/;"	t	typeref:typename:void (*)(bool enable)
ecs_os_api_fini_t	lib/flecs/flecs.h	/^void (*ecs_os_api_fini_t)(void);$/;"	t	typeref:typename:void (*)(void)
ecs_os_api_fini_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_fini_t)(void);$/;"	t	typeref:typename:void (*)(void)
ecs_os_api_free	lib/flecs/flecs.c	/^void ecs_os_api_free(void *ptr) {$/;"	f	typeref:typename:void	file:
ecs_os_api_free	lib/flecs/src/os_api.c	/^void ecs_os_api_free(void *ptr) {$/;"	f	typeref:typename:void	file:
ecs_os_api_free_count	lib/flecs/flecs.c	/^int64_t ecs_os_api_free_count = 0;$/;"	v	typeref:typename:int64_t
ecs_os_api_free_count	lib/flecs/src/os_api.c	/^int64_t ecs_os_api_free_count = 0;$/;"	v	typeref:typename:int64_t
ecs_os_api_free_t	lib/flecs/flecs.h	/^void (*ecs_os_api_free_t)($/;"	t	typeref:typename:void (*)(void * ptr)
ecs_os_api_free_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_free_t)($/;"	t	typeref:typename:void (*)(void * ptr)
ecs_os_api_get_time_t	lib/flecs/flecs.h	/^void (*ecs_os_api_get_time_t)($/;"	t	typeref:typename:void (*)(ecs_time_t * time_out)
ecs_os_api_get_time_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_get_time_t)($/;"	t	typeref:typename:void (*)(ecs_time_t * time_out)
ecs_os_api_init_count	lib/flecs/flecs.c	/^static int ecs_os_api_init_count = 0;$/;"	v	typeref:typename:int	file:
ecs_os_api_init_count	lib/flecs/src/os_api.c	/^static int ecs_os_api_init_count = 0;$/;"	v	typeref:typename:int	file:
ecs_os_api_init_t	lib/flecs/flecs.h	/^void (*ecs_os_api_init_t)(void);$/;"	t	typeref:typename:void (*)(void)
ecs_os_api_init_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_init_t)(void);$/;"	t	typeref:typename:void (*)(void)
ecs_os_api_initialized	lib/flecs/flecs.c	/^static bool ecs_os_api_initialized = false;$/;"	v	typeref:typename:bool	file:
ecs_os_api_initialized	lib/flecs/src/os_api.c	/^static bool ecs_os_api_initialized = false;$/;"	v	typeref:typename:bool	file:
ecs_os_api_initializing	lib/flecs/flecs.c	/^static bool ecs_os_api_initializing = false;$/;"	v	typeref:typename:bool	file:
ecs_os_api_initializing	lib/flecs/src/os_api.c	/^static bool ecs_os_api_initializing = false;$/;"	v	typeref:typename:bool	file:
ecs_os_api_log_t	lib/flecs/flecs.h	/^void (*ecs_os_api_log_t)($/;"	t	typeref:typename:void (*)(int32_t level,const char * file,int32_t line,const char * msg)
ecs_os_api_log_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_log_t)($/;"	t	typeref:typename:void (*)(int32_t level,const char * file,int32_t line,const char * msg)
ecs_os_api_malloc	lib/flecs/flecs.c	/^void* ecs_os_api_malloc(ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
ecs_os_api_malloc	lib/flecs/src/os_api.c	/^void* ecs_os_api_malloc(ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
ecs_os_api_malloc_count	lib/flecs/flecs.c	/^int64_t ecs_os_api_malloc_count = 0;$/;"	v	typeref:typename:int64_t
ecs_os_api_malloc_count	lib/flecs/src/os_api.c	/^int64_t ecs_os_api_malloc_count = 0;$/;"	v	typeref:typename:int64_t
ecs_os_api_malloc_t	lib/flecs/flecs.h	/^void* (*ecs_os_api_malloc_t)($/;"	t	typeref:typename:void * (*)(ecs_size_t size)
ecs_os_api_malloc_t	lib/flecs/include/flecs/os_api.h	/^void* (*ecs_os_api_malloc_t)($/;"	t	typeref:typename:void * (*)(ecs_size_t size)
ecs_os_api_module_to_dl	lib/flecs/flecs.c	/^char* ecs_os_api_module_to_dl(const char *module) {$/;"	f	typeref:typename:char *	file:
ecs_os_api_module_to_dl	lib/flecs/src/os_api.c	/^char* ecs_os_api_module_to_dl(const char *module) {$/;"	f	typeref:typename:char *	file:
ecs_os_api_module_to_etc	lib/flecs/flecs.c	/^char* ecs_os_api_module_to_etc(const char *module) {$/;"	f	typeref:typename:char *	file:
ecs_os_api_module_to_etc	lib/flecs/src/os_api.c	/^char* ecs_os_api_module_to_etc(const char *module) {$/;"	f	typeref:typename:char *	file:
ecs_os_api_module_to_path_t	lib/flecs/flecs.h	/^char* (*ecs_os_api_module_to_path_t)($/;"	t	typeref:typename:char * (*)(const char * module_id)
ecs_os_api_module_to_path_t	lib/flecs/include/flecs/os_api.h	/^char* (*ecs_os_api_module_to_path_t)($/;"	t	typeref:typename:char * (*)(const char * module_id)
ecs_os_api_mutex_free_t	lib/flecs/flecs.h	/^void (*ecs_os_api_mutex_free_t)($/;"	t	typeref:typename:void (*)(ecs_os_mutex_t mutex)
ecs_os_api_mutex_free_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_mutex_free_t)($/;"	t	typeref:typename:void (*)(ecs_os_mutex_t mutex)
ecs_os_api_mutex_lock_t	lib/flecs/flecs.h	/^void (*ecs_os_api_mutex_lock_t)($/;"	t	typeref:typename:void (*)(ecs_os_mutex_t mutex)
ecs_os_api_mutex_lock_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_mutex_lock_t)($/;"	t	typeref:typename:void (*)(ecs_os_mutex_t mutex)
ecs_os_api_mutex_new_t	lib/flecs/flecs.h	/^ecs_os_mutex_t (*ecs_os_api_mutex_new_t)($/;"	t	typeref:typename:ecs_os_mutex_t (*)(void)
ecs_os_api_mutex_new_t	lib/flecs/include/flecs/os_api.h	/^ecs_os_mutex_t (*ecs_os_api_mutex_new_t)($/;"	t	typeref:typename:ecs_os_mutex_t (*)(void)
ecs_os_api_mutex_unlock_t	lib/flecs/flecs.h	/^void (*ecs_os_api_mutex_unlock_t)($/;"	t	typeref:typename:void (*)(ecs_os_mutex_t mutex)
ecs_os_api_mutex_unlock_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_mutex_unlock_t)($/;"	t	typeref:typename:void (*)(ecs_os_mutex_t mutex)
ecs_os_api_now_t	lib/flecs/flecs.h	/^uint64_t (*ecs_os_api_now_t)(void);$/;"	t	typeref:typename:uint64_t (*)(void)
ecs_os_api_now_t	lib/flecs/include/flecs/os_api.h	/^uint64_t (*ecs_os_api_now_t)(void);$/;"	t	typeref:typename:uint64_t (*)(void)
ecs_os_api_realloc	lib/flecs/flecs.c	/^void* ecs_os_api_realloc(void *ptr, ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
ecs_os_api_realloc	lib/flecs/src/os_api.c	/^void* ecs_os_api_realloc(void *ptr, ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
ecs_os_api_realloc_count	lib/flecs/flecs.c	/^int64_t ecs_os_api_realloc_count = 0;$/;"	v	typeref:typename:int64_t
ecs_os_api_realloc_count	lib/flecs/src/os_api.c	/^int64_t ecs_os_api_realloc_count = 0;$/;"	v	typeref:typename:int64_t
ecs_os_api_realloc_t	lib/flecs/flecs.h	/^void* (*ecs_os_api_realloc_t)($/;"	t	typeref:typename:void * (*)(void * ptr,ecs_size_t size)
ecs_os_api_realloc_t	lib/flecs/include/flecs/os_api.h	/^void* (*ecs_os_api_realloc_t)($/;"	t	typeref:typename:void * (*)(void * ptr,ecs_size_t size)
ecs_os_api_sleep_t	lib/flecs/flecs.h	/^void (*ecs_os_api_sleep_t)($/;"	t	typeref:typename:void (*)(int32_t sec,int32_t nanosec)
ecs_os_api_sleep_t	lib/flecs/include/flecs/os_api.h	/^void (*ecs_os_api_sleep_t)($/;"	t	typeref:typename:void (*)(int32_t sec,int32_t nanosec)
ecs_os_api_strdup	lib/flecs/flecs.c	/^char* ecs_os_api_strdup(const char *str) {$/;"	f	typeref:typename:char *	file:
ecs_os_api_strdup	lib/flecs/src/os_api.c	/^char* ecs_os_api_strdup(const char *str) {$/;"	f	typeref:typename:char *	file:
ecs_os_api_strdup_t	lib/flecs/flecs.h	/^char* (*ecs_os_api_strdup_t)($/;"	t	typeref:typename:char * (*)(const char * str)
ecs_os_api_strdup_t	lib/flecs/include/flecs/os_api.h	/^char* (*ecs_os_api_strdup_t)($/;"	t	typeref:typename:char * (*)(const char * str)
ecs_os_api_t	lib/flecs/flecs.h	/^typedef struct ecs_os_api_t {$/;"	s
ecs_os_api_t	lib/flecs/flecs.h	/^} ecs_os_api_t;$/;"	t	typeref:struct:ecs_os_api_t
ecs_os_api_t	lib/flecs/include/flecs/os_api.h	/^typedef struct ecs_os_api_t {$/;"	s
ecs_os_api_t	lib/flecs/include/flecs/os_api.h	/^} ecs_os_api_t;$/;"	t	typeref:struct:ecs_os_api_t
ecs_os_api_thread_join_t	lib/flecs/flecs.h	/^void* (*ecs_os_api_thread_join_t)($/;"	t	typeref:typename:void * (*)(ecs_os_thread_t thread)
ecs_os_api_thread_join_t	lib/flecs/include/flecs/os_api.h	/^void* (*ecs_os_api_thread_join_t)($/;"	t	typeref:typename:void * (*)(ecs_os_thread_t thread)
ecs_os_api_thread_new_t	lib/flecs/flecs.h	/^ecs_os_thread_t (*ecs_os_api_thread_new_t)($/;"	t	typeref:typename:ecs_os_thread_t (*)(ecs_os_thread_callback_t callback,void * param)
ecs_os_api_thread_new_t	lib/flecs/include/flecs/os_api.h	/^ecs_os_thread_t (*ecs_os_api_thread_new_t)($/;"	t	typeref:typename:ecs_os_thread_t (*)(ecs_os_thread_callback_t callback,void * param)
ecs_os_calloc	lib/flecs/flecs.h	/^#define ecs_os_calloc(/;"	d
ecs_os_calloc	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_calloc(/;"	d
ecs_os_calloc_n	lib/flecs/flecs.h	/^#define ecs_os_calloc_n(/;"	d
ecs_os_calloc_n	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_calloc_n(/;"	d
ecs_os_calloc_t	lib/flecs/flecs.h	/^#define ecs_os_calloc_t(/;"	d
ecs_os_calloc_t	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_calloc_t(/;"	d
ecs_os_cond_broadcast	lib/flecs/flecs.h	/^#define ecs_os_cond_broadcast(/;"	d
ecs_os_cond_broadcast	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_cond_broadcast(/;"	d
ecs_os_cond_free	lib/flecs/flecs.h	/^#define ecs_os_cond_free(/;"	d
ecs_os_cond_free	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_cond_free(/;"	d
ecs_os_cond_new	lib/flecs/flecs.h	/^#define ecs_os_cond_new(/;"	d
ecs_os_cond_new	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_cond_new(/;"	d
ecs_os_cond_signal	lib/flecs/flecs.h	/^#define ecs_os_cond_signal(/;"	d
ecs_os_cond_signal	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_cond_signal(/;"	d
ecs_os_cond_t	lib/flecs/flecs.h	/^typedef uintptr_t ecs_os_cond_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_cond_t	lib/flecs/include/flecs/os_api.h	/^typedef uintptr_t ecs_os_cond_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_cond_wait	lib/flecs/flecs.h	/^#define ecs_os_cond_wait(/;"	d
ecs_os_cond_wait	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_cond_wait(/;"	d
ecs_os_dbg	lib/flecs/flecs.c	/^void ecs_os_dbg($/;"	f	typeref:typename:void
ecs_os_dbg	lib/flecs/src/os_api.c	/^void ecs_os_dbg($/;"	f	typeref:typename:void
ecs_os_dl_t	lib/flecs/flecs.h	/^typedef uintptr_t ecs_os_dl_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_dl_t	lib/flecs/include/flecs/os_api.h	/^typedef uintptr_t ecs_os_dl_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_dlclose	lib/flecs/flecs.h	/^#define ecs_os_dlclose(/;"	d
ecs_os_dlclose	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_dlclose(/;"	d
ecs_os_dlopen	lib/flecs/flecs.h	/^#define ecs_os_dlopen(/;"	d
ecs_os_dlopen	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_dlopen(/;"	d
ecs_os_dlproc	lib/flecs/flecs.h	/^#define ecs_os_dlproc(/;"	d
ecs_os_dlproc	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_dlproc(/;"	d
ecs_os_enable_high_timer_resolution	lib/flecs/flecs.c	/^void ecs_os_enable_high_timer_resolution(bool enable) {$/;"	f	typeref:typename:void
ecs_os_enable_high_timer_resolution	lib/flecs/src/os_api.c	/^void ecs_os_enable_high_timer_resolution(bool enable) {$/;"	f	typeref:typename:void
ecs_os_err	lib/flecs/flecs.c	/^void ecs_os_err($/;"	f	typeref:typename:void
ecs_os_err	lib/flecs/src/os_api.c	/^void ecs_os_err($/;"	f	typeref:typename:void
ecs_os_fatal	lib/flecs/flecs.c	/^void ecs_os_fatal($/;"	f	typeref:typename:void
ecs_os_fatal	lib/flecs/src/os_api.c	/^void ecs_os_fatal($/;"	f	typeref:typename:void
ecs_os_fini	lib/flecs/flecs.c	/^void ecs_os_fini(void) {$/;"	f	typeref:typename:void
ecs_os_fini	lib/flecs/src/os_api.c	/^void ecs_os_fini(void) {$/;"	f	typeref:typename:void
ecs_os_fopen	lib/flecs/flecs.h	/^#define ecs_os_fopen(/;"	d
ecs_os_fopen	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_fopen(/;"	d
ecs_os_free	lib/flecs/flecs.h	/^#define ecs_os_free(/;"	d
ecs_os_free	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_free(/;"	d
ecs_os_get_time	lib/flecs/flecs.h	/^#define ecs_os_get_time(/;"	d
ecs_os_get_time	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_get_time(/;"	d
ecs_os_gettime	lib/flecs/flecs.c	/^void ecs_os_gettime(ecs_time_t *time) {$/;"	f	typeref:typename:void	file:
ecs_os_gettime	lib/flecs/src/os_api.c	/^void ecs_os_gettime(ecs_time_t *time) {$/;"	f	typeref:typename:void	file:
ecs_os_has_dl	lib/flecs/flecs.c	/^bool ecs_os_has_dl(void) {$/;"	f	typeref:typename:bool
ecs_os_has_dl	lib/flecs/src/os_api.c	/^bool ecs_os_has_dl(void) {$/;"	f	typeref:typename:bool
ecs_os_has_heap	lib/flecs/flecs.c	/^bool ecs_os_has_heap(void) {$/;"	f	typeref:typename:bool
ecs_os_has_heap	lib/flecs/src/os_api.c	/^bool ecs_os_has_heap(void) {$/;"	f	typeref:typename:bool
ecs_os_has_logging	lib/flecs/flecs.c	/^bool ecs_os_has_logging(void) {$/;"	f	typeref:typename:bool
ecs_os_has_logging	lib/flecs/src/os_api.c	/^bool ecs_os_has_logging(void) {$/;"	f	typeref:typename:bool
ecs_os_has_modules	lib/flecs/flecs.c	/^bool ecs_os_has_modules(void) {$/;"	f	typeref:typename:bool
ecs_os_has_modules	lib/flecs/src/os_api.c	/^bool ecs_os_has_modules(void) {$/;"	f	typeref:typename:bool
ecs_os_has_threading	lib/flecs/flecs.c	/^bool ecs_os_has_threading(void) {$/;"	f	typeref:typename:bool
ecs_os_has_threading	lib/flecs/src/os_api.c	/^bool ecs_os_has_threading(void) {$/;"	f	typeref:typename:bool
ecs_os_has_time	lib/flecs/flecs.c	/^bool ecs_os_has_time(void) {$/;"	f	typeref:typename:bool
ecs_os_has_time	lib/flecs/src/os_api.c	/^bool ecs_os_has_time(void) {$/;"	f	typeref:typename:bool
ecs_os_init	lib/flecs/flecs.c	/^void ecs_os_init(void)$/;"	f	typeref:typename:void
ecs_os_init	lib/flecs/src/os_api.c	/^void ecs_os_init(void)$/;"	f	typeref:typename:void
ecs_os_malloc	lib/flecs/flecs.h	/^#define ecs_os_malloc(/;"	d
ecs_os_malloc	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_malloc(/;"	d
ecs_os_malloc_n	lib/flecs/flecs.h	/^#define ecs_os_malloc_n(/;"	d
ecs_os_malloc_n	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_malloc_n(/;"	d
ecs_os_malloc_t	lib/flecs/flecs.h	/^#define ecs_os_malloc_t(/;"	d
ecs_os_malloc_t	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_malloc_t(/;"	d
ecs_os_memcmp	lib/flecs/flecs.h	/^#define ecs_os_memcmp(/;"	d
ecs_os_memcmp	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memcmp(/;"	d
ecs_os_memcmp_t	lib/flecs/flecs.h	/^#define ecs_os_memcmp_t(/;"	d
ecs_os_memcmp_t	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memcmp_t(/;"	d
ecs_os_memcpy	lib/flecs/flecs.h	/^#define ecs_os_memcpy(/;"	d
ecs_os_memcpy	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memcpy(/;"	d
ecs_os_memcpy_n	lib/flecs/flecs.h	/^#define ecs_os_memcpy_n(/;"	d
ecs_os_memcpy_n	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memcpy_n(/;"	d
ecs_os_memcpy_t	lib/flecs/flecs.h	/^#define ecs_os_memcpy_t(/;"	d
ecs_os_memcpy_t	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memcpy_t(/;"	d
ecs_os_memdup	lib/flecs/flecs.c	/^void* ecs_os_memdup($/;"	f	typeref:typename:void *
ecs_os_memdup	lib/flecs/src/misc.c	/^void* ecs_os_memdup($/;"	f	typeref:typename:void *
ecs_os_memdup_n	lib/flecs/flecs.h	/^#define ecs_os_memdup_n(/;"	d
ecs_os_memdup_n	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memdup_n(/;"	d
ecs_os_memdup_t	lib/flecs/flecs.h	/^#define ecs_os_memdup_t(/;"	d
ecs_os_memdup_t	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memdup_t(/;"	d
ecs_os_memmove	lib/flecs/flecs.h	/^#define ecs_os_memmove(/;"	d
ecs_os_memmove	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memmove(/;"	d
ecs_os_memset	lib/flecs/flecs.h	/^#define ecs_os_memset(/;"	d
ecs_os_memset	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memset(/;"	d
ecs_os_memset_n	lib/flecs/flecs.h	/^#define ecs_os_memset_n(/;"	d
ecs_os_memset_n	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memset_n(/;"	d
ecs_os_memset_t	lib/flecs/flecs.h	/^#define ecs_os_memset_t(/;"	d
ecs_os_memset_t	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_memset_t(/;"	d
ecs_os_module_to_dl	lib/flecs/flecs.h	/^#define ecs_os_module_to_dl(/;"	d
ecs_os_module_to_dl	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_module_to_dl(/;"	d
ecs_os_module_to_etc	lib/flecs/flecs.h	/^#define ecs_os_module_to_etc(/;"	d
ecs_os_module_to_etc	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_module_to_etc(/;"	d
ecs_os_mutex_free	lib/flecs/flecs.h	/^#define ecs_os_mutex_free(/;"	d
ecs_os_mutex_free	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_mutex_free(/;"	d
ecs_os_mutex_lock	lib/flecs/flecs.h	/^#define ecs_os_mutex_lock(/;"	d
ecs_os_mutex_lock	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_mutex_lock(/;"	d
ecs_os_mutex_new	lib/flecs/flecs.h	/^#define ecs_os_mutex_new(/;"	d
ecs_os_mutex_new	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_mutex_new(/;"	d
ecs_os_mutex_t	lib/flecs/flecs.h	/^typedef uintptr_t ecs_os_mutex_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_mutex_t	lib/flecs/include/flecs/os_api.h	/^typedef uintptr_t ecs_os_mutex_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_mutex_unlock	lib/flecs/flecs.h	/^#define ecs_os_mutex_unlock(/;"	d
ecs_os_mutex_unlock	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_mutex_unlock(/;"	d
ecs_os_now	lib/flecs/flecs.h	/^#define ecs_os_now(/;"	d
ecs_os_now	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_now(/;"	d
ecs_os_proc_t	lib/flecs/flecs.h	/^typedef void (*ecs_os_proc_t)(void);$/;"	t	typeref:typename:void (*)(void)
ecs_os_proc_t	lib/flecs/include/flecs/os_api.h	/^typedef void (*ecs_os_proc_t)(void);$/;"	t	typeref:typename:void (*)(void)
ecs_os_realloc	lib/flecs/flecs.h	/^#define ecs_os_realloc(/;"	d
ecs_os_realloc	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_realloc(/;"	d
ecs_os_realloc_n	lib/flecs/flecs.h	/^#define ecs_os_realloc_n(/;"	d
ecs_os_realloc_n	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_realloc_n(/;"	d
ecs_os_realloc_t	lib/flecs/flecs.h	/^#define ecs_os_realloc_t(/;"	d
ecs_os_realloc_t	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_realloc_t(/;"	d
ecs_os_set_api	lib/flecs/flecs.c	/^void ecs_os_set_api($/;"	f	typeref:typename:void
ecs_os_set_api	lib/flecs/src/os_api.c	/^void ecs_os_set_api($/;"	f	typeref:typename:void
ecs_os_set_api_defaults	lib/flecs/flecs.c	/^void ecs_os_set_api_defaults(void)$/;"	f	typeref:typename:void
ecs_os_set_api_defaults	lib/flecs/src/os_api.c	/^void ecs_os_set_api_defaults(void)$/;"	f	typeref:typename:void
ecs_os_sleep	lib/flecs/flecs.h	/^#define ecs_os_sleep(/;"	d
ecs_os_sleep	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_sleep(/;"	d
ecs_os_sock_t	lib/flecs/flecs.h	/^typedef uintptr_t ecs_os_sock_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_sock_t	lib/flecs/include/flecs/os_api.h	/^typedef uintptr_t ecs_os_sock_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_sprintf	lib/flecs/flecs.h	/^#define ecs_os_sprintf(/;"	d
ecs_os_sprintf	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_sprintf(/;"	d
ecs_os_strcat	lib/flecs/flecs.h	/^#define ecs_os_strcat(/;"	d
ecs_os_strcat	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_strcat(/;"	d
ecs_os_strcmp	lib/flecs/flecs.h	/^#define ecs_os_strcmp(/;"	d
ecs_os_strcmp	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_strcmp(/;"	d
ecs_os_strcpy	lib/flecs/flecs.h	/^#define ecs_os_strcpy(/;"	d
ecs_os_strcpy	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_strcpy(/;"	d
ecs_os_strdup	lib/flecs/flecs.h	/^#define ecs_os_strdup(/;"	d
ecs_os_strdup	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_strdup(/;"	d
ecs_os_strerror	lib/flecs/flecs.c	/^const char* ecs_os_strerror(int err) {$/;"	f	typeref:typename:const char *
ecs_os_strerror	lib/flecs/src/os_api.c	/^const char* ecs_os_strerror(int err) {$/;"	f	typeref:typename:const char *
ecs_os_strlen	lib/flecs/flecs.h	/^#define ecs_os_strlen(/;"	d
ecs_os_strlen	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_strlen(/;"	d
ecs_os_strncmp	lib/flecs/flecs.h	/^#define ecs_os_strncmp(/;"	d
ecs_os_strncmp	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_strncmp(/;"	d
ecs_os_strncpy	lib/flecs/flecs.h	/^#define ecs_os_strncpy(/;"	d
ecs_os_strncpy	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_strncpy(/;"	d
ecs_os_strset	lib/flecs/flecs.h	/^#define ecs_os_strset(/;"	d
ecs_os_strset	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_strset(/;"	d
ecs_os_thread_callback_t	lib/flecs/flecs.h	/^void* (*ecs_os_thread_callback_t)($/;"	t	typeref:typename:void * (*)(void *)
ecs_os_thread_callback_t	lib/flecs/include/flecs/os_api.h	/^void* (*ecs_os_thread_callback_t)($/;"	t	typeref:typename:void * (*)(void *)
ecs_os_thread_join	lib/flecs/flecs.h	/^#define ecs_os_thread_join(/;"	d
ecs_os_thread_join	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_thread_join(/;"	d
ecs_os_thread_new	lib/flecs/flecs.h	/^#define ecs_os_thread_new(/;"	d
ecs_os_thread_new	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_thread_new(/;"	d
ecs_os_thread_t	lib/flecs/flecs.h	/^typedef uintptr_t ecs_os_thread_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_thread_t	lib/flecs/include/flecs/os_api.h	/^typedef uintptr_t ecs_os_thread_t;$/;"	t	typeref:typename:uintptr_t
ecs_os_trace	lib/flecs/flecs.c	/^void ecs_os_trace($/;"	f	typeref:typename:void
ecs_os_trace	lib/flecs/src/os_api.c	/^void ecs_os_trace($/;"	f	typeref:typename:void
ecs_os_vsprintf	lib/flecs/flecs.h	/^#define ecs_os_vsprintf(/;"	d
ecs_os_vsprintf	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_vsprintf(/;"	d
ecs_os_warn	lib/flecs/flecs.c	/^void ecs_os_warn($/;"	f	typeref:typename:void
ecs_os_warn	lib/flecs/src/os_api.c	/^void ecs_os_warn($/;"	f	typeref:typename:void
ecs_os_zeromem	lib/flecs/flecs.h	/^#define ecs_os_zeromem(/;"	d
ecs_os_zeromem	lib/flecs/include/flecs/os_api.h	/^#define ecs_os_zeromem(/;"	d
ecs_owns	lib/flecs/flecs.h	/^#define ecs_owns(/;"	d
ecs_owns	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_owns(/;"	d
ecs_owns_id	lib/flecs/flecs.h	/^#define ecs_owns_id(/;"	d
ecs_owns_id	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_owns_id(/;"	d
ecs_owns_pair	lib/flecs/flecs.h	/^#define ecs_owns_pair(/;"	d
ecs_owns_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_owns_pair(/;"	d
ecs_page_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_page_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_page_iter	lib/flecs/src/iter.c	/^ecs_iter_t ecs_page_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_page_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_page_iter_t {$/;"	s
ecs_page_iter_t	lib/flecs/flecs.h	/^} ecs_page_iter_t;$/;"	t	typeref:struct:ecs_page_iter_t
ecs_page_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_page_iter_t {$/;"	s
ecs_page_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_page_iter_t;$/;"	t	typeref:struct:ecs_page_iter_t
ecs_page_next	lib/flecs/flecs.c	/^bool ecs_page_next($/;"	f	typeref:typename:bool
ecs_page_next	lib/flecs/src/iter.c	/^bool ecs_page_next($/;"	f	typeref:typename:bool
ecs_page_next_instanced	lib/flecs/flecs.c	/^bool ecs_page_next_instanced($/;"	f	typeref:typename:bool	file:
ecs_page_next_instanced	lib/flecs/src/iter.c	/^bool ecs_page_next_instanced($/;"	f	typeref:typename:bool	file:
ecs_pair	lib/flecs/flecs.h	/^#define ecs_pair(/;"	d
ecs_pair	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_pair(/;"	d
ecs_pair_first	lib/flecs/flecs.h	/^#define ecs_pair_first(/;"	d
ecs_pair_first	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_pair_first(/;"	d
ecs_pair_object	lib/flecs/flecs.h	/^#define ecs_pair_object /;"	d
ecs_pair_object	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_pair_object /;"	d
ecs_pair_relation	lib/flecs/flecs.h	/^#define ecs_pair_relation /;"	d
ecs_pair_relation	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_pair_relation /;"	d
ecs_pair_second	lib/flecs/flecs.h	/^#define ecs_pair_second(/;"	d
ecs_pair_second	lib/flecs/include/flecs/private/api_defines.h	/^#define ecs_pair_second(/;"	d
ecs_parse_digit	lib/flecs/flecs.c	/^const char* ecs_parse_digit($/;"	f	typeref:typename:const char *
ecs_parse_digit	lib/flecs/src/addons/parser.c	/^const char* ecs_parse_digit($/;"	f	typeref:typename:const char *
ecs_parse_eol_and_whitespace	lib/flecs/flecs.c	/^const char* ecs_parse_eol_and_whitespace($/;"	f	typeref:typename:const char *
ecs_parse_eol_and_whitespace	lib/flecs/src/addons/parser.c	/^const char* ecs_parse_eol_and_whitespace($/;"	f	typeref:typename:const char *
ecs_parse_expr	lib/flecs/flecs.c	/^const char* ecs_parse_expr($/;"	f	typeref:typename:const char *
ecs_parse_expr	lib/flecs/src/addons/expr/deserialize.c	/^const char* ecs_parse_expr($/;"	f	typeref:typename:const char *
ecs_parse_expr_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_parse_expr_desc_t {$/;"	s
ecs_parse_expr_desc_t	lib/flecs/flecs.h	/^} ecs_parse_expr_desc_t;$/;"	t	typeref:struct:ecs_parse_expr_desc_t
ecs_parse_expr_desc_t	lib/flecs/include/flecs/addons/expr.h	/^typedef struct ecs_parse_expr_desc_t {$/;"	s
ecs_parse_expr_desc_t	lib/flecs/include/flecs/addons/expr.h	/^} ecs_parse_expr_desc_t;$/;"	t	typeref:struct:ecs_parse_expr_desc_t
ecs_parse_expr_token	lib/flecs/flecs.c	/^const char *ecs_parse_expr_token($/;"	f	typeref:typename:const char *
ecs_parse_expr_token	lib/flecs/src/addons/expr/deserialize.c	/^const char *ecs_parse_expr_token($/;"	f	typeref:typename:const char *
ecs_parse_fluff	lib/flecs/flecs.c	/^const char* ecs_parse_fluff($/;"	f	typeref:typename:const char *
ecs_parse_fluff	lib/flecs/src/addons/parser.c	/^const char* ecs_parse_fluff($/;"	f	typeref:typename:const char *
ecs_parse_identifier	lib/flecs/flecs.c	/^const char* ecs_parse_identifier($/;"	f	typeref:typename:const char *	file:
ecs_parse_identifier	lib/flecs/src/addons/parser.c	/^const char* ecs_parse_identifier($/;"	f	typeref:typename:const char *	file:
ecs_parse_json	lib/flecs/flecs.c	/^const char* ecs_parse_json($/;"	f	typeref:typename:const char *
ecs_parse_json	lib/flecs/src/addons/json/deserialize.c	/^const char* ecs_parse_json($/;"	f	typeref:typename:const char *
ecs_parse_json_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_parse_json_desc_t {$/;"	s
ecs_parse_json_desc_t	lib/flecs/flecs.h	/^} ecs_parse_json_desc_t;$/;"	t	typeref:struct:ecs_parse_json_desc_t
ecs_parse_json_desc_t	lib/flecs/include/flecs/addons/json.h	/^typedef struct ecs_parse_json_desc_t {$/;"	s
ecs_parse_json_desc_t	lib/flecs/include/flecs/addons/json.h	/^} ecs_parse_json_desc_t;$/;"	t	typeref:struct:ecs_parse_json_desc_t
ecs_parse_term	lib/flecs/flecs.c	/^char* ecs_parse_term($/;"	f	typeref:typename:char *
ecs_parse_term	lib/flecs/src/addons/parser.c	/^char* ecs_parse_term($/;"	f	typeref:typename:char *
ecs_parse_token	lib/flecs/flecs.c	/^const char* ecs_parse_token($/;"	f	typeref:typename:const char *
ecs_parse_token	lib/flecs/src/addons/parser.c	/^const char* ecs_parse_token($/;"	f	typeref:typename:const char *
ecs_parse_whitespace	lib/flecs/flecs.c	/^const char* ecs_parse_whitespace($/;"	f	typeref:typename:const char *
ecs_parse_whitespace	lib/flecs/src/addons/parser.c	/^const char* ecs_parse_whitespace($/;"	f	typeref:typename:const char *
ecs_parser_error	lib/flecs/flecs.h	/^#define ecs_parser_error(/;"	d
ecs_parser_error	lib/flecs/include/flecs/addons/log.h	/^#define ecs_parser_error(/;"	d
ecs_parser_errorv	lib/flecs/flecs.h	/^#define ecs_parser_errorv(/;"	d
ecs_parser_errorv	lib/flecs/include/flecs/addons/log.h	/^#define ecs_parser_errorv(/;"	d
ecs_pipeline_op_t	lib/flecs/flecs.c	/^typedef struct ecs_pipeline_op_t {$/;"	s	file:
ecs_pipeline_op_t	lib/flecs/flecs.c	/^} ecs_pipeline_op_t;$/;"	t	typeref:struct:ecs_pipeline_op_t	file:
ecs_pipeline_op_t	lib/flecs/src/addons/pipeline/pipeline.h	/^typedef struct ecs_pipeline_op_t {$/;"	s
ecs_pipeline_op_t	lib/flecs/src/addons/pipeline/pipeline.h	/^} ecs_pipeline_op_t;$/;"	t	typeref:struct:ecs_pipeline_op_t
ecs_pipeline_reset_iter	lib/flecs/flecs.c	/^int32_t ecs_pipeline_reset_iter($/;"	f	typeref:typename:int32_t
ecs_pipeline_reset_iter	lib/flecs/src/addons/pipeline/pipeline.c	/^int32_t ecs_pipeline_reset_iter($/;"	f	typeref:typename:int32_t
ecs_pipeline_stats_fini	lib/flecs/flecs.c	/^void ecs_pipeline_stats_fini($/;"	f	typeref:typename:void
ecs_pipeline_stats_fini	lib/flecs/src/addons/stats.c	/^void ecs_pipeline_stats_fini($/;"	f	typeref:typename:void
ecs_pipeline_stats_t	lib/flecs/flecs.h	/^typedef struct ecs_pipeline_stats_t {$/;"	s
ecs_pipeline_stats_t	lib/flecs/flecs.h	/^} ecs_pipeline_stats_t;$/;"	t	typeref:struct:ecs_pipeline_stats_t
ecs_pipeline_stats_t	lib/flecs/include/flecs/addons/stats.h	/^typedef struct ecs_pipeline_stats_t {$/;"	s
ecs_pipeline_stats_t	lib/flecs/include/flecs/addons/stats.h	/^} ecs_pipeline_stats_t;$/;"	t	typeref:struct:ecs_pipeline_stats_t
ecs_pipeline_update	lib/flecs/flecs.c	/^bool ecs_pipeline_update($/;"	f	typeref:typename:bool
ecs_pipeline_update	lib/flecs/src/addons/pipeline/pipeline.c	/^bool ecs_pipeline_update($/;"	f	typeref:typename:bool
ecs_plecs_from_file	lib/flecs/flecs.c	/^int ecs_plecs_from_file($/;"	f	typeref:typename:int
ecs_plecs_from_file	lib/flecs/src/addons/plecs.c	/^int ecs_plecs_from_file($/;"	f	typeref:typename:int
ecs_plecs_from_str	lib/flecs/flecs.c	/^int ecs_plecs_from_str($/;"	f	typeref:typename:int
ecs_plecs_from_str	lib/flecs/src/addons/plecs.c	/^int ecs_plecs_from_str($/;"	f	typeref:typename:int
ecs_poly_assert	lib/flecs/flecs.c	/^#define ecs_poly_assert(/;"	d	file:
ecs_poly_assert	lib/flecs/src/private_api.h	/^#define ecs_poly_assert(/;"	d
ecs_poly_fini	lib/flecs/flecs.c	/^#define ecs_poly_fini(/;"	d	file:
ecs_poly_fini	lib/flecs/src/private_api.h	/^#define ecs_poly_fini(/;"	d
ecs_poly_free	lib/flecs/flecs.c	/^#define ecs_poly_free(/;"	d	file:
ecs_poly_free	lib/flecs/src/private_api.h	/^#define ecs_poly_free(/;"	d
ecs_poly_init	lib/flecs/flecs.c	/^#define ecs_poly_init(/;"	d	file:
ecs_poly_init	lib/flecs/src/private_api.h	/^#define ecs_poly_init(/;"	d
ecs_poly_is	lib/flecs/flecs.c	/^#define ecs_poly_is(/;"	d	file:
ecs_poly_is	lib/flecs/src/private_api.h	/^#define ecs_poly_is(/;"	d
ecs_poly_new	lib/flecs/flecs.c	/^#define ecs_poly_new(/;"	d	file:
ecs_poly_new	lib/flecs/src/private_api.h	/^#define ecs_poly_new(/;"	d
ecs_poly_t	lib/flecs/flecs.h	/^typedef void ecs_poly_t;$/;"	t	typeref:typename:void
ecs_poly_t	lib/flecs/include/flecs.h	/^typedef void ecs_poly_t;$/;"	t	typeref:typename:void
ecs_primitive_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_primitive_desc_t {$/;"	s
ecs_primitive_desc_t	lib/flecs/flecs.h	/^} ecs_primitive_desc_t;$/;"	t	typeref:struct:ecs_primitive_desc_t
ecs_primitive_desc_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_primitive_desc_t {$/;"	s
ecs_primitive_desc_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_primitive_desc_t;$/;"	t	typeref:struct:ecs_primitive_desc_t
ecs_primitive_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_primitive_init($/;"	f	typeref:typename:ecs_entity_t
ecs_primitive_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_primitive_init($/;"	f	typeref:typename:ecs_entity_t
ecs_primitive_kind_t	lib/flecs/flecs.h	/^typedef enum ecs_primitive_kind_t {$/;"	g
ecs_primitive_kind_t	lib/flecs/flecs.h	/^} ecs_primitive_kind_t;$/;"	t	typeref:enum:ecs_primitive_kind_t
ecs_primitive_kind_t	lib/flecs/include/flecs/addons/meta.h	/^typedef enum ecs_primitive_kind_t {$/;"	g
ecs_primitive_kind_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_primitive_kind_t;$/;"	t	typeref:enum:ecs_primitive_kind_t
ecs_primitive_to_expr_buf	lib/flecs/flecs.c	/^int ecs_primitive_to_expr_buf($/;"	f	typeref:typename:int
ecs_primitive_to_expr_buf	lib/flecs/src/addons/expr/serialize.c	/^int ecs_primitive_to_expr_buf($/;"	f	typeref:typename:int
ecs_progress	lib/flecs/flecs.c	/^bool ecs_progress($/;"	f	typeref:typename:bool
ecs_progress	lib/flecs/src/addons/pipeline/pipeline.c	/^bool ecs_progress($/;"	f	typeref:typename:bool
ecs_ptr_to_expr	lib/flecs/flecs.c	/^char* ecs_ptr_to_expr($/;"	f	typeref:typename:char *
ecs_ptr_to_expr	lib/flecs/src/addons/expr/serialize.c	/^char* ecs_ptr_to_expr($/;"	f	typeref:typename:char *
ecs_ptr_to_expr_buf	lib/flecs/flecs.c	/^int ecs_ptr_to_expr_buf($/;"	f	typeref:typename:int
ecs_ptr_to_expr_buf	lib/flecs/src/addons/expr/serialize.c	/^int ecs_ptr_to_expr_buf($/;"	f	typeref:typename:int
ecs_ptr_to_json	lib/flecs/flecs.c	/^char* ecs_ptr_to_json($/;"	f	typeref:typename:char *
ecs_ptr_to_json	lib/flecs/src/addons/json/serialize.c	/^char* ecs_ptr_to_json($/;"	f	typeref:typename:char *
ecs_ptr_to_json_buf	lib/flecs/flecs.c	/^int ecs_ptr_to_json_buf($/;"	f	typeref:typename:int
ecs_ptr_to_json_buf	lib/flecs/src/addons/json/serialize.c	/^int ecs_ptr_to_json_buf($/;"	f	typeref:typename:int
ecs_qsort	lib/flecs/flecs.c	/^void ecs_qsort($/;"	f	typeref:typename:void
ecs_qsort	lib/flecs/src/datastructures/qsort.c	/^void ecs_qsort($/;"	f	typeref:typename:void
ecs_qsort_t	lib/flecs/flecs.c	/^#define ecs_qsort_t(/;"	d	file:
ecs_qsort_t	lib/flecs/src/datastructures/qsort.h	/^#define ecs_qsort_t(/;"	d
ecs_quantity_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_quantity_init($/;"	f	typeref:typename:ecs_entity_t
ecs_quantity_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_quantity_init($/;"	f	typeref:typename:ecs_entity_t
ecs_query_changed	lib/flecs/flecs.c	/^bool ecs_query_changed($/;"	f	typeref:typename:bool
ecs_query_changed	lib/flecs/src/query.c	/^bool ecs_query_changed($/;"	f	typeref:typename:bool
ecs_query_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_query_desc_t {$/;"	s
ecs_query_desc_t	lib/flecs/flecs.h	/^} ecs_query_desc_t;$/;"	t	typeref:struct:ecs_query_desc_t
ecs_query_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_query_desc_t {$/;"	s
ecs_query_desc_t	lib/flecs/include/flecs.h	/^} ecs_query_desc_t;$/;"	t	typeref:struct:ecs_query_desc_t
ecs_query_empty_table_count	lib/flecs/flecs.h	/^#define ecs_query_empty_table_count(/;"	d
ecs_query_empty_table_count	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_query_empty_table_count(/;"	d
ecs_query_event_t	lib/flecs/flecs.c	/^typedef struct ecs_query_event_t {$/;"	s	file:
ecs_query_event_t	lib/flecs/flecs.c	/^} ecs_query_event_t;$/;"	t	typeref:struct:ecs_query_event_t	file:
ecs_query_event_t	lib/flecs/src/private_types.h	/^typedef struct ecs_query_event_t {$/;"	s
ecs_query_event_t	lib/flecs/src/private_types.h	/^} ecs_query_event_t;$/;"	t	typeref:struct:ecs_query_event_t
ecs_query_eventkind_t	lib/flecs/flecs.c	/^typedef enum ecs_query_eventkind_t {$/;"	g	file:
ecs_query_eventkind_t	lib/flecs/flecs.c	/^} ecs_query_eventkind_t;$/;"	t	typeref:enum:ecs_query_eventkind_t	file:
ecs_query_eventkind_t	lib/flecs/src/private_types.h	/^typedef enum ecs_query_eventkind_t {$/;"	g
ecs_query_eventkind_t	lib/flecs/src/private_types.h	/^} ecs_query_eventkind_t;$/;"	t	typeref:enum:ecs_query_eventkind_t
ecs_query_fini	lib/flecs/flecs.c	/^void ecs_query_fini($/;"	f	typeref:typename:void
ecs_query_fini	lib/flecs/src/query.c	/^void ecs_query_fini($/;"	f	typeref:typename:void
ecs_query_get_filter	lib/flecs/flecs.c	/^const ecs_filter_t* ecs_query_get_filter($/;"	f	typeref:typename:const ecs_filter_t *
ecs_query_get_filter	lib/flecs/src/query.c	/^const ecs_filter_t* ecs_query_get_filter($/;"	f	typeref:typename:const ecs_filter_t *
ecs_query_init	lib/flecs/flecs.c	/^ecs_query_t* ecs_query_init($/;"	f	typeref:typename:ecs_query_t *
ecs_query_init	lib/flecs/src/query.c	/^ecs_query_t* ecs_query_init($/;"	f	typeref:typename:ecs_query_t *
ecs_query_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_query_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_query_iter	lib/flecs/src/query.c	/^ecs_iter_t ecs_query_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_query_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_query_iter_t {$/;"	s
ecs_query_iter_t	lib/flecs/flecs.h	/^} ecs_query_iter_t;$/;"	t	typeref:struct:ecs_query_iter_t
ecs_query_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_query_iter_t {$/;"	s
ecs_query_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_query_iter_t;$/;"	t	typeref:struct:ecs_query_iter_t
ecs_query_new	lib/flecs/flecs.h	/^#define ecs_query_new(/;"	d
ecs_query_new	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_query_new(/;"	d
ecs_query_next	lib/flecs/flecs.c	/^bool ecs_query_next($/;"	f	typeref:typename:bool
ecs_query_next	lib/flecs/src/query.c	/^bool ecs_query_next($/;"	f	typeref:typename:bool
ecs_query_next_instanced	lib/flecs/flecs.c	/^bool ecs_query_next_instanced($/;"	f	typeref:typename:bool
ecs_query_next_instanced	lib/flecs/src/query.c	/^bool ecs_query_next_instanced($/;"	f	typeref:typename:bool
ecs_query_orphaned	lib/flecs/flecs.c	/^bool ecs_query_orphaned($/;"	f	typeref:typename:bool
ecs_query_orphaned	lib/flecs/src/query.c	/^bool ecs_query_orphaned($/;"	f	typeref:typename:bool
ecs_query_skip	lib/flecs/flecs.c	/^void ecs_query_skip($/;"	f	typeref:typename:void
ecs_query_skip	lib/flecs/src/query.c	/^void ecs_query_skip($/;"	f	typeref:typename:void
ecs_query_stats_t	lib/flecs/flecs.h	/^typedef struct ecs_query_stats_t {$/;"	s
ecs_query_stats_t	lib/flecs/flecs.h	/^} ecs_query_stats_t;$/;"	t	typeref:struct:ecs_query_stats_t
ecs_query_stats_t	lib/flecs/include/flecs/addons/stats.h	/^typedef struct ecs_query_stats_t {$/;"	s
ecs_query_stats_t	lib/flecs/include/flecs/addons/stats.h	/^} ecs_query_stats_t;$/;"	t	typeref:struct:ecs_query_stats_t
ecs_query_t	lib/flecs/flecs.c	/^struct ecs_query_t {$/;"	s	file:
ecs_query_t	lib/flecs/flecs.h	/^typedef struct ecs_query_t ecs_query_t;$/;"	t	typeref:struct:ecs_query_t
ecs_query_t	lib/flecs/include/flecs.h	/^typedef struct ecs_query_t ecs_query_t;$/;"	t	typeref:struct:ecs_query_t
ecs_query_t	lib/flecs/src/private_types.h	/^struct ecs_query_t {$/;"	s
ecs_query_t_magic	lib/flecs/flecs.c	/^#define ecs_query_t_magic /;"	d	file:
ecs_query_t_magic	lib/flecs/src/private_types.h	/^#define ecs_query_t_magic /;"	d
ecs_query_t_mixins	lib/flecs/flecs.c	/^ecs_mixins_t ecs_query_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_query_t_mixins	lib/flecs/src/poly.c	/^ecs_mixins_t ecs_query_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_query_table_count	lib/flecs/flecs.h	/^#define ecs_query_table_count(/;"	d
ecs_query_table_count	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_query_table_count(/;"	d
ecs_query_table_list_t	lib/flecs/flecs.c	/^typedef struct ecs_query_table_list_t {$/;"	s	file:
ecs_query_table_list_t	lib/flecs/flecs.c	/^} ecs_query_table_list_t;$/;"	t	typeref:struct:ecs_query_table_list_t	file:
ecs_query_table_list_t	lib/flecs/src/private_types.h	/^typedef struct ecs_query_table_list_t {$/;"	s
ecs_query_table_list_t	lib/flecs/src/private_types.h	/^} ecs_query_table_list_t;$/;"	t	typeref:struct:ecs_query_table_list_t
ecs_query_table_match_t	lib/flecs/flecs.c	/^struct ecs_query_table_match_t {$/;"	s	file:
ecs_query_table_match_t	lib/flecs/flecs.c	/^typedef struct ecs_query_table_match_t ecs_query_table_match_t;$/;"	t	typeref:struct:ecs_query_table_match_t	file:
ecs_query_table_match_t	lib/flecs/src/private_types.h	/^struct ecs_query_table_match_t {$/;"	s
ecs_query_table_match_t	lib/flecs/src/private_types.h	/^typedef struct ecs_query_table_match_t ecs_query_table_match_t;$/;"	t	typeref:struct:ecs_query_table_match_t
ecs_query_table_node_t	lib/flecs/flecs.c	/^struct ecs_query_table_node_t {$/;"	s	file:
ecs_query_table_node_t	lib/flecs/flecs.h	/^typedef struct ecs_query_table_node_t ecs_query_table_node_t;$/;"	t	typeref:struct:ecs_query_table_node_t
ecs_query_table_node_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_query_table_node_t ecs_query_table_node_t;$/;"	t	typeref:struct:ecs_query_table_node_t
ecs_query_table_node_t	lib/flecs/src/private_types.h	/^struct ecs_query_table_node_t {$/;"	s
ecs_query_table_t	lib/flecs/flecs.c	/^typedef struct ecs_query_table_t {$/;"	s	file:
ecs_query_table_t	lib/flecs/flecs.c	/^} ecs_query_table_t;$/;"	t	typeref:struct:ecs_query_table_t	file:
ecs_query_table_t	lib/flecs/src/private_types.h	/^typedef struct ecs_query_table_t {$/;"	s
ecs_query_table_t	lib/flecs/src/private_types.h	/^} ecs_query_table_t;$/;"	t	typeref:struct:ecs_query_table_t
ecs_quit	lib/flecs/flecs.c	/^void ecs_quit($/;"	f	typeref:typename:void
ecs_quit	lib/flecs/src/world.c	/^void ecs_quit($/;"	f	typeref:typename:void
ecs_record_find	lib/flecs/flecs.c	/^ecs_record_t* ecs_record_find($/;"	f	typeref:typename:ecs_record_t *
ecs_record_find	lib/flecs/src/table.c	/^ecs_record_t* ecs_record_find($/;"	f	typeref:typename:ecs_record_t *
ecs_record_get_column	lib/flecs/flecs.c	/^void* ecs_record_get_column($/;"	f	typeref:typename:void *
ecs_record_get_column	lib/flecs/src/table.c	/^void* ecs_record_get_column($/;"	f	typeref:typename:void *
ecs_record_t	lib/flecs/flecs.h	/^struct ecs_record_t {$/;"	s
ecs_record_t	lib/flecs/flecs.h	/^typedef struct ecs_record_t ecs_record_t;$/;"	t	typeref:struct:ecs_record_t
ecs_record_t	lib/flecs/include/flecs/private/api_types.h	/^struct ecs_record_t {$/;"	s
ecs_record_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_record_t ecs_record_t;$/;"	t	typeref:struct:ecs_record_t
ecs_ref_t	lib/flecs/flecs.h	/^struct ecs_ref_t {$/;"	s
ecs_ref_t	lib/flecs/flecs.h	/^typedef struct ecs_ref_t ecs_ref_t;$/;"	t	typeref:struct:ecs_ref_t
ecs_ref_t	lib/flecs/include/flecs.h	/^typedef struct ecs_ref_t ecs_ref_t;$/;"	t	typeref:struct:ecs_ref_t
ecs_ref_t	lib/flecs/include/flecs/private/api_types.h	/^struct ecs_ref_t {$/;"	s
ecs_relation_monitor_t	lib/flecs/flecs.c	/^typedef struct ecs_relation_monitor_t {$/;"	s	file:
ecs_relation_monitor_t	lib/flecs/flecs.c	/^} ecs_relation_monitor_t;$/;"	t	typeref:struct:ecs_relation_monitor_t	file:
ecs_relation_monitor_t	lib/flecs/src/private_types.h	/^typedef struct ecs_relation_monitor_t {$/;"	s
ecs_relation_monitor_t	lib/flecs/src/private_types.h	/^} ecs_relation_monitor_t;$/;"	t	typeref:struct:ecs_relation_monitor_t
ecs_remove	lib/flecs/flecs.h	/^#define ecs_remove(/;"	d
ecs_remove	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_remove(/;"	d
ecs_remove_all	lib/flecs/flecs.c	/^void ecs_remove_all($/;"	f	typeref:typename:void
ecs_remove_all	lib/flecs/src/entity.c	/^void ecs_remove_all($/;"	f	typeref:typename:void
ecs_remove_id	lib/flecs/flecs.c	/^void ecs_remove_id($/;"	f	typeref:typename:void
ecs_remove_id	lib/flecs/src/entity.c	/^void ecs_remove_id($/;"	f	typeref:typename:void
ecs_remove_pair	lib/flecs/flecs.h	/^#define ecs_remove_pair(/;"	d
ecs_remove_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_remove_pair(/;"	d
ecs_reset_clock	lib/flecs/flecs.c	/^void ecs_reset_clock($/;"	f	typeref:typename:void
ecs_reset_clock	lib/flecs/src/addons/pipeline/pipeline.c	/^void ecs_reset_clock($/;"	f	typeref:typename:void
ecs_rest_ctx_t	lib/flecs/flecs.c	/^} ecs_rest_ctx_t;$/;"	t	typeref:struct:__anona642c0050808	file:
ecs_rest_ctx_t	lib/flecs/src/addons/rest.c	/^} ecs_rest_ctx_t;$/;"	t	typeref:struct:__anond91cde350108	file:
ecs_role_str	lib/flecs/flecs.c	/^const char* ecs_role_str($/;"	f	typeref:typename:const char *
ecs_role_str	lib/flecs/src/entity.c	/^const char* ecs_role_str($/;"	f	typeref:typename:const char *
ecs_rule_each_ctx_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_each_ctx_t {$/;"	s	file:
ecs_rule_each_ctx_t	lib/flecs/flecs.c	/^} ecs_rule_each_ctx_t;$/;"	t	typeref:struct:ecs_rule_each_ctx_t	file:
ecs_rule_each_ctx_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_each_ctx_t {$/;"	s	file:
ecs_rule_each_ctx_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_each_ctx_t;$/;"	t	typeref:struct:ecs_rule_each_ctx_t	file:
ecs_rule_filter_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_filter_t {$/;"	s	file:
ecs_rule_filter_t	lib/flecs/flecs.c	/^} ecs_rule_filter_t;$/;"	t	typeref:struct:ecs_rule_filter_t	file:
ecs_rule_filter_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_filter_t {$/;"	s	file:
ecs_rule_filter_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_filter_t;$/;"	t	typeref:struct:ecs_rule_filter_t	file:
ecs_rule_find_var	lib/flecs/flecs.c	/^int32_t ecs_rule_find_var($/;"	f	typeref:typename:int32_t
ecs_rule_find_var	lib/flecs/src/addons/rules.c	/^int32_t ecs_rule_find_var($/;"	f	typeref:typename:int32_t
ecs_rule_fini	lib/flecs/flecs.c	/^void ecs_rule_fini($/;"	f	typeref:typename:void
ecs_rule_fini	lib/flecs/src/addons/rules.c	/^void ecs_rule_fini($/;"	f	typeref:typename:void
ecs_rule_get_filter	lib/flecs/flecs.c	/^const ecs_filter_t* ecs_rule_get_filter($/;"	f	typeref:typename:const ecs_filter_t *
ecs_rule_get_filter	lib/flecs/src/addons/rules.c	/^const ecs_filter_t* ecs_rule_get_filter($/;"	f	typeref:typename:const ecs_filter_t *
ecs_rule_get_var	lib/flecs/flecs.c	/^ecs_entity_t ecs_rule_get_var($/;"	f	typeref:typename:ecs_entity_t
ecs_rule_get_var	lib/flecs/src/addons/rules.c	/^ecs_entity_t ecs_rule_get_var($/;"	f	typeref:typename:ecs_entity_t
ecs_rule_init	lib/flecs/flecs.c	/^ecs_rule_t* ecs_rule_init($/;"	f	typeref:typename:ecs_rule_t *
ecs_rule_init	lib/flecs/src/addons/rules.c	/^ecs_rule_t* ecs_rule_init($/;"	f	typeref:typename:ecs_rule_t *
ecs_rule_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_rule_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_rule_iter	lib/flecs/src/addons/rules.c	/^ecs_iter_t ecs_rule_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_rule_iter_free	lib/flecs/flecs.c	/^void ecs_rule_iter_free($/;"	f	typeref:typename:void	file:
ecs_rule_iter_free	lib/flecs/src/addons/rules.c	/^void ecs_rule_iter_free($/;"	f	typeref:typename:void	file:
ecs_rule_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_rule_iter_t {$/;"	s
ecs_rule_iter_t	lib/flecs/flecs.h	/^} ecs_rule_iter_t;$/;"	t	typeref:struct:ecs_rule_iter_t
ecs_rule_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_rule_iter_t {$/;"	s
ecs_rule_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_rule_iter_t;$/;"	t	typeref:struct:ecs_rule_iter_t
ecs_rule_new	lib/flecs/flecs.h	/^#define ecs_rule_new(/;"	d
ecs_rule_new	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_rule_new(/;"	d
ecs_rule_next	lib/flecs/flecs.c	/^bool ecs_rule_next($/;"	f	typeref:typename:bool
ecs_rule_next	lib/flecs/src/addons/rules.c	/^bool ecs_rule_next($/;"	f	typeref:typename:bool
ecs_rule_next_instanced	lib/flecs/flecs.c	/^bool ecs_rule_next_instanced($/;"	f	typeref:typename:bool
ecs_rule_next_instanced	lib/flecs/src/addons/rules.c	/^bool ecs_rule_next_instanced($/;"	f	typeref:typename:bool
ecs_rule_op_ctx_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_op_ctx_t {$/;"	s	file:
ecs_rule_op_ctx_t	lib/flecs/flecs.c	/^} ecs_rule_op_ctx_t;$/;"	t	typeref:struct:ecs_rule_op_ctx_t	file:
ecs_rule_op_ctx_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_op_ctx_t {$/;"	s	file:
ecs_rule_op_ctx_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_op_ctx_t;$/;"	t	typeref:struct:ecs_rule_op_ctx_t	file:
ecs_rule_op_kind_t	lib/flecs/flecs.c	/^typedef enum ecs_rule_op_kind_t {$/;"	g	file:
ecs_rule_op_kind_t	lib/flecs/flecs.c	/^} ecs_rule_op_kind_t;$/;"	t	typeref:enum:ecs_rule_op_kind_t	file:
ecs_rule_op_kind_t	lib/flecs/src/addons/rules.c	/^typedef enum ecs_rule_op_kind_t {$/;"	g	file:
ecs_rule_op_kind_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_op_kind_t;$/;"	t	typeref:enum:ecs_rule_op_kind_t	file:
ecs_rule_op_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_op_t {$/;"	s	file:
ecs_rule_op_t	lib/flecs/flecs.c	/^} ecs_rule_op_t;$/;"	t	typeref:struct:ecs_rule_op_t	file:
ecs_rule_op_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_op_t {$/;"	s	file:
ecs_rule_op_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_op_t;$/;"	t	typeref:struct:ecs_rule_op_t	file:
ecs_rule_pair_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_pair_t {$/;"	s	file:
ecs_rule_pair_t	lib/flecs/flecs.c	/^} ecs_rule_pair_t;$/;"	t	typeref:struct:ecs_rule_pair_t	file:
ecs_rule_pair_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_pair_t {$/;"	s	file:
ecs_rule_pair_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_pair_t;$/;"	t	typeref:struct:ecs_rule_pair_t	file:
ecs_rule_reg_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_reg_t {$/;"	s	file:
ecs_rule_reg_t	lib/flecs/flecs.c	/^} ecs_rule_reg_t;$/;"	t	typeref:struct:ecs_rule_reg_t	file:
ecs_rule_reg_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_reg_t {$/;"	s	file:
ecs_rule_reg_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_reg_t;$/;"	t	typeref:struct:ecs_rule_reg_t	file:
ecs_rule_set_var	lib/flecs/flecs.c	/^void ecs_rule_set_var($/;"	f	typeref:typename:void
ecs_rule_set_var	lib/flecs/src/addons/rules.c	/^void ecs_rule_set_var($/;"	f	typeref:typename:void
ecs_rule_setjmp_ctx_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_setjmp_ctx_t {$/;"	s	file:
ecs_rule_setjmp_ctx_t	lib/flecs/flecs.c	/^} ecs_rule_setjmp_ctx_t;$/;"	t	typeref:struct:ecs_rule_setjmp_ctx_t	file:
ecs_rule_setjmp_ctx_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_setjmp_ctx_t {$/;"	s	file:
ecs_rule_setjmp_ctx_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_setjmp_ctx_t;$/;"	t	typeref:struct:ecs_rule_setjmp_ctx_t	file:
ecs_rule_str	lib/flecs/flecs.c	/^char* ecs_rule_str($/;"	f	typeref:typename:char *
ecs_rule_str	lib/flecs/src/addons/rules.c	/^char* ecs_rule_str($/;"	f	typeref:typename:char *
ecs_rule_subset_ctx_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_subset_ctx_t {$/;"	s	file:
ecs_rule_subset_ctx_t	lib/flecs/flecs.c	/^} ecs_rule_subset_ctx_t;$/;"	t	typeref:struct:ecs_rule_subset_ctx_t	file:
ecs_rule_subset_ctx_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_subset_ctx_t {$/;"	s	file:
ecs_rule_subset_ctx_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_subset_ctx_t;$/;"	t	typeref:struct:ecs_rule_subset_ctx_t	file:
ecs_rule_subset_frame_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_subset_frame_t {$/;"	s	file:
ecs_rule_subset_frame_t	lib/flecs/flecs.c	/^} ecs_rule_subset_frame_t;$/;"	t	typeref:struct:ecs_rule_subset_frame_t	file:
ecs_rule_subset_frame_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_subset_frame_t {$/;"	s	file:
ecs_rule_subset_frame_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_subset_frame_t;$/;"	t	typeref:struct:ecs_rule_subset_frame_t	file:
ecs_rule_superset_ctx_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_superset_ctx_t {$/;"	s	file:
ecs_rule_superset_ctx_t	lib/flecs/flecs.c	/^} ecs_rule_superset_ctx_t;$/;"	t	typeref:struct:ecs_rule_superset_ctx_t	file:
ecs_rule_superset_ctx_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_superset_ctx_t {$/;"	s	file:
ecs_rule_superset_ctx_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_superset_ctx_t;$/;"	t	typeref:struct:ecs_rule_superset_ctx_t	file:
ecs_rule_superset_frame_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_superset_frame_t {$/;"	s	file:
ecs_rule_superset_frame_t	lib/flecs/flecs.c	/^} ecs_rule_superset_frame_t;$/;"	t	typeref:struct:ecs_rule_superset_frame_t	file:
ecs_rule_superset_frame_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_superset_frame_t {$/;"	s	file:
ecs_rule_superset_frame_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_superset_frame_t;$/;"	t	typeref:struct:ecs_rule_superset_frame_t	file:
ecs_rule_t	lib/flecs/flecs.c	/^struct ecs_rule_t {$/;"	s	file:
ecs_rule_t	lib/flecs/flecs.h	/^typedef struct ecs_rule_t ecs_rule_t;$/;"	t	typeref:struct:ecs_rule_t
ecs_rule_t	lib/flecs/include/flecs.h	/^typedef struct ecs_rule_t ecs_rule_t;$/;"	t	typeref:struct:ecs_rule_t
ecs_rule_t	lib/flecs/src/addons/rules.c	/^struct ecs_rule_t {$/;"	s	file:
ecs_rule_t_magic	lib/flecs/flecs.c	/^#define ecs_rule_t_magic /;"	d	file:
ecs_rule_t_magic	lib/flecs/src/private_types.h	/^#define ecs_rule_t_magic /;"	d
ecs_rule_t_mixins	lib/flecs/flecs.c	/^ecs_mixins_t ecs_rule_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_rule_t_mixins	lib/flecs/src/addons/rules.c	/^ecs_mixins_t ecs_rule_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_rule_term_vars_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_term_vars_t {$/;"	s	file:
ecs_rule_term_vars_t	lib/flecs/flecs.c	/^} ecs_rule_term_vars_t;$/;"	t	typeref:struct:ecs_rule_term_vars_t	file:
ecs_rule_term_vars_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_term_vars_t {$/;"	s	file:
ecs_rule_term_vars_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_term_vars_t;$/;"	t	typeref:struct:ecs_rule_term_vars_t	file:
ecs_rule_var_count	lib/flecs/flecs.c	/^int32_t ecs_rule_var_count($/;"	f	typeref:typename:int32_t
ecs_rule_var_count	lib/flecs/src/addons/rules.c	/^int32_t ecs_rule_var_count($/;"	f	typeref:typename:int32_t
ecs_rule_var_is_entity	lib/flecs/flecs.c	/^bool ecs_rule_var_is_entity($/;"	f	typeref:typename:bool
ecs_rule_var_is_entity	lib/flecs/src/addons/rules.c	/^bool ecs_rule_var_is_entity($/;"	f	typeref:typename:bool
ecs_rule_var_kind_t	lib/flecs/flecs.c	/^typedef enum ecs_rule_var_kind_t {$/;"	g	file:
ecs_rule_var_kind_t	lib/flecs/flecs.c	/^} ecs_rule_var_kind_t;$/;"	t	typeref:enum:ecs_rule_var_kind_t	file:
ecs_rule_var_kind_t	lib/flecs/src/addons/rules.c	/^typedef enum ecs_rule_var_kind_t {$/;"	g	file:
ecs_rule_var_kind_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_var_kind_t;$/;"	t	typeref:enum:ecs_rule_var_kind_t	file:
ecs_rule_var_name	lib/flecs/flecs.c	/^const char* ecs_rule_var_name($/;"	f	typeref:typename:const char *
ecs_rule_var_name	lib/flecs/src/addons/rules.c	/^const char* ecs_rule_var_name($/;"	f	typeref:typename:const char *
ecs_rule_var_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_var_t {$/;"	s	file:
ecs_rule_var_t	lib/flecs/flecs.c	/^} ecs_rule_var_t;$/;"	t	typeref:struct:ecs_rule_var_t	file:
ecs_rule_var_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_var_t {$/;"	s	file:
ecs_rule_var_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_var_t;$/;"	t	typeref:struct:ecs_rule_var_t	file:
ecs_rule_with_ctx_t	lib/flecs/flecs.c	/^typedef struct ecs_rule_with_ctx_t {$/;"	s	file:
ecs_rule_with_ctx_t	lib/flecs/flecs.c	/^} ecs_rule_with_ctx_t;$/;"	t	typeref:struct:ecs_rule_with_ctx_t	file:
ecs_rule_with_ctx_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_rule_with_ctx_t {$/;"	s	file:
ecs_rule_with_ctx_t	lib/flecs/src/addons/rules.c	/^} ecs_rule_with_ctx_t;$/;"	t	typeref:struct:ecs_rule_with_ctx_t	file:
ecs_run	lib/flecs/flecs.c	/^ecs_entity_t ecs_run($/;"	f	typeref:typename:ecs_entity_t
ecs_run	lib/flecs/src/addons/system/system.c	/^ecs_entity_t ecs_run($/;"	f	typeref:typename:ecs_entity_t
ecs_run_action_t	lib/flecs/flecs.h	/^typedef void (*ecs_run_action_t)($/;"	t	typeref:typename:void (*)(ecs_iter_t * it)
ecs_run_action_t	lib/flecs/include/flecs.h	/^typedef void (*ecs_run_action_t)($/;"	t	typeref:typename:void (*)(ecs_iter_t * it)
ecs_run_intern	lib/flecs/flecs.c	/^ecs_entity_t ecs_run_intern($/;"	f	typeref:typename:ecs_entity_t
ecs_run_intern	lib/flecs/src/addons/system/system.c	/^ecs_entity_t ecs_run_intern($/;"	f	typeref:typename:ecs_entity_t
ecs_run_pipeline	lib/flecs/flecs.c	/^void ecs_run_pipeline($/;"	f	typeref:typename:void
ecs_run_pipeline	lib/flecs/src/addons/pipeline/pipeline.c	/^void ecs_run_pipeline($/;"	f	typeref:typename:void
ecs_run_post_frame	lib/flecs/flecs.c	/^void ecs_run_post_frame($/;"	f	typeref:typename:void
ecs_run_post_frame	lib/flecs/src/world.c	/^void ecs_run_post_frame($/;"	f	typeref:typename:void
ecs_run_w_filter	lib/flecs/flecs.c	/^ecs_entity_t ecs_run_w_filter($/;"	f	typeref:typename:ecs_entity_t
ecs_run_w_filter	lib/flecs/src/addons/system/system.c	/^ecs_entity_t ecs_run_w_filter($/;"	f	typeref:typename:ecs_entity_t
ecs_run_worker	lib/flecs/flecs.c	/^ecs_entity_t ecs_run_worker($/;"	f	typeref:typename:ecs_entity_t
ecs_run_worker	lib/flecs/src/addons/system/system.c	/^ecs_entity_t ecs_run_worker($/;"	f	typeref:typename:ecs_entity_t
ecs_search	lib/flecs/flecs.c	/^int32_t ecs_search($/;"	f	typeref:typename:int32_t
ecs_search	lib/flecs/src/search.c	/^int32_t ecs_search($/;"	f	typeref:typename:int32_t
ecs_search_offset	lib/flecs/flecs.c	/^int32_t ecs_search_offset($/;"	f	typeref:typename:int32_t
ecs_search_offset	lib/flecs/src/search.c	/^int32_t ecs_search_offset($/;"	f	typeref:typename:int32_t
ecs_search_relation	lib/flecs/flecs.c	/^int32_t ecs_search_relation($/;"	f	typeref:typename:int32_t
ecs_search_relation	lib/flecs/src/search.c	/^int32_t ecs_search_relation($/;"	f	typeref:typename:int32_t
ecs_set	lib/flecs/flecs.h	/^#define ecs_set(/;"	d
ecs_set	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_set(/;"	d
ecs_set_alias	lib/flecs/flecs.c	/^void ecs_set_alias($/;"	f	typeref:typename:void
ecs_set_alias	lib/flecs/src/entity.c	/^void ecs_set_alias($/;"	f	typeref:typename:void
ecs_set_automerge	lib/flecs/flecs.c	/^void ecs_set_automerge($/;"	f	typeref:typename:void
ecs_set_automerge	lib/flecs/src/stage.c	/^void ecs_set_automerge($/;"	f	typeref:typename:void
ecs_set_component_actions	lib/flecs/flecs.h	/^#define ecs_set_component_actions(/;"	d
ecs_set_component_actions	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_set_component_actions(/;"	d
ecs_set_component_actions_w_id	lib/flecs/flecs.c	/^void ecs_set_component_actions_w_id($/;"	f	typeref:typename:void
ecs_set_component_actions_w_id	lib/flecs/src/world.c	/^void ecs_set_component_actions_w_id($/;"	f	typeref:typename:void
ecs_set_context	lib/flecs/flecs.c	/^void ecs_set_context($/;"	f	typeref:typename:void
ecs_set_context	lib/flecs/src/world.c	/^void ecs_set_context($/;"	f	typeref:typename:void
ecs_set_entity_generation	lib/flecs/flecs.c	/^void ecs_set_entity_generation($/;"	f	typeref:typename:void
ecs_set_entity_generation	lib/flecs/src/world.c	/^void ecs_set_entity_generation($/;"	f	typeref:typename:void
ecs_set_entity_range	lib/flecs/flecs.c	/^void ecs_set_entity_range($/;"	f	typeref:typename:void
ecs_set_entity_range	lib/flecs/src/world.c	/^void ecs_set_entity_range($/;"	f	typeref:typename:void
ecs_set_id	lib/flecs/flecs.c	/^ecs_entity_t ecs_set_id($/;"	f	typeref:typename:ecs_entity_t
ecs_set_id	lib/flecs/src/entity.c	/^ecs_entity_t ecs_set_id($/;"	f	typeref:typename:ecs_entity_t
ecs_set_interval	lib/flecs/flecs.c	/^ecs_entity_t ecs_set_interval($/;"	f	typeref:typename:ecs_entity_t
ecs_set_interval	lib/flecs/src/addons/timer.c	/^ecs_entity_t ecs_set_interval($/;"	f	typeref:typename:ecs_entity_t
ecs_set_lookup_path	lib/flecs/flecs.c	/^ecs_entity_t* ecs_set_lookup_path($/;"	f	typeref:typename:ecs_entity_t *
ecs_set_lookup_path	lib/flecs/src/hierarchy.c	/^ecs_entity_t* ecs_set_lookup_path($/;"	f	typeref:typename:ecs_entity_t *
ecs_set_name	lib/flecs/flecs.c	/^ecs_entity_t ecs_set_name($/;"	f	typeref:typename:ecs_entity_t
ecs_set_name	lib/flecs/src/entity.c	/^ecs_entity_t ecs_set_name($/;"	f	typeref:typename:ecs_entity_t
ecs_set_name_prefix	lib/flecs/flecs.c	/^const char* ecs_set_name_prefix($/;"	f	typeref:typename:const char *
ecs_set_name_prefix	lib/flecs/src/hierarchy.c	/^const char* ecs_set_name_prefix($/;"	f	typeref:typename:const char *
ecs_set_os_api_impl	lib/flecs/flecs.c	/^void ecs_set_os_api_impl(void) {$/;"	f	typeref:typename:void
ecs_set_os_api_impl	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void ecs_set_os_api_impl(void) {$/;"	f	typeref:typename:void
ecs_set_os_api_impl	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void ecs_set_os_api_impl(void) {$/;"	f	typeref:typename:void
ecs_set_override	lib/flecs/flecs.h	/^#define ecs_set_override(/;"	d
ecs_set_override	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_set_override(/;"	d
ecs_set_pair	lib/flecs/flecs.h	/^#define ecs_set_pair(/;"	d
ecs_set_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_set_pair(/;"	d
ecs_set_pair_object	lib/flecs/flecs.h	/^#define ecs_set_pair_object(/;"	d
ecs_set_pair_object	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_set_pair_object(/;"	d
ecs_set_pipeline	lib/flecs/flecs.c	/^void ecs_set_pipeline($/;"	f	typeref:typename:void
ecs_set_pipeline	lib/flecs/src/addons/pipeline/pipeline.c	/^void ecs_set_pipeline($/;"	f	typeref:typename:void
ecs_set_ptr	lib/flecs/flecs.h	/^#define ecs_set_ptr(/;"	d
ecs_set_ptr	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_set_ptr(/;"	d
ecs_set_rate	lib/flecs/flecs.c	/^ecs_entity_t ecs_set_rate($/;"	f	typeref:typename:ecs_entity_t
ecs_set_rate	lib/flecs/src/addons/timer.c	/^ecs_entity_t ecs_set_rate($/;"	f	typeref:typename:ecs_entity_t
ecs_set_scope	lib/flecs/flecs.c	/^ecs_entity_t ecs_set_scope($/;"	f	typeref:typename:ecs_entity_t
ecs_set_scope	lib/flecs/src/hierarchy.c	/^ecs_entity_t ecs_set_scope($/;"	f	typeref:typename:ecs_entity_t
ecs_set_stages	lib/flecs/flecs.c	/^void ecs_set_stages($/;"	f	typeref:typename:void
ecs_set_stages	lib/flecs/src/stage.c	/^void ecs_set_stages($/;"	f	typeref:typename:void
ecs_set_symbol	lib/flecs/flecs.c	/^ecs_entity_t ecs_set_symbol($/;"	f	typeref:typename:ecs_entity_t
ecs_set_symbol	lib/flecs/src/entity.c	/^ecs_entity_t ecs_set_symbol($/;"	f	typeref:typename:ecs_entity_t
ecs_set_target_fps	lib/flecs/flecs.c	/^void ecs_set_target_fps($/;"	f	typeref:typename:void
ecs_set_target_fps	lib/flecs/src/world.c	/^void ecs_set_target_fps($/;"	f	typeref:typename:void
ecs_set_threads	lib/flecs/flecs.c	/^void ecs_set_threads($/;"	f	typeref:typename:void
ecs_set_threads	lib/flecs/src/addons/pipeline/worker.c	/^void ecs_set_threads($/;"	f	typeref:typename:void
ecs_set_tick_source	lib/flecs/flecs.c	/^void ecs_set_tick_source($/;"	f	typeref:typename:void
ecs_set_tick_source	lib/flecs/src/addons/timer.c	/^void ecs_set_tick_source($/;"	f	typeref:typename:void
ecs_set_time_scale	lib/flecs/flecs.c	/^void ecs_set_time_scale($/;"	f	typeref:typename:void
ecs_set_time_scale	lib/flecs/src/addons/pipeline/pipeline.c	/^void ecs_set_time_scale($/;"	f	typeref:typename:void
ecs_set_timeout	lib/flecs/flecs.c	/^ecs_entity_t ecs_set_timeout($/;"	f	typeref:typename:ecs_entity_t
ecs_set_timeout	lib/flecs/src/addons/timer.c	/^ecs_entity_t ecs_set_timeout($/;"	f	typeref:typename:ecs_entity_t
ecs_set_with	lib/flecs/flecs.c	/^ecs_entity_t ecs_set_with($/;"	f	typeref:typename:ecs_entity_t
ecs_set_with	lib/flecs/src/entity.c	/^ecs_entity_t ecs_set_with($/;"	f	typeref:typename:ecs_entity_t
ecs_shares	lib/flecs/flecs.h	/^#define ecs_shares(/;"	d
ecs_shares	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_shares(/;"	d
ecs_shares_id	lib/flecs/flecs.h	/^#define ecs_shares_id(/;"	d
ecs_shares_id	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_shares_id(/;"	d
ecs_shares_pair	lib/flecs/flecs.h	/^#define ecs_shares_pair(/;"	d
ecs_shares_pair	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_shares_pair(/;"	d
ecs_should_log	lib/flecs/flecs.c	/^bool ecs_should_log(int32_t level) {$/;"	f	typeref:typename:bool
ecs_should_log	lib/flecs/src/addons/log.c	/^bool ecs_should_log(int32_t level) {$/;"	f	typeref:typename:bool
ecs_should_log_1	lib/flecs/flecs.h	/^#define ecs_should_log_1(/;"	d
ecs_should_log_1	lib/flecs/include/flecs/addons/log.h	/^#define ecs_should_log_1(/;"	d
ecs_should_log_2	lib/flecs/flecs.h	/^#define ecs_should_log_2(/;"	d
ecs_should_log_2	lib/flecs/include/flecs/addons/log.h	/^#define ecs_should_log_2(/;"	d
ecs_should_log_3	lib/flecs/flecs.h	/^#define ecs_should_log_3(/;"	d
ecs_should_log_3	lib/flecs/include/flecs/addons/log.h	/^#define ecs_should_log_3(/;"	d
ecs_should_quit	lib/flecs/flecs.c	/^bool ecs_should_quit($/;"	f	typeref:typename:bool
ecs_should_quit	lib/flecs/src/world.c	/^bool ecs_should_quit($/;"	f	typeref:typename:bool
ecs_singleton_add	lib/flecs/flecs.h	/^#define ecs_singleton_add(/;"	d
ecs_singleton_add	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_singleton_add(/;"	d
ecs_singleton_get	lib/flecs/flecs.h	/^#define ecs_singleton_get(/;"	d
ecs_singleton_get	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_singleton_get(/;"	d
ecs_singleton_get_mut	lib/flecs/flecs.h	/^#define ecs_singleton_get_mut(/;"	d
ecs_singleton_get_mut	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_singleton_get_mut(/;"	d
ecs_singleton_modified	lib/flecs/flecs.h	/^#define ecs_singleton_modified(/;"	d
ecs_singleton_modified	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_singleton_modified(/;"	d
ecs_singleton_remove	lib/flecs/flecs.h	/^#define ecs_singleton_remove(/;"	d
ecs_singleton_remove	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_singleton_remove(/;"	d
ecs_singleton_set	lib/flecs/flecs.h	/^#define ecs_singleton_set(/;"	d
ecs_singleton_set	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_singleton_set(/;"	d
ecs_size_t	lib/flecs/flecs.h	/^typedef int32_t ecs_size_t;$/;"	t	typeref:typename:int32_t
ecs_size_t	lib/flecs/include/flecs/private/api_defines.h	/^typedef int32_t ecs_size_t;$/;"	t	typeref:typename:int32_t
ecs_sleepf	lib/flecs/flecs.c	/^void ecs_sleepf($/;"	f	typeref:typename:void
ecs_sleepf	lib/flecs/src/misc.c	/^void ecs_sleepf($/;"	f	typeref:typename:void
ecs_snapshot_free	lib/flecs/flecs.c	/^void ecs_snapshot_free($/;"	f	typeref:typename:void
ecs_snapshot_free	lib/flecs/src/addons/snapshot.c	/^void ecs_snapshot_free($/;"	f	typeref:typename:void
ecs_snapshot_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_snapshot_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_snapshot_iter	lib/flecs/src/addons/snapshot.c	/^ecs_iter_t ecs_snapshot_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_snapshot_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_snapshot_iter_t {$/;"	s
ecs_snapshot_iter_t	lib/flecs/flecs.h	/^} ecs_snapshot_iter_t;  $/;"	t	typeref:struct:ecs_snapshot_iter_t
ecs_snapshot_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_snapshot_iter_t {$/;"	s
ecs_snapshot_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_snapshot_iter_t;  $/;"	t	typeref:struct:ecs_snapshot_iter_t
ecs_snapshot_next	lib/flecs/flecs.c	/^bool ecs_snapshot_next($/;"	f	typeref:typename:bool
ecs_snapshot_next	lib/flecs/src/addons/snapshot.c	/^bool ecs_snapshot_next($/;"	f	typeref:typename:bool
ecs_snapshot_restore	lib/flecs/flecs.c	/^void ecs_snapshot_restore($/;"	f	typeref:typename:void
ecs_snapshot_restore	lib/flecs/src/addons/snapshot.c	/^void ecs_snapshot_restore($/;"	f	typeref:typename:void
ecs_snapshot_t	lib/flecs/flecs.c	/^struct ecs_snapshot_t {$/;"	s	file:
ecs_snapshot_t	lib/flecs/flecs.h	/^typedef struct ecs_snapshot_t ecs_snapshot_t;$/;"	t	typeref:struct:ecs_snapshot_t
ecs_snapshot_t	lib/flecs/include/flecs/addons/snapshot.h	/^typedef struct ecs_snapshot_t ecs_snapshot_t;$/;"	t	typeref:struct:ecs_snapshot_t
ecs_snapshot_t	lib/flecs/src/addons/snapshot.c	/^struct ecs_snapshot_t {$/;"	s	file:
ecs_snapshot_take	lib/flecs/flecs.c	/^ecs_snapshot_t* ecs_snapshot_take($/;"	f	typeref:typename:ecs_snapshot_t *
ecs_snapshot_take	lib/flecs/src/addons/snapshot.c	/^ecs_snapshot_t* ecs_snapshot_take($/;"	f	typeref:typename:ecs_snapshot_t *
ecs_snapshot_take_w_iter	lib/flecs/flecs.c	/^ecs_snapshot_t* ecs_snapshot_take_w_iter($/;"	f	typeref:typename:ecs_snapshot_t *
ecs_snapshot_take_w_iter	lib/flecs/src/addons/snapshot.c	/^ecs_snapshot_t* ecs_snapshot_take_w_iter($/;"	f	typeref:typename:ecs_snapshot_t *
ecs_sparse_add	lib/flecs/flecs.h	/^#define ecs_sparse_add(/;"	d
ecs_sparse_add	lib/flecs/include/flecs/private/sparse.h	/^#define ecs_sparse_add(/;"	d
ecs_sparse_count	lib/flecs/flecs.c	/^int32_t ecs_sparse_count($/;"	f	typeref:typename:int32_t
ecs_sparse_count	lib/flecs/src/datastructures/sparse.c	/^int32_t ecs_sparse_count($/;"	f	typeref:typename:int32_t
ecs_sparse_get	lib/flecs/flecs.h	/^#define ecs_sparse_get(/;"	d
ecs_sparse_get	lib/flecs/include/flecs/private/sparse.h	/^#define ecs_sparse_get(/;"	d
ecs_sparse_get_dense	lib/flecs/flecs.h	/^#define ecs_sparse_get_dense(/;"	d
ecs_sparse_get_dense	lib/flecs/include/flecs/private/sparse.h	/^#define ecs_sparse_get_dense(/;"	d
ecs_sparse_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_sparse_iter_t {$/;"	s
ecs_sparse_iter_t	lib/flecs/flecs.h	/^} ecs_sparse_iter_t;$/;"	t	typeref:struct:ecs_sparse_iter_t
ecs_sparse_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_sparse_iter_t {$/;"	s
ecs_sparse_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_sparse_iter_t;$/;"	t	typeref:struct:ecs_sparse_iter_t
ecs_sparse_last_id	lib/flecs/flecs.c	/^uint64_t ecs_sparse_last_id($/;"	f	typeref:typename:uint64_t
ecs_sparse_last_id	lib/flecs/src/datastructures/sparse.c	/^uint64_t ecs_sparse_last_id($/;"	f	typeref:typename:uint64_t
ecs_sparse_new	lib/flecs/flecs.h	/^#define ecs_sparse_new(/;"	d
ecs_sparse_new	lib/flecs/include/flecs/private/sparse.h	/^#define ecs_sparse_new(/;"	d
ecs_sparse_t	lib/flecs/flecs.h	/^struct ecs_sparse_t {$/;"	s
ecs_sparse_t	lib/flecs/flecs.h	/^typedef struct ecs_sparse_t ecs_sparse_t;$/;"	t	typeref:struct:ecs_sparse_t
ecs_sparse_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_sparse_t ecs_sparse_t;$/;"	t	typeref:struct:ecs_sparse_t
ecs_sparse_t	lib/flecs/include/flecs/private/sparse.h	/^struct ecs_sparse_t {$/;"	s
ecs_stage_is_async	lib/flecs/flecs.c	/^bool ecs_stage_is_async($/;"	f	typeref:typename:bool
ecs_stage_is_async	lib/flecs/src/stage.c	/^bool ecs_stage_is_async($/;"	f	typeref:typename:bool
ecs_stage_is_readonly	lib/flecs/flecs.c	/^bool ecs_stage_is_readonly($/;"	f	typeref:typename:bool
ecs_stage_is_readonly	lib/flecs/src/stage.c	/^bool ecs_stage_is_readonly($/;"	f	typeref:typename:bool
ecs_stage_t	lib/flecs/flecs.c	/^struct ecs_stage_t {$/;"	s	file:
ecs_stage_t	lib/flecs/flecs.h	/^typedef struct ecs_stage_t ecs_stage_t;$/;"	t	typeref:struct:ecs_stage_t
ecs_stage_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_stage_t ecs_stage_t;$/;"	t	typeref:struct:ecs_stage_t
ecs_stage_t	lib/flecs/src/private_types.h	/^struct ecs_stage_t {$/;"	s
ecs_stage_t_magic	lib/flecs/flecs.c	/^#define ecs_stage_t_magic /;"	d	file:
ecs_stage_t_magic	lib/flecs/src/private_types.h	/^#define ecs_stage_t_magic /;"	d
ecs_stage_t_mixins	lib/flecs/flecs.c	/^ecs_mixins_t ecs_stage_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_stage_t_mixins	lib/flecs/src/poly.c	/^ecs_mixins_t ecs_stage_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_staging_begin	lib/flecs/flecs.c	/^bool ecs_staging_begin($/;"	f	typeref:typename:bool
ecs_staging_begin	lib/flecs/src/stage.c	/^bool ecs_staging_begin($/;"	f	typeref:typename:bool
ecs_staging_end	lib/flecs/flecs.c	/^void ecs_staging_end($/;"	f	typeref:typename:void
ecs_staging_end	lib/flecs/src/stage.c	/^void ecs_staging_end($/;"	f	typeref:typename:void
ecs_start_timer	lib/flecs/flecs.c	/^void ecs_start_timer($/;"	f	typeref:typename:void
ecs_start_timer	lib/flecs/src/addons/timer.c	/^void ecs_start_timer($/;"	f	typeref:typename:void
ecs_stop_threads	lib/flecs/flecs.c	/^bool ecs_stop_threads($/;"	f	typeref:typename:bool	file:
ecs_stop_threads	lib/flecs/src/addons/pipeline/worker.c	/^bool ecs_stop_threads($/;"	f	typeref:typename:bool	file:
ecs_stop_timer	lib/flecs/flecs.c	/^void ecs_stop_timer($/;"	f	typeref:typename:void
ecs_stop_timer	lib/flecs/src/addons/timer.c	/^void ecs_stop_timer($/;"	f	typeref:typename:void
ecs_store_t	lib/flecs/flecs.c	/^typedef struct ecs_store_t {$/;"	s	file:
ecs_store_t	lib/flecs/flecs.c	/^} ecs_store_t;$/;"	t	typeref:struct:ecs_store_t	file:
ecs_store_t	lib/flecs/src/private_types.h	/^typedef struct ecs_store_t {$/;"	s
ecs_store_t	lib/flecs/src/private_types.h	/^} ecs_store_t;$/;"	t	typeref:struct:ecs_store_t
ecs_strbuf_append	lib/flecs/flecs.c	/^bool ecs_strbuf_append($/;"	f	typeref:typename:bool
ecs_strbuf_append	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_append($/;"	f	typeref:typename:bool
ecs_strbuf_appendch	lib/flecs/flecs.c	/^bool ecs_strbuf_appendch($/;"	f	typeref:typename:bool
ecs_strbuf_appendch	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_appendch($/;"	f	typeref:typename:bool
ecs_strbuf_appendflt	lib/flecs/flecs.c	/^bool ecs_strbuf_appendflt($/;"	f	typeref:typename:bool
ecs_strbuf_appendflt	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_appendflt($/;"	f	typeref:typename:bool
ecs_strbuf_appendstr	lib/flecs/flecs.c	/^bool ecs_strbuf_appendstr($/;"	f	typeref:typename:bool
ecs_strbuf_appendstr	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_appendstr($/;"	f	typeref:typename:bool
ecs_strbuf_appendstr_zerocpy	lib/flecs/flecs.c	/^bool ecs_strbuf_appendstr_zerocpy($/;"	f	typeref:typename:bool
ecs_strbuf_appendstr_zerocpy	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_appendstr_zerocpy($/;"	f	typeref:typename:bool
ecs_strbuf_appendstr_zerocpy_const	lib/flecs/flecs.c	/^bool ecs_strbuf_appendstr_zerocpy_const($/;"	f	typeref:typename:bool
ecs_strbuf_appendstr_zerocpy_const	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_appendstr_zerocpy_const($/;"	f	typeref:typename:bool
ecs_strbuf_appendstrn	lib/flecs/flecs.c	/^bool ecs_strbuf_appendstrn($/;"	f	typeref:typename:bool
ecs_strbuf_appendstrn	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_appendstrn($/;"	f	typeref:typename:bool
ecs_strbuf_element	lib/flecs/flecs.h	/^typedef struct ecs_strbuf_element {$/;"	s
ecs_strbuf_element	lib/flecs/flecs.h	/^} ecs_strbuf_element;$/;"	t	typeref:struct:ecs_strbuf_element
ecs_strbuf_element	lib/flecs/include/flecs/private/strbuf.h	/^typedef struct ecs_strbuf_element {$/;"	s
ecs_strbuf_element	lib/flecs/include/flecs/private/strbuf.h	/^} ecs_strbuf_element;$/;"	t	typeref:struct:ecs_strbuf_element
ecs_strbuf_element_embedded	lib/flecs/flecs.h	/^typedef struct ecs_strbuf_element_embedded {$/;"	s
ecs_strbuf_element_embedded	lib/flecs/flecs.h	/^} ecs_strbuf_element_embedded;$/;"	t	typeref:struct:ecs_strbuf_element_embedded
ecs_strbuf_element_embedded	lib/flecs/include/flecs/private/strbuf.h	/^typedef struct ecs_strbuf_element_embedded {$/;"	s
ecs_strbuf_element_embedded	lib/flecs/include/flecs/private/strbuf.h	/^} ecs_strbuf_element_embedded;$/;"	t	typeref:struct:ecs_strbuf_element_embedded
ecs_strbuf_element_str	lib/flecs/flecs.h	/^typedef struct ecs_strbuf_element_str {$/;"	s
ecs_strbuf_element_str	lib/flecs/flecs.h	/^} ecs_strbuf_element_str;$/;"	t	typeref:struct:ecs_strbuf_element_str
ecs_strbuf_element_str	lib/flecs/include/flecs/private/strbuf.h	/^typedef struct ecs_strbuf_element_str {$/;"	s
ecs_strbuf_element_str	lib/flecs/include/flecs/private/strbuf.h	/^} ecs_strbuf_element_str;$/;"	t	typeref:struct:ecs_strbuf_element_str
ecs_strbuf_ftoa	lib/flecs/flecs.c	/^int ecs_strbuf_ftoa($/;"	f	typeref:typename:int	file:
ecs_strbuf_ftoa	lib/flecs/src/datastructures/strbuf.c	/^int ecs_strbuf_ftoa($/;"	f	typeref:typename:int	file:
ecs_strbuf_get	lib/flecs/flecs.c	/^char* ecs_strbuf_get($/;"	f	typeref:typename:char *
ecs_strbuf_get	lib/flecs/src/datastructures/strbuf.c	/^char* ecs_strbuf_get($/;"	f	typeref:typename:char *
ecs_strbuf_get_small	lib/flecs/flecs.c	/^char *ecs_strbuf_get_small($/;"	f	typeref:typename:char *
ecs_strbuf_get_small	lib/flecs/src/datastructures/strbuf.c	/^char *ecs_strbuf_get_small($/;"	f	typeref:typename:char *
ecs_strbuf_grow	lib/flecs/flecs.c	/^void ecs_strbuf_grow($/;"	f	typeref:typename:void	file:
ecs_strbuf_grow	lib/flecs/src/datastructures/strbuf.c	/^void ecs_strbuf_grow($/;"	f	typeref:typename:void	file:
ecs_strbuf_grow_str	lib/flecs/flecs.c	/^void ecs_strbuf_grow_str($/;"	f	typeref:typename:void	file:
ecs_strbuf_grow_str	lib/flecs/src/datastructures/strbuf.c	/^void ecs_strbuf_grow_str($/;"	f	typeref:typename:void	file:
ecs_strbuf_init	lib/flecs/flecs.c	/^void ecs_strbuf_init($/;"	f	typeref:typename:void	file:
ecs_strbuf_init	lib/flecs/src/datastructures/strbuf.c	/^void ecs_strbuf_init($/;"	f	typeref:typename:void	file:
ecs_strbuf_list_append	lib/flecs/flecs.c	/^bool ecs_strbuf_list_append($/;"	f	typeref:typename:bool
ecs_strbuf_list_append	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_list_append($/;"	f	typeref:typename:bool
ecs_strbuf_list_appendstr	lib/flecs/flecs.c	/^bool ecs_strbuf_list_appendstr($/;"	f	typeref:typename:bool
ecs_strbuf_list_appendstr	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_list_appendstr($/;"	f	typeref:typename:bool
ecs_strbuf_list_elem	lib/flecs/flecs.h	/^typedef struct ecs_strbuf_list_elem {$/;"	s
ecs_strbuf_list_elem	lib/flecs/flecs.h	/^} ecs_strbuf_list_elem;$/;"	t	typeref:struct:ecs_strbuf_list_elem
ecs_strbuf_list_elem	lib/flecs/include/flecs/private/strbuf.h	/^typedef struct ecs_strbuf_list_elem {$/;"	s
ecs_strbuf_list_elem	lib/flecs/include/flecs/private/strbuf.h	/^} ecs_strbuf_list_elem;$/;"	t	typeref:struct:ecs_strbuf_list_elem
ecs_strbuf_list_next	lib/flecs/flecs.c	/^void ecs_strbuf_list_next($/;"	f	typeref:typename:void
ecs_strbuf_list_next	lib/flecs/src/datastructures/strbuf.c	/^void ecs_strbuf_list_next($/;"	f	typeref:typename:void
ecs_strbuf_list_pop	lib/flecs/flecs.c	/^void ecs_strbuf_list_pop($/;"	f	typeref:typename:void
ecs_strbuf_list_pop	lib/flecs/src/datastructures/strbuf.c	/^void ecs_strbuf_list_pop($/;"	f	typeref:typename:void
ecs_strbuf_list_push	lib/flecs/flecs.c	/^void ecs_strbuf_list_push($/;"	f	typeref:typename:void
ecs_strbuf_list_push	lib/flecs/src/datastructures/strbuf.c	/^void ecs_strbuf_list_push($/;"	f	typeref:typename:void
ecs_strbuf_memLeft	lib/flecs/flecs.c	/^int32_t ecs_strbuf_memLeft($/;"	f	typeref:typename:int32_t	file:
ecs_strbuf_memLeft	lib/flecs/src/datastructures/strbuf.c	/^int32_t ecs_strbuf_memLeft($/;"	f	typeref:typename:int32_t	file:
ecs_strbuf_memLeftInCurrentElement	lib/flecs/flecs.c	/^int32_t ecs_strbuf_memLeftInCurrentElement($/;"	f	typeref:typename:int32_t	file:
ecs_strbuf_memLeftInCurrentElement	lib/flecs/src/datastructures/strbuf.c	/^int32_t ecs_strbuf_memLeftInCurrentElement($/;"	f	typeref:typename:int32_t	file:
ecs_strbuf_mergebuff	lib/flecs/flecs.c	/^bool ecs_strbuf_mergebuff($/;"	f	typeref:typename:bool
ecs_strbuf_mergebuff	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_mergebuff($/;"	f	typeref:typename:bool
ecs_strbuf_ptr	lib/flecs/flecs.c	/^char* ecs_strbuf_ptr($/;"	f	typeref:typename:char *	file:
ecs_strbuf_ptr	lib/flecs/src/datastructures/strbuf.c	/^char* ecs_strbuf_ptr($/;"	f	typeref:typename:char *	file:
ecs_strbuf_reset	lib/flecs/flecs.c	/^void ecs_strbuf_reset($/;"	f	typeref:typename:void
ecs_strbuf_reset	lib/flecs/src/datastructures/strbuf.c	/^void ecs_strbuf_reset($/;"	f	typeref:typename:void
ecs_strbuf_t	lib/flecs/flecs.h	/^typedef struct ecs_strbuf_t {$/;"	s
ecs_strbuf_t	lib/flecs/flecs.h	/^} ecs_strbuf_t;$/;"	t	typeref:struct:ecs_strbuf_t
ecs_strbuf_t	lib/flecs/include/flecs/private/strbuf.h	/^typedef struct ecs_strbuf_t {$/;"	s
ecs_strbuf_t	lib/flecs/include/flecs/private/strbuf.h	/^} ecs_strbuf_t;$/;"	t	typeref:struct:ecs_strbuf_t
ecs_strbuf_vappend	lib/flecs/flecs.c	/^bool ecs_strbuf_vappend($/;"	f	typeref:typename:bool
ecs_strbuf_vappend	lib/flecs/src/datastructures/strbuf.c	/^bool ecs_strbuf_vappend($/;"	f	typeref:typename:bool
ecs_strbuf_written	lib/flecs/flecs.c	/^int32_t ecs_strbuf_written($/;"	f	typeref:typename:int32_t
ecs_strbuf_written	lib/flecs/src/datastructures/strbuf.c	/^int32_t ecs_strbuf_written($/;"	f	typeref:typename:int32_t
ecs_strerror	lib/flecs/flecs.c	/^const char* ecs_strerror($/;"	f	typeref:typename:const char *
ecs_strerror	lib/flecs/src/addons/log.c	/^const char* ecs_strerror($/;"	f	typeref:typename:const char *
ecs_stresc	lib/flecs/flecs.c	/^ecs_size_t ecs_stresc($/;"	f	typeref:typename:ecs_size_t
ecs_stresc	lib/flecs/src/addons/expr/strutil.c	/^ecs_size_t ecs_stresc($/;"	f	typeref:typename:ecs_size_t
ecs_string_t	lib/flecs/flecs.h	/^typedef char* ecs_string_t;$/;"	t	typeref:typename:char *
ecs_string_t	lib/flecs/include/flecs/addons/meta.h	/^typedef char* ecs_string_t;$/;"	t	typeref:typename:char *
ecs_strip_generation	lib/flecs/flecs.c	/^ecs_id_t ecs_strip_generation($/;"	f	typeref:typename:ecs_id_t
ecs_strip_generation	lib/flecs/src/entity.c	/^ecs_id_t ecs_strip_generation($/;"	f	typeref:typename:ecs_id_t
ecs_struct_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_struct_desc_t {$/;"	s
ecs_struct_desc_t	lib/flecs/flecs.h	/^} ecs_struct_desc_t;$/;"	t	typeref:struct:ecs_struct_desc_t
ecs_struct_desc_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_struct_desc_t {$/;"	s
ecs_struct_desc_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_struct_desc_t;$/;"	t	typeref:struct:ecs_struct_desc_t
ecs_struct_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_struct_init($/;"	f	typeref:typename:ecs_entity_t
ecs_struct_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_struct_init($/;"	f	typeref:typename:ecs_entity_t
ecs_suspend_readonly_state_t	lib/flecs/flecs.c	/^} ecs_suspend_readonly_state_t;$/;"	t	typeref:struct:__anona642c0050208	file:
ecs_suspend_readonly_state_t	lib/flecs/src/private_api.h	/^} ecs_suspend_readonly_state_t;$/;"	t	typeref:struct:__anonf633b8e80108
ecs_sw_column_t	lib/flecs/flecs.c	/^typedef struct ecs_sw_column_t {$/;"	s	file:
ecs_sw_column_t	lib/flecs/flecs.c	/^} ecs_sw_column_t;$/;"	t	typeref:struct:ecs_sw_column_t	file:
ecs_sw_column_t	lib/flecs/src/private_types.h	/^typedef struct ecs_sw_column_t {$/;"	s
ecs_sw_column_t	lib/flecs/src/private_types.h	/^} ecs_sw_column_t;$/;"	t	typeref:struct:ecs_sw_column_t
ecs_switch_t	lib/flecs/flecs.c	/^struct ecs_switch_t {$/;"	s	file:
ecs_switch_t	lib/flecs/flecs.h	/^typedef struct ecs_switch_t ecs_switch_t;$/;"	t	typeref:struct:ecs_switch_t
ecs_switch_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_switch_t ecs_switch_t;$/;"	t	typeref:struct:ecs_switch_t
ecs_switch_t	lib/flecs/include/flecs/private/switch_list.h	/^struct ecs_switch_t {$/;"	s
ecs_system_activate	lib/flecs/flecs.c	/^void ecs_system_activate($/;"	f	typeref:typename:void
ecs_system_activate	lib/flecs/src/addons/system/system.c	/^void ecs_system_activate($/;"	f	typeref:typename:void
ecs_system_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_system_desc_t {$/;"	s
ecs_system_desc_t	lib/flecs/flecs.h	/^} ecs_system_desc_t;$/;"	t	typeref:struct:ecs_system_desc_t
ecs_system_desc_t	lib/flecs/include/flecs/addons/system.h	/^typedef struct ecs_system_desc_t {$/;"	s
ecs_system_desc_t	lib/flecs/include/flecs/addons/system.h	/^} ecs_system_desc_t;$/;"	t	typeref:struct:ecs_system_desc_t
ecs_system_get_query	lib/flecs/flecs.c	/^ecs_query_t* ecs_system_get_query($/;"	f	typeref:typename:ecs_query_t *
ecs_system_get_query	lib/flecs/src/addons/system/system.c	/^ecs_query_t* ecs_system_get_query($/;"	f	typeref:typename:ecs_query_t *
ecs_system_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_system_init($/;"	f	typeref:typename:ecs_entity_t
ecs_system_init	lib/flecs/src/addons/system/system.c	/^ecs_entity_t ecs_system_init($/;"	f	typeref:typename:ecs_entity_t
ecs_system_stats_t	lib/flecs/flecs.h	/^typedef struct ecs_system_stats_t {$/;"	s
ecs_system_stats_t	lib/flecs/flecs.h	/^} ecs_system_stats_t;$/;"	t	typeref:struct:ecs_system_stats_t
ecs_system_stats_t	lib/flecs/include/flecs/addons/stats.h	/^typedef struct ecs_system_stats_t {$/;"	s
ecs_system_stats_t	lib/flecs/include/flecs/addons/stats.h	/^} ecs_system_stats_t;$/;"	t	typeref:struct:ecs_system_stats_t
ecs_system_status_action_t	lib/flecs/flecs.h	/^typedef void (*ecs_system_status_action_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t system,ecs_system_status_t status,void * ctx)
ecs_system_status_action_t	lib/flecs/include/flecs/addons/system.h	/^typedef void (*ecs_system_status_action_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t system,ecs_system_status_t status,void * ctx)
ecs_system_status_t	lib/flecs/flecs.h	/^typedef enum ecs_system_status_t {$/;"	g
ecs_system_status_t	lib/flecs/flecs.h	/^} ecs_system_status_t;$/;"	t	typeref:enum:ecs_system_status_t
ecs_system_status_t	lib/flecs/include/flecs/addons/system.h	/^typedef enum ecs_system_status_t {$/;"	g
ecs_system_status_t	lib/flecs/include/flecs/addons/system.h	/^} ecs_system_status_t;$/;"	t	typeref:enum:ecs_system_status_t
ecs_table_add_id	lib/flecs/flecs.c	/^ecs_table_t* ecs_table_add_id($/;"	f	typeref:typename:ecs_table_t *
ecs_table_add_id	lib/flecs/src/table_graph.c	/^ecs_table_t* ecs_table_add_id($/;"	f	typeref:typename:ecs_table_t *
ecs_table_cache_count	lib/flecs/flecs.c	/^#define ecs_table_cache_count(/;"	d	file:
ecs_table_cache_count	lib/flecs/src/table_cache.h	/^#define ecs_table_cache_count(/;"	d
ecs_table_cache_empty_count	lib/flecs/flecs.c	/^#define ecs_table_cache_empty_count(/;"	d	file:
ecs_table_cache_empty_count	lib/flecs/src/table_cache.h	/^#define ecs_table_cache_empty_count(/;"	d
ecs_table_cache_fini	lib/flecs/flecs.c	/^void ecs_table_cache_fini($/;"	f	typeref:typename:void
ecs_table_cache_fini	lib/flecs/src/table_cache.c	/^void ecs_table_cache_fini($/;"	f	typeref:typename:void
ecs_table_cache_fini_delete_all	lib/flecs/flecs.c	/^void ecs_table_cache_fini_delete_all($/;"	f	typeref:typename:void
ecs_table_cache_fini_delete_all	lib/flecs/src/table_cache.c	/^void ecs_table_cache_fini_delete_all($/;"	f	typeref:typename:void
ecs_table_cache_get	lib/flecs/flecs.c	/^void* ecs_table_cache_get($/;"	f	typeref:typename:void *
ecs_table_cache_get	lib/flecs/src/table_cache.c	/^void* ecs_table_cache_get($/;"	f	typeref:typename:void *
ecs_table_cache_hdr_t	lib/flecs/flecs.c	/^typedef struct ecs_table_cache_hdr_t {$/;"	s	file:
ecs_table_cache_hdr_t	lib/flecs/flecs.c	/^} ecs_table_cache_hdr_t;$/;"	t	typeref:struct:ecs_table_cache_hdr_t	file:
ecs_table_cache_hdr_t	lib/flecs/src/private_types.h	/^typedef struct ecs_table_cache_hdr_t {$/;"	s
ecs_table_cache_hdr_t	lib/flecs/src/private_types.h	/^} ecs_table_cache_hdr_t;$/;"	t	typeref:struct:ecs_table_cache_hdr_t
ecs_table_cache_init	lib/flecs/flecs.c	/^void ecs_table_cache_init($/;"	f	typeref:typename:void
ecs_table_cache_init	lib/flecs/src/table_cache.c	/^void ecs_table_cache_init($/;"	f	typeref:typename:void
ecs_table_cache_insert	lib/flecs/flecs.c	/^void ecs_table_cache_insert($/;"	f	typeref:typename:void
ecs_table_cache_insert	lib/flecs/src/table_cache.c	/^void ecs_table_cache_insert($/;"	f	typeref:typename:void
ecs_table_cache_is_empty	lib/flecs/flecs.c	/^bool ecs_table_cache_is_empty($/;"	f	typeref:typename:bool
ecs_table_cache_is_empty	lib/flecs/src/table_cache.c	/^bool ecs_table_cache_is_empty($/;"	f	typeref:typename:bool
ecs_table_cache_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_table_cache_iter_t {$/;"	s
ecs_table_cache_iter_t	lib/flecs/flecs.h	/^} ecs_table_cache_iter_t;$/;"	t	typeref:struct:ecs_table_cache_iter_t
ecs_table_cache_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_table_cache_iter_t {$/;"	s
ecs_table_cache_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_table_cache_iter_t;$/;"	t	typeref:struct:ecs_table_cache_iter_t
ecs_table_cache_list_t	lib/flecs/flecs.c	/^typedef struct ecs_table_cache_list_t {$/;"	s	file:
ecs_table_cache_list_t	lib/flecs/flecs.c	/^} ecs_table_cache_list_t;$/;"	t	typeref:struct:ecs_table_cache_list_t	file:
ecs_table_cache_list_t	lib/flecs/src/private_types.h	/^typedef struct ecs_table_cache_list_t {$/;"	s
ecs_table_cache_list_t	lib/flecs/src/private_types.h	/^} ecs_table_cache_list_t;$/;"	t	typeref:struct:ecs_table_cache_list_t
ecs_table_cache_remove	lib/flecs/flecs.c	/^void* ecs_table_cache_remove($/;"	f	typeref:typename:void *
ecs_table_cache_remove	lib/flecs/src/table_cache.c	/^void* ecs_table_cache_remove($/;"	f	typeref:typename:void *
ecs_table_cache_set_empty	lib/flecs/flecs.c	/^bool ecs_table_cache_set_empty($/;"	f	typeref:typename:bool
ecs_table_cache_set_empty	lib/flecs/src/table_cache.c	/^bool ecs_table_cache_set_empty($/;"	f	typeref:typename:bool
ecs_table_cache_t	lib/flecs/flecs.c	/^typedef struct ecs_table_cache_t {$/;"	s	file:
ecs_table_cache_t	lib/flecs/flecs.c	/^} ecs_table_cache_t;$/;"	t	typeref:struct:ecs_table_cache_t	file:
ecs_table_cache_t	lib/flecs/src/private_types.h	/^typedef struct ecs_table_cache_t {$/;"	s
ecs_table_cache_t	lib/flecs/src/private_types.h	/^} ecs_table_cache_t;$/;"	t	typeref:struct:ecs_table_cache_t
ecs_table_column_for_id	lib/flecs/flecs.c	/^ecs_column_t* ecs_table_column_for_id($/;"	f	typeref:typename:ecs_column_t *
ecs_table_column_for_id	lib/flecs/src/table.c	/^ecs_column_t* ecs_table_column_for_id($/;"	f	typeref:typename:ecs_column_t *
ecs_table_count	lib/flecs/flecs.c	/^int32_t ecs_table_count($/;"	f	typeref:typename:int32_t
ecs_table_count	lib/flecs/src/table.c	/^int32_t ecs_table_count($/;"	f	typeref:typename:int32_t
ecs_table_diff_t	lib/flecs/flecs.c	/^typedef struct ecs_table_diff_t {$/;"	s	file:
ecs_table_diff_t	lib/flecs/flecs.c	/^} ecs_table_diff_t;$/;"	t	typeref:struct:ecs_table_diff_t	file:
ecs_table_diff_t	lib/flecs/src/private_types.h	/^typedef struct ecs_table_diff_t {$/;"	s
ecs_table_diff_t	lib/flecs/src/private_types.h	/^} ecs_table_diff_t;$/;"	t	typeref:struct:ecs_table_diff_t
ecs_table_edge_is_component	lib/flecs/flecs.c	/^static ecs_table_diff_t ecs_table_edge_is_component;$/;"	v	typeref:typename:ecs_table_diff_t	file:
ecs_table_edge_is_component	lib/flecs/src/table_graph.c	/^static ecs_table_diff_t ecs_table_edge_is_component;$/;"	v	typeref:typename:ecs_table_diff_t	file:
ecs_table_event_t	lib/flecs/flecs.c	/^typedef struct ecs_table_event_t {$/;"	s	file:
ecs_table_event_t	lib/flecs/flecs.c	/^} ecs_table_event_t;    $/;"	t	typeref:struct:ecs_table_event_t	file:
ecs_table_event_t	lib/flecs/src/private_types.h	/^typedef struct ecs_table_event_t {$/;"	s
ecs_table_event_t	lib/flecs/src/private_types.h	/^} ecs_table_event_t;    $/;"	t	typeref:struct:ecs_table_event_t
ecs_table_eventkind_t	lib/flecs/flecs.c	/^typedef enum ecs_table_eventkind_t {$/;"	g	file:
ecs_table_eventkind_t	lib/flecs/flecs.c	/^} ecs_table_eventkind_t;$/;"	t	typeref:enum:ecs_table_eventkind_t	file:
ecs_table_eventkind_t	lib/flecs/src/private_types.h	/^typedef enum ecs_table_eventkind_t {$/;"	g
ecs_table_eventkind_t	lib/flecs/src/private_types.h	/^} ecs_table_eventkind_t;$/;"	t	typeref:enum:ecs_table_eventkind_t
ecs_table_get_storage_table	lib/flecs/flecs.c	/^ecs_table_t* ecs_table_get_storage_table($/;"	f	typeref:typename:ecs_table_t *
ecs_table_get_storage_table	lib/flecs/src/table.c	/^ecs_table_t* ecs_table_get_storage_table($/;"	f	typeref:typename:ecs_table_t *
ecs_table_get_type	lib/flecs/flecs.c	/^ecs_type_t ecs_table_get_type($/;"	f	typeref:typename:ecs_type_t
ecs_table_get_type	lib/flecs/src/table.c	/^ecs_type_t ecs_table_get_type($/;"	f	typeref:typename:ecs_type_t
ecs_table_has_module	lib/flecs/flecs.c	/^bool ecs_table_has_module($/;"	f	typeref:typename:bool
ecs_table_has_module	lib/flecs/src/table.c	/^bool ecs_table_has_module($/;"	f	typeref:typename:bool
ecs_table_leaf_t	lib/flecs/flecs.c	/^typedef struct ecs_table_leaf_t {$/;"	s	file:
ecs_table_leaf_t	lib/flecs/flecs.c	/^} ecs_table_leaf_t;$/;"	t	typeref:struct:ecs_table_leaf_t	file:
ecs_table_leaf_t	lib/flecs/src/addons/snapshot.c	/^typedef struct ecs_table_leaf_t {$/;"	s	file:
ecs_table_leaf_t	lib/flecs/src/addons/snapshot.c	/^} ecs_table_leaf_t;$/;"	t	typeref:struct:ecs_table_leaf_t	file:
ecs_table_lock	lib/flecs/flecs.c	/^void ecs_table_lock($/;"	f	typeref:typename:void
ecs_table_lock	lib/flecs/src/table.c	/^void ecs_table_lock($/;"	f	typeref:typename:void
ecs_table_record_t	lib/flecs/flecs.c	/^typedef struct ecs_table_record_t {$/;"	s	file:
ecs_table_record_t	lib/flecs/flecs.c	/^} ecs_table_record_t;$/;"	t	typeref:struct:ecs_table_record_t	file:
ecs_table_record_t	lib/flecs/src/private_types.h	/^typedef struct ecs_table_record_t {$/;"	s
ecs_table_record_t	lib/flecs/src/private_types.h	/^} ecs_table_record_t;$/;"	t	typeref:struct:ecs_table_record_t
ecs_table_remove_id	lib/flecs/flecs.c	/^ecs_table_t* ecs_table_remove_id($/;"	f	typeref:typename:ecs_table_t *
ecs_table_remove_id	lib/flecs/src/table_graph.c	/^ecs_table_t* ecs_table_remove_id($/;"	f	typeref:typename:ecs_table_t *
ecs_table_slice_t	lib/flecs/flecs.c	/^typedef struct ecs_table_slice_t {$/;"	s	file:
ecs_table_slice_t	lib/flecs/flecs.c	/^} ecs_table_slice_t;$/;"	t	typeref:struct:ecs_table_slice_t	file:
ecs_table_slice_t	lib/flecs/src/addons/rules.c	/^typedef struct ecs_table_slice_t {$/;"	s	file:
ecs_table_slice_t	lib/flecs/src/addons/rules.c	/^} ecs_table_slice_t;$/;"	t	typeref:struct:ecs_table_slice_t	file:
ecs_table_storage_count	lib/flecs/flecs.c	/^int32_t ecs_table_storage_count($/;"	f	typeref:typename:int32_t
ecs_table_storage_count	lib/flecs/src/table.c	/^int32_t ecs_table_storage_count($/;"	f	typeref:typename:int32_t
ecs_table_storage_to_type_index	lib/flecs/flecs.c	/^int32_t ecs_table_storage_to_type_index($/;"	f	typeref:typename:int32_t
ecs_table_storage_to_type_index	lib/flecs/src/table.c	/^int32_t ecs_table_storage_to_type_index($/;"	f	typeref:typename:int32_t
ecs_table_t	lib/flecs/flecs.c	/^struct ecs_table_t {$/;"	s	file:
ecs_table_t	lib/flecs/flecs.h	/^typedef struct ecs_table_t ecs_table_t;$/;"	t	typeref:struct:ecs_table_t
ecs_table_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_table_t ecs_table_t;$/;"	t	typeref:struct:ecs_table_t
ecs_table_t	lib/flecs/src/private_types.h	/^struct ecs_table_t {$/;"	s
ecs_table_t_magic	lib/flecs/flecs.c	/^#define ecs_table_t_magic /;"	d	file:
ecs_table_t_magic	lib/flecs/src/private_types.h	/^#define ecs_table_t_magic /;"	d
ecs_table_t_mixins	lib/flecs/flecs.c	/^#define ecs_table_t_mixins /;"	d	file:
ecs_table_t_mixins	lib/flecs/src/private_types.h	/^#define ecs_table_t_mixins /;"	d
ecs_table_type_to_storage_index	lib/flecs/flecs.c	/^int32_t ecs_table_type_to_storage_index($/;"	f	typeref:typename:int32_t
ecs_table_type_to_storage_index	lib/flecs/src/table.c	/^int32_t ecs_table_type_to_storage_index($/;"	f	typeref:typename:int32_t
ecs_table_unlock	lib/flecs/flecs.c	/^void ecs_table_unlock($/;"	f	typeref:typename:void
ecs_table_unlock	lib/flecs/src/table.c	/^void ecs_table_unlock($/;"	f	typeref:typename:void
ecs_term	lib/flecs/flecs.h	/^#define ecs_term(/;"	d
ecs_term	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_term(/;"	d
ecs_term_chain_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_term_chain_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_term_chain_iter	lib/flecs/src/filter.c	/^ecs_iter_t ecs_term_chain_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_term_copy	lib/flecs/flecs.c	/^ecs_term_t ecs_term_copy($/;"	f	typeref:typename:ecs_term_t
ecs_term_copy	lib/flecs/src/filter.c	/^ecs_term_t ecs_term_copy($/;"	f	typeref:typename:ecs_term_t
ecs_term_finalize	lib/flecs/flecs.c	/^int ecs_term_finalize($/;"	f	typeref:typename:int
ecs_term_finalize	lib/flecs/src/filter.c	/^int ecs_term_finalize($/;"	f	typeref:typename:int
ecs_term_fini	lib/flecs/flecs.c	/^void ecs_term_fini($/;"	f	typeref:typename:void
ecs_term_fini	lib/flecs/src/filter.c	/^void ecs_term_fini($/;"	f	typeref:typename:void
ecs_term_id	lib/flecs/flecs.h	/^#define ecs_term_id(/;"	d
ecs_term_id	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_term_id(/;"	d
ecs_term_id_is_set	lib/flecs/flecs.c	/^bool ecs_term_id_is_set($/;"	f	typeref:typename:bool
ecs_term_id_is_set	lib/flecs/src/filter.c	/^bool ecs_term_id_is_set($/;"	f	typeref:typename:bool
ecs_term_id_t	lib/flecs/flecs.h	/^typedef struct ecs_term_id_t {$/;"	s
ecs_term_id_t	lib/flecs/flecs.h	/^} ecs_term_id_t;$/;"	t	typeref:struct:ecs_term_id_t
ecs_term_id_t	lib/flecs/include/flecs.h	/^typedef struct ecs_term_id_t {$/;"	s
ecs_term_id_t	lib/flecs/include/flecs.h	/^} ecs_term_id_t;$/;"	t	typeref:struct:ecs_term_id_t
ecs_term_is_initialized	lib/flecs/flecs.c	/^bool ecs_term_is_initialized($/;"	f	typeref:typename:bool
ecs_term_is_initialized	lib/flecs/src/filter.c	/^bool ecs_term_is_initialized($/;"	f	typeref:typename:bool
ecs_term_is_owned	lib/flecs/flecs.h	/^#define ecs_term_is_owned(/;"	d
ecs_term_is_owned	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_term_is_owned(/;"	d
ecs_term_is_readonly	lib/flecs/flecs.c	/^bool ecs_term_is_readonly($/;"	f	typeref:typename:bool
ecs_term_is_readonly	lib/flecs/src/iter.c	/^bool ecs_term_is_readonly($/;"	f	typeref:typename:bool
ecs_term_is_set	lib/flecs/flecs.c	/^bool ecs_term_is_set($/;"	f	typeref:typename:bool
ecs_term_is_set	lib/flecs/src/iter.c	/^bool ecs_term_is_set($/;"	f	typeref:typename:bool
ecs_term_is_trivial	lib/flecs/flecs.c	/^bool ecs_term_is_trivial($/;"	f	typeref:typename:bool
ecs_term_is_trivial	lib/flecs/src/filter.c	/^bool ecs_term_is_trivial($/;"	f	typeref:typename:bool
ecs_term_is_writeonly	lib/flecs/flecs.c	/^bool ecs_term_is_writeonly($/;"	f	typeref:typename:bool
ecs_term_is_writeonly	lib/flecs/src/iter.c	/^bool ecs_term_is_writeonly($/;"	f	typeref:typename:bool
ecs_term_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_term_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_term_iter	lib/flecs/src/filter.c	/^ecs_iter_t ecs_term_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_term_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_term_iter_t {$/;"	s
ecs_term_iter_t	lib/flecs/flecs.h	/^} ecs_term_iter_t;$/;"	t	typeref:struct:ecs_term_iter_t
ecs_term_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_term_iter_t {$/;"	s
ecs_term_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_term_iter_t;$/;"	t	typeref:struct:ecs_term_iter_t
ecs_term_move	lib/flecs/flecs.c	/^ecs_term_t ecs_term_move($/;"	f	typeref:typename:ecs_term_t
ecs_term_move	lib/flecs/src/filter.c	/^ecs_term_t ecs_term_move($/;"	f	typeref:typename:ecs_term_t
ecs_term_next	lib/flecs/flecs.c	/^bool ecs_term_next($/;"	f	typeref:typename:bool
ecs_term_next	lib/flecs/src/filter.c	/^bool ecs_term_next($/;"	f	typeref:typename:bool
ecs_term_set_t	lib/flecs/flecs.h	/^typedef struct ecs_term_set_t {$/;"	s
ecs_term_set_t	lib/flecs/flecs.h	/^} ecs_term_set_t;$/;"	t	typeref:struct:ecs_term_set_t
ecs_term_set_t	lib/flecs/include/flecs.h	/^typedef struct ecs_term_set_t {$/;"	s
ecs_term_set_t	lib/flecs/include/flecs.h	/^} ecs_term_set_t;$/;"	t	typeref:struct:ecs_term_set_t
ecs_term_size	lib/flecs/flecs.h	/^#define ecs_term_size(/;"	d
ecs_term_size	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_term_size(/;"	d
ecs_term_source	lib/flecs/flecs.h	/^#define ecs_term_source(/;"	d
ecs_term_source	lib/flecs/include/flecs/addons/flecs_c.h	/^#define ecs_term_source(/;"	d
ecs_term_str	lib/flecs/flecs.c	/^char* ecs_term_str($/;"	f	typeref:typename:char *
ecs_term_str	lib/flecs/src/filter.c	/^char* ecs_term_str($/;"	f	typeref:typename:char *
ecs_term_t	lib/flecs/flecs.h	/^struct ecs_term_t {$/;"	s
ecs_term_t	lib/flecs/flecs.h	/^typedef struct ecs_term_t ecs_term_t;$/;"	t	typeref:struct:ecs_term_t
ecs_term_t	lib/flecs/include/flecs.h	/^struct ecs_term_t {$/;"	s
ecs_term_t	lib/flecs/include/flecs.h	/^typedef struct ecs_term_t ecs_term_t;$/;"	t	typeref:struct:ecs_term_t
ecs_term_w_size	lib/flecs/flecs.c	/^void* ecs_term_w_size($/;"	f	typeref:typename:void *
ecs_term_w_size	lib/flecs/src/iter.c	/^void* ecs_term_w_size($/;"	f	typeref:typename:void *
ecs_throw	lib/flecs/flecs.h	/^#define ecs_throw(/;"	d
ecs_throw	lib/flecs/include/flecs/addons/log.h	/^#define ecs_throw(/;"	d
ecs_time_measure	lib/flecs/flecs.c	/^double ecs_time_measure($/;"	f	typeref:typename:double
ecs_time_measure	lib/flecs/src/misc.c	/^double ecs_time_measure($/;"	f	typeref:typename:double
ecs_time_sub	lib/flecs/flecs.c	/^ecs_time_t ecs_time_sub($/;"	f	typeref:typename:ecs_time_t
ecs_time_sub	lib/flecs/src/misc.c	/^ecs_time_t ecs_time_sub($/;"	f	typeref:typename:ecs_time_t
ecs_time_t	lib/flecs/flecs.h	/^typedef struct ecs_time_t {$/;"	s
ecs_time_t	lib/flecs/flecs.h	/^} ecs_time_t;$/;"	t	typeref:struct:ecs_time_t
ecs_time_t	lib/flecs/include/flecs/os_api.h	/^typedef struct ecs_time_t {$/;"	s
ecs_time_t	lib/flecs/include/flecs/os_api.h	/^} ecs_time_t;$/;"	t	typeref:struct:ecs_time_t
ecs_time_to_double	lib/flecs/flecs.c	/^double ecs_time_to_double($/;"	f	typeref:typename:double
ecs_time_to_double	lib/flecs/src/misc.c	/^double ecs_time_to_double($/;"	f	typeref:typename:double
ecs_token_t	lib/flecs/flecs.c	/^typedef char ecs_token_t[ECS_MAX_TOKEN_SIZE];$/;"	t	typeref:typename:char[ECS_MAX_TOKEN_SIZE]	file:
ecs_token_t	lib/flecs/src/addons/parser.c	/^typedef char ecs_token_t[ECS_MAX_TOKEN_SIZE];$/;"	t	typeref:typename:char[ECS_MAX_TOKEN_SIZE]	file:
ecs_trace	lib/flecs/flecs.h	/^#define ecs_trace(/;"	d
ecs_trace	lib/flecs/include/flecs/addons/log.h	/^#define ecs_trace(/;"	d
ecs_trigger_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_trigger_desc_t {$/;"	s
ecs_trigger_desc_t	lib/flecs/flecs.h	/^} ecs_trigger_desc_t;$/;"	t	typeref:struct:ecs_trigger_desc_t
ecs_trigger_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_trigger_desc_t {$/;"	s
ecs_trigger_desc_t	lib/flecs/include/flecs.h	/^} ecs_trigger_desc_t;$/;"	t	typeref:struct:ecs_trigger_desc_t
ecs_trigger_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_trigger_init($/;"	f	typeref:typename:ecs_entity_t
ecs_trigger_init	lib/flecs/src/trigger.c	/^ecs_entity_t ecs_trigger_init($/;"	f	typeref:typename:ecs_entity_t
ecs_trigger_t	lib/flecs/flecs.h	/^struct ecs_trigger_t {$/;"	s
ecs_trigger_t	lib/flecs/flecs.h	/^typedef struct ecs_trigger_t ecs_trigger_t;$/;"	t	typeref:struct:ecs_trigger_t
ecs_trigger_t	lib/flecs/include/flecs.h	/^struct ecs_trigger_t {$/;"	s
ecs_trigger_t	lib/flecs/include/flecs.h	/^typedef struct ecs_trigger_t ecs_trigger_t;$/;"	t	typeref:struct:ecs_trigger_t
ecs_trigger_t_magic	lib/flecs/flecs.c	/^#define ecs_trigger_t_magic /;"	d	file:
ecs_trigger_t_magic	lib/flecs/src/private_types.h	/^#define ecs_trigger_t_magic /;"	d
ecs_type_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_type_desc_t {$/;"	s
ecs_type_desc_t	lib/flecs/flecs.h	/^} ecs_type_desc_t;$/;"	t	typeref:struct:ecs_type_desc_t
ecs_type_desc_t	lib/flecs/include/flecs.h	/^typedef struct ecs_type_desc_t {$/;"	s
ecs_type_desc_t	lib/flecs/include/flecs.h	/^} ecs_type_desc_t;$/;"	t	typeref:struct:ecs_type_desc_t
ecs_type_info_t	lib/flecs/flecs.c	/^typedef struct ecs_type_info_t {$/;"	s	file:
ecs_type_info_t	lib/flecs/flecs.c	/^} ecs_type_info_t;$/;"	t	typeref:struct:ecs_type_info_t	file:
ecs_type_info_t	lib/flecs/src/private_types.h	/^typedef struct ecs_type_info_t {$/;"	s
ecs_type_info_t	lib/flecs/src/private_types.h	/^} ecs_type_info_t;$/;"	t	typeref:struct:ecs_type_info_t
ecs_type_info_to_json	lib/flecs/flecs.c	/^char* ecs_type_info_to_json($/;"	f	typeref:typename:char *
ecs_type_info_to_json	lib/flecs/src/addons/json/serialize_type_info.c	/^char* ecs_type_info_to_json($/;"	f	typeref:typename:char *
ecs_type_info_to_json_buf	lib/flecs/flecs.c	/^int ecs_type_info_to_json_buf($/;"	f	typeref:typename:int
ecs_type_info_to_json_buf	lib/flecs/src/addons/json/serialize_type_info.c	/^int ecs_type_info_to_json_buf($/;"	f	typeref:typename:int
ecs_type_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_type_init($/;"	f	typeref:typename:ecs_entity_t
ecs_type_init	lib/flecs/src/entity.c	/^ecs_entity_t ecs_type_init($/;"	f	typeref:typename:ecs_entity_t
ecs_type_kind_t	lib/flecs/flecs.h	/^typedef enum ecs_type_kind_t {$/;"	g
ecs_type_kind_t	lib/flecs/flecs.h	/^} ecs_type_kind_t;$/;"	t	typeref:enum:ecs_type_kind_t
ecs_type_kind_t	lib/flecs/include/flecs/addons/meta.h	/^typedef enum ecs_type_kind_t {$/;"	g
ecs_type_kind_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_type_kind_t;$/;"	t	typeref:enum:ecs_type_kind_t
ecs_type_str	lib/flecs/flecs.c	/^char* ecs_type_str($/;"	f	typeref:typename:char *
ecs_type_str	lib/flecs/src/entity.c	/^char* ecs_type_str($/;"	f	typeref:typename:char *
ecs_type_t	lib/flecs/flecs.h	/^typedef const ecs_vector_t* ecs_type_t;$/;"	t	typeref:typename:const ecs_vector_t *
ecs_type_t	lib/flecs/include/flecs.h	/^typedef const ecs_vector_t* ecs_type_t;$/;"	t	typeref:typename:const ecs_vector_t *
ecs_u16_t	lib/flecs/flecs.h	/^typedef uint16_t ecs_u16_t;$/;"	t	typeref:typename:uint16_t
ecs_u16_t	lib/flecs/include/flecs/addons/meta.h	/^typedef uint16_t ecs_u16_t;$/;"	t	typeref:typename:uint16_t
ecs_u32_t	lib/flecs/flecs.h	/^typedef uint32_t ecs_u32_t;$/;"	t	typeref:typename:uint32_t
ecs_u32_t	lib/flecs/include/flecs/addons/meta.h	/^typedef uint32_t ecs_u32_t;$/;"	t	typeref:typename:uint32_t
ecs_u64_t	lib/flecs/flecs.h	/^typedef uint64_t ecs_u64_t;$/;"	t	typeref:typename:uint64_t
ecs_u64_t	lib/flecs/include/flecs/addons/meta.h	/^typedef uint64_t ecs_u64_t;$/;"	t	typeref:typename:uint64_t
ecs_u8_t	lib/flecs/flecs.h	/^typedef uint8_t ecs_u8_t;$/;"	t	typeref:typename:uint8_t
ecs_u8_t	lib/flecs/include/flecs/addons/meta.h	/^typedef uint8_t ecs_u8_t;$/;"	t	typeref:typename:uint8_t
ecs_unit_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_unit_desc_t {$/;"	s
ecs_unit_desc_t	lib/flecs/flecs.h	/^} ecs_unit_desc_t;$/;"	t	typeref:struct:ecs_unit_desc_t
ecs_unit_desc_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_unit_desc_t {$/;"	s
ecs_unit_desc_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_unit_desc_t;$/;"	t	typeref:struct:ecs_unit_desc_t
ecs_unit_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_unit_init($/;"	f	typeref:typename:ecs_entity_t
ecs_unit_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_unit_init($/;"	f	typeref:typename:ecs_entity_t
ecs_unit_prefix_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_unit_prefix_desc_t {$/;"	s
ecs_unit_prefix_desc_t	lib/flecs/flecs.h	/^} ecs_unit_prefix_desc_t;$/;"	t	typeref:struct:ecs_unit_prefix_desc_t
ecs_unit_prefix_desc_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_unit_prefix_desc_t {$/;"	s
ecs_unit_prefix_desc_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_unit_prefix_desc_t;$/;"	t	typeref:struct:ecs_unit_prefix_desc_t
ecs_unit_prefix_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_unit_prefix_init($/;"	f	typeref:typename:ecs_entity_t
ecs_unit_prefix_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_unit_prefix_init($/;"	f	typeref:typename:ecs_entity_t
ecs_unit_translation_t	lib/flecs/flecs.h	/^typedef struct ecs_unit_translation_t {$/;"	s
ecs_unit_translation_t	lib/flecs/flecs.h	/^} ecs_unit_translation_t;$/;"	t	typeref:struct:ecs_unit_translation_t
ecs_unit_translation_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_unit_translation_t {$/;"	s
ecs_unit_translation_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_unit_translation_t;$/;"	t	typeref:struct:ecs_unit_translation_t
ecs_unlock	lib/flecs/flecs.c	/^void ecs_unlock($/;"	f	typeref:typename:void
ecs_unlock	lib/flecs/src/world.c	/^void ecs_unlock($/;"	f	typeref:typename:void
ecs_uptr_t	lib/flecs/flecs.h	/^typedef uintptr_t ecs_uptr_t;$/;"	t	typeref:typename:uintptr_t
ecs_uptr_t	lib/flecs/include/flecs/addons/meta.h	/^typedef uintptr_t ecs_uptr_t;$/;"	t	typeref:typename:uintptr_t
ecs_var_kind_t	lib/flecs/flecs.h	/^typedef enum ecs_var_kind_t {$/;"	g
ecs_var_kind_t	lib/flecs/flecs.h	/^} ecs_var_kind_t;$/;"	t	typeref:enum:ecs_var_kind_t
ecs_var_kind_t	lib/flecs/include/flecs.h	/^typedef enum ecs_var_kind_t {$/;"	g
ecs_var_kind_t	lib/flecs/include/flecs.h	/^} ecs_var_kind_t;$/;"	t	typeref:enum:ecs_var_kind_t
ecs_vasprintf	lib/flecs/flecs.c	/^char *ecs_vasprintf($/;"	f	typeref:typename:char *	file:
ecs_vasprintf	lib/flecs/src/addons/log.c	/^char *ecs_vasprintf($/;"	f	typeref:typename:char *	file:
ecs_vector_add	lib/flecs/flecs.h	/^#define ecs_vector_add(/;"	d
ecs_vector_add	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_add(/;"	d
ecs_vector_add_t	lib/flecs/flecs.h	/^#define ecs_vector_add_t(/;"	d
ecs_vector_add_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_add_t(/;"	d
ecs_vector_addn	lib/flecs/flecs.h	/^#define ecs_vector_addn(/;"	d
ecs_vector_addn	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_addn(/;"	d
ecs_vector_addn_t	lib/flecs/flecs.h	/^#define ecs_vector_addn_t(/;"	d
ecs_vector_addn_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_addn_t(/;"	d
ecs_vector_assert_size	lib/flecs/flecs.c	/^void ecs_vector_assert_size($/;"	f	typeref:typename:void
ecs_vector_assert_size	lib/flecs/src/datastructures/vector.c	/^void ecs_vector_assert_size($/;"	f	typeref:typename:void
ecs_vector_clear	lib/flecs/flecs.c	/^void ecs_vector_clear($/;"	f	typeref:typename:void
ecs_vector_clear	lib/flecs/src/datastructures/vector.c	/^void ecs_vector_clear($/;"	f	typeref:typename:void
ecs_vector_copy	lib/flecs/flecs.h	/^#define ecs_vector_copy(/;"	d
ecs_vector_copy	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_copy(/;"	d
ecs_vector_copy_t	lib/flecs/flecs.h	/^#define ecs_vector_copy_t(/;"	d
ecs_vector_copy_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_copy_t(/;"	d
ecs_vector_count	lib/flecs/flecs.c	/^int32_t ecs_vector_count($/;"	f	typeref:typename:int32_t
ecs_vector_count	lib/flecs/src/datastructures/vector.c	/^int32_t ecs_vector_count($/;"	f	typeref:typename:int32_t
ecs_vector_desc_t	lib/flecs/flecs.h	/^typedef struct ecs_vector_desc_t {$/;"	s
ecs_vector_desc_t	lib/flecs/flecs.h	/^} ecs_vector_desc_t;$/;"	t	typeref:struct:ecs_vector_desc_t
ecs_vector_desc_t	lib/flecs/include/flecs/addons/meta.h	/^typedef struct ecs_vector_desc_t {$/;"	s
ecs_vector_desc_t	lib/flecs/include/flecs/addons/meta.h	/^} ecs_vector_desc_t;$/;"	t	typeref:struct:ecs_vector_desc_t
ecs_vector_each	lib/flecs/flecs.h	/^#define ecs_vector_each(/;"	d
ecs_vector_each	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_each(/;"	d
ecs_vector_first	lib/flecs/flecs.h	/^#define ecs_vector_first(/;"	d
ecs_vector_first	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_first(/;"	d
ecs_vector_first_t	lib/flecs/flecs.h	/^#define ecs_vector_first_t(/;"	d
ecs_vector_first_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_first_t(/;"	d
ecs_vector_free	lib/flecs/flecs.c	/^void ecs_vector_free($/;"	f	typeref:typename:void
ecs_vector_free	lib/flecs/src/datastructures/vector.c	/^void ecs_vector_free($/;"	f	typeref:typename:void
ecs_vector_from_array	lib/flecs/flecs.h	/^#define ecs_vector_from_array(/;"	d
ecs_vector_from_array	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_from_array(/;"	d
ecs_vector_get	lib/flecs/flecs.h	/^#define ecs_vector_get(/;"	d
ecs_vector_get	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_get(/;"	d
ecs_vector_get_t	lib/flecs/flecs.h	/^#define ecs_vector_get_t(/;"	d
ecs_vector_get_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_get_t(/;"	d
ecs_vector_grow	lib/flecs/flecs.h	/^#define ecs_vector_grow(/;"	d
ecs_vector_grow	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_grow(/;"	d
ecs_vector_init	lib/flecs/flecs.c	/^ecs_entity_t ecs_vector_init($/;"	f	typeref:typename:ecs_entity_t
ecs_vector_init	lib/flecs/src/addons/meta/api.c	/^ecs_entity_t ecs_vector_init($/;"	f	typeref:typename:ecs_entity_t
ecs_vector_insert_at	lib/flecs/flecs.h	/^#define ecs_vector_insert_at(/;"	d
ecs_vector_insert_at	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_insert_at(/;"	d
ecs_vector_insert_at_t	lib/flecs/flecs.h	/^#define ecs_vector_insert_at_t(/;"	d
ecs_vector_insert_at_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_insert_at_t(/;"	d
ecs_vector_last	lib/flecs/flecs.h	/^#define ecs_vector_last(/;"	d
ecs_vector_last	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_last(/;"	d
ecs_vector_last_t	lib/flecs/flecs.h	/^#define ecs_vector_last_t(/;"	d
ecs_vector_last_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_last_t(/;"	d
ecs_vector_memory	lib/flecs/flecs.h	/^#define ecs_vector_memory(/;"	d
ecs_vector_memory	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_memory(/;"	d
ecs_vector_memory_t	lib/flecs/flecs.h	/^#define ecs_vector_memory_t(/;"	d
ecs_vector_memory_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_memory_t(/;"	d
ecs_vector_move_index	lib/flecs/flecs.h	/^#define ecs_vector_move_index(/;"	d
ecs_vector_move_index	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_move_index(/;"	d
ecs_vector_move_index_t	lib/flecs/flecs.h	/^#define ecs_vector_move_index_t(/;"	d
ecs_vector_move_index_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_move_index_t(/;"	d
ecs_vector_new	lib/flecs/flecs.h	/^#define ecs_vector_new(/;"	d
ecs_vector_new	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_new(/;"	d
ecs_vector_new_t	lib/flecs/flecs.h	/^#define ecs_vector_new_t(/;"	d
ecs_vector_new_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_new_t(/;"	d
ecs_vector_pop	lib/flecs/flecs.h	/^#define ecs_vector_pop(/;"	d
ecs_vector_pop	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_pop(/;"	d
ecs_vector_reclaim	lib/flecs/flecs.h	/^#define ecs_vector_reclaim(/;"	d
ecs_vector_reclaim	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_reclaim(/;"	d
ecs_vector_remove	lib/flecs/flecs.h	/^#define ecs_vector_remove(/;"	d
ecs_vector_remove	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_remove(/;"	d
ecs_vector_remove_last	lib/flecs/flecs.c	/^void ecs_vector_remove_last($/;"	f	typeref:typename:void
ecs_vector_remove_last	lib/flecs/src/datastructures/vector.c	/^void ecs_vector_remove_last($/;"	f	typeref:typename:void
ecs_vector_remove_t	lib/flecs/flecs.h	/^#define ecs_vector_remove_t(/;"	d
ecs_vector_remove_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_remove_t(/;"	d
ecs_vector_set_count	lib/flecs/flecs.h	/^#define ecs_vector_set_count(/;"	d
ecs_vector_set_count	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_set_count(/;"	d
ecs_vector_set_count_t	lib/flecs/flecs.h	/^#define ecs_vector_set_count_t(/;"	d
ecs_vector_set_count_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_set_count_t(/;"	d
ecs_vector_set_min_count	lib/flecs/flecs.h	/^#define ecs_vector_set_min_count(/;"	d
ecs_vector_set_min_count	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_set_min_count(/;"	d
ecs_vector_set_min_count_t	lib/flecs/flecs.h	/^#define ecs_vector_set_min_count_t(/;"	d
ecs_vector_set_min_count_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_set_min_count_t(/;"	d
ecs_vector_set_min_size	lib/flecs/flecs.h	/^#define ecs_vector_set_min_size(/;"	d
ecs_vector_set_min_size	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_set_min_size(/;"	d
ecs_vector_set_size	lib/flecs/flecs.h	/^#define ecs_vector_set_size(/;"	d
ecs_vector_set_size	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_set_size(/;"	d
ecs_vector_set_size_t	lib/flecs/flecs.h	/^#define ecs_vector_set_size_t(/;"	d
ecs_vector_set_size_t	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_set_size_t(/;"	d
ecs_vector_size	lib/flecs/flecs.c	/^int32_t ecs_vector_size($/;"	f	typeref:typename:int32_t
ecs_vector_size	lib/flecs/src/datastructures/vector.c	/^int32_t ecs_vector_size($/;"	f	typeref:typename:int32_t
ecs_vector_sort	lib/flecs/flecs.h	/^#define ecs_vector_sort(/;"	d
ecs_vector_sort	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_sort(/;"	d
ecs_vector_t	lib/flecs/flecs.c	/^struct ecs_vector_t {$/;"	s	file:
ecs_vector_t	lib/flecs/flecs.h	/^typedef struct ecs_vector_t ecs_vector_t;$/;"	t	typeref:struct:ecs_vector_t
ecs_vector_t	lib/flecs/include/flecs/private/vector.h	/^typedef struct ecs_vector_t ecs_vector_t;$/;"	t	typeref:struct:ecs_vector_t
ecs_vector_t	lib/flecs/src/datastructures/vector.c	/^struct ecs_vector_t {$/;"	s	file:
ecs_vector_zero	lib/flecs/flecs.h	/^#define ecs_vector_zero(/;"	d
ecs_vector_zero	lib/flecs/include/flecs/private/vector.h	/^#define ecs_vector_zero(/;"	d
ecs_warn	lib/flecs/flecs.h	/^#define ecs_warn(/;"	d
ecs_warn	lib/flecs/include/flecs/addons/log.h	/^#define ecs_warn(/;"	d
ecs_worker_begin	lib/flecs/flecs.c	/^void ecs_worker_begin($/;"	f	typeref:typename:void
ecs_worker_begin	lib/flecs/src/addons/pipeline/worker.c	/^void ecs_worker_begin($/;"	f	typeref:typename:void
ecs_worker_end	lib/flecs/flecs.c	/^void ecs_worker_end($/;"	f	typeref:typename:void
ecs_worker_end	lib/flecs/src/addons/pipeline/worker.c	/^void ecs_worker_end($/;"	f	typeref:typename:void
ecs_worker_iter	lib/flecs/flecs.c	/^ecs_iter_t ecs_worker_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_worker_iter	lib/flecs/src/iter.c	/^ecs_iter_t ecs_worker_iter($/;"	f	typeref:typename:ecs_iter_t
ecs_worker_iter_t	lib/flecs/flecs.h	/^typedef struct ecs_worker_iter_t {$/;"	s
ecs_worker_iter_t	lib/flecs/flecs.h	/^} ecs_worker_iter_t;$/;"	t	typeref:struct:ecs_worker_iter_t
ecs_worker_iter_t	lib/flecs/include/flecs/private/api_types.h	/^typedef struct ecs_worker_iter_t {$/;"	s
ecs_worker_iter_t	lib/flecs/include/flecs/private/api_types.h	/^} ecs_worker_iter_t;$/;"	t	typeref:struct:ecs_worker_iter_t
ecs_worker_next	lib/flecs/flecs.c	/^bool ecs_worker_next($/;"	f	typeref:typename:bool
ecs_worker_next	lib/flecs/src/iter.c	/^bool ecs_worker_next($/;"	f	typeref:typename:bool
ecs_worker_next_instanced	lib/flecs/flecs.c	/^bool ecs_worker_next_instanced($/;"	f	typeref:typename:bool	file:
ecs_worker_next_instanced	lib/flecs/src/iter.c	/^bool ecs_worker_next_instanced($/;"	f	typeref:typename:bool	file:
ecs_worker_sync	lib/flecs/flecs.c	/^int32_t ecs_worker_sync($/;"	f	typeref:typename:int32_t
ecs_worker_sync	lib/flecs/src/addons/pipeline/worker.c	/^int32_t ecs_worker_sync($/;"	f	typeref:typename:int32_t
ecs_workers_progress	lib/flecs/flecs.c	/^void ecs_workers_progress($/;"	f	typeref:typename:void
ecs_workers_progress	lib/flecs/src/addons/pipeline/worker.c	/^void ecs_workers_progress($/;"	f	typeref:typename:void
ecs_world_info_t	lib/flecs/flecs.h	/^typedef struct ecs_world_info_t {$/;"	s
ecs_world_info_t	lib/flecs/flecs.h	/^} ecs_world_info_t;$/;"	t	typeref:struct:ecs_world_info_t
ecs_world_info_t	lib/flecs/include/flecs.h	/^typedef struct ecs_world_info_t {$/;"	s
ecs_world_info_t	lib/flecs/include/flecs.h	/^} ecs_world_info_t;$/;"	t	typeref:struct:ecs_world_info_t
ecs_world_stats_t	lib/flecs/flecs.h	/^typedef struct ecs_world_stats_t {$/;"	s
ecs_world_stats_t	lib/flecs/flecs.h	/^} ecs_world_stats_t;$/;"	t	typeref:struct:ecs_world_stats_t
ecs_world_stats_t	lib/flecs/include/flecs/addons/stats.h	/^typedef struct ecs_world_stats_t {$/;"	s
ecs_world_stats_t	lib/flecs/include/flecs/addons/stats.h	/^} ecs_world_stats_t;$/;"	t	typeref:struct:ecs_world_stats_t
ecs_world_t	lib/flecs/flecs.c	/^struct ecs_world_t {$/;"	s	file:
ecs_world_t	lib/flecs/flecs.h	/^typedef struct ecs_world_t ecs_world_t;$/;"	t	typeref:struct:ecs_world_t
ecs_world_t	lib/flecs/include/flecs.h	/^typedef struct ecs_world_t ecs_world_t;$/;"	t	typeref:struct:ecs_world_t
ecs_world_t	lib/flecs/src/private_types.h	/^struct ecs_world_t {$/;"	s
ecs_world_t_magic	lib/flecs/flecs.c	/^#define ecs_world_t_magic /;"	d	file:
ecs_world_t_magic	lib/flecs/src/private_types.h	/^#define ecs_world_t_magic /;"	d
ecs_world_t_mixins	lib/flecs/flecs.c	/^ecs_mixins_t ecs_world_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_world_t_mixins	lib/flecs/src/poly.c	/^ecs_mixins_t ecs_world_t_mixins = {$/;"	v	typeref:typename:ecs_mixins_t
ecs_xtor_t	lib/flecs/flecs.h	/^typedef void (*ecs_xtor_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const ecs_entity_t * entity_ptr,void * ptr,size_t size,int32_t count,void * ctx)
ecs_xtor_t	lib/flecs/include/flecs/private/api_types.h	/^typedef void (*ecs_xtor_t)($/;"	t	typeref:typename:void (*)(ecs_world_t * world,ecs_entity_t component,const ecs_entity_t * entity_ptr,void * ptr,size_t size,int32_t count,void * ctx)
edit_cache	cmake-build-debug/Makefile	/^edit_cache:$/;"	t
edit_cache	cmake-build-debug/lib/flecs/Makefile	/^edit_cache:$/;"	t
edit_cache	cmake-build-debug/lib/libflint/Makefile	/^edit_cache:$/;"	t
edit_cache	cmake-build-release/Makefile	/^edit_cache:$/;"	t
edit_cache	cmake-build-release/lib/flecs/Makefile	/^edit_cache:$/;"	t
edit_cache	cmake-build-release/lib/libflint/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	cmake-build-debug/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	cmake-build-debug/lib/flecs/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	cmake-build-debug/lib/libflint/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	cmake-build-release/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	cmake-build-release/lib/flecs/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	cmake-build-release/lib/libflint/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
el	lib/uthash/tests/test25.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test25.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test26.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test26.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test27.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test27.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test28.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test28.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test29.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test29.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test30.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test30.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test31.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test31.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test32.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test32.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test33.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test33.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test34.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test34.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test41.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test41.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test42.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test42.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test56.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test56.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test63.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test63.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test64.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test64.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test68.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test68.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test69.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test69.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test70.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test70.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test71.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test71.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test72.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test72.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test73.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test73.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test78.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test78.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test86.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test86.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test91.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test91.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test94.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test94.c	/^} el;$/;"	t	typeref:struct:el	file:
el	lib/uthash/tests/test95.c	/^typedef struct el {$/;"	s	file:
el	lib/uthash/tests/test95.c	/^} el;$/;"	t	typeref:struct:el	file:
el_t	lib/uthash/tests/test57.c	/^} el_t;$/;"	t	typeref:struct:__anonbb942a060108	file:
electric_current	lib/flecs/flecs.h	/^struct electric_current {$/;"	s	struct:flecs::units
electric_current	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct electric_current {$/;"	s	struct:flecs::units
elem	lib/flecs/test/collections/src/Map.c	/^struct elem { int hash; char *value; } elems[] = {$/;"	s	file:
elem_cur	lib/flecs/flecs.h	/^    int32_t elem_cur;         \/* Current element (for collections) *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:int32_t
elem_cur	lib/flecs/include/flecs/addons/meta.h	/^    int32_t elem_cur;         \/* Current element (for collections) *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:int32_t
elem_size	lib/flecs/flecs.c	/^    int32_t elem_size;$/;"	m	struct:sort_helper_t	typeref:typename:int32_t	file:
elem_size	lib/flecs/flecs.c	/^    int64_t elem_size; \/* Used in debug mode to validate size *\/$/;"	m	struct:ecs_vector_t	typeref:typename:int64_t	file:
elem_size	lib/flecs/flecs.h	/^    int16_t elem_size;$/;"	m	struct:ecs_map_t	typeref:typename:int16_t
elem_size	lib/flecs/include/flecs/private/map.h	/^    int16_t elem_size;$/;"	m	struct:ecs_map_t	typeref:typename:int16_t
elem_size	lib/flecs/src/datastructures/vector.c	/^    int64_t elem_size; \/* Used in debug mode to validate size *\/$/;"	m	struct:ecs_vector_t	typeref:typename:int64_t	file:
elem_size	lib/flecs/src/query.c	/^    int32_t elem_size;$/;"	m	struct:sort_helper_t	typeref:typename:int32_t	file:
element	lib/flecs/flecs.c	/^    int32_t element;        \/* First element for value *\/$/;"	m	struct:flecs_switch_header_t	typeref:typename:int32_t	file:
element	lib/flecs/include/flecs/private/switch_list.h	/^    int32_t element;        \/* First element for value *\/$/;"	m	struct:flecs_switch_header_t	typeref:typename:int32_t
elementCount	lib/flecs/flecs.h	/^    int32_t elementCount;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
elementCount	lib/flecs/include/flecs/private/strbuf.h	/^    int32_t elementCount;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
element_index	lib/flecs/flecs.h	/^    int32_t element_index;$/;"	m	struct:ecs_map_iter_t	typeref:typename:int32_t
element_index	lib/flecs/include/flecs/private/map.h	/^    int32_t element_index;$/;"	m	struct:ecs_map_iter_t	typeref:typename:int32_t
elems	lib/flecs/flecs.c	/^    ecs_size_t elems[EcsMixinMax];                        $/;"	m	struct:ecs_mixins_t	typeref:typename:ecs_size_t[]	file:
elems	lib/flecs/src/private_types.h	/^    ecs_size_t elems[EcsMixinMax];                        $/;"	m	struct:ecs_mixins_t	typeref:typename:ecs_size_t[]
elems	lib/flecs/test/collections/src/Map.c	/^struct elem { int hash; char *value; } elems[] = {$/;"	v	typeref:struct:elem[]
elt	lib/uthash/tests/test35.c	/^typedef struct elt {$/;"	s	file:
elt	lib/uthash/tests/test35.c	/^} elt;$/;"	t	typeref:struct:elt	file:
elt	lib/uthash/tests/threads/test1.c	/^} elt;$/;"	t	typeref:struct:__anon26fef7250108	file:
elt	lib/uthash/tests/threads/test2.c	/^} elt;$/;"	t	typeref:struct:__anon26fefb660108	file:
eltcmp	lib/uthash/tests/test42.c	/^static int eltcmp(el *a, el *b)$/;"	f	typeref:typename:int	file:
elts	lib/uthash/tests/threads/test1.c	/^elt *elts=NULL; \/* this is our hash table which two threads will use *\/$/;"	v	typeref:typename:elt *
elts	lib/uthash/tests/threads/test2.c	/^elt *elts=NULL; \/* this is our hash table which two threads will use *\/$/;"	v	typeref:typename:elt *
emit	lib/flecs/flecs.h	/^    void emit() {$/;"	f	struct:flecs::event_builder_base	typeref:typename:void
emit	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    void emit() {$/;"	f	struct:flecs::event_builder_base	typeref:typename:void
emplace	lib/flecs/flecs.h	/^    Self& emplace(Args&&... args) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
emplace	lib/flecs/flecs.h	/^    void emplace(Args&&... args) const {$/;"	f	struct:flecs::world	typeref:typename:void
emplace	lib/flecs/flecs.h	/^inline void emplace(world_t *world, id_t entity, Args&&... args) {$/;"	f	namespace:flecs	typeref:typename:void
emplace	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline void emplace(world_t *world, id_t entity, Args&&... args) {$/;"	f	namespace:flecs	typeref:typename:void
emplace	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& emplace(Args&&... args) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
emplace	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void emplace(Args&&... args) const {$/;"	f	struct:flecs::world	typeref:typename:void
emplace	lib/flecs/include/flecs/addons/cpp/world.hpp	/^inline void emplace(world_t *world, id_t entity, Args&&... args) {$/;"	f	namespace:flecs	typeref:typename:void
empty	lib/flecs/flecs.c	/^    bool empty;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:typename:bool	file:
empty	lib/flecs/src/private_types.h	/^    bool empty;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:typename:bool
empty_table_callback	lib/flecs/test/api/src/Event.c	/^void empty_table_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
empty_table_callback_invoked	lib/flecs/test/api/src/Event.c	/^static int empty_table_callback_invoked = 0;$/;"	v	typeref:typename:int	file:
empty_table_count	lib/flecs/flecs.h	/^    ecs_gauge_t empty_table_count;            \/* Number of empty tables *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
empty_table_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t empty_table_count;            \/* Number of empty tables *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
empty_tables	lib/flecs/flecs.c	/^    ecs_table_cache_list_t empty_tables;$/;"	m	struct:ecs_table_cache_t	typeref:typename:ecs_table_cache_list_t	file:
empty_tables	lib/flecs/flecs.h	/^    bool empty_tables;$/;"	m	struct:ecs_term_iter_t	typeref:typename:bool
empty_tables	lib/flecs/include/flecs/private/api_types.h	/^    bool empty_tables;$/;"	m	struct:ecs_term_iter_t	typeref:typename:bool
empty_tables	lib/flecs/src/private_types.h	/^    ecs_table_cache_list_t empty_tables;$/;"	m	struct:ecs_table_cache_t	typeref:typename:ecs_table_cache_list_t
enable	lib/flecs/flecs.h	/^    Self& enable() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
enable	lib/flecs/flecs.h	/^    Self& enable(entity_t comp) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
enable	lib/flecs/flecs.h	/^    void enable() const {$/;"	f	struct:flecs::type_base	typeref:typename:void
enable	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& enable() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
enable	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& enable(entity_t comp) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
enable	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    void enable() const {$/;"	f	struct:flecs::type_base	typeref:typename:void
enable_colors	lib/flecs/flecs.h	/^inline void enable_colors(bool enabled) {$/;"	f	namespace:flecs::log	typeref:typename:void
enable_colors	lib/flecs/include/flecs/addons/cpp/log.hpp	/^inline void enable_colors(bool enabled) {$/;"	f	namespace:flecs::log	typeref:typename:void
enable_high_timer_resolution_	lib/flecs/flecs.h	/^    ecs_os_api_enable_high_timer_resolution_t enable_high_timer_resolution_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_enable_high_timer_resolution_t
enable_high_timer_resolution_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_enable_high_timer_resolution_t enable_high_timer_resolution_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_enable_high_timer_resolution_t
enable_if_t	lib/flecs/flecs.h	/^using enable_if_t = typename std::enable_if<V, T>::type;$/;"	t	namespace:flecs	typeref:typename:std::enable_if<V,T>::type
enable_if_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using enable_if_t = typename std::enable_if<V, T>::type;$/;"	t	namespace:flecs	typeref:typename:std::enable_if<V,T>::type
enable_locking	lib/flecs/flecs.h	/^    bool enable_locking(bool enabled) {$/;"	f	struct:flecs::world	typeref:typename:bool
enable_locking	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool enable_locking(bool enabled) {$/;"	f	struct:flecs::world	typeref:typename:bool
enable_range_check	lib/flecs/flecs.h	/^    void enable_range_check(bool enabled) const {$/;"	f	struct:flecs::world	typeref:typename:void
enable_range_check	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void enable_range_check(bool enabled) const {$/;"	f	struct:flecs::world	typeref:typename:void
enable_rest	lib/flecs/flecs.h	/^    app_builder& enable_rest(bool value = true) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
enable_rest	lib/flecs/flecs.h	/^    bool enable_rest;         \/* Allows HTTP clients to access ECS data *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:bool
enable_rest	lib/flecs/include/flecs/addons/app.h	/^    bool enable_rest;         \/* Allows HTTP clients to access ECS data *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:bool
enable_rest	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    app_builder& enable_rest(bool value = true) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
enable_status	lib/flecs/test/api/src/SystemManual.c	/^static ecs_system_status_t enable_status = EcsSystemStatusNone;$/;"	v	typeref:typename:ecs_system_status_t	file:
enable_status	lib/flecs/test/api/src/SystemMisc.c	/^static ecs_system_status_t enable_status = EcsSystemStatusNone;$/;"	v	typeref:typename:ecs_system_status_t	file:
enabled	lib/flecs/flecs.h	/^    bool enabled() {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
enabled	lib/flecs/flecs.h	/^    ecs_gauge_t enabled;            \/* Whether system is enabled *\/$/;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_gauge_t
enabled	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool enabled() {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
enabled	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t enabled;            \/* Whether system is enabled *\/$/;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_gauge_t
encoding	lib/uthash/tests/test22.c	/^    char encoding;      \/* these two fields *\/$/;"	m	struct:__anonbb926f9e0108	typeref:typename:char	file:
encoding	lib/uthash/tests/test22.c	/^    char encoding;$/;"	m	struct:__anonbb926f9e0208	typeref:typename:char	file:
end	lib/flecs/flecs.h	/^    array_iterator<T> end() { return array_iterator<T>(nullptr, 0); }$/;"	f	struct:flecs::array	typeref:typename:array_iterator<T>
end	lib/flecs/flecs.h	/^    array_iterator<T> end() {$/;"	f	struct:flecs::array	typeref:typename:array_iterator<T>
end	lib/flecs/flecs.h	/^    row_iterator end() const {$/;"	f	struct:flecs::iter	typeref:typename:row_iterator
end	lib/flecs/flecs.h	/^    vector_iterator<T> end() {$/;"	f	class:flecs::vector	typeref:typename:vector_iterator<T>
end	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    row_iterator end() const {$/;"	f	struct:flecs::iter	typeref:typename:row_iterator
end	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    array_iterator<T> end() { return array_iterator<T>(nullptr, 0); }$/;"	f	struct:flecs::array	typeref:typename:array_iterator<T>
end	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    array_iterator<T> end() {$/;"	f	struct:flecs::array	typeref:typename:array_iterator<T>
end	lib/flecs/include/flecs/private/vector.h	/^    vector_iterator<T> end() {$/;"	f	class:flecs::vector	typeref:typename:vector_iterator<T>
end	lib/uthash/tests/hashscan.c	/^    off_t end;$/;"	m	struct:__anone6f392830208	typeref:typename:off_t	file:
end	lib/uthash/tests/hashscan.c	/^    void *end;$/;"	m	struct:__anone6f392830108	typeref:typename:void *	file:
enqueue_request	lib/flecs/flecs.c	/^void enqueue_request($/;"	f	typeref:typename:void	file:
enqueue_request	lib/flecs/src/addons/http.c	/^void enqueue_request($/;"	f	typeref:typename:void	file:
ensure	lib/flecs/flecs.c	/^void ensure($/;"	f	typeref:typename:void	file:
ensure	lib/flecs/flecs.h	/^inline flecs::entity world::ensure(flecs::entity_t e) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
ensure	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity world::ensure(flecs::entity_t e) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
ensure	lib/flecs/src/datastructures/bitset.c	/^void ensure($/;"	f	typeref:typename:void	file:
ensure_all_variables	lib/flecs/flecs.c	/^void ensure_all_variables($/;"	f	typeref:typename:void	file:
ensure_all_variables	lib/flecs/src/addons/rules.c	/^void ensure_all_variables($/;"	f	typeref:typename:void	file:
ensure_bucket	lib/flecs/flecs.c	/^ecs_bucket_t* ensure_bucket($/;"	f	typeref:typename:ecs_bucket_t *	file:
ensure_bucket	lib/flecs/src/datastructures/map.c	/^ecs_bucket_t* ensure_bucket($/;"	f	typeref:typename:ecs_bucket_t *	file:
ensure_buckets	lib/flecs/flecs.c	/^void ensure_buckets($/;"	f	typeref:typename:void	file:
ensure_buckets	lib/flecs/src/datastructures/map.c	/^void ensure_buckets($/;"	f	typeref:typename:void	file:
ensure_columns	lib/flecs/flecs.c	/^int32_t ensure_columns($/;"	f	typeref:typename:int32_t	file:
ensure_columns	lib/flecs/src/table_graph.c	/^int32_t ensure_columns($/;"	f	typeref:typename:int32_t	file:
ensure_edge	lib/flecs/flecs.c	/^ecs_graph_edge_t* ensure_edge($/;"	f	typeref:typename:ecs_graph_edge_t *	file:
ensure_edge	lib/flecs/src/table_graph.c	/^ecs_graph_edge_t* ensure_edge($/;"	f	typeref:typename:ecs_graph_edge_t *	file:
ensure_entity	lib/flecs/flecs.c	/^ecs_entity_t ensure_entity($/;"	f	typeref:typename:ecs_entity_t	file:
ensure_entity	lib/flecs/src/addons/plecs.c	/^ecs_entity_t ensure_entity($/;"	f	typeref:typename:ecs_entity_t	file:
ensure_entity_written	lib/flecs/flecs.c	/^ecs_rule_var_t* ensure_entity_written($/;"	f	typeref:typename:ecs_rule_var_t *	file:
ensure_entity_written	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* ensure_entity_written($/;"	f	typeref:typename:ecs_rule_var_t *	file:
ensure_event_id_record	lib/flecs/flecs.c	/^ecs_event_id_record_t* ensure_event_id_record($/;"	f	typeref:typename:ecs_event_id_record_t *	file:
ensure_event_id_record	lib/flecs/src/trigger.c	/^ecs_event_id_record_t* ensure_event_id_record($/;"	f	typeref:typename:ecs_event_id_record_t *	file:
ensure_group	lib/flecs/flecs.c	/^ecs_query_table_list_t* ensure_group($/;"	f	typeref:typename:ecs_query_table_list_t *	file:
ensure_group	lib/flecs/src/query.c	/^ecs_query_table_list_t* ensure_group($/;"	f	typeref:typename:ecs_query_table_list_t *	file:
ensure_hi_edge	lib/flecs/flecs.c	/^ecs_graph_edge_t* ensure_hi_edge($/;"	f	typeref:typename:ecs_graph_edge_t *	file:
ensure_hi_edge	lib/flecs/src/table_graph.c	/^ecs_graph_edge_t* ensure_hi_edge($/;"	f	typeref:typename:ecs_graph_edge_t *	file:
ensure_module_tag	lib/flecs/flecs.c	/^void ensure_module_tag(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ensure_module_tag	lib/flecs/src/bootstrap.c	/^void ensure_module_tag(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
ensure_most_specific_var	lib/flecs/flecs.c	/^ecs_rule_var_t *ensure_most_specific_var($/;"	f	typeref:typename:ecs_rule_var_t *	file:
ensure_most_specific_var	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t *ensure_most_specific_var($/;"	f	typeref:typename:ecs_rule_var_t *	file:
ensure_node_list	lib/flecs/flecs.c	/^ecs_query_table_list_t* ensure_node_list($/;"	f	typeref:typename:ecs_query_table_list_t *	file:
ensure_node_list	lib/flecs/src/query.c	/^ecs_query_table_list_t* ensure_node_list($/;"	f	typeref:typename:ecs_query_table_list_t *	file:
ensure_term_id_variable	lib/flecs/flecs.c	/^ecs_rule_var_t* ensure_term_id_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
ensure_term_id_variable	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* ensure_term_id_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
ensure_variable	lib/flecs/flecs.c	/^ecs_rule_var_t* ensure_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
ensure_variable	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* ensure_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
ent	lib/flecs/flecs.c	/^        ecs_entity_t ent;$/;"	m	union:ecs_rule_pair_t::__anona642c005050a	typeref:typename:ecs_entity_t	file:
ent	lib/flecs/flecs.c	/^        ecs_entity_t ent;$/;"	m	union:ecs_rule_pair_t::__anona642c005060a	typeref:typename:ecs_entity_t	file:
ent	lib/flecs/src/addons/rules.c	/^        ecs_entity_t ent;$/;"	m	union:ecs_rule_pair_t::__anon218568c2010a	typeref:typename:ecs_entity_t	file:
ent	lib/flecs/src/addons/rules.c	/^        ecs_entity_t ent;$/;"	m	union:ecs_rule_pair_t::__anon218568c2020a	typeref:typename:ecs_entity_t	file:
ent	lib/flecs/test/api/src/TriggerOnRemove.c	/^    ecs_entity_t ent;$/;"	m	struct:on_remove_has_tag_t	typeref:typename:ecs_entity_t	file:
entities	lib/flecs/flecs.c	/^    ecs_entity_t *entities;  $/;"	m	struct:ecs_defer_op_n_t	typeref:typename:ecs_entity_t *	file:
entities	lib/flecs/flecs.c	/^    ecs_entity_t *entities;$/;"	m	struct:sort_helper_t	typeref:typename:ecs_entity_t *	file:
entities	lib/flecs/flecs.c	/^    ecs_vector_t *entities;      \/* Entity identifiers *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_vector_t *	file:
entities	lib/flecs/flecs.h	/^    ecs_entity_t *entities;       \/* Entity identifiers *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t *
entities	lib/flecs/flecs.h	/^    ecs_entity_t *entities;  \/* Entities to bulk insert. Entity ids provided by $/;"	m	struct:ecs_bulk_desc_t	typeref:typename:ecs_entity_t *
entities	lib/flecs/include/flecs.h	/^    ecs_entity_t *entities;  \/* Entities to bulk insert. Entity ids provided by $/;"	m	struct:ecs_bulk_desc_t	typeref:typename:ecs_entity_t *
entities	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t *entities;       \/* Entity identifiers *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t *
entities	lib/flecs/src/private_types.h	/^    ecs_entity_t *entities;  $/;"	m	struct:ecs_defer_op_n_t	typeref:typename:ecs_entity_t *
entities	lib/flecs/src/private_types.h	/^    ecs_vector_t *entities;      \/* Entity identifiers *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_vector_t *
entities	lib/flecs/src/query.c	/^    ecs_entity_t *entities;$/;"	m	struct:sort_helper_t	typeref:typename:ecs_entity_t *	file:
entities	lib/flecs/test/api/include/api.h	/^        ecs_entity_t entities[ITER_MAX_ENTITIES];$/;"	m	struct:test_iter_result_t::__anon6d6591e20108	typeref:typename:ecs_entity_t[]
entities	lib/flecs/test/api/include/api.h	/^    ecs_entity_t entities[ITER_MAX_ENTITIES];$/;"	m	struct:test_iter_result_t	typeref:typename:ecs_entity_t[]
entity	lib/flecs/flecs.c	/^    ecs_entity_t entity;            \/* Entity id of system, used for ordering *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/flecs.c	/^    ecs_entity_t entity;        \/* Entity id *\/$/;"	m	struct:ecs_defer_op_1_t	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/flecs.c	/^    ecs_entity_t entity;$/;"	m	struct:__anona642c0050808	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/flecs.c	/^    ecs_entity_t entity;$/;"	m	struct:ecs_rule_reg_t	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/flecs.h	/^    Base& entity() {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
entity	lib/flecs/flecs.h	/^    Base& entity(flecs::entity_t e) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
entity	lib/flecs/flecs.h	/^    Base& entity(flecs::id_t id) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;           \/* Parameters for component entity *\/$/;"	m	struct:ecs_component_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;           \/* Parameters for type entity *\/$/;"	m	struct:ecs_type_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_array_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_bitmask_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_enum_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_primitive_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_struct_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_unit_prefix_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_vector_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/flecs.h	/^    ecs_entity_t entity;                 \/* Result in case of 1 entity *\/$/;"	m	struct:ecs_rule_iter_t	typeref:typename:ecs_entity_t
entity	lib/flecs/flecs.h	/^    ecs_entity_t entity;        \/* Entity (default = This) *\/$/;"	m	struct:ecs_term_id_t	typeref:typename:ecs_entity_t
entity	lib/flecs/flecs.h	/^    ecs_entity_t entity;        \/* Observer entity *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_entity_t
entity	lib/flecs/flecs.h	/^    ecs_entity_t entity;        \/* Trigger entity *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_entity_t
entity	lib/flecs/flecs.h	/^    ecs_entity_t entity;    \/* Entity of the reference *\/$/;"	m	struct:ecs_ref_t	typeref:typename:ecs_entity_t
entity	lib/flecs/flecs.h	/^    ecs_entity_t entity; \/* Optional existing entity handle. *\/$/;"	m	struct:ecs_entity_desc_t	typeref:typename:ecs_entity_t
entity	lib/flecs/flecs.h	/^    entity() : entity_builder<entity>() { }$/;"	f	struct:flecs::entity
entity	lib/flecs/flecs.h	/^    explicit entity(const flecs::world_t *world, flecs::id_t id) {$/;"	f	struct:flecs::entity
entity	lib/flecs/flecs.h	/^    explicit entity(entity_t id) $/;"	f	struct:flecs::entity
entity	lib/flecs/flecs.h	/^    explicit entity(world_t *world) $/;"	f	struct:flecs::entity
entity	lib/flecs/flecs.h	/^    explicit entity(world_t *world, const char *name) $/;"	f	struct:flecs::entity
entity	lib/flecs/flecs.h	/^    flecs::entity entity() const {$/;"	f	struct:flecs::type_base	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^    flecs::entity_t entity(E value) const {$/;"	f	struct:flecs::_::enum_type	typeref:typename:flecs::entity_t
entity	lib/flecs/flecs.h	/^flecs::entity ref<T>::entity() const {$/;"	f	class:flecs::ref	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^inline flecs::entity enum_data<E>::entity() const {$/;"	f	class:flecs::enum_data	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^inline flecs::entity enum_data<E>::entity(E value) const {$/;"	f	class:flecs::enum_data	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^inline flecs::entity enum_data<E>::entity(int value) const {$/;"	f	class:flecs::enum_data	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^inline flecs::entity id::entity() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^inline flecs::entity iter::entity(size_t row) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^inline flecs::entity world::entity(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^inline flecs::entity world::entity(const char *name) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
entity	lib/flecs/flecs.h	/^struct entity : entity_builder<entity>$/;"	s	namespace:flecs
entity	lib/flecs/include/flecs.h	/^    ecs_entity_desc_t entity;           \/* Parameters for component entity *\/$/;"	m	struct:ecs_component_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs.h	/^    ecs_entity_desc_t entity;           \/* Parameters for type entity *\/$/;"	m	struct:ecs_type_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs.h	/^    ecs_entity_t entity;        \/* Entity (default = This) *\/$/;"	m	struct:ecs_term_id_t	typeref:typename:ecs_entity_t
entity	lib/flecs/include/flecs.h	/^    ecs_entity_t entity;        \/* Observer entity *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_entity_t
entity	lib/flecs/include/flecs.h	/^    ecs_entity_t entity;        \/* Trigger entity *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_entity_t
entity	lib/flecs/include/flecs.h	/^    ecs_entity_t entity; \/* Optional existing entity handle. *\/$/;"	m	struct:ecs_entity_desc_t	typeref:typename:ecs_entity_t
entity	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    entity() : entity_builder<entity>() { }$/;"	f	struct:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    explicit entity(const flecs::world_t *world, flecs::id_t id) {$/;"	f	struct:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    explicit entity(entity_t id) $/;"	f	struct:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    explicit entity(world_t *world) $/;"	f	struct:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    explicit entity(world_t *world, const char *name) $/;"	f	struct:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^struct entity : entity_builder<entity>$/;"	s	namespace:flecs
entity	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::entity iter::entity(size_t row) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity enum_data<E>::entity() const {$/;"	f	class:flecs::enum_data	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity enum_data<E>::entity(E value) const {$/;"	f	class:flecs::enum_data	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity enum_data<E>::entity(int value) const {$/;"	f	class:flecs::enum_data	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^flecs::entity ref<T>::entity() const {$/;"	f	class:flecs::ref	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity world::entity(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity world::entity(const char *name) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    Base& entity(flecs::entity_t e) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
entity	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::entity() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& entity() {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
entity	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& entity(flecs::id_t id) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
entity	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    flecs::entity entity() const {$/;"	f	struct:flecs::type_base	typeref:typename:flecs::entity
entity	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    flecs::entity_t entity(E value) const {$/;"	f	struct:flecs::_::enum_type	typeref:typename:flecs::entity_t
entity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_array_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_bitmask_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_enum_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_primitive_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_struct_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_unit_prefix_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_vector_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/addons/system.h	/^    ecs_entity_desc_t entity;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_entity_desc_t
entity	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t entity;                 \/* Result in case of 1 entity *\/$/;"	m	struct:ecs_rule_iter_t	typeref:typename:ecs_entity_t
entity	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t entity;    \/* Entity of the reference *\/$/;"	m	struct:ecs_ref_t	typeref:typename:ecs_entity_t
entity	lib/flecs/src/addons/rest.c	/^    ecs_entity_t entity;$/;"	m	struct:__anond91cde350108	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/src/addons/rules.c	/^    ecs_entity_t entity;$/;"	m	struct:ecs_rule_reg_t	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/src/addons/system/system.h	/^    ecs_entity_t entity;            \/* Entity id of system, used for ordering *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_entity_t
entity	lib/flecs/src/private_types.h	/^    ecs_entity_t entity;        \/* Entity id *\/$/;"	m	struct:ecs_defer_op_1_t	typeref:typename:ecs_entity_t
entity	lib/flecs/test/api/src/ComponentLifecycle.c	/^    ecs_entity_t entity;$/;"	m	struct:copy_ctx	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/test/api/src/ComponentLifecycle.c	/^    ecs_entity_t entity;$/;"	m	struct:xtor_ctx	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/test/api/src/MultiThread.c	/^    ecs_entity_t entity;$/;"	m	struct:Param	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/test/api/src/Run.c	/^    ecs_entity_t entity;$/;"	m	struct:Param	typeref:typename:ecs_entity_t	file:
entity	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_entity_t entity;$/;"	m	struct:DeserializeFromExpr_struct_entity::__anon51c88b180708	typeref:typename:ecs_entity_t	file:
entity_builder	lib/flecs/flecs.h	/^struct entity_builder : entity_view {$/;"	s	namespace:flecs
entity_builder	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^struct entity_builder : entity_view {$/;"	s	namespace:flecs
entity_count	lib/flecs/flecs.h	/^    ecs_gauge_t entity_count;                 \/* Number of entities *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
entity_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t entity_count;                 \/* Number of entities *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
entity_count	lib/flecs/test/api/include/api.h	/^    int32_t entity_count;$/;"	m	struct:IterData	typeref:typename:int32_t
entity_from_identifier	lib/flecs/flecs.c	/^ecs_entity_t entity_from_identifier($/;"	f	typeref:typename:ecs_entity_t	file:
entity_from_identifier	lib/flecs/src/filter.c	/^ecs_entity_t entity_from_identifier($/;"	f	typeref:typename:ecs_entity_t	file:
entity_index	lib/flecs/flecs.c	/^    ecs_sparse_t *entity_index;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_sparse_t *	file:
entity_index	lib/flecs/flecs.c	/^    ecs_sparse_t entity_index; \/* sparse<entity, ecs_record_t> *\/$/;"	m	struct:ecs_store_t	typeref:typename:ecs_sparse_t	file:
entity_index	lib/flecs/src/addons/snapshot.c	/^    ecs_sparse_t *entity_index;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_sparse_t *	file:
entity_index	lib/flecs/src/private_types.h	/^    ecs_sparse_t entity_index; \/* sparse<entity, ecs_record_t> *\/$/;"	m	struct:ecs_store_t	typeref:typename:ecs_sparse_t
entity_is_var	lib/flecs/flecs.c	/^bool entity_is_var($/;"	f	typeref:typename:bool	file:
entity_is_var	lib/flecs/src/filter.c	/^bool entity_is_var($/;"	f	typeref:typename:bool	file:
entity_names	lib/flecs/test/api/include/api.h	/^        char *entity_names[ITER_MAX_ENTITIES];$/;"	m	struct:test_iter_result_t::__anon6d6591e20108	typeref:typename:char * []
entity_names	lib/flecs/test/api/include/api.h	/^    char *entity_names[ITER_MAX_ENTITIES];$/;"	m	struct:test_iter_result_t	typeref:typename:char * []
entity_reg_get	lib/flecs/flecs.c	/^ecs_entity_t entity_reg_get($/;"	f	typeref:typename:ecs_entity_t	file:
entity_reg_get	lib/flecs/src/addons/rules.c	/^ecs_entity_t entity_reg_get($/;"	f	typeref:typename:ecs_entity_t	file:
entity_reg_set	lib/flecs/flecs.c	/^void entity_reg_set($/;"	f	typeref:typename:void	file:
entity_reg_set	lib/flecs/src/addons/rules.c	/^void entity_reg_set($/;"	f	typeref:typename:void	file:
entity_t	lib/flecs/flecs.h	/^using entity_t = ecs_entity_t;$/;"	t	namespace:flecs	typeref:typename:ecs_entity_t
entity_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using entity_t = ecs_entity_t;$/;"	t	namespace:flecs	typeref:typename:ecs_entity_t
entity_to_json_desc_t	lib/flecs/flecs.h	/^using entity_to_json_desc_t = ecs_entity_to_json_desc_t;$/;"	t	namespace:flecs	typeref:typename:ecs_entity_to_json_desc_t
entity_to_json_desc_t	lib/flecs/include/flecs/addons/cpp/mixins/json/decl.hpp	/^using entity_to_json_desc_t = ecs_entity_to_json_desc_t;$/;"	t	namespace:flecs	typeref:typename:ecs_entity_to_json_desc_t
entity_triggers	lib/flecs/flecs.c	/^    ecs_map_t entity_triggers; \/* map<trigger_id, trigger_t> *\/$/;"	m	struct:ecs_event_id_record_t	typeref:typename:ecs_map_t	file:
entity_triggers	lib/flecs/src/private_types.h	/^    ecs_map_t entity_triggers; \/* map<trigger_id, trigger_t> *\/$/;"	m	struct:ecs_event_id_record_t	typeref:typename:ecs_map_t
entity_view	lib/flecs/flecs.h	/^    entity_view() : flecs::id() { }$/;"	f	struct:flecs::entity_view
entity_view	lib/flecs/flecs.h	/^    entity_view(entity_t id) $/;"	f	struct:flecs::entity_view
entity_view	lib/flecs/flecs.h	/^    explicit entity_view(flecs::world_t *world, flecs::id_t id)$/;"	f	struct:flecs::entity_view
entity_view	lib/flecs/flecs.h	/^struct entity_view : public id {$/;"	s	namespace:flecs
entity_view	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    entity_view() : flecs::id() { }$/;"	f	struct:flecs::entity_view
entity_view	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    entity_view(entity_t id) $/;"	f	struct:flecs::entity_view
entity_view	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    explicit entity_view(flecs::world_t *world, flecs::id_t id)$/;"	f	struct:flecs::entity_view
entity_view	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^struct entity_view : public id {$/;"	s	namespace:flecs
entity_with_invoker	lib/flecs/flecs.h	/^struct entity_with_invoker {$/;"	s	namespace:flecs::_
entity_with_invoker	lib/flecs/flecs.h	/^struct entity_with_invoker<Func, if_t< is_callable<Func>::value > >$/;"	s	namespace:flecs::_
entity_with_invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct entity_with_invoker {$/;"	s	namespace:flecs::_
entity_with_invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct entity_with_invoker<Func, if_t< is_callable<Func>::value > >$/;"	s	namespace:flecs::_
entity_with_invoker_impl	lib/flecs/flecs.h	/^struct entity_with_invoker_impl<arg_list<Args ...>> {$/;"	s	namespace:flecs::_
entity_with_invoker_impl	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct entity_with_invoker_impl<arg_list<Args ...>> {$/;"	s	namespace:flecs::_
entries	lib/uthash/tests/lru_cache/cache.c	/^	struct foo_cache_entry *entries; \/**<Head pointer for uthash *\/$/;"	m	struct:foo_cache	typeref:struct:foo_cache_entry *	file:
enum_constant_data	lib/flecs/flecs.h	/^struct enum_constant_data {$/;"	s	namespace:flecs::_
enum_constant_data	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^struct enum_constant_data {$/;"	s	namespace:flecs::_
enum_constant_is_valid	lib/flecs/flecs.h	/^constexpr bool enum_constant_is_valid() {$/;"	f	namespace:flecs::_	typeref:typename:bool
enum_constant_is_valid	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^constexpr bool enum_constant_is_valid() {$/;"	f	namespace:flecs::_	typeref:typename:bool
enum_constant_t	lib/flecs/flecs.h	/^using enum_constant_t = ecs_enum_constant_t;$/;"	t	namespace:flecs	typeref:typename:ecs_enum_constant_t
enum_constant_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using enum_constant_t = ecs_enum_constant_t;$/;"	t	namespace:flecs	typeref:typename:ecs_enum_constant_t
enum_constant_to_name	lib/flecs/flecs.h	/^static const char* enum_constant_to_name() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
enum_constant_to_name	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^static const char* enum_constant_to_name() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
enum_data	lib/flecs/flecs.h	/^    enum_data(flecs::world_t *world, _::enum_data_impl& impl) $/;"	f	struct:flecs::enum_data
enum_data	lib/flecs/flecs.h	/^struct enum_data {$/;"	s	namespace:flecs
enum_data	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    enum_data(flecs::world_t *world, _::enum_data_impl& impl) $/;"	f	struct:flecs::enum_data
enum_data	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^struct enum_data {$/;"	s	namespace:flecs
enum_data_impl	lib/flecs/flecs.h	/^struct enum_data_impl {$/;"	s	namespace:flecs::_
enum_data_impl	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^struct enum_data_impl {$/;"	s	namespace:flecs::_
enum_is_valid	lib/flecs/flecs.h	/^struct enum_is_valid {$/;"	s	namespace:flecs::_
enum_is_valid	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^struct enum_is_valid {$/;"	s	namespace:flecs::_
enum_last	lib/flecs/flecs.h	/^struct enum_last {$/;"	s	namespace:flecs
enum_last	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^struct enum_last {$/;"	s	namespace:flecs
enum_type	lib/flecs/flecs.h	/^enum_data<E> enum_type(flecs::world_t *world) {$/;"	f	namespace:flecs	typeref:typename:enum_data<E>
enum_type	lib/flecs/flecs.h	/^struct enum_type {$/;"	s	namespace:flecs::_
enum_type	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^enum_data<E> enum_type(flecs::world_t *world) {$/;"	f	namespace:flecs	typeref:typename:enum_data<E>
enum_type	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^struct enum_type {$/;"	s	namespace:flecs::_
enum_type_len	lib/flecs/flecs.h	/^constexpr size_t enum_type_len() {$/;"	f	namespace:flecs::_	typeref:typename:size_t
enum_type_len	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^constexpr size_t enum_type_len() {$/;"	f	namespace:flecs::_	typeref:typename:size_t
err	lib/flecs/flecs.h	/^inline void err(const char *fmt, ...) {$/;"	f	namespace:flecs::log	typeref:typename:void
err	lib/flecs/include/flecs/addons/cpp/log.hpp	/^inline void err(const char *fmt, ...) {$/;"	f	namespace:flecs::log	typeref:typename:void
error_str	lib/flecs/flecs.c	/^static char error_str[255];$/;"	v	typeref:typename:char[255]	file:
error_str	lib/flecs/src/os_api.c	/^static char error_str[255];$/;"	v	typeref:typename:char[255]	file:
errors	lib/flecs/flecs.c	/^    int32_t errors;$/;"	m	struct:__anona642c0050408	typeref:typename:int32_t	file:
errors	lib/flecs/src/addons/plecs.c	/^    int32_t errors;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:int32_t	file:
eval_component_monitor	lib/flecs/flecs.c	/^void eval_component_monitor($/;"	f	typeref:typename:void	file:
eval_component_monitor	lib/flecs/src/world.c	/^void eval_component_monitor($/;"	f	typeref:typename:void	file:
eval_each	lib/flecs/flecs.c	/^bool eval_each($/;"	f	typeref:typename:bool	file:
eval_each	lib/flecs/src/addons/rules.c	/^bool eval_each($/;"	f	typeref:typename:bool	file:
eval_input	lib/flecs/flecs.c	/^bool eval_input($/;"	f	typeref:typename:bool	file:
eval_input	lib/flecs/src/addons/rules.c	/^bool eval_input($/;"	f	typeref:typename:bool	file:
eval_intable	lib/flecs/flecs.c	/^bool eval_intable($/;"	f	typeref:typename:bool	file:
eval_intable	lib/flecs/src/addons/rules.c	/^bool eval_intable($/;"	f	typeref:typename:bool	file:
eval_jump	lib/flecs/flecs.c	/^bool eval_jump($/;"	f	typeref:typename:bool	file:
eval_jump	lib/flecs/src/addons/rules.c	/^bool eval_jump($/;"	f	typeref:typename:bool	file:
eval_not	lib/flecs/flecs.c	/^bool eval_not($/;"	f	typeref:typename:bool	file:
eval_not	lib/flecs/src/addons/rules.c	/^bool eval_not($/;"	f	typeref:typename:bool	file:
eval_op	lib/flecs/flecs.c	/^bool eval_op($/;"	f	typeref:typename:bool	file:
eval_op	lib/flecs/src/addons/rules.c	/^bool eval_op($/;"	f	typeref:typename:bool	file:
eval_select	lib/flecs/flecs.c	/^bool eval_select($/;"	f	typeref:typename:bool	file:
eval_select	lib/flecs/src/addons/rules.c	/^bool eval_select($/;"	f	typeref:typename:bool	file:
eval_setjmp	lib/flecs/flecs.c	/^bool eval_setjmp($/;"	f	typeref:typename:bool	file:
eval_setjmp	lib/flecs/src/addons/rules.c	/^bool eval_setjmp($/;"	f	typeref:typename:bool	file:
eval_store	lib/flecs/flecs.c	/^bool eval_store($/;"	f	typeref:typename:bool	file:
eval_store	lib/flecs/src/addons/rules.c	/^bool eval_store($/;"	f	typeref:typename:bool	file:
eval_subset	lib/flecs/flecs.c	/^bool eval_subset($/;"	f	typeref:typename:bool	file:
eval_subset	lib/flecs/src/addons/rules.c	/^bool eval_subset($/;"	f	typeref:typename:bool	file:
eval_superset	lib/flecs/flecs.c	/^bool eval_superset($/;"	f	typeref:typename:bool	file:
eval_superset	lib/flecs/src/addons/rules.c	/^bool eval_superset($/;"	f	typeref:typename:bool	file:
eval_with	lib/flecs/flecs.c	/^bool eval_with($/;"	f	typeref:typename:bool	file:
eval_with	lib/flecs/src/addons/rules.c	/^bool eval_with($/;"	f	typeref:typename:bool	file:
eval_yield	lib/flecs/flecs.c	/^bool eval_yield($/;"	f	typeref:typename:bool	file:
eval_yield	lib/flecs/src/addons/rules.c	/^bool eval_yield($/;"	f	typeref:typename:bool	file:
evens	lib/uthash/tests/test36.c	/^static int evens(void *userv)$/;"	f	typeref:typename:int	file:
event	lib/flecs/flecs.c	/^    ecs_entity_t event;$/;"	m	struct:ecs_table_event_t	typeref:typename:ecs_entity_t	file:
event	lib/flecs/flecs.h	/^    Base& event() {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
event	lib/flecs/flecs.h	/^    Base& event() {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
event	lib/flecs/flecs.h	/^    Base& event(entity_t evt) {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
event	lib/flecs/flecs.h	/^    Base& event(entity_t evt) {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
event	lib/flecs/flecs.h	/^    ecs_entity_t event;           \/* The event (if applicable) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t
event	lib/flecs/flecs.h	/^    ecs_entity_t event;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_entity_t
event	lib/flecs/flecs.h	/^inline flecs::entity iter::event() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
event	lib/flecs/flecs.h	/^inline flecs::event_builder world::event(flecs::entity_t evt) const {$/;"	f	class:flecs::world	typeref:typename:flecs::event_builder
event	lib/flecs/flecs.h	/^inline flecs::event_builder_typed<E> world::event() const {$/;"	f	class:flecs::world	typeref:typename:flecs::event_builder_typed<E>
event	lib/flecs/include/flecs.h	/^    ecs_entity_t event;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_entity_t
event	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::entity iter::event() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
event	lib/flecs/include/flecs/addons/cpp/mixins/event/impl.hpp	/^inline flecs::event_builder world::event(flecs::entity_t evt) const {$/;"	f	class:flecs::world	typeref:typename:flecs::event_builder
event	lib/flecs/include/flecs/addons/cpp/mixins/event/impl.hpp	/^inline flecs::event_builder_typed<E> world::event() const {$/;"	f	class:flecs::world	typeref:typename:flecs::event_builder_typed<E>
event	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    Base& event() {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
event	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    Base& event(entity_t evt) {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
event	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    Base& event() {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
event	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    Base& event(entity_t evt) {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
event	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t event;           \/* The event (if applicable) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t
event	lib/flecs/src/private_types.h	/^    ecs_entity_t event;$/;"	m	struct:ecs_table_event_t	typeref:typename:ecs_entity_t
event	lib/flecs/test/api/include/api.h	/^    ecs_entity_t event;$/;"	m	struct:Probe	typeref:typename:ecs_entity_t
event_builder	lib/flecs/flecs.h	/^struct event_builder : event_builder_base<event_builder, void> {$/;"	s	namespace:flecs
event_builder	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^struct event_builder : event_builder_base<event_builder, void> {$/;"	s	namespace:flecs
event_builder_base	lib/flecs/flecs.h	/^    event_builder_base(flecs::world_t *world, flecs::entity_t event)$/;"	f	struct:flecs::event_builder_base
event_builder_base	lib/flecs/flecs.h	/^struct event_builder_base {$/;"	s	namespace:flecs
event_builder_base	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    event_builder_base(flecs::world_t *world, flecs::entity_t event)$/;"	f	struct:flecs::event_builder_base
event_builder_base	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^struct event_builder_base {$/;"	s	namespace:flecs
event_builder_typed	lib/flecs/flecs.h	/^struct event_builder_typed : event_builder_base<event_builder_typed<E>, E> {$/;"	s	namespace:flecs
event_builder_typed	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^struct event_builder_typed : event_builder_base<event_builder_typed<E>, E> {$/;"	s	namespace:flecs
event_code	lib/uthash/tests/test16.c	/^    char event_code;           \/* and this field.                *\/$/;"	m	struct:my_event	typeref:typename:char	file:
event_count	lib/flecs/flecs.h	/^    int32_t event_count;   $/;"	m	struct:ecs_observer_t	typeref:typename:int32_t
event_count	lib/flecs/flecs.h	/^    int32_t event_count;$/;"	m	struct:ecs_trigger_t	typeref:typename:int32_t
event_count	lib/flecs/include/flecs.h	/^    int32_t event_count;   $/;"	m	struct:ecs_observer_t	typeref:typename:int32_t
event_count	lib/flecs/include/flecs.h	/^    int32_t event_count;$/;"	m	struct:ecs_trigger_t	typeref:typename:int32_t
event_id	lib/flecs/flecs.c	/^    int32_t event_id;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
event_id	lib/flecs/flecs.h	/^    ecs_id_t event_id;            \/* The (component) id for the event *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_id_t
event_id	lib/flecs/flecs.h	/^inline flecs::id iter::event_id() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::id
event_id	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::id iter::event_id() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::id
event_id	lib/flecs/include/flecs/private/api_types.h	/^    ecs_id_t event_id;            \/* The (component) id for the event *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_id_t
event_id	lib/flecs/src/private_types.h	/^    int32_t event_id;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
event_id	lib/flecs/test/api/include/api.h	/^    ecs_id_t event_id;$/;"	m	struct:Probe	typeref:typename:ecs_id_t
event_ids	lib/flecs/flecs.c	/^    ecs_map_t event_ids;     \/* map<id, ecs_event_id_record_t> *\/$/;"	m	struct:ecs_event_record_t	typeref:typename:ecs_map_t	file:
event_ids	lib/flecs/src/private_types.h	/^    ecs_map_t event_ids;     \/* map<id, ecs_event_id_record_t> *\/$/;"	m	struct:ecs_event_record_t	typeref:typename:ecs_map_t
events	lib/flecs/flecs.h	/^    ecs_entity_t events[ECS_TRIGGER_DESC_EVENT_COUNT_MAX];$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_entity_t[]
events	lib/flecs/flecs.h	/^    ecs_entity_t events[ECS_TRIGGER_DESC_EVENT_COUNT_MAX];$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_entity_t[]
events	lib/flecs/flecs.h	/^    ecs_entity_t events[ECS_TRIGGER_DESC_EVENT_COUNT_MAX];$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_entity_t[]
events	lib/flecs/flecs.h	/^    ecs_entity_t events[ECS_TRIGGER_DESC_EVENT_COUNT_MAX];$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_entity_t[]
events	lib/flecs/flecs.h	/^    ecs_sparse_t *events;  \/* sparse<event, ecs_event_record_t> *\/$/;"	m	struct:ecs_observable_t	typeref:typename:ecs_sparse_t *
events	lib/flecs/include/flecs.h	/^    ecs_entity_t events[ECS_TRIGGER_DESC_EVENT_COUNT_MAX];$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_entity_t[]
events	lib/flecs/include/flecs.h	/^    ecs_entity_t events[ECS_TRIGGER_DESC_EVENT_COUNT_MAX];$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_entity_t[]
events	lib/flecs/include/flecs.h	/^    ecs_entity_t events[ECS_TRIGGER_DESC_EVENT_COUNT_MAX];$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_entity_t[]
events	lib/flecs/include/flecs.h	/^    ecs_entity_t events[ECS_TRIGGER_DESC_EVENT_COUNT_MAX];$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_entity_t[]
events	lib/flecs/include/flecs/private/api_types.h	/^    ecs_sparse_t *events;  \/* sparse<event, ecs_event_record_t> *\/$/;"	m	struct:ecs_observable_t	typeref:typename:ecs_sparse_t *
example	lib/uthash/tests/Makefile	/^example: example.c $(HASHDIR)\/uthash.h$/;"	t
example_user_t	lib/uthash/tests/sleep_test.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/sleep_test.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test1.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test1.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test10.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test10.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test13.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test13.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test17.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test17.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test18.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test18.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test19.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test19.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test2.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test2.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test24.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test24.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test3.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test3.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test36.c	/^} example_user_t;$/;"	t	typeref:struct:__anonbb930d030108	file:
example_user_t	lib/uthash/tests/test37.c	/^} example_user_t;$/;"	t	typeref:struct:__anonbb9311440108	file:
example_user_t	lib/uthash/tests/test4.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test4.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test5.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test5.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test56.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test56.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test58.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test58.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test6.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test6.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test7.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test7.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test8.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test8.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test85.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test85.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test88.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test88.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test9.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test9.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test92.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test92.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
example_user_t	lib/uthash/tests/test93.c	/^typedef struct example_user_t {$/;"	s	file:
example_user_t	lib/uthash/tests/test93.c	/^} example_user_t;$/;"	t	typeref:struct:example_user_t	file:
exists	lib/flecs/flecs.h	/^    bool exists(flecs::entity_t e) const {$/;"	f	struct:flecs::world	typeref:typename:bool
exists	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool exists(flecs::entity_t e) const {$/;"	f	struct:flecs::world	typeref:typename:bool
expand_mult	lib/uthash/include/uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket	typeref:typename:unsigned
expand_mult	lib/uthash/src/uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket	typeref:typename:unsigned
expr	lib/flecs/flecs.h	/^    Base& expr(const char *expr) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
expr	lib/flecs/flecs.h	/^    Base& expr(const char *expr) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
expr	lib/flecs/flecs.h	/^    char *expr;                \/* Expression of filter (if provided) *\/$/;"	m	struct:ecs_filter_t	typeref:typename:char *
expr	lib/flecs/flecs.h	/^    const char *expr; \/* Full expression (used for logging) *\/$/;"	m	struct:ecs_parse_json_desc_t	typeref:typename:const char *
expr	lib/flecs/flecs.h	/^    const char *expr;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:const char *
expr	lib/flecs/flecs.h	/^    const char *expr;$/;"	m	struct:ecs_parse_expr_desc_t	typeref:typename:const char *
expr	lib/flecs/flecs.h	/^    const char *expr;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:const char *
expr	lib/flecs/include/flecs.h	/^    char *expr;                \/* Expression of filter (if provided) *\/$/;"	m	struct:ecs_filter_t	typeref:typename:char *
expr	lib/flecs/include/flecs.h	/^    const char *expr;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:const char *
expr	lib/flecs/include/flecs.h	/^    const char *expr;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:const char *
expr	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& expr(const char *expr) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
expr	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& expr(const char *expr) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
expr	lib/flecs/include/flecs/addons/expr.h	/^    const char *expr;$/;"	m	struct:ecs_parse_expr_desc_t	typeref:typename:const char *
expr	lib/flecs/include/flecs/addons/json.h	/^    const char *expr; \/* Full expression (used for logging) *\/$/;"	m	struct:ecs_parse_json_desc_t	typeref:typename:const char *
expr_op_to_primitive_kind	lib/flecs/flecs.c	/^ecs_primitive_kind_t expr_op_to_primitive_kind(ecs_meta_type_op_kind_t kind) {$/;"	f	typeref:typename:ecs_primitive_kind_t	file:
expr_op_to_primitive_kind	lib/flecs/src/addons/expr/serialize.c	/^ecs_primitive_kind_t expr_op_to_primitive_kind(ecs_meta_type_op_kind_t kind) {$/;"	f	typeref:typename:ecs_primitive_kind_t	file:
expr_ser_array	lib/flecs/flecs.c	/^int expr_ser_array($/;"	f	typeref:typename:int	file:
expr_ser_array	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_array($/;"	f	typeref:typename:int	file:
expr_ser_bitmask	lib/flecs/flecs.c	/^int expr_ser_bitmask($/;"	f	typeref:typename:int	file:
expr_ser_bitmask	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_bitmask($/;"	f	typeref:typename:int	file:
expr_ser_elements	lib/flecs/flecs.c	/^int expr_ser_elements($/;"	f	typeref:typename:int	file:
expr_ser_elements	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_elements($/;"	f	typeref:typename:int	file:
expr_ser_enum	lib/flecs/flecs.c	/^int expr_ser_enum($/;"	f	typeref:typename:int	file:
expr_ser_enum	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_enum($/;"	f	typeref:typename:int	file:
expr_ser_primitive	lib/flecs/flecs.c	/^int expr_ser_primitive($/;"	f	typeref:typename:int	file:
expr_ser_primitive	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_primitive($/;"	f	typeref:typename:int	file:
expr_ser_type	lib/flecs/flecs.c	/^int expr_ser_type($/;"	f	typeref:typename:int	file:
expr_ser_type	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_type($/;"	f	typeref:typename:int	file:
expr_ser_type_elements	lib/flecs/flecs.c	/^int expr_ser_type_elements($/;"	f	typeref:typename:int	file:
expr_ser_type_elements	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_type_elements($/;"	f	typeref:typename:int	file:
expr_ser_type_op	lib/flecs/flecs.c	/^int expr_ser_type_op($/;"	f	typeref:typename:int	file:
expr_ser_type_op	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_type_op($/;"	f	typeref:typename:int	file:
expr_ser_type_ops	lib/flecs/flecs.c	/^int expr_ser_type_ops($/;"	f	typeref:typename:int	file:
expr_ser_type_ops	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_type_ops($/;"	f	typeref:typename:int	file:
expr_ser_vector	lib/flecs/flecs.c	/^int expr_ser_vector($/;"	f	typeref:typename:int	file:
expr_ser_vector	lib/flecs/src/addons/expr/serialize.c	/^int expr_ser_vector($/;"	f	typeref:typename:int	file:
f	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t f[6];$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_bool_t[6]	file:
f	lib/uthash/include/utringbuffer.h	/^    unsigned char f;  \/* full *\/$/;"	m	struct:__anon8907aae30108	typeref:typename:unsigned char
f	lib/uthash/src/utringbuffer.h	/^    unsigned char f;  \/* full *\/$/;"	m	struct:__anon5ece49070108	typeref:typename:unsigned char
f32_t	lib/flecs/flecs.h	/^using f32_t = ecs_f32_t;$/;"	t	namespace:flecs	typeref:typename:ecs_f32_t
f32_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using f32_t = ecs_f32_t;$/;"	t	namespace:flecs	typeref:typename:ecs_f32_t
f64_t	lib/flecs/flecs.h	/^using f64_t = ecs_f64_t;$/;"	t	namespace:flecs	typeref:typename:ecs_f64_t
f64_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using f64_t = ecs_f64_t;$/;"	t	namespace:flecs	typeref:typename:ecs_f64_t
f_	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    flecs::filter<Components...> f_;$/;"	m	struct:FilterWrapper	typeref:typename:flecs::filter<Components...>	file:
factor	lib/flecs/flecs.h	/^    int32_t factor; \/* Factor to apply (e.g. "1000", "1000000", "1024") *\/$/;"	m	struct:ecs_unit_translation_t	typeref:typename:int32_t
factor	lib/flecs/include/flecs/addons/meta.h	/^    int32_t factor; \/* Factor to apply (e.g. "1000", "1000000", "1024") *\/$/;"	m	struct:ecs_unit_translation_t	typeref:typename:int32_t
false	lib/flecs/flecs.h	/^#define false /;"	d
false	lib/flecs/include/flecs/private/api_defines.h	/^#define false /;"	d
fast_append	lib/flecs/flecs.c	/^void fast_append($/;"	f	typeref:typename:void	file:
fast_append	lib/flecs/src/table.c	/^void fast_append($/;"	f	typeref:typename:void	file:
fast_delete	lib/flecs/flecs.c	/^void fast_delete($/;"	f	typeref:typename:void	file:
fast_delete	lib/flecs/src/table.c	/^void fast_delete($/;"	f	typeref:typename:void	file:
fast_delete_last	lib/flecs/flecs.c	/^void fast_delete_last($/;"	f	typeref:typename:void	file:
fast_delete_last	lib/flecs/src/table.c	/^void fast_delete_last($/;"	f	typeref:typename:void	file:
fast_move	lib/flecs/flecs.c	/^void fast_move($/;"	f	typeref:typename:void	file:
fast_move	lib/flecs/src/table.c	/^void fast_move($/;"	f	typeref:typename:void	file:
fg	include/ecs/components.h	/^    color_t fg;$/;"	m	struct:__anon1ffac85e0308	typeref:typename:color_t
fill_array	lib/flecs/test/collections/src/Vector.c	/^ecs_vector_t* fill_array($/;"	f	typeref:typename:ecs_vector_t *
fill_map	lib/flecs/test/collections/src/Map.c	/^void fill_map($/;"	f	typeref:typename:void	file:
filter	lib/flecs/flecs.c	/^    ecs_filter_t filter;        \/* Filter of rule *\/$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_filter_t	file:
filter	lib/flecs/flecs.c	/^    ecs_filter_t filter;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_filter_t	file:
filter	lib/flecs/flecs.c	/^    ecs_filter_t filter;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_filter_t	file:
filter	lib/flecs/flecs.c	/^    ecs_rule_pair_t filter;     \/* Parameter that contains optional filter *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:ecs_rule_pair_t	file:
filter	lib/flecs/flecs.h	/^        ecs_filter_iter_t filter;$/;"	m	union:ecs_iter_private_t::__anona642c00a010a	typeref:typename:ecs_filter_iter_t
filter	lib/flecs/flecs.h	/^    bool filter;               \/* When true, data fields won't be populated *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
filter	lib/flecs/flecs.h	/^    bool filter;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:bool
filter	lib/flecs/flecs.h	/^    ecs_filter_desc_t filter;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_filter_desc_t
filter	lib/flecs/flecs.h	/^    ecs_filter_desc_t filter;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_filter_desc_t
filter	lib/flecs/flecs.h	/^    ecs_filter_t filter;$/;"	m	struct:ecs_filter_iter_t	typeref:typename:ecs_filter_t
filter	lib/flecs/flecs.h	/^    ecs_filter_t filter;$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_filter_t
filter	lib/flecs/flecs.h	/^    ecs_filter_t filter;$/;"	m	struct:ecs_snapshot_iter_t	typeref:typename:ecs_filter_t
filter	lib/flecs/flecs.h	/^    filter() : filter_base() { } \/\/ necessary not not confuse msvc$/;"	f	struct:flecs::filter
filter	lib/flecs/flecs.h	/^    filter(const filter& obj) : filter_base(obj) { }$/;"	f	struct:flecs::filter
filter	lib/flecs/flecs.h	/^    filter(filter&& obj) : filter_base(FLECS_MOV(obj)) { }$/;"	f	struct:flecs::filter
filter	lib/flecs/flecs.h	/^    filter_base filter() {$/;"	f	struct:flecs::query_base	typeref:typename:filter_base
filter	lib/flecs/flecs.h	/^inline flecs::filter<Comps...> world::filter(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::filter<Comps...>
filter	lib/flecs/flecs.h	/^struct filter : filter_base, iterable<Components...> {$/;"	s	namespace:flecs
filter	lib/flecs/include/flecs.h	/^    bool filter;               \/* When true, data fields won't be populated *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
filter	lib/flecs/include/flecs.h	/^    bool filter;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:bool
filter	lib/flecs/include/flecs.h	/^    ecs_filter_desc_t filter;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_filter_desc_t
filter	lib/flecs/include/flecs.h	/^    ecs_filter_desc_t filter;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_filter_desc_t
filter	lib/flecs/include/flecs.h	/^    ecs_filter_t filter;$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_filter_t
filter	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter() : filter_base() { } \/\/ necessary not not confuse msvc$/;"	f	struct:flecs::filter
filter	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter(const filter& obj) : filter_base(obj) { }$/;"	f	struct:flecs::filter
filter	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter(filter&& obj) : filter_base(FLECS_MOV(obj)) { }$/;"	f	struct:flecs::filter
filter	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^inline flecs::filter<Comps...> world::filter(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::filter<Comps...>
filter	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^struct filter : filter_base, iterable<Components...> {$/;"	s	namespace:flecs
filter	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    filter_base filter() {$/;"	f	struct:flecs::query_base	typeref:typename:filter_base
filter	lib/flecs/include/flecs/private/api_types.h	/^        ecs_filter_iter_t filter;$/;"	m	union:ecs_iter_private_t::__anon49db2d84010a	typeref:typename:ecs_filter_iter_t
filter	lib/flecs/include/flecs/private/api_types.h	/^    ecs_filter_t filter;$/;"	m	struct:ecs_filter_iter_t	typeref:typename:ecs_filter_t
filter	lib/flecs/include/flecs/private/api_types.h	/^    ecs_filter_t filter;$/;"	m	struct:ecs_snapshot_iter_t	typeref:typename:ecs_filter_t
filter	lib/flecs/src/addons/rules.c	/^    ecs_filter_t filter;        \/* Filter of rule *\/$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_filter_t	file:
filter	lib/flecs/src/addons/rules.c	/^    ecs_rule_pair_t filter;     \/* Parameter that contains optional filter *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:ecs_rule_pair_t	file:
filter	lib/flecs/src/addons/snapshot.c	/^    ecs_filter_t filter;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_filter_t	file:
filter	lib/flecs/src/private_types.h	/^    ecs_filter_t filter;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_filter_t
filter_arg	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^int filter_arg(flecs::filter<Self> f) {$/;"	f	typeref:typename:int	file:
filter_base	lib/flecs/flecs.h	/^    filter_base()$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/flecs.h	/^    filter_base(const filter_base& obj) {$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/flecs.h	/^    filter_base(filter_base&& obj) {$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/flecs.h	/^    filter_base(world_t *world, const ecs_filter_t *filter)$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/flecs.h	/^    filter_base(world_t *world, ecs_filter_desc_t *desc) $/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/flecs.h	/^    filter_base(world_t *world, ecs_filter_t *filter)$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/flecs.h	/^struct filter_base {$/;"	s	namespace:flecs
filter_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_base()$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_base(const filter_base& obj) {$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_base(filter_base&& obj) {$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_base(world_t *world, const ecs_filter_t *filter)$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_base(world_t *world, ecs_filter_desc_t *desc) $/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_base(world_t *world, ecs_filter_t *filter)$/;"	f	struct:flecs::filter_base
filter_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^struct filter_base {$/;"	s	namespace:flecs
filter_builder	lib/flecs/flecs.h	/^    filter_builder(flecs::world_t* world)$/;"	f	struct:flecs::filter_builder
filter_builder	lib/flecs/flecs.h	/^inline flecs::filter_builder<Comps...> world::filter_builder(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::filter_builder<Comps...>
filter_builder	lib/flecs/flecs.h	/^struct filter_builder final : _::filter_builder_base<Components...> {$/;"	s	namespace:flecs
filter_builder	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder.hpp	/^    filter_builder(flecs::world_t* world)$/;"	f	struct:flecs::filter_builder
filter_builder	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder.hpp	/^struct filter_builder final : _::filter_builder_base<Components...> {$/;"	s	namespace:flecs
filter_builder	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^inline flecs::filter_builder<Comps...> world::filter_builder(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::filter_builder<Comps...>
filter_builder_base	lib/flecs/flecs.h	/^    using filter_builder_base = builder<$/;"	t	namespace:flecs::_	typeref:typename:builder<filter,ecs_filter_desc_t,filter_builder<Components...>,filter_builder_i,Components...>
filter_builder_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder.hpp	/^    using filter_builder_base = builder<$/;"	t	namespace:flecs::_	typeref:typename:builder<filter,ecs_filter_desc_t,filter_builder<Components...>,filter_builder_i,Components...>
filter_builder_i	lib/flecs/flecs.h	/^    filter_builder_i(ecs_filter_desc_t *desc, int32_t term_index = 0) $/;"	f	struct:flecs::filter_builder_i
filter_builder_i	lib/flecs/flecs.h	/^struct filter_builder_i : term_builder_i<Base> {$/;"	s	namespace:flecs
filter_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    filter_builder_i(ecs_filter_desc_t *desc, int32_t term_index = 0) $/;"	f	struct:flecs::filter_builder_i
filter_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^struct filter_builder_i : term_builder_i<Base> {$/;"	s	namespace:flecs
filter_count	lib/flecs/test/api/src/Parser.c	/^int filter_count(ecs_filter_t *f) {$/;"	f	typeref:typename:int	file:
filter_invoker	lib/flecs/flecs.h	/^    filter_invoker(const flecs::world& world, Func&& func) {$/;"	f	struct:flecs::_::filter_invoker
filter_invoker	lib/flecs/flecs.h	/^struct filter_invoker<Func, if_not_t<is_same<first_arg_t<Func>, flecs::entity>::value> > {$/;"	s	namespace:flecs::_
filter_invoker	lib/flecs/flecs.h	/^struct filter_invoker<Func, if_t<is_same<first_arg_t<Func>, flecs::entity>::value> > {$/;"	s	namespace:flecs::_
filter_invoker	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_invoker(const flecs::world& world, Func&& func) {$/;"	f	struct:flecs::_::filter_invoker
filter_invoker	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^struct filter_invoker<Func, if_not_t<is_same<first_arg_t<Func>, flecs::entity>::value> > {$/;"	s	namespace:flecs::_
filter_invoker	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^struct filter_invoker<Func, if_t<is_same<first_arg_t<Func>, flecs::entity>::value> > {$/;"	s	namespace:flecs::_
filter_invoker_no_ent	lib/flecs/flecs.h	/^    filter_invoker_no_ent(const flecs::world& world, Func&& func) {$/;"	f	struct:flecs::_::filter_invoker_no_ent
filter_invoker_no_ent	lib/flecs/flecs.h	/^struct filter_invoker_no_ent<Func, arg_list<Args ...> >$/;"	s	namespace:flecs::_
filter_invoker_no_ent	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_invoker_no_ent(const flecs::world& world, Func&& func) {$/;"	f	struct:flecs::_::filter_invoker_no_ent
filter_invoker_no_ent	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^struct filter_invoker_no_ent<Func, arg_list<Args ...> >$/;"	s	namespace:flecs::_
filter_invoker_w_ent	lib/flecs/flecs.h	/^    filter_invoker_w_ent(const flecs::world& world, Func&& func) {$/;"	f	struct:flecs::_::filter_invoker_w_ent
filter_invoker_w_ent	lib/flecs/flecs.h	/^struct filter_invoker_w_ent<Func, arg_list<E, Args ...> >$/;"	s	namespace:flecs::_
filter_invoker_w_ent	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_invoker_w_ent(const flecs::world& world, Func&& func) {$/;"	f	struct:flecs::_::filter_invoker_w_ent
filter_invoker_w_ent	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^struct filter_invoker_w_ent<Func, arg_list<E, Args ...> >$/;"	s	namespace:flecs::_
filter_iter_init	lib/flecs/flecs.c	/^void filter_iter_init($/;"	f	typeref:typename:void	file:
filter_iter_init	lib/flecs/src/filter.c	/^void filter_iter_init($/;"	f	typeref:typename:void	file:
filter_move_arg	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^int filter_move_arg(flecs::filter<Self>&& f) {$/;"	f	typeref:typename:int	file:
filter_return	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^flecs::filter<Self> filter_return(flecs::world& ecs) {$/;"	f	typeref:typename:flecs::filter<Self>	file:
filter_str_add_id	lib/flecs/flecs.c	/^void filter_str_add_id($/;"	f	typeref:typename:void	file:
filter_str_add_id	lib/flecs/src/filter.c	/^void filter_str_add_id($/;"	f	typeref:typename:void	file:
filter_t	lib/flecs/flecs.h	/^using filter_t = ecs_filter_t;$/;"	t	namespace:flecs	typeref:typename:ecs_filter_t
filter_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using filter_t = ecs_filter_t;$/;"	t	namespace:flecs	typeref:typename:ecs_filter_t
filter_terms	lib/flecs/test/api/src/Parser.c	/^ecs_term_t* filter_terms(ecs_filter_t *f) {$/;"	f	typeref:typename:ecs_term_t *	file:
final	lib/flecs/flecs.c	/^    bool final;      \/* Is predicate final *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
final	lib/flecs/flecs.c	/^#define final(/;"	d	file:
final	lib/flecs/src/addons/rules.c	/^    bool final;      \/* Is predicate final *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
final	lib/flecs/src/datastructures/hash.c	/^#define final(/;"	d	file:
finalize	lib/flecs/flecs.h	/^    int finalize() {$/;"	f	struct:flecs::term	typeref:typename:int
finalize	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    int finalize() {$/;"	f	struct:flecs::term	typeref:typename:int
finalize_term_id	lib/flecs/flecs.c	/^int finalize_term_id($/;"	f	typeref:typename:int	file:
finalize_term_id	lib/flecs/src/filter.c	/^int finalize_term_id($/;"	f	typeref:typename:int	file:
finalize_term_identifier	lib/flecs/flecs.c	/^int finalize_term_identifier($/;"	f	typeref:typename:int	file:
finalize_term_identifier	lib/flecs/src/filter.c	/^int finalize_term_identifier($/;"	f	typeref:typename:int	file:
finalize_term_identifiers	lib/flecs/flecs.c	/^int finalize_term_identifiers($/;"	f	typeref:typename:int	file:
finalize_term_identifiers	lib/flecs/src/filter.c	/^int finalize_term_identifiers($/;"	f	typeref:typename:int	file:
finalize_term_set	lib/flecs/flecs.c	/^int finalize_term_set($/;"	f	typeref:typename:int	file:
finalize_term_set	lib/flecs/src/filter.c	/^int finalize_term_set($/;"	f	typeref:typename:int	file:
finalize_term_var	lib/flecs/flecs.c	/^int finalize_term_var($/;"	f	typeref:typename:int	file:
finalize_term_var	lib/flecs/src/filter.c	/^int finalize_term_var($/;"	f	typeref:typename:int	file:
finalize_term_vars	lib/flecs/flecs.c	/^int finalize_term_vars($/;"	f	typeref:typename:int	file:
finalize_term_vars	lib/flecs/src/filter.c	/^int finalize_term_vars($/;"	f	typeref:typename:int	file:
find_entity	lib/flecs/test/api/src/util.c	/^int32_t find_entity($/;"	f	typeref:typename:int32_t
find_group_insertion_node	lib/flecs/flecs.c	/^ecs_query_table_node_t* find_group_insertion_node($/;"	f	typeref:typename:ecs_query_table_node_t *	file:
find_group_insertion_node	lib/flecs/src/query.c	/^ecs_query_table_node_t* find_group_insertion_node($/;"	f	typeref:typename:ecs_query_table_node_t *	file:
find_item_w_kind	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^flecs::entity find_item_w_kind($/;"	f	typeref:typename:flecs::entity
find_key	lib/flecs/flecs.c	/^int32_t find_key($/;"	f	typeref:typename:int32_t	file:
find_key	lib/flecs/src/datastructures/hashmap.c	/^int32_t find_key($/;"	f	typeref:typename:int32_t	file:
find_next_column	lib/flecs/flecs.c	/^int32_t find_next_column($/;"	f	typeref:typename:int32_t	file:
find_next_column	lib/flecs/src/addons/rules.c	/^int32_t find_next_column($/;"	f	typeref:typename:int32_t	file:
find_next_same_var	lib/flecs/flecs.c	/^int32_t find_next_same_var($/;"	f	typeref:typename:int32_t	file:
find_next_same_var	lib/flecs/src/addons/rules.c	/^int32_t find_next_same_var($/;"	f	typeref:typename:int32_t	file:
find_next_table	lib/flecs/flecs.c	/^ecs_table_record_t find_next_table($/;"	f	typeref:typename:ecs_table_record_t	file:
find_next_table	lib/flecs/src/addons/rules.c	/^ecs_table_record_t find_next_table($/;"	f	typeref:typename:ecs_table_record_t	file:
find_or_create	lib/flecs/flecs.c	/^ecs_table_t* find_or_create($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create	lib/flecs/src/table_graph.c	/^ecs_table_t* find_or_create($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_with	lib/flecs/flecs.c	/^ecs_table_t* find_or_create_table_with($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_with	lib/flecs/src/table_graph.c	/^ecs_table_t* find_or_create_table_with($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_with_id	lib/flecs/flecs.c	/^ecs_table_t* find_or_create_table_with_id($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_with_id	lib/flecs/src/table_graph.c	/^ecs_table_t* find_or_create_table_with_id($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_with_isa	lib/flecs/flecs.c	/^ecs_table_t* find_or_create_table_with_isa($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_with_isa	lib/flecs/src/table_graph.c	/^ecs_table_t* find_or_create_table_with_isa($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_without	lib/flecs/flecs.c	/^ecs_table_t* find_or_create_table_without($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_without	lib/flecs/src/table_graph.c	/^ecs_table_t* find_or_create_table_without($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_without_id	lib/flecs/flecs.c	/^ecs_table_t* find_or_create_table_without_id($/;"	f	typeref:typename:ecs_table_t *	file:
find_or_create_table_without_id	lib/flecs/src/table_graph.c	/^ecs_table_t* find_or_create_table_without_id($/;"	f	typeref:typename:ecs_table_t *	file:
find_smallest_column	lib/flecs/flecs.c	/^int find_smallest_column($/;"	f	typeref:typename:int	file:
find_smallest_column	lib/flecs/src/query.c	/^int find_smallest_column($/;"	f	typeref:typename:int	file:
find_tables	lib/flecs/flecs.c	/^ecs_id_record_t* find_tables($/;"	f	typeref:typename:ecs_id_record_t *	file:
find_tables	lib/flecs/src/addons/rules.c	/^ecs_id_record_t* find_tables($/;"	f	typeref:typename:ecs_id_record_t *	file:
find_term_var_id	lib/flecs/flecs.c	/^int32_t find_term_var_id($/;"	f	typeref:typename:int32_t	file:
find_term_var_id	lib/flecs/src/addons/rules.c	/^int32_t find_term_var_id($/;"	f	typeref:typename:int32_t	file:
find_user	lib/uthash/tests/example.c	/^struct my_struct *find_user(int user_id)$/;"	f	typeref:struct:my_struct *
find_var	lib/flecs/flecs.h	/^    int32_t find_var(const char *name) {$/;"	f	struct:flecs::rule	typeref:typename:int32_t
find_var	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    int32_t find_var(const char *name) {$/;"	f	struct:flecs::rule	typeref:typename:int32_t
find_variable	lib/flecs/flecs.c	/^ecs_rule_var_t* find_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
find_variable	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* find_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
fini	lib/flecs/flecs.h	/^    ecs_iter_fini_action_t fini;  \/* Function to cleanup iterator resources *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_fini_action_t
fini	lib/flecs/include/flecs/private/api_types.h	/^    ecs_iter_fini_action_t fini;  \/* Function to cleanup iterator resources *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_fini_action_t
fini_	lib/flecs/flecs.h	/^    ecs_os_api_fini_t fini_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_fini_t
fini_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_fini_t fini_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_fini_t
fini_actions	lib/flecs/flecs.c	/^    ecs_vector_t *fini_actions;  \/* Callbacks to execute when world exits *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_vector_t *	file:
fini_actions	lib/flecs/flecs.c	/^void fini_actions($/;"	f	typeref:typename:void	file:
fini_actions	lib/flecs/src/private_types.h	/^    ecs_vector_t *fini_actions;  \/* Callbacks to execute when world exits *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_vector_t *
fini_actions	lib/flecs/src/world.c	/^void fini_actions($/;"	f	typeref:typename:void	file:
fini_component_lifecycle	lib/flecs/flecs.c	/^void fini_component_lifecycle($/;"	f	typeref:typename:void	file:
fini_component_lifecycle	lib/flecs/src/world.c	/^void fini_component_lifecycle($/;"	f	typeref:typename:void	file:
fini_data	lib/flecs/flecs.c	/^void fini_data($/;"	f	typeref:typename:void	file:
fini_data	lib/flecs/src/table.c	/^void fini_data($/;"	f	typeref:typename:void	file:
fini_id_index	lib/flecs/flecs.c	/^void fini_id_index($/;"	f	typeref:typename:void	file:
fini_id_index	lib/flecs/src/world.c	/^void fini_id_index($/;"	f	typeref:typename:void	file:
fini_misc	lib/flecs/flecs.c	/^void fini_misc($/;"	f	typeref:typename:void	file:
fini_misc	lib/flecs/src/world.c	/^void fini_misc($/;"	f	typeref:typename:void	file:
fini_observers	lib/flecs/flecs.c	/^void fini_observers($/;"	f	typeref:typename:void	file:
fini_observers	lib/flecs/src/world.c	/^void fini_observers($/;"	f	typeref:typename:void	file:
fini_queries	lib/flecs/flecs.c	/^void fini_queries($/;"	f	typeref:typename:void	file:
fini_queries	lib/flecs/src/world.c	/^void fini_queries($/;"	f	typeref:typename:void	file:
fini_stages	lib/flecs/flecs.c	/^void fini_stages($/;"	f	typeref:typename:void	file:
fini_stages	lib/flecs/src/world.c	/^void fini_stages($/;"	f	typeref:typename:void	file:
fini_store	lib/flecs/flecs.c	/^void fini_store(ecs_world_t *world) {$/;"	f	typeref:typename:void	file:
fini_store	lib/flecs/src/world.c	/^void fini_store(ecs_world_t *world) {$/;"	f	typeref:typename:void	file:
fini_tasks	lib/flecs/flecs.c	/^    ecs_vector_t *fini_tasks;          \/* Tasks to execute on ecs_fini *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_vector_t *	file:
fini_tasks	lib/flecs/src/private_types.h	/^    ecs_vector_t *fini_tasks;          \/* Tasks to execute on ecs_fini *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_vector_t *
fini_unset_tables	lib/flecs/flecs.c	/^void fini_unset_tables($/;"	f	typeref:typename:void	file:
fini_unset_tables	lib/flecs/src/world.c	/^void fini_unset_tables($/;"	f	typeref:typename:void	file:
fired_count	lib/flecs/flecs.h	/^    int32_t fired_count;         \/* Number of times ticked *\/$/;"	m	struct:EcsTimer	typeref:typename:int32_t
fired_count	lib/flecs/include/flecs/addons/timer.h	/^    int32_t fired_count;         \/* Number of times ticked *\/$/;"	m	struct:EcsTimer	typeref:typename:int32_t
first	lib/flecs/flecs.c	/^    ecs_query_table_match_t *first;  \/* List with matches for table *\/$/;"	m	struct:ecs_query_table_t	typeref:typename:ecs_query_table_match_t *	file:
first	lib/flecs/flecs.c	/^    ecs_query_table_node_t *first;$/;"	m	struct:ecs_query_table_list_t	typeref:typename:ecs_query_table_node_t *	file:
first	lib/flecs/flecs.c	/^    ecs_table_cache_hdr_t *first;$/;"	m	struct:ecs_table_cache_list_t	typeref:typename:ecs_table_cache_hdr_t *	file:
first	lib/flecs/flecs.c	/^    int32_t first;$/;"	m	struct:__anona642c0050e08	typeref:typename:int32_t	file:
first	lib/flecs/flecs.c	/^    int32_t first;$/;"	m	struct:__anona642c0050f08	typeref:typename:int32_t	file:
first	lib/flecs/flecs.h	/^    T& first() {$/;"	f	class:flecs::vector	typeref:typename:T &
first	lib/flecs/flecs.h	/^    int first() const {$/;"	f	struct:flecs::enum_data	typeref:typename:int
first	lib/flecs/flecs.h	/^inline flecs::entity id::first() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
first	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::first() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
first	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    int first() const {$/;"	f	struct:flecs::enum_data	typeref:typename:int
first	lib/flecs/include/flecs/private/vector.h	/^    T& first() {$/;"	f	class:flecs::vector	typeref:typename:T &
first	lib/flecs/src/private_types.h	/^    ecs_query_table_match_t *first;  \/* List with matches for table *\/$/;"	m	struct:ecs_query_table_t	typeref:typename:ecs_query_table_match_t *
first	lib/flecs/src/private_types.h	/^    ecs_query_table_node_t *first;$/;"	m	struct:ecs_query_table_list_t	typeref:typename:ecs_query_table_node_t *
first	lib/flecs/src/private_types.h	/^    ecs_table_cache_hdr_t *first;$/;"	m	struct:ecs_table_cache_list_t	typeref:typename:ecs_table_cache_hdr_t *
first	lib/flecs/src/query.c	/^    int32_t first;$/;"	m	struct:__anon8da83e450208	typeref:typename:int32_t	file:
first	lib/flecs/src/table_graph.c	/^    int32_t first;$/;"	m	struct:__anon5c65d2280108	typeref:typename:int32_t	file:
first	lib/flecs/test/api/src/Trigger.c	/^    ecs_entity_t first;$/;"	m	struct:__anonf2e46c1b0108	typeref:typename:ecs_entity_t	file:
firstElement	lib/flecs/flecs.h	/^    ecs_strbuf_element_embedded firstElement;$/;"	m	struct:ecs_strbuf_t	typeref:typename:ecs_strbuf_element_embedded
firstElement	lib/flecs/include/flecs/private/strbuf.h	/^    ecs_strbuf_element_embedded firstElement;$/;"	m	struct:ecs_strbuf_t	typeref:typename:ecs_strbuf_element_embedded
first_arg	lib/flecs/flecs.h	/^struct first_arg {$/;"	s	namespace:flecs
first_arg	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct first_arg {$/;"	s	namespace:flecs
first_arg_impl	lib/flecs/flecs.h	/^struct first_arg_impl<Func, _::arg_list<T, Args ...> > {$/;"	s	namespace:flecs
first_arg_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct first_arg_impl<Func, _::arg_list<T, Args ...> > {$/;"	s	namespace:flecs
first_arg_t	lib/flecs/flecs.h	/^using first_arg_t = typename first_arg<Func>::type;$/;"	t	namespace:flecs	typeref:typename:first_arg<Func>::type
first_arg_t	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^using first_arg_t = typename first_arg<Func>::type;$/;"	t	namespace:flecs	typeref:typename:first_arg<Func>::type
first_free	lib/flecs/flecs.c	/^    ecs_graph_edge_hdr_t *first_free;$/;"	m	struct:ecs_store_t	typeref:typename:ecs_graph_edge_hdr_t *	file:
first_free	lib/flecs/src/private_types.h	/^    ecs_graph_edge_hdr_t *first_free;$/;"	m	struct:ecs_store_t	typeref:typename:ecs_graph_edge_hdr_t *
first_name	lib/uthash/tests/test12.c	/^    char first_name[10];$/;"	m	struct:person_t	typeref:typename:char[10]	file:
first_name	lib/uthash/tests/test66.c	/^    char first_name[10];$/;"	m	struct:person_t	typeref:typename:char[10]	file:
first_name	lib/uthash/tests/test83.c	/^    char first_name[10];$/;"	m	struct:person_t	typeref:typename:char[10]	file:
first_name	lib/uthash/tests/test84.c	/^    char *first_name;$/;"	m	struct:person_t	typeref:typename:char *	file:
flags	lib/flecs/flecs.c	/^    ecs_flags32_t flags;             \/* Flags for testing table properties *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_flags32_t	file:
flags	lib/flecs/flecs.c	/^    ecs_flags32_t flags;$/;"	m	struct:ecs_id_record_t	typeref:typename:ecs_flags32_t	file:
flags	lib/flecs/flecs.c	/^    ecs_flags32_t flags;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_flags32_t	file:
flags	lib/flecs/src/private_types.h	/^    ecs_flags32_t flags;             \/* Flags for testing table properties *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_flags32_t
flags	lib/flecs/src/private_types.h	/^    ecs_flags32_t flags;$/;"	m	struct:ecs_id_record_t	typeref:typename:ecs_flags32_t
flags	lib/flecs/src/private_types.h	/^    ecs_flags32_t flags;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_flags32_t
flecs	cmake-build-debug/Makefile	/^flecs: cmake_check_build_system$/;"	t
flecs	cmake-build-debug/lib/flecs/Makefile	/^flecs: lib\/flecs\/CMakeFiles\/flecs.dir\/rule$/;"	t
flecs	cmake-build-release/Makefile	/^flecs: cmake_check_build_system$/;"	t
flecs	cmake-build-release/lib/flecs/Makefile	/^flecs: lib\/flecs\/CMakeFiles\/flecs.dir\/rule$/;"	t
flecs	lib/flecs/CMakeLists.txt	/^    add_library(flecs SHARED ${INC} ${SRC})$/;"	t
flecs	lib/flecs/CMakeLists.txt	/^project(flecs LANGUAGES C)$/;"	p
flecs	lib/flecs/flecs.h	/^namespace flecs $/;"	n
flecs	lib/flecs/flecs.h	/^namespace flecs {$/;"	n
flecs	lib/flecs/flecs.h	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/component.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/flecs.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/impl/lifecycle_traits.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/log.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/component/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/doc/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/event/impl.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/filter/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/json/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/meta/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/module/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/observer/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/observer/impl.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/query/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/query/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/rest/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/rest/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/rule/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/rule/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/system/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/system/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/term/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/timer/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/trigger/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/trigger/impl.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/type/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/type/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/mixins/units/impl.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/type.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^namespace flecs {$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^namespace flecs $/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/addons/cpp/world.hpp	/^namespace flecs$/;"	n
flecs	lib/flecs/include/flecs/private/vector.h	/^namespace flecs {$/;"	n
flecs	lib/flecs/meson.build	/^flecs_lib = library('flecs',$/;"	B
flecs	lib/flecs/meson.build	/^project('flecs', 'c', license : 'mit', default_options : ['c_std=c99'])$/;"	P
flecs/fast	cmake-build-debug/Makefile	/^flecs\/fast:$/;"	t
flecs/fast	cmake-build-debug/lib/flecs/Makefile	/^flecs\/fast:$/;"	t
flecs/fast	cmake-build-release/Makefile	/^flecs\/fast:$/;"	t
flecs/fast	cmake-build-release/lib/flecs/Makefile	/^flecs\/fast:$/;"	t
flecs_STATIC	lib/flecs/flecs.h	/^#define flecs_STATIC$/;"	d
flecs_add_flag	lib/flecs/flecs.c	/^void flecs_add_flag($/;"	f	typeref:typename:void
flecs_add_flag	lib/flecs/src/entity.c	/^void flecs_add_flag($/;"	f	typeref:typename:void
flecs_args	lib/flecs/meson.build	/^    flecs_args = '-Dflecs_STATIC'$/;"	V
flecs_args	lib/flecs/meson.build	/^flecs_args = []$/;"	V
flecs_bitset_addn	lib/flecs/flecs.c	/^void flecs_bitset_addn($/;"	f	typeref:typename:void
flecs_bitset_addn	lib/flecs/src/datastructures/bitset.c	/^void flecs_bitset_addn($/;"	f	typeref:typename:void
flecs_bitset_column_t	lib/flecs/flecs.c	/^typedef struct flecs_bitset_column_t {$/;"	s	file:
flecs_bitset_column_t	lib/flecs/flecs.c	/^} flecs_bitset_column_t;$/;"	t	typeref:struct:flecs_bitset_column_t	file:
flecs_bitset_column_t	lib/flecs/src/private_types.h	/^typedef struct flecs_bitset_column_t {$/;"	s
flecs_bitset_column_t	lib/flecs/src/private_types.h	/^} flecs_bitset_column_t;$/;"	t	typeref:struct:flecs_bitset_column_t
flecs_bitset_count	lib/flecs/flecs.c	/^int32_t flecs_bitset_count($/;"	f	typeref:typename:int32_t
flecs_bitset_count	lib/flecs/src/datastructures/bitset.c	/^int32_t flecs_bitset_count($/;"	f	typeref:typename:int32_t
flecs_bitset_deinit	lib/flecs/flecs.c	/^void flecs_bitset_deinit($/;"	f	typeref:typename:void
flecs_bitset_deinit	lib/flecs/src/datastructures/bitset.c	/^void flecs_bitset_deinit($/;"	f	typeref:typename:void
flecs_bitset_ensure	lib/flecs/flecs.c	/^void flecs_bitset_ensure($/;"	f	typeref:typename:void
flecs_bitset_ensure	lib/flecs/src/datastructures/bitset.c	/^void flecs_bitset_ensure($/;"	f	typeref:typename:void
flecs_bitset_get	lib/flecs/flecs.c	/^bool flecs_bitset_get($/;"	f	typeref:typename:bool
flecs_bitset_get	lib/flecs/src/datastructures/bitset.c	/^bool flecs_bitset_get($/;"	f	typeref:typename:bool
flecs_bitset_init	lib/flecs/flecs.c	/^void flecs_bitset_init($/;"	f	typeref:typename:void
flecs_bitset_init	lib/flecs/src/datastructures/bitset.c	/^void flecs_bitset_init($/;"	f	typeref:typename:void
flecs_bitset_remove	lib/flecs/flecs.c	/^void flecs_bitset_remove($/;"	f	typeref:typename:void
flecs_bitset_remove	lib/flecs/src/datastructures/bitset.c	/^void flecs_bitset_remove($/;"	f	typeref:typename:void
flecs_bitset_set	lib/flecs/flecs.c	/^void flecs_bitset_set($/;"	f	typeref:typename:void
flecs_bitset_set	lib/flecs/src/datastructures/bitset.c	/^void flecs_bitset_set($/;"	f	typeref:typename:void
flecs_bitset_swap	lib/flecs/flecs.c	/^void flecs_bitset_swap($/;"	f	typeref:typename:void
flecs_bitset_swap	lib/flecs/src/datastructures/bitset.c	/^void flecs_bitset_swap($/;"	f	typeref:typename:void
flecs_bootstrap	lib/flecs/flecs.c	/^void flecs_bootstrap($/;"	f	typeref:typename:void
flecs_bootstrap	lib/flecs/src/bootstrap.c	/^void flecs_bootstrap($/;"	f	typeref:typename:void
flecs_bootstrap_component	lib/flecs/flecs.c	/^#define flecs_bootstrap_component(/;"	d	file:
flecs_bootstrap_component	lib/flecs/src/private_api.h	/^#define flecs_bootstrap_component(/;"	d
flecs_bootstrap_hierarchy	lib/flecs/flecs.c	/^void flecs_bootstrap_hierarchy(ecs_world_t *world) {$/;"	f	typeref:typename:void
flecs_bootstrap_hierarchy	lib/flecs/src/hierarchy.c	/^void flecs_bootstrap_hierarchy(ecs_world_t *world) {$/;"	f	typeref:typename:void
flecs_bootstrap_tag	lib/flecs/flecs.c	/^#define flecs_bootstrap_tag(/;"	d	file:
flecs_bootstrap_tag	lib/flecs/src/private_api.h	/^#define flecs_bootstrap_tag(/;"	d
flecs_check_triggers_for_event	lib/flecs/flecs.c	/^bool flecs_check_triggers_for_event($/;"	f	typeref:typename:bool
flecs_check_triggers_for_event	lib/flecs/src/trigger.c	/^bool flecs_check_triggers_for_event($/;"	f	typeref:typename:bool
flecs_clear_id_record	lib/flecs/flecs.c	/^void flecs_clear_id_record($/;"	f	typeref:typename:void
flecs_clear_id_record	lib/flecs/src/world.c	/^void flecs_clear_id_record($/;"	f	typeref:typename:void
flecs_component_from_id	lib/flecs/flecs.c	/^const EcsComponent* flecs_component_from_id($/;"	f	typeref:typename:const EcsComponent *
flecs_component_from_id	lib/flecs/src/table_graph.c	/^const EcsComponent* flecs_component_from_id($/;"	f	typeref:typename:const EcsComponent *
flecs_defer_add	lib/flecs/flecs.c	/^bool flecs_defer_add($/;"	f	typeref:typename:bool
flecs_defer_add	lib/flecs/src/stage.c	/^bool flecs_defer_add($/;"	f	typeref:typename:bool
flecs_defer_bulk_new	lib/flecs/flecs.c	/^bool flecs_defer_bulk_new($/;"	f	typeref:typename:bool
flecs_defer_bulk_new	lib/flecs/src/stage.c	/^bool flecs_defer_bulk_new($/;"	f	typeref:typename:bool
flecs_defer_clear	lib/flecs/flecs.c	/^bool flecs_defer_clear($/;"	f	typeref:typename:bool
flecs_defer_clear	lib/flecs/src/stage.c	/^bool flecs_defer_clear($/;"	f	typeref:typename:bool
flecs_defer_clone	lib/flecs/flecs.c	/^bool flecs_defer_clone($/;"	f	typeref:typename:bool
flecs_defer_clone	lib/flecs/src/stage.c	/^bool flecs_defer_clone($/;"	f	typeref:typename:bool
flecs_defer_delete	lib/flecs/flecs.c	/^bool flecs_defer_delete($/;"	f	typeref:typename:bool
flecs_defer_delete	lib/flecs/src/stage.c	/^bool flecs_defer_delete($/;"	f	typeref:typename:bool
flecs_defer_enable	lib/flecs/flecs.c	/^bool flecs_defer_enable($/;"	f	typeref:typename:bool
flecs_defer_enable	lib/flecs/src/stage.c	/^bool flecs_defer_enable($/;"	f	typeref:typename:bool
flecs_defer_flush	lib/flecs/flecs.c	/^bool flecs_defer_flush($/;"	f	typeref:typename:bool
flecs_defer_flush	lib/flecs/src/entity.c	/^bool flecs_defer_flush($/;"	f	typeref:typename:bool
flecs_defer_modified	lib/flecs/flecs.c	/^bool flecs_defer_modified($/;"	f	typeref:typename:bool
flecs_defer_modified	lib/flecs/src/stage.c	/^bool flecs_defer_modified($/;"	f	typeref:typename:bool
flecs_defer_new	lib/flecs/flecs.c	/^bool flecs_defer_new($/;"	f	typeref:typename:bool
flecs_defer_new	lib/flecs/src/stage.c	/^bool flecs_defer_new($/;"	f	typeref:typename:bool
flecs_defer_none	lib/flecs/flecs.c	/^bool flecs_defer_none($/;"	f	typeref:typename:bool
flecs_defer_none	lib/flecs/src/stage.c	/^bool flecs_defer_none($/;"	f	typeref:typename:bool
flecs_defer_on_delete_action	lib/flecs/flecs.c	/^bool flecs_defer_on_delete_action($/;"	f	typeref:typename:bool
flecs_defer_on_delete_action	lib/flecs/src/stage.c	/^bool flecs_defer_on_delete_action($/;"	f	typeref:typename:bool
flecs_defer_purge	lib/flecs/flecs.c	/^bool flecs_defer_purge($/;"	f	typeref:typename:bool
flecs_defer_purge	lib/flecs/src/entity.c	/^bool flecs_defer_purge($/;"	f	typeref:typename:bool
flecs_defer_remove	lib/flecs/flecs.c	/^bool flecs_defer_remove($/;"	f	typeref:typename:bool
flecs_defer_remove	lib/flecs/src/stage.c	/^bool flecs_defer_remove($/;"	f	typeref:typename:bool
flecs_defer_set	lib/flecs/flecs.c	/^bool flecs_defer_set($/;"	f	typeref:typename:bool
flecs_defer_set	lib/flecs/src/stage.c	/^bool flecs_defer_set($/;"	f	typeref:typename:bool
flecs_delete_table	lib/flecs/flecs.c	/^void flecs_delete_table($/;"	f	typeref:typename:void
flecs_delete_table	lib/flecs/src/world.c	/^void flecs_delete_table($/;"	f	typeref:typename:void
flecs_dep	lib/flecs/meson.build	/^flecs_dep = declare_dependency($/;"	V
flecs_deps	lib/flecs/meson.build	/^flecs_deps = dependency('threads')$/;"	V
flecs_empty_table_iter	lib/flecs/flecs.c	/^ecs_id_record_t* flecs_empty_table_iter($/;"	f	typeref:typename:ecs_id_record_t *
flecs_empty_table_iter	lib/flecs/src/world.c	/^ecs_id_record_t* flecs_empty_table_iter($/;"	f	typeref:typename:ecs_id_record_t *
flecs_ensure_id_name_index	lib/flecs/flecs.c	/^ecs_hashmap_t* flecs_ensure_id_name_index($/;"	f	typeref:typename:ecs_hashmap_t *
flecs_ensure_id_name_index	lib/flecs/src/world.c	/^ecs_hashmap_t* flecs_ensure_id_name_index($/;"	f	typeref:typename:ecs_hashmap_t *
flecs_ensure_id_record	lib/flecs/flecs.c	/^ecs_id_record_t* flecs_ensure_id_record($/;"	f	typeref:typename:ecs_id_record_t *
flecs_ensure_id_record	lib/flecs/src/world.c	/^ecs_id_record_t* flecs_ensure_id_record($/;"	f	typeref:typename:ecs_id_record_t *
flecs_entity_compare	lib/flecs/flecs.c	/^int flecs_entity_compare($/;"	f	typeref:typename:int
flecs_entity_compare	lib/flecs/src/misc.c	/^int flecs_entity_compare($/;"	f	typeref:typename:int
flecs_entity_compare_qsort	lib/flecs/flecs.c	/^int flecs_entity_compare_qsort($/;"	f	typeref:typename:int
flecs_entity_compare_qsort	lib/flecs/src/misc.c	/^int flecs_entity_compare_qsort($/;"	f	typeref:typename:int
flecs_eval_component_monitors	lib/flecs/flecs.c	/^void flecs_eval_component_monitors($/;"	f	typeref:typename:void
flecs_eval_component_monitors	lib/flecs/src/world.c	/^void flecs_eval_component_monitors($/;"	f	typeref:typename:void
flecs_example	lib/flecs/examples/CMakeLists.txt	/^project(flecs_example LANGUAGES C CXX)$/;"	p
flecs_filter_match_table	lib/flecs/flecs.c	/^bool flecs_filter_match_table($/;"	f	typeref:typename:bool
flecs_filter_match_table	lib/flecs/src/filter.c	/^bool flecs_filter_match_table($/;"	f	typeref:typename:bool
flecs_get_c_info	lib/flecs/flecs.c	/^const ecs_type_info_t* flecs_get_c_info($/;"	f	typeref:typename:const ecs_type_info_t *
flecs_get_c_info	lib/flecs/src/world.c	/^const ecs_type_info_t* flecs_get_c_info($/;"	f	typeref:typename:const ecs_type_info_t *
flecs_get_hashed_string	lib/flecs/flecs.c	/^ecs_hashed_string_t flecs_get_hashed_string($/;"	f	typeref:typename:ecs_hashed_string_t
flecs_get_hashed_string	lib/flecs/src/datastructures/name_index.c	/^ecs_hashed_string_t flecs_get_hashed_string($/;"	f	typeref:typename:ecs_hashed_string_t
flecs_get_id_name_index	lib/flecs/flecs.c	/^ecs_hashmap_t* flecs_get_id_name_index($/;"	f	typeref:typename:ecs_hashmap_t *
flecs_get_id_name_index	lib/flecs/src/world.c	/^ecs_hashmap_t* flecs_get_id_name_index($/;"	f	typeref:typename:ecs_hashmap_t *
flecs_get_id_record	lib/flecs/flecs.c	/^ecs_id_record_t* flecs_get_id_record($/;"	f	typeref:typename:ecs_id_record_t *
flecs_get_id_record	lib/flecs/src/world.c	/^ecs_id_record_t* flecs_get_id_record($/;"	f	typeref:typename:ecs_id_record_t *
flecs_get_info	lib/flecs/flecs.c	/^bool flecs_get_info($/;"	f	typeref:typename:bool
flecs_get_info	lib/flecs/src/entity.c	/^bool flecs_get_info($/;"	f	typeref:typename:bool
flecs_get_or_create_c_info	lib/flecs/flecs.c	/^ecs_type_info_t* flecs_get_or_create_c_info($/;"	f	typeref:typename:ecs_type_info_t *
flecs_get_or_create_c_info	lib/flecs/src/world.c	/^ecs_type_info_t* flecs_get_or_create_c_info($/;"	f	typeref:typename:ecs_type_info_t *
flecs_get_table_record	lib/flecs/flecs.c	/^ecs_table_record_t* flecs_get_table_record($/;"	f	typeref:typename:ecs_table_record_t *
flecs_get_table_record	lib/flecs/src/world.c	/^ecs_table_record_t* flecs_get_table_record($/;"	f	typeref:typename:ecs_table_record_t *
flecs_hash	lib/flecs/flecs.c	/^uint64_t flecs_hash($/;"	f	typeref:typename:uint64_t
flecs_hash	lib/flecs/src/datastructures/hash.c	/^uint64_t flecs_hash($/;"	f	typeref:typename:uint64_t
flecs_hashmap_copy	lib/flecs/flecs.c	/^void flecs_hashmap_copy($/;"	f	typeref:typename:void
flecs_hashmap_copy	lib/flecs/src/datastructures/hashmap.c	/^void flecs_hashmap_copy($/;"	f	typeref:typename:void
flecs_hashmap_ensure	lib/flecs/flecs.h	/^#define flecs_hashmap_ensure(/;"	d
flecs_hashmap_ensure	lib/flecs/include/flecs/private/hashmap.h	/^#define flecs_hashmap_ensure(/;"	d
flecs_hashmap_fini	lib/flecs/flecs.c	/^void flecs_hashmap_fini($/;"	f	typeref:typename:void
flecs_hashmap_fini	lib/flecs/src/datastructures/hashmap.c	/^void flecs_hashmap_fini($/;"	f	typeref:typename:void
flecs_hashmap_get	lib/flecs/flecs.h	/^#define flecs_hashmap_get(/;"	d
flecs_hashmap_get	lib/flecs/include/flecs/private/hashmap.h	/^#define flecs_hashmap_get(/;"	d
flecs_hashmap_get_bucket	lib/flecs/flecs.c	/^ecs_hm_bucket_t* flecs_hashmap_get_bucket($/;"	f	typeref:typename:ecs_hm_bucket_t *
flecs_hashmap_get_bucket	lib/flecs/src/datastructures/hashmap.c	/^ecs_hm_bucket_t* flecs_hashmap_get_bucket($/;"	f	typeref:typename:ecs_hm_bucket_t *
flecs_hashmap_init	lib/flecs/flecs.h	/^#define flecs_hashmap_init(/;"	d
flecs_hashmap_init	lib/flecs/include/flecs/private/hashmap.h	/^#define flecs_hashmap_init(/;"	d
flecs_hashmap_iter	lib/flecs/flecs.c	/^flecs_hashmap_iter_t flecs_hashmap_iter($/;"	f	typeref:typename:flecs_hashmap_iter_t
flecs_hashmap_iter	lib/flecs/src/datastructures/hashmap.c	/^flecs_hashmap_iter_t flecs_hashmap_iter($/;"	f	typeref:typename:flecs_hashmap_iter_t
flecs_hashmap_iter_t	lib/flecs/flecs.h	/^} flecs_hashmap_iter_t;$/;"	t	typeref:struct:__anona642c00a0408
flecs_hashmap_iter_t	lib/flecs/include/flecs/private/hashmap.h	/^} flecs_hashmap_iter_t;$/;"	t	typeref:struct:__anonceb012f80308
flecs_hashmap_next	lib/flecs/flecs.h	/^#define flecs_hashmap_next(/;"	d
flecs_hashmap_next	lib/flecs/include/flecs/private/hashmap.h	/^#define flecs_hashmap_next(/;"	d
flecs_hashmap_next_w_key	lib/flecs/flecs.h	/^#define flecs_hashmap_next_w_key(/;"	d
flecs_hashmap_next_w_key	lib/flecs/include/flecs/private/hashmap.h	/^#define flecs_hashmap_next_w_key(/;"	d
flecs_hashmap_remove	lib/flecs/flecs.h	/^#define flecs_hashmap_remove(/;"	d
flecs_hashmap_remove	lib/flecs/include/flecs/private/hashmap.h	/^#define flecs_hashmap_remove(/;"	d
flecs_hashmap_remove_w_hash	lib/flecs/flecs.h	/^#define flecs_hashmap_remove_w_hash(/;"	d
flecs_hashmap_remove_w_hash	lib/flecs/include/flecs/private/hashmap.h	/^#define flecs_hashmap_remove_w_hash(/;"	d
flecs_hashmap_result_t	lib/flecs/flecs.h	/^} flecs_hashmap_result_t;$/;"	t	typeref:struct:__anona642c00a0508
flecs_hashmap_result_t	lib/flecs/include/flecs/private/hashmap.h	/^} flecs_hashmap_result_t;$/;"	t	typeref:struct:__anonceb012f80408
flecs_hashmap_set	lib/flecs/flecs.h	/^#define flecs_hashmap_set(/;"	d
flecs_hashmap_set	lib/flecs/include/flecs/private/hashmap.h	/^#define flecs_hashmap_set(/;"	d
flecs_hm_bucket_remove	lib/flecs/flecs.c	/^void flecs_hm_bucket_remove($/;"	f	typeref:typename:void
flecs_hm_bucket_remove	lib/flecs/src/datastructures/hashmap.c	/^void flecs_hm_bucket_remove($/;"	f	typeref:typename:void
flecs_id_record_table	lib/flecs/flecs.c	/^const ecs_table_record_t* flecs_id_record_table($/;"	f	typeref:typename:const ecs_table_record_t *
flecs_id_record_table	lib/flecs/src/world.c	/^const ecs_table_record_t* flecs_id_record_table($/;"	f	typeref:typename:const ecs_table_record_t *
flecs_inc	lib/flecs/meson.build	/^flecs_inc = include_directories('include')$/;"	V
flecs_init_root_table	lib/flecs/flecs.c	/^void flecs_init_root_table($/;"	f	typeref:typename:void
flecs_init_root_table	lib/flecs/src/table_graph.c	/^void flecs_init_root_table($/;"	f	typeref:typename:void
flecs_iter_init	lib/flecs/flecs.c	/^void flecs_iter_init($/;"	f	typeref:typename:void
flecs_iter_init	lib/flecs/src/iter.c	/^void flecs_iter_init($/;"	f	typeref:typename:void
flecs_iter_next_instanced	lib/flecs/flecs.c	/^bool flecs_iter_next_instanced($/;"	f	typeref:typename:bool
flecs_iter_next_instanced	lib/flecs/src/iter.c	/^bool flecs_iter_next_instanced($/;"	f	typeref:typename:bool
flecs_iter_next_row	lib/flecs/flecs.c	/^bool flecs_iter_next_row($/;"	f	typeref:typename:bool
flecs_iter_next_row	lib/flecs/src/iter.c	/^bool flecs_iter_next_row($/;"	f	typeref:typename:bool
flecs_iter_populate_data	lib/flecs/flecs.c	/^void flecs_iter_populate_data($/;"	f	typeref:typename:void
flecs_iter_populate_data	lib/flecs/src/iter.c	/^void flecs_iter_populate_data($/;"	f	typeref:typename:void
flecs_iter_populate_term_data	lib/flecs/flecs.c	/^bool flecs_iter_populate_term_data($/;"	f	typeref:typename:bool	file:
flecs_iter_populate_term_data	lib/flecs/src/iter.c	/^bool flecs_iter_populate_term_data($/;"	f	typeref:typename:bool	file:
flecs_ito	lib/flecs/flecs.c	/^#define flecs_ito(/;"	d	file:
flecs_ito	lib/flecs/src/private_api.h	/^#define flecs_ito(/;"	d
flecs_itoi16	lib/flecs/flecs.c	/^#define flecs_itoi16(/;"	d	file:
flecs_itoi16	lib/flecs/src/private_api.h	/^#define flecs_itoi16(/;"	d
flecs_itoi32	lib/flecs/flecs.c	/^#define flecs_itoi32(/;"	d	file:
flecs_itoi32	lib/flecs/src/private_api.h	/^#define flecs_itoi32(/;"	d
flecs_itosize	lib/flecs/flecs.c	/^#define flecs_itosize(/;"	d	file:
flecs_itosize	lib/flecs/src/private_api.h	/^#define flecs_itosize(/;"	d
flecs_lib	lib/flecs/meson.build	/^flecs_lib = library('flecs',$/;"	V
flecs_monitor_mark_dirty	lib/flecs/flecs.c	/^void flecs_monitor_mark_dirty($/;"	f	typeref:typename:void
flecs_monitor_mark_dirty	lib/flecs/src/world.c	/^void flecs_monitor_mark_dirty($/;"	f	typeref:typename:void
flecs_monitor_register	lib/flecs/flecs.c	/^void flecs_monitor_register($/;"	f	typeref:typename:void
flecs_monitor_register	lib/flecs/src/world.c	/^void flecs_monitor_register($/;"	f	typeref:typename:void
flecs_monitor_unregister	lib/flecs/flecs.c	/^void flecs_monitor_unregister($/;"	f	typeref:typename:void
flecs_monitor_unregister	lib/flecs/src/world.c	/^void flecs_monitor_unregister($/;"	f	typeref:typename:void
flecs_n_term_match_table	lib/flecs/flecs.c	/^bool flecs_n_term_match_table($/;"	f	typeref:typename:bool	file:
flecs_n_term_match_table	lib/flecs/src/filter.c	/^bool flecs_n_term_match_table($/;"	f	typeref:typename:bool	file:
flecs_name_index_ensure	lib/flecs/flecs.c	/^void flecs_name_index_ensure($/;"	f	typeref:typename:void
flecs_name_index_ensure	lib/flecs/src/datastructures/name_index.c	/^void flecs_name_index_ensure($/;"	f	typeref:typename:void
flecs_name_index_find	lib/flecs/flecs.c	/^uint64_t flecs_name_index_find($/;"	f	typeref:typename:uint64_t
flecs_name_index_find	lib/flecs/src/datastructures/name_index.c	/^uint64_t flecs_name_index_find($/;"	f	typeref:typename:uint64_t
flecs_name_index_find_ptr	lib/flecs/flecs.c	/^const uint64_t* flecs_name_index_find_ptr($/;"	f	typeref:typename:const uint64_t *
flecs_name_index_find_ptr	lib/flecs/src/datastructures/name_index.c	/^const uint64_t* flecs_name_index_find_ptr($/;"	f	typeref:typename:const uint64_t *
flecs_name_index_fini	lib/flecs/flecs.c	/^void flecs_name_index_fini($/;"	f	typeref:typename:void
flecs_name_index_fini	lib/flecs/src/datastructures/name_index.c	/^void flecs_name_index_fini($/;"	f	typeref:typename:void
flecs_name_index_free	lib/flecs/flecs.c	/^void flecs_name_index_free($/;"	f	typeref:typename:void
flecs_name_index_free	lib/flecs/src/datastructures/name_index.c	/^void flecs_name_index_free($/;"	f	typeref:typename:void
flecs_name_index_init	lib/flecs/flecs.c	/^void flecs_name_index_init($/;"	f	typeref:typename:void
flecs_name_index_init	lib/flecs/src/datastructures/name_index.c	/^void flecs_name_index_init($/;"	f	typeref:typename:void
flecs_name_index_new	lib/flecs/flecs.c	/^ecs_hashmap_t* flecs_name_index_new(void) $/;"	f	typeref:typename:ecs_hashmap_t *
flecs_name_index_new	lib/flecs/src/datastructures/name_index.c	/^ecs_hashmap_t* flecs_name_index_new(void) $/;"	f	typeref:typename:ecs_hashmap_t *
flecs_name_index_remove	lib/flecs/flecs.c	/^void flecs_name_index_remove($/;"	f	typeref:typename:void
flecs_name_index_remove	lib/flecs/src/datastructures/name_index.c	/^void flecs_name_index_remove($/;"	f	typeref:typename:void
flecs_name_index_update_name	lib/flecs/flecs.c	/^void flecs_name_index_update_name($/;"	f	typeref:typename:void
flecs_name_index_update_name	lib/flecs/src/datastructures/name_index.c	/^void flecs_name_index_update_name($/;"	f	typeref:typename:void
flecs_next_pow_of_2	lib/flecs/flecs.c	/^int32_t flecs_next_pow_of_2($/;"	f	typeref:typename:int32_t
flecs_next_pow_of_2	lib/flecs/src/misc.c	/^int32_t flecs_next_pow_of_2($/;"	f	typeref:typename:int32_t
flecs_notify_on_add	lib/flecs/flecs.c	/^void flecs_notify_on_add($/;"	f	typeref:typename:void	file:
flecs_notify_on_add	lib/flecs/src/entity.c	/^void flecs_notify_on_add($/;"	f	typeref:typename:void	file:
flecs_notify_on_remove	lib/flecs/flecs.c	/^void flecs_notify_on_remove($/;"	f	typeref:typename:void
flecs_notify_on_remove	lib/flecs/src/entity.c	/^void flecs_notify_on_remove($/;"	f	typeref:typename:void
flecs_notify_on_set	lib/flecs/flecs.c	/^void flecs_notify_on_set($/;"	f	typeref:typename:void
flecs_notify_on_set	lib/flecs/src/entity.c	/^void flecs_notify_on_set($/;"	f	typeref:typename:void
flecs_notify_queries	lib/flecs/flecs.c	/^void flecs_notify_queries($/;"	f	typeref:typename:void
flecs_notify_queries	lib/flecs/src/world.c	/^void flecs_notify_queries($/;"	f	typeref:typename:void
flecs_notify_tables	lib/flecs/flecs.c	/^void flecs_notify_tables($/;"	f	typeref:typename:void
flecs_notify_tables	lib/flecs/src/world.c	/^void flecs_notify_tables($/;"	f	typeref:typename:void
flecs_observable_fini	lib/flecs/flecs.c	/^void flecs_observable_fini($/;"	f	typeref:typename:void
flecs_observable_fini	lib/flecs/src/observable.c	/^void flecs_observable_fini($/;"	f	typeref:typename:void
flecs_observable_init	lib/flecs/flecs.c	/^void flecs_observable_init($/;"	f	typeref:typename:void
flecs_observable_init	lib/flecs/src/observable.c	/^void flecs_observable_init($/;"	f	typeref:typename:void
flecs_observer_fini	lib/flecs/flecs.c	/^void flecs_observer_fini($/;"	f	typeref:typename:void
flecs_observer_fini	lib/flecs/src/observer.c	/^void flecs_observer_fini($/;"	f	typeref:typename:void
flecs_process_pending_tables	lib/flecs/flecs.c	/^void flecs_process_pending_tables($/;"	f	typeref:typename:void
flecs_process_pending_tables	lib/flecs/src/world.c	/^void flecs_process_pending_tables($/;"	f	typeref:typename:void
flecs_query_match	lib/flecs/flecs.c	/^bool flecs_query_match($/;"	f	typeref:typename:bool
flecs_query_match	lib/flecs/src/query.c	/^bool flecs_query_match($/;"	f	typeref:typename:bool
flecs_query_notify	lib/flecs/flecs.c	/^void flecs_query_notify($/;"	f	typeref:typename:void
flecs_query_notify	lib/flecs/src/query.c	/^void flecs_query_notify($/;"	f	typeref:typename:void
flecs_record_to_row	lib/flecs/flecs.c	/^uint32_t flecs_record_to_row($/;"	f	typeref:typename:uint32_t
flecs_record_to_row	lib/flecs/src/entity.c	/^uint32_t flecs_record_to_row($/;"	f	typeref:typename:uint32_t
flecs_remove_id_record	lib/flecs/flecs.c	/^void flecs_remove_id_record($/;"	f	typeref:typename:void
flecs_remove_id_record	lib/flecs/src/world.c	/^void flecs_remove_id_record($/;"	f	typeref:typename:void
flecs_reset_count	lib/flecs/flecs.c	/^static int32_t flecs_reset_count = 0;$/;"	v	typeref:typename:int32_t	file:
flecs_reset_count	lib/flecs/src/addons/flecs_cpp.c	/^static int32_t flecs_reset_count = 0;$/;"	v	typeref:typename:int32_t	file:
flecs_resume_readonly	lib/flecs/flecs.c	/^void flecs_resume_readonly($/;"	f	typeref:typename:void
flecs_resume_readonly	lib/flecs/src/world.c	/^void flecs_resume_readonly($/;"	f	typeref:typename:void
flecs_row_to_record	lib/flecs/flecs.c	/^uint32_t flecs_row_to_record($/;"	f	typeref:typename:uint32_t
flecs_row_to_record	lib/flecs/src/entity.c	/^uint32_t flecs_row_to_record($/;"	f	typeref:typename:uint32_t
flecs_set_triggers_notify	lib/flecs/flecs.c	/^void flecs_set_triggers_notify($/;"	f	typeref:typename:void
flecs_set_triggers_notify	lib/flecs/src/trigger.c	/^void flecs_set_triggers_notify($/;"	f	typeref:typename:void
flecs_signed_char__	lib/flecs/flecs.c	/^#define flecs_signed_char__ /;"	d	file:
flecs_signed_char__	lib/flecs/src/private_api.h	/^#define flecs_signed_char__ /;"	d
flecs_signed_ecs_entity_t__	lib/flecs/flecs.c	/^#define flecs_signed_ecs_entity_t__ /;"	d	file:
flecs_signed_ecs_entity_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_ecs_entity_t__ /;"	d
flecs_signed_ecs_size_t__	lib/flecs/flecs.c	/^#define flecs_signed_ecs_size_t__ /;"	d	file:
flecs_signed_ecs_size_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_ecs_size_t__ /;"	d
flecs_signed_int16_t__	lib/flecs/flecs.c	/^#define flecs_signed_int16_t__ /;"	d	file:
flecs_signed_int16_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_int16_t__ /;"	d
flecs_signed_int32_t__	lib/flecs/flecs.c	/^#define flecs_signed_int32_t__ /;"	d	file:
flecs_signed_int32_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_int32_t__ /;"	d
flecs_signed_int64_t__	lib/flecs/flecs.c	/^#define flecs_signed_int64_t__ /;"	d	file:
flecs_signed_int64_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_int64_t__ /;"	d
flecs_signed_int8_t__	lib/flecs/flecs.c	/^#define flecs_signed_int8_t__ /;"	d	file:
flecs_signed_int8_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_int8_t__ /;"	d
flecs_signed_int__	lib/flecs/flecs.c	/^#define flecs_signed_int__ /;"	d	file:
flecs_signed_int__	lib/flecs/src/private_api.h	/^#define flecs_signed_int__ /;"	d
flecs_signed_intptr_t__	lib/flecs/flecs.c	/^#define flecs_signed_intptr_t__ /;"	d	file:
flecs_signed_intptr_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_intptr_t__ /;"	d
flecs_signed_long__	lib/flecs/flecs.c	/^#define flecs_signed_long__ /;"	d	file:
flecs_signed_long__	lib/flecs/src/private_api.h	/^#define flecs_signed_long__ /;"	d
flecs_signed_short__	lib/flecs/flecs.c	/^#define flecs_signed_short__ /;"	d	file:
flecs_signed_short__	lib/flecs/src/private_api.h	/^#define flecs_signed_short__ /;"	d
flecs_signed_size_t__	lib/flecs/flecs.c	/^#define flecs_signed_size_t__ /;"	d	file:
flecs_signed_size_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_size_t__ /;"	d
flecs_signed_uint16_t__	lib/flecs/flecs.c	/^#define flecs_signed_uint16_t__ /;"	d	file:
flecs_signed_uint16_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_uint16_t__ /;"	d
flecs_signed_uint32_t__	lib/flecs/flecs.c	/^#define flecs_signed_uint32_t__ /;"	d	file:
flecs_signed_uint32_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_uint32_t__ /;"	d
flecs_signed_uint64_t__	lib/flecs/flecs.c	/^#define flecs_signed_uint64_t__ /;"	d	file:
flecs_signed_uint64_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_uint64_t__ /;"	d
flecs_signed_uint8_t__	lib/flecs/flecs.c	/^#define flecs_signed_uint8_t__ /;"	d	file:
flecs_signed_uint8_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_uint8_t__ /;"	d
flecs_signed_uintptr_t__	lib/flecs/flecs.c	/^#define flecs_signed_uintptr_t__ /;"	d	file:
flecs_signed_uintptr_t__	lib/flecs/src/private_api.h	/^#define flecs_signed_uintptr_t__ /;"	d
flecs_sparse_add	lib/flecs/flecs.h	/^#define flecs_sparse_add(/;"	d
flecs_sparse_add	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_add(/;"	d
flecs_sparse_clear	lib/flecs/flecs.c	/^void flecs_sparse_clear($/;"	f	typeref:typename:void
flecs_sparse_clear	lib/flecs/src/datastructures/sparse.c	/^void flecs_sparse_clear($/;"	f	typeref:typename:void
flecs_sparse_column_t	lib/flecs/flecs.c	/^typedef struct flecs_sparse_column_t {$/;"	s	file:
flecs_sparse_column_t	lib/flecs/flecs.c	/^} flecs_sparse_column_t;$/;"	t	typeref:struct:flecs_sparse_column_t	file:
flecs_sparse_column_t	lib/flecs/src/private_types.h	/^typedef struct flecs_sparse_column_t {$/;"	s
flecs_sparse_column_t	lib/flecs/src/private_types.h	/^} flecs_sparse_column_t;$/;"	t	typeref:struct:flecs_sparse_column_t
flecs_sparse_copy	lib/flecs/flecs.c	/^ecs_sparse_t* flecs_sparse_copy($/;"	f	typeref:typename:ecs_sparse_t *
flecs_sparse_copy	lib/flecs/src/datastructures/sparse.c	/^ecs_sparse_t* flecs_sparse_copy($/;"	f	typeref:typename:ecs_sparse_t *
flecs_sparse_count	lib/flecs/flecs.c	/^int32_t flecs_sparse_count($/;"	f	typeref:typename:int32_t
flecs_sparse_count	lib/flecs/src/datastructures/sparse.c	/^int32_t flecs_sparse_count($/;"	f	typeref:typename:int32_t
flecs_sparse_each	lib/flecs/flecs.h	/^#define flecs_sparse_each(/;"	d
flecs_sparse_each	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_each(/;"	d
flecs_sparse_ensure	lib/flecs/flecs.h	/^#define flecs_sparse_ensure(/;"	d
flecs_sparse_ensure	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_ensure(/;"	d
flecs_sparse_exists	lib/flecs/flecs.c	/^bool flecs_sparse_exists($/;"	f	typeref:typename:bool
flecs_sparse_exists	lib/flecs/src/datastructures/sparse.c	/^bool flecs_sparse_exists($/;"	f	typeref:typename:bool
flecs_sparse_fini	lib/flecs/flecs.h	/^#define flecs_sparse_fini(/;"	d
flecs_sparse_fini	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_fini(/;"	d
flecs_sparse_free	lib/flecs/flecs.c	/^void flecs_sparse_free($/;"	f	typeref:typename:void
flecs_sparse_free	lib/flecs/src/datastructures/sparse.c	/^void flecs_sparse_free($/;"	f	typeref:typename:void
flecs_sparse_get	lib/flecs/flecs.h	/^#define flecs_sparse_get(/;"	d
flecs_sparse_get	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_get(/;"	d
flecs_sparse_get_alive	lib/flecs/flecs.c	/^uint64_t flecs_sparse_get_alive($/;"	f	typeref:typename:uint64_t
flecs_sparse_get_alive	lib/flecs/src/datastructures/sparse.c	/^uint64_t flecs_sparse_get_alive($/;"	f	typeref:typename:uint64_t
flecs_sparse_get_any	lib/flecs/flecs.h	/^#define flecs_sparse_get_any(/;"	d
flecs_sparse_get_any	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_get_any(/;"	d
flecs_sparse_get_dense	lib/flecs/flecs.h	/^#define flecs_sparse_get_dense(/;"	d
flecs_sparse_get_dense	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_get_dense(/;"	d
flecs_sparse_ids	lib/flecs/flecs.c	/^const uint64_t* flecs_sparse_ids($/;"	f	typeref:typename:const uint64_t *
flecs_sparse_ids	lib/flecs/src/datastructures/sparse.c	/^const uint64_t* flecs_sparse_ids($/;"	f	typeref:typename:const uint64_t *
flecs_sparse_init	lib/flecs/flecs.h	/^#define flecs_sparse_init(/;"	d
flecs_sparse_init	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_init(/;"	d
flecs_sparse_is_alive	lib/flecs/flecs.c	/^bool flecs_sparse_is_alive($/;"	f	typeref:typename:bool
flecs_sparse_is_alive	lib/flecs/src/datastructures/sparse.c	/^bool flecs_sparse_is_alive($/;"	f	typeref:typename:bool
flecs_sparse_iter	lib/flecs/flecs.h	/^#define flecs_sparse_iter(/;"	d
flecs_sparse_iter	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_iter(/;"	d
flecs_sparse_last_id	lib/flecs/flecs.c	/^uint64_t flecs_sparse_last_id($/;"	f	typeref:typename:uint64_t
flecs_sparse_last_id	lib/flecs/src/datastructures/sparse.c	/^uint64_t flecs_sparse_last_id($/;"	f	typeref:typename:uint64_t
flecs_sparse_memory	lib/flecs/flecs.c	/^void flecs_sparse_memory($/;"	f	typeref:typename:void
flecs_sparse_memory	lib/flecs/src/datastructures/sparse.c	/^void flecs_sparse_memory($/;"	f	typeref:typename:void
flecs_sparse_new	lib/flecs/flecs.h	/^#define flecs_sparse_new(/;"	d
flecs_sparse_new	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_new(/;"	d
flecs_sparse_new_id	lib/flecs/flecs.c	/^uint64_t flecs_sparse_new_id($/;"	f	typeref:typename:uint64_t
flecs_sparse_new_id	lib/flecs/src/datastructures/sparse.c	/^uint64_t flecs_sparse_new_id($/;"	f	typeref:typename:uint64_t
flecs_sparse_new_ids	lib/flecs/flecs.c	/^const uint64_t* flecs_sparse_new_ids($/;"	f	typeref:typename:const uint64_t *
flecs_sparse_new_ids	lib/flecs/src/datastructures/sparse.c	/^const uint64_t* flecs_sparse_new_ids($/;"	f	typeref:typename:const uint64_t *
flecs_sparse_remove	lib/flecs/flecs.c	/^void flecs_sparse_remove($/;"	f	typeref:typename:void
flecs_sparse_remove	lib/flecs/src/datastructures/sparse.c	/^void flecs_sparse_remove($/;"	f	typeref:typename:void
flecs_sparse_remove_get	lib/flecs/flecs.h	/^#define flecs_sparse_remove_get(/;"	d
flecs_sparse_remove_get	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_remove_get(/;"	d
flecs_sparse_restore	lib/flecs/flecs.c	/^void flecs_sparse_restore($/;"	f	typeref:typename:void
flecs_sparse_restore	lib/flecs/src/datastructures/sparse.c	/^void flecs_sparse_restore($/;"	f	typeref:typename:void
flecs_sparse_set	lib/flecs/flecs.h	/^#define flecs_sparse_set(/;"	d
flecs_sparse_set	lib/flecs/include/flecs/private/sparse.h	/^#define flecs_sparse_set(/;"	d
flecs_sparse_set_generation	lib/flecs/flecs.c	/^void flecs_sparse_set_generation($/;"	f	typeref:typename:void
flecs_sparse_set_generation	lib/flecs/src/datastructures/sparse.c	/^void flecs_sparse_set_generation($/;"	f	typeref:typename:void
flecs_sparse_set_id_source	lib/flecs/flecs.c	/^void flecs_sparse_set_id_source($/;"	f	typeref:typename:void
flecs_sparse_set_id_source	lib/flecs/src/datastructures/sparse.c	/^void flecs_sparse_set_id_source($/;"	f	typeref:typename:void
flecs_sparse_set_size	lib/flecs/flecs.c	/^void flecs_sparse_set_size($/;"	f	typeref:typename:void
flecs_sparse_set_size	lib/flecs/src/datastructures/sparse.c	/^void flecs_sparse_set_size($/;"	f	typeref:typename:void
flecs_sparse_size	lib/flecs/flecs.c	/^int32_t flecs_sparse_size($/;"	f	typeref:typename:int32_t
flecs_sparse_size	lib/flecs/src/datastructures/sparse.c	/^int32_t flecs_sparse_size($/;"	f	typeref:typename:int32_t
flecs_src	lib/flecs/meson.build	/^flecs_src = files($/;"	V
flecs_stage_deinit	lib/flecs/flecs.c	/^void flecs_stage_deinit($/;"	f	typeref:typename:void
flecs_stage_deinit	lib/flecs/src/stage.c	/^void flecs_stage_deinit($/;"	f	typeref:typename:void
flecs_stage_from_readonly_world	lib/flecs/flecs.c	/^const ecs_stage_t* flecs_stage_from_readonly_world($/;"	f	typeref:typename:const ecs_stage_t *
flecs_stage_from_readonly_world	lib/flecs/src/world.c	/^const ecs_stage_t* flecs_stage_from_readonly_world($/;"	f	typeref:typename:const ecs_stage_t *
flecs_stage_from_world	lib/flecs/flecs.c	/^ecs_stage_t *flecs_stage_from_world($/;"	f	typeref:typename:ecs_stage_t *
flecs_stage_from_world	lib/flecs/src/world.c	/^ecs_stage_t *flecs_stage_from_world($/;"	f	typeref:typename:ecs_stage_t *
flecs_stage_init	lib/flecs/flecs.c	/^void flecs_stage_init($/;"	f	typeref:typename:void
flecs_stage_init	lib/flecs/src/stage.c	/^void flecs_stage_init($/;"	f	typeref:typename:void
flecs_stage_merge_post_frame	lib/flecs/flecs.c	/^void flecs_stage_merge_post_frame($/;"	f	typeref:typename:void
flecs_stage_merge_post_frame	lib/flecs/src/stage.c	/^void flecs_stage_merge_post_frame($/;"	f	typeref:typename:void
flecs_static	cmake-build-debug/Makefile	/^flecs_static: cmake_check_build_system$/;"	t
flecs_static	cmake-build-debug/lib/flecs/Makefile	/^flecs_static: lib\/flecs\/CMakeFiles\/flecs_static.dir\/rule$/;"	t
flecs_static	cmake-build-release/Makefile	/^flecs_static: cmake_check_build_system$/;"	t
flecs_static	cmake-build-release/lib/flecs/Makefile	/^flecs_static: lib\/flecs\/CMakeFiles\/flecs_static.dir\/rule$/;"	t
flecs_static	lib/flecs/CMakeLists.txt	/^    add_library(flecs_static STATIC ${INC} ${SRC})$/;"	t
flecs_static/fast	cmake-build-debug/Makefile	/^flecs_static\/fast:$/;"	t
flecs_static/fast	cmake-build-debug/lib/flecs/Makefile	/^flecs_static\/fast:$/;"	t
flecs_static/fast	cmake-build-release/Makefile	/^flecs_static\/fast:$/;"	t
flecs_static/fast	cmake-build-release/lib/flecs/Makefile	/^flecs_static\/fast:$/;"	t
flecs_static_assert	lib/flecs/flecs.h	/^#define flecs_static_assert(/;"	d
flecs_static_assert	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^#define flecs_static_assert(/;"	d
flecs_static_assert	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^#define flecs_static_assert(/;"	d	file:
flecs_string_hash	lib/flecs/flecs.c	/^uint64_t flecs_string_hash($/;"	f	typeref:typename:uint64_t
flecs_string_hash	lib/flecs/src/misc.c	/^uint64_t flecs_string_hash($/;"	f	typeref:typename:uint64_t
flecs_suspend_readonly	lib/flecs/flecs.c	/^ecs_world_t* flecs_suspend_readonly($/;"	f	typeref:typename:ecs_world_t *
flecs_suspend_readonly	lib/flecs/src/world.c	/^ecs_world_t* flecs_suspend_readonly($/;"	f	typeref:typename:ecs_world_t *
flecs_switch_add	lib/flecs/flecs.c	/^void flecs_switch_add($/;"	f	typeref:typename:void
flecs_switch_add	lib/flecs/src/datastructures/switch_list.c	/^void flecs_switch_add($/;"	f	typeref:typename:void
flecs_switch_addn	lib/flecs/flecs.c	/^void flecs_switch_addn($/;"	f	typeref:typename:void
flecs_switch_addn	lib/flecs/src/datastructures/switch_list.c	/^void flecs_switch_addn($/;"	f	typeref:typename:void
flecs_switch_case_count	lib/flecs/flecs.c	/^int32_t flecs_switch_case_count($/;"	f	typeref:typename:int32_t
flecs_switch_case_count	lib/flecs/src/datastructures/switch_list.c	/^int32_t flecs_switch_case_count($/;"	f	typeref:typename:int32_t
flecs_switch_ensure	lib/flecs/flecs.c	/^void flecs_switch_ensure($/;"	f	typeref:typename:void
flecs_switch_ensure	lib/flecs/src/datastructures/switch_list.c	/^void flecs_switch_ensure($/;"	f	typeref:typename:void
flecs_switch_first	lib/flecs/flecs.c	/^int32_t flecs_switch_first($/;"	f	typeref:typename:int32_t
flecs_switch_first	lib/flecs/src/datastructures/switch_list.c	/^int32_t flecs_switch_first($/;"	f	typeref:typename:int32_t
flecs_switch_free	lib/flecs/flecs.c	/^void flecs_switch_free($/;"	f	typeref:typename:void
flecs_switch_free	lib/flecs/src/datastructures/switch_list.c	/^void flecs_switch_free($/;"	f	typeref:typename:void
flecs_switch_get	lib/flecs/flecs.c	/^uint64_t flecs_switch_get($/;"	f	typeref:typename:uint64_t
flecs_switch_get	lib/flecs/src/datastructures/switch_list.c	/^uint64_t flecs_switch_get($/;"	f	typeref:typename:uint64_t
flecs_switch_header_t	lib/flecs/flecs.c	/^typedef struct flecs_switch_header_t {$/;"	s	file:
flecs_switch_header_t	lib/flecs/flecs.c	/^} flecs_switch_header_t;$/;"	t	typeref:struct:flecs_switch_header_t	file:
flecs_switch_header_t	lib/flecs/include/flecs/private/switch_list.h	/^typedef struct flecs_switch_header_t {$/;"	s
flecs_switch_header_t	lib/flecs/include/flecs/private/switch_list.h	/^} flecs_switch_header_t;$/;"	t	typeref:struct:flecs_switch_header_t
flecs_switch_new	lib/flecs/flecs.c	/^ecs_switch_t* flecs_switch_new($/;"	f	typeref:typename:ecs_switch_t *
flecs_switch_new	lib/flecs/src/datastructures/switch_list.c	/^ecs_switch_t* flecs_switch_new($/;"	f	typeref:typename:ecs_switch_t *
flecs_switch_next	lib/flecs/flecs.c	/^int32_t flecs_switch_next($/;"	f	typeref:typename:int32_t
flecs_switch_next	lib/flecs/src/datastructures/switch_list.c	/^int32_t flecs_switch_next($/;"	f	typeref:typename:int32_t
flecs_switch_node_t	lib/flecs/flecs.c	/^typedef struct flecs_switch_node_t {$/;"	s	file:
flecs_switch_node_t	lib/flecs/flecs.c	/^} flecs_switch_node_t;$/;"	t	typeref:struct:flecs_switch_node_t	file:
flecs_switch_node_t	lib/flecs/include/flecs/private/switch_list.h	/^typedef struct flecs_switch_node_t {$/;"	s
flecs_switch_node_t	lib/flecs/include/flecs/private/switch_list.h	/^} flecs_switch_node_t;$/;"	t	typeref:struct:flecs_switch_node_t
flecs_switch_remove	lib/flecs/flecs.c	/^void flecs_switch_remove($/;"	f	typeref:typename:void
flecs_switch_remove	lib/flecs/src/datastructures/switch_list.c	/^void flecs_switch_remove($/;"	f	typeref:typename:void
flecs_switch_set	lib/flecs/flecs.c	/^void flecs_switch_set($/;"	f	typeref:typename:void
flecs_switch_set	lib/flecs/src/datastructures/switch_list.c	/^void flecs_switch_set($/;"	f	typeref:typename:void
flecs_switch_set_count	lib/flecs/flecs.c	/^void flecs_switch_set_count($/;"	f	typeref:typename:void
flecs_switch_set_count	lib/flecs/src/datastructures/switch_list.c	/^void flecs_switch_set_count($/;"	f	typeref:typename:void
flecs_switch_swap	lib/flecs/flecs.c	/^void flecs_switch_swap($/;"	f	typeref:typename:void
flecs_switch_swap	lib/flecs/src/datastructures/switch_list.c	/^void flecs_switch_swap($/;"	f	typeref:typename:void
flecs_switch_values	lib/flecs/flecs.c	/^ecs_vector_t* flecs_switch_values($/;"	f	typeref:typename:ecs_vector_t *
flecs_switch_values	lib/flecs/src/datastructures/switch_list.c	/^ecs_vector_t* flecs_switch_values($/;"	f	typeref:typename:ecs_vector_t *
flecs_table_append	lib/flecs/flecs.c	/^int32_t flecs_table_append($/;"	f	typeref:typename:int32_t
flecs_table_append	lib/flecs/src/table.c	/^int32_t flecs_table_append($/;"	f	typeref:typename:int32_t
flecs_table_appendn	lib/flecs/flecs.c	/^int32_t flecs_table_appendn($/;"	f	typeref:typename:int32_t
flecs_table_appendn	lib/flecs/src/table.c	/^int32_t flecs_table_appendn($/;"	f	typeref:typename:int32_t
flecs_table_cache_empty_iter	lib/flecs/flecs.c	/^bool flecs_table_cache_empty_iter($/;"	f	typeref:typename:bool
flecs_table_cache_empty_iter	lib/flecs/src/table_cache.c	/^bool flecs_table_cache_empty_iter($/;"	f	typeref:typename:bool
flecs_table_cache_iter	lib/flecs/flecs.c	/^bool flecs_table_cache_iter($/;"	f	typeref:typename:bool
flecs_table_cache_iter	lib/flecs/src/table_cache.c	/^bool flecs_table_cache_iter($/;"	f	typeref:typename:bool
flecs_table_cache_next	lib/flecs/flecs.c	/^#define flecs_table_cache_next(/;"	d	file:
flecs_table_cache_next	lib/flecs/src/private_api.h	/^#define flecs_table_cache_next(/;"	d
flecs_table_claim	lib/flecs/flecs.c	/^void flecs_table_claim($/;"	f	typeref:typename:void
flecs_table_claim	lib/flecs/src/table.c	/^void flecs_table_claim($/;"	f	typeref:typename:void
flecs_table_clear_data	lib/flecs/flecs.c	/^void flecs_table_clear_data($/;"	f	typeref:typename:void
flecs_table_clear_data	lib/flecs/src/table.c	/^void flecs_table_clear_data($/;"	f	typeref:typename:void
flecs_table_clear_edges	lib/flecs/flecs.c	/^void flecs_table_clear_edges($/;"	f	typeref:typename:void
flecs_table_clear_edges	lib/flecs/src/table_graph.c	/^void flecs_table_clear_edges($/;"	f	typeref:typename:void
flecs_table_clear_entities	lib/flecs/flecs.c	/^void flecs_table_clear_entities($/;"	f	typeref:typename:void
flecs_table_clear_entities	lib/flecs/src/table.c	/^void flecs_table_clear_entities($/;"	f	typeref:typename:void
flecs_table_clear_entities_silent	lib/flecs/flecs.c	/^void flecs_table_clear_entities_silent($/;"	f	typeref:typename:void
flecs_table_clear_entities_silent	lib/flecs/src/table.c	/^void flecs_table_clear_entities_silent($/;"	f	typeref:typename:void
flecs_table_data_count	lib/flecs/flecs.c	/^int32_t flecs_table_data_count($/;"	f	typeref:typename:int32_t
flecs_table_data_count	lib/flecs/src/table.c	/^int32_t flecs_table_data_count($/;"	f	typeref:typename:int32_t
flecs_table_delete	lib/flecs/flecs.c	/^void flecs_table_delete($/;"	f	typeref:typename:void
flecs_table_delete	lib/flecs/src/table.c	/^void flecs_table_delete($/;"	f	typeref:typename:void
flecs_table_delete_entities	lib/flecs/flecs.c	/^void flecs_table_delete_entities($/;"	f	typeref:typename:void
flecs_table_delete_entities	lib/flecs/src/table.c	/^void flecs_table_delete_entities($/;"	f	typeref:typename:void
flecs_table_find_or_create	lib/flecs/flecs.c	/^ecs_table_t* flecs_table_find_or_create($/;"	f	typeref:typename:ecs_table_t *
flecs_table_find_or_create	lib/flecs/src/table_graph.c	/^ecs_table_t* flecs_table_find_or_create($/;"	f	typeref:typename:ecs_table_t *
flecs_table_free	lib/flecs/flecs.c	/^void flecs_table_free($/;"	f	typeref:typename:void
flecs_table_free	lib/flecs/src/table.c	/^void flecs_table_free($/;"	f	typeref:typename:void
flecs_table_free_type	lib/flecs/flecs.c	/^void flecs_table_free_type($/;"	f	typeref:typename:void
flecs_table_free_type	lib/flecs/src/table.c	/^void flecs_table_free_type($/;"	f	typeref:typename:void
flecs_table_get_dirty_state	lib/flecs/flecs.c	/^int32_t* flecs_table_get_dirty_state($/;"	f	typeref:typename:int32_t *
flecs_table_get_dirty_state	lib/flecs/src/table.c	/^int32_t* flecs_table_get_dirty_state($/;"	f	typeref:typename:int32_t *
flecs_table_get_monitor	lib/flecs/flecs.c	/^int32_t* flecs_table_get_monitor($/;"	f	typeref:typename:int32_t *
flecs_table_get_monitor	lib/flecs/src/table.c	/^int32_t* flecs_table_get_monitor($/;"	f	typeref:typename:int32_t *
flecs_table_hashmap_init	lib/flecs/flecs.c	/^void flecs_table_hashmap_init(ecs_hashmap_t *hm) {$/;"	f	typeref:typename:void
flecs_table_hashmap_init	lib/flecs/src/table_graph.c	/^void flecs_table_hashmap_init(ecs_hashmap_t *hm) {$/;"	f	typeref:typename:void
flecs_table_init_data	lib/flecs/flecs.c	/^void flecs_table_init_data($/;"	f	typeref:typename:void
flecs_table_init_data	lib/flecs/src/table.c	/^void flecs_table_init_data($/;"	f	typeref:typename:void
flecs_table_iter	lib/flecs/flecs.c	/^ecs_id_record_t* flecs_table_iter($/;"	f	typeref:typename:ecs_id_record_t *
flecs_table_iter	lib/flecs/src/world.c	/^ecs_id_record_t* flecs_table_iter($/;"	f	typeref:typename:ecs_id_record_t *
flecs_table_mark_dirty	lib/flecs/flecs.c	/^void flecs_table_mark_dirty($/;"	f	typeref:typename:void
flecs_table_mark_dirty	lib/flecs/src/table.c	/^void flecs_table_mark_dirty($/;"	f	typeref:typename:void
flecs_table_merge	lib/flecs/flecs.c	/^void flecs_table_merge($/;"	f	typeref:typename:void
flecs_table_merge	lib/flecs/src/table.c	/^void flecs_table_merge($/;"	f	typeref:typename:void
flecs_table_move	lib/flecs/flecs.c	/^void flecs_table_move($/;"	f	typeref:typename:void
flecs_table_move	lib/flecs/src/table.c	/^void flecs_table_move($/;"	f	typeref:typename:void
flecs_table_notify	lib/flecs/flecs.c	/^void flecs_table_notify($/;"	f	typeref:typename:void
flecs_table_notify	lib/flecs/src/table.c	/^void flecs_table_notify($/;"	f	typeref:typename:void
flecs_table_records_register	lib/flecs/flecs.c	/^void flecs_table_records_register($/;"	f	typeref:typename:void	file:
flecs_table_records_register	lib/flecs/src/table_graph.c	/^void flecs_table_records_register($/;"	f	typeref:typename:void	file:
flecs_table_records_unregister	lib/flecs/flecs.c	/^void flecs_table_records_unregister($/;"	f	typeref:typename:void
flecs_table_records_unregister	lib/flecs/src/table_graph.c	/^void flecs_table_records_unregister($/;"	f	typeref:typename:void
flecs_table_records_update_empty	lib/flecs/flecs.c	/^bool flecs_table_records_update_empty($/;"	f	typeref:typename:bool
flecs_table_records_update_empty	lib/flecs/src/table_graph.c	/^bool flecs_table_records_update_empty($/;"	f	typeref:typename:bool
flecs_table_release	lib/flecs/flecs.c	/^bool flecs_table_release($/;"	f	typeref:typename:bool
flecs_table_release	lib/flecs/src/table.c	/^bool flecs_table_release($/;"	f	typeref:typename:bool
flecs_table_remove_actions	lib/flecs/flecs.c	/^void flecs_table_remove_actions($/;"	f	typeref:typename:void
flecs_table_remove_actions	lib/flecs/src/table.c	/^void flecs_table_remove_actions($/;"	f	typeref:typename:void
flecs_table_replace_data	lib/flecs/flecs.c	/^void flecs_table_replace_data($/;"	f	typeref:typename:void
flecs_table_replace_data	lib/flecs/src/table.c	/^void flecs_table_replace_data($/;"	f	typeref:typename:void
flecs_table_reset	lib/flecs/flecs.c	/^void flecs_table_reset($/;"	f	typeref:typename:void
flecs_table_reset	lib/flecs/src/table.c	/^void flecs_table_reset($/;"	f	typeref:typename:void
flecs_table_set_empty	lib/flecs/flecs.c	/^void flecs_table_set_empty($/;"	f	typeref:typename:void
flecs_table_set_empty	lib/flecs/src/world.c	/^void flecs_table_set_empty($/;"	f	typeref:typename:void
flecs_table_set_size	lib/flecs/flecs.c	/^void flecs_table_set_size($/;"	f	typeref:typename:void
flecs_table_set_size	lib/flecs/src/table.c	/^void flecs_table_set_size($/;"	f	typeref:typename:void
flecs_table_swap	lib/flecs/flecs.c	/^void flecs_table_swap($/;"	f	typeref:typename:void
flecs_table_swap	lib/flecs/src/table.c	/^void flecs_table_swap($/;"	f	typeref:typename:void
flecs_table_switch_from_case	lib/flecs/flecs.c	/^int32_t flecs_table_switch_from_case($/;"	f	typeref:typename:int32_t
flecs_table_switch_from_case	lib/flecs/src/table_graph.c	/^int32_t flecs_table_switch_from_case($/;"	f	typeref:typename:int32_t
flecs_table_traverse_add	lib/flecs/flecs.c	/^ecs_table_t* flecs_table_traverse_add($/;"	f	typeref:typename:ecs_table_t *
flecs_table_traverse_add	lib/flecs/src/table_graph.c	/^ecs_table_t* flecs_table_traverse_add($/;"	f	typeref:typename:ecs_table_t *
flecs_table_traverse_remove	lib/flecs/flecs.c	/^ecs_table_t* flecs_table_traverse_remove($/;"	f	typeref:typename:ecs_table_t *
flecs_table_traverse_remove	lib/flecs/src/table_graph.c	/^ecs_table_t* flecs_table_traverse_remove($/;"	f	typeref:typename:ecs_table_t *
flecs_term_match_table	lib/flecs/flecs.c	/^bool flecs_term_match_table($/;"	f	typeref:typename:bool
flecs_term_match_table	lib/flecs/src/filter.c	/^bool flecs_term_match_table($/;"	f	typeref:typename:bool
flecs_trigger_fini	lib/flecs/flecs.c	/^void flecs_trigger_fini($/;"	f	typeref:typename:void
flecs_trigger_fini	lib/flecs/src/trigger.c	/^void flecs_trigger_fini($/;"	f	typeref:typename:void
flecs_triggers_notify	lib/flecs/flecs.c	/^void flecs_triggers_notify($/;"	f	typeref:typename:void
flecs_triggers_notify	lib/flecs/src/trigger.c	/^void flecs_triggers_notify($/;"	f	typeref:typename:void
flecs_type_to_ids	lib/flecs/flecs.c	/^ecs_ids_t flecs_type_to_ids($/;"	f	typeref:typename:ecs_ids_t
flecs_type_to_ids	lib/flecs/src/entity.c	/^ecs_ids_t flecs_type_to_ids($/;"	f	typeref:typename:ecs_ids_t
flecs_unit_validate	lib/flecs/flecs.c	/^bool flecs_unit_validate($/;"	f	typeref:typename:bool
flecs_unit_validate	lib/flecs/src/addons/meta/meta.c	/^bool flecs_unit_validate($/;"	f	typeref:typename:bool
flecs_uto	lib/flecs/flecs.c	/^#define flecs_uto(/;"	d	file:
flecs_uto	lib/flecs/src/private_api.h	/^#define flecs_uto(/;"	d
flecs_utosize	lib/flecs/flecs.c	/^#define flecs_utosize(/;"	d	file:
flecs_utosize	lib/flecs/src/private_api.h	/^#define flecs_utosize(/;"	d
flint	cmake-build-debug/Makefile	/^flint: cmake_check_build_system$/;"	t
flint	cmake-build-debug/lib/libflint/Makefile	/^flint: lib\/libflint\/CMakeFiles\/flint.dir\/rule$/;"	t
flint	cmake-build-release/Makefile	/^flint: cmake_check_build_system$/;"	t
flint	cmake-build-release/lib/libflint/Makefile	/^flint: lib\/libflint\/CMakeFiles\/flint.dir\/rule$/;"	t
flint	lib/libflint/CMakeLists.txt	/^add_library(flint ${SOURCES})$/;"	t
flint	lib/libflint/CMakeLists.txt	/^project(flint C)$/;"	p
flint/fast	cmake-build-debug/Makefile	/^flint\/fast:$/;"	t
flint/fast	cmake-build-debug/lib/libflint/Makefile	/^flint\/fast:$/;"	t
flint/fast	cmake-build-release/Makefile	/^flint\/fast:$/;"	t
flint/fast	cmake-build-release/lib/libflint/Makefile	/^flint\/fast:$/;"	t
flowPara7831	lib/uthash/doc/banner.svg	/^         id="flowPara7831">ut     hash<\/flowPara><\/flowRoot>    <rect$/;"	i
flowPara7831	lib/uthash/doc/uthash-mini.svg	/^         id="flowPara7831">ut     hash<\/flowPara><\/flowRoot>    <rect$/;"	i
flowRegion3990	lib/uthash/doc/banner.svg	/^         id="flowRegion3990"><rect$/;"	i
flowRegion3990	lib/uthash/doc/uthash-mini.svg	/^         id="flowRegion3990"><rect$/;"	i
flowRoot3988	lib/uthash/doc/banner.svg	/^       inkscape:export-ydpi="90"><flowRegion$/;"	i
flowRoot3988	lib/uthash/doc/uthash-mini.svg	/^       inkscape:export-ydpi="90"><flowRegion$/;"	i
flush_bulk_new	lib/flecs/flecs.c	/^void flush_bulk_new($/;"	f	typeref:typename:void	file:
flush_bulk_new	lib/flecs/src/entity.c	/^void flush_bulk_new($/;"	f	typeref:typename:void	file:
foo	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    struct Rel { int foo; };$/;"	m	struct:FilterBuilder_2_subsequent_args::Rel	typeref:typename:int	file:
foo	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    struct Rel { int foo; };$/;"	m	struct:QueryBuilder_2_subsequent_args::Rel	typeref:typename:int	file:
foo	lib/flecs/test/cpp_api/src/World.cpp	/^namespace foo {$/;"	n	file:
foo	lib/flecs/test/cpp_api/src/World.cpp	/^struct foo { };$/;"	s	namespace:foo	file:
foo	lib/flecs/test/cpp_api/src/World.cpp	/^struct foo { };$/;"	s	namespace:ns	file:
foo_cache	lib/uthash/tests/lru_cache/cache.c	/^struct foo_cache {$/;"	s	file:
foo_cache_create	lib/uthash/tests/lru_cache/cache.c	/^int foo_cache_create(struct foo_cache **dst, const size_t capacity,$/;"	f	typeref:typename:int
foo_cache_delete	lib/uthash/tests/lru_cache/cache.c	/^int foo_cache_delete(struct foo_cache *cache, int keep_data)$/;"	f	typeref:typename:int
foo_cache_entry	lib/uthash/tests/lru_cache/cache.c	/^struct foo_cache_entry {$/;"	s	file:
foo_cache_insert	lib/uthash/tests/lru_cache/cache.c	/^int foo_cache_insert(struct foo_cache *cache, char *key, void *data)$/;"	f	typeref:typename:int
foo_cache_lookup	lib/uthash/tests/lru_cache/cache.c	/^int foo_cache_lookup(struct foo_cache *cache, char *key, void *result)$/;"	f	typeref:typename:int
for_each_component_monitor	lib/flecs/flecs.c	/^void for_each_component_monitor($/;"	f	typeref:typename:void	file:
for_each_component_monitor	lib/flecs/src/query.c	/^void for_each_component_monitor($/;"	f	typeref:typename:void	file:
for_each_item	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^void for_each_item(flecs::entity container, const Func& func) {$/;"	f	typeref:typename:void
force	lib/flecs/flecs.h	/^struct force {$/;"	s	struct:flecs::units
force	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct force {$/;"	s	struct:flecs::units
found	lib/uthash/tests/hashscan.c	/^static void found(int fd, char* peer_sig, pid_t pid)$/;"	f	typeref:typename:void	file:
fps	lib/flecs/flecs.h	/^    ecs_gauge_t fps;                          \/* Frames per second. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
fps	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t fps;                          \/* Frames per second. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
fps_sleep	lib/flecs/flecs.c	/^    FLECS_FLOAT fps_sleep;       \/* Sleep time to prevent fps overshoot *\/$/;"	m	struct:ecs_world_t	typeref:typename:FLECS_FLOAT	file:
fps_sleep	lib/flecs/src/private_types.h	/^    FLECS_FLOAT fps_sleep;       \/* Sleep time to prevent fps overshoot *\/$/;"	m	struct:ecs_world_t	typeref:typename:FLECS_FLOAT
frag	lib/flecs/flecs.c	/^    ecs_http_fragment_t frag;$/;"	m	struct:__anona642c0050b08	typeref:typename:ecs_http_fragment_t	file:
frag	lib/flecs/src/addons/http.c	/^    ecs_http_fragment_t frag;$/;"	m	struct:__anonc2d932d70308	typeref:typename:ecs_http_fragment_t	file:
frame	lib/flecs/flecs.c	/^    int32_t frame;              \/* Register frame *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
frame	lib/flecs/src/addons/rules.c	/^    int32_t frame;              \/* Register frame *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
frame_action	lib/flecs/flecs.c	/^static ecs_app_frame_action_t frame_action = default_frame_action;$/;"	v	typeref:typename:ecs_app_frame_action_t	file:
frame_action	lib/flecs/src/addons/app.c	/^static ecs_app_frame_action_t frame_action = default_frame_action;$/;"	v	typeref:typename:ecs_app_frame_action_t	file:
frame_begin	lib/flecs/flecs.h	/^    FLECS_FLOAT frame_begin(float delta_time = 0) {$/;"	f	struct:flecs::world	typeref:typename:FLECS_FLOAT
frame_begin	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    FLECS_FLOAT frame_begin(float delta_time = 0) {$/;"	f	struct:flecs::world	typeref:typename:FLECS_FLOAT
frame_count	lib/flecs/flecs.c	/^    int32_t frame_count;        \/* Number of register frames *\/$/;"	m	struct:ecs_rule_t	typeref:typename:int32_t	file:
frame_count	lib/flecs/src/addons/rules.c	/^    int32_t frame_count;        \/* Number of register frames *\/$/;"	m	struct:ecs_rule_t	typeref:typename:int32_t	file:
frame_count_total	lib/flecs/flecs.h	/^    ecs_counter_t frame_count_total;          \/* Number of frames processed. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
frame_count_total	lib/flecs/flecs.h	/^    int32_t frame_count_total;        \/* Total number of frames *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:int32_t
frame_count_total	lib/flecs/include/flecs.h	/^    int32_t frame_count_total;        \/* Total number of frames *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:int32_t
frame_count_total	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t frame_count_total;          \/* Number of frames processed. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
frame_end	lib/flecs/flecs.h	/^    void frame_end() {$/;"	f	struct:flecs::world	typeref:typename:void
frame_end	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void frame_end() {$/;"	f	struct:flecs::world	typeref:typename:void
frame_offset	lib/flecs/flecs.h	/^    int32_t frame_offset;         \/* Offset relative to start of iteration *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
frame_offset	lib/flecs/include/flecs/private/api_types.h	/^    int32_t frame_offset;         \/* Offset relative to start of iteration *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
frame_start_time	lib/flecs/flecs.c	/^    ecs_time_t frame_start_time; \/* Timestamp of frame start *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_time_t	file:
frame_start_time	lib/flecs/src/private_types.h	/^    ecs_time_t frame_start_time; \/* Timestamp of frame start *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_time_t
frame_time_total	lib/flecs/flecs.h	/^    FLECS_FLOAT frame_time_total;     \/* Total time spent processing a frame *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
frame_time_total	lib/flecs/flecs.h	/^    ecs_counter_t frame_time_total;           \/* Time spent processing a frame. Smaller than wo/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
frame_time_total	lib/flecs/include/flecs.h	/^    FLECS_FLOAT frame_time_total;     \/* Total time spent processing a frame *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
frame_time_total	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t frame_time_total;           \/* Time spent processing a frame. Smaller than wo/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
free	lib/uthash/tests/test6.c	/^#define free /;"	d	file:
free_	lib/flecs/flecs.h	/^    ecs_os_api_free_t free_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_free_t
free_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_free_t free_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_free_t
free_cb	lib/uthash/tests/lru_cache/cache.c	/^	void (*free_cb) (void *element);\/**<Callback function to free cache entries *\/$/;"	m	struct:foo_cache	typeref:typename:void (*)(void * element)	file:
free_cnt	lib/uthash/tests/test92.c	/^static int free_cnt = 0;$/;"	v	typeref:typename:int	file:
free_id_record	lib/flecs/flecs.c	/^bool free_id_record($/;"	f	typeref:typename:bool	file:
free_id_record	lib/flecs/src/world.c	/^bool free_id_record($/;"	f	typeref:typename:bool	file:
free_obj	lib/flecs/flecs.h	/^template<class Ty> inline void free_obj(Ty* _ptr) { $/;"	f	namespace:flecs::_	typeref:typename:void
free_obj	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^template<class Ty> inline void free_obj(Ty* _ptr) { $/;"	f	namespace:flecs::_	typeref:typename:void
free_random_entry	lib/uthash/tests/lru_cache/main.c	/^void free_random_entry(void *entry)$/;"	f	typeref:typename:void
free_value	lib/flecs/flecs.c	/^void free_value($/;"	f	typeref:typename:void	file:
free_value	lib/flecs/src/entity.c	/^void free_value($/;"	f	typeref:typename:void	file:
from	lib/flecs/flecs.c	/^    ecs_table_t *from;       \/* Edge source table *\/$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_table_t *	file:
from	lib/flecs/src/private_types.h	/^    ecs_table_t *from;       \/* Edge source table *\/$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_table_t *
from_int	lib/flecs/flecs.h	/^    static constexpr E from_int() {$/;"	f	struct:flecs::_::enum_type	typeref:typename:E
from_int	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static constexpr E from_int() {$/;"	f	struct:flecs::_::enum_type	typeref:typename:E
function_traits	lib/flecs/flecs.h	/^struct function_traits$/;"	s	namespace:flecs::_
function_traits	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits$/;"	s	namespace:flecs::_
function_traits_defs	lib/flecs/flecs.h	/^struct function_traits_defs$/;"	s	namespace:flecs::_
function_traits_defs	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_defs$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl {$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(*)(Args...)>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(Args...)>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const volatile&&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const volatile&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const volatile>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const&&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) volatile&&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) volatile&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) volatile>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/flecs.h	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...)>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl {$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(*)(Args...)>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(Args...)>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const volatile&&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const volatile&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const volatile>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const&&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) const>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) volatile&&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) volatile&>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...) volatile>$/;"	s	namespace:flecs::_
function_traits_impl	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_impl<ReturnType(ClassType::*)(Args...)>$/;"	s	namespace:flecs::_
function_traits_no_cv	lib/flecs/flecs.h	/^struct function_traits_no_cv$/;"	s	namespace:flecs::_
function_traits_no_cv	lib/flecs/flecs.h	/^struct function_traits_no_cv<T, decltype((void)&T::operator())>$/;"	s	namespace:flecs::_
function_traits_no_cv	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_no_cv$/;"	s	namespace:flecs::_
function_traits_no_cv	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct function_traits_no_cv<T, decltype((void)&T::operator())>$/;"	s	namespace:flecs::_
g	lib/flecs/test/api/include/api.h	/^    float g;$/;"	m	struct:Color	typeref:typename:float
g	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t g[7];$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_bool_t[7]	file:
g2335	lib/uthash/doc/banner.svg	/^       inkscape:export-ydpi="90">$/;"	i
g7716	lib/uthash/doc/banner.svg	/^         transform="scale(-1.2)">$/;"	i
g7808	lib/uthash/doc/banner.svg	/^       inkscape:export-ydpi="90">$/;"	i
g7808	lib/uthash/doc/uthash-mini.svg	/^       inkscape:export-ydpi="90">$/;"	i
g_child	lib/flecs/test/api/src/SingleThreadStaging.c	/^static ecs_entity_t g_child = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
g_parent	lib/flecs/test/api/src/SingleThreadStaging.c	/^static ecs_entity_t g_parent = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
gamescreen_handle_input	src/screens/gamescreen.c	/^void gamescreen_handle_input(struct GameState *gs) {$/;"	f	typeref:typename:void
gamescreen_render	src/screens/gamescreen.c	/^void gamescreen_render(struct GameState *gs) {$/;"	f	typeref:typename:void
gamescreen_update	src/screens/gamescreen.c	/^void gamescreen_update(struct GameState *gs) {$/;"	f	typeref:typename:void
generate_random_entry	lib/uthash/tests/lru_cache/main.c	/^int generate_random_entry(struct key_record **entry)$/;"	f	typeref:typename:int
generate_random_string	lib/uthash/tests/lru_cache/main.c	/^int generate_random_string(char **dst, const size_t len)$/;"	f	typeref:typename:int
generate_test	src/mapping/generators/test.c	/^void generate_test(struct Map *map) {$/;"	f	typeref:typename:void
get	lib/flecs/flecs.h	/^    T& get(int32_t index) {$/;"	f	class:flecs::vector	typeref:typename:T &
get	lib/flecs/flecs.h	/^    const A* get() const {$/;"	f	struct:flecs::entity_view	typeref:typename:const A *
get	lib/flecs/flecs.h	/^    const R* get(flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:const R *
get	lib/flecs/flecs.h	/^    const T* get() const {$/;"	f	struct:flecs::entity_view	typeref:typename:const T *
get	lib/flecs/flecs.h	/^    const T* get() {$/;"	f	struct:flecs::ref	typeref:typename:const T *
get	lib/flecs/flecs.h	/^    const void* get(flecs::entity_t relation, flecs::entity_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:const void *
get	lib/flecs/flecs.h	/^    const void* get(flecs::id_t comp) const {$/;"	f	struct:flecs::entity_view	typeref:typename:const void *
get	lib/flecs/flecs.h	/^    flecs::id get(int32_t index) {$/;"	f	struct:flecs::type_base	typeref:typename:flecs::id
get	lib/flecs/flecs.h	/^    static enum_type<E>& get() {$/;"	f	struct:flecs::_::enum_type	typeref:typename:enum_type<E> &
get	lib/flecs/flecs.h	/^const T* entity_view::get() const {$/;"	f	class:flecs::entity_view	typeref:typename:const T *
get	lib/flecs/flecs.h	/^const T* world::get() const {$/;"	f	class:flecs::world	typeref:typename:const T *
get	lib/flecs/flecs.h	/^inline bool entity_view::get(const Func& func) const {$/;"	f	class:flecs::entity_view	typeref:typename:bool
get	lib/flecs/flecs.h	/^void world::get(const Func& func) {$/;"	f	class:flecs::world	typeref:typename:void
get	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    const A* get() const {$/;"	f	struct:flecs::entity_view	typeref:typename:const A *
get	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    const R* get(flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:const R *
get	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    const T* get() const {$/;"	f	struct:flecs::entity_view	typeref:typename:const T *
get	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    const void* get(flecs::entity_t relation, flecs::entity_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:const void *
get	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    const void* get(flecs::id_t comp) const {$/;"	f	struct:flecs::entity_view	typeref:typename:const void *
get	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^const T* world::get() const {$/;"	f	class:flecs::world	typeref:typename:const T *
get	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^void world::get(const Func& func) {$/;"	f	class:flecs::world	typeref:typename:void
get	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^const T* entity_view::get() const {$/;"	f	class:flecs::entity_view	typeref:typename:const T *
get	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline bool entity_view::get(const Func& func) const {$/;"	f	class:flecs::entity_view	typeref:typename:bool
get	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^    const T* get() {$/;"	f	struct:flecs::ref	typeref:typename:const T *
get	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    flecs::id get(int32_t index) {$/;"	f	struct:flecs::type_base	typeref:typename:flecs::id
get	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static enum_type<E>& get() {$/;"	f	struct:flecs::_::enum_type	typeref:typename:enum_type<E> &
get	lib/flecs/include/flecs/private/vector.h	/^    T& get(int32_t index) {$/;"	f	class:flecs::vector	typeref:typename:T &
get16bits	lib/uthash/include/uthash.h	/^#define get16bits(/;"	d
get16bits	lib/uthash/src/uthash.h	/^#define get16bits(/;"	d
get_actual_event	lib/flecs/flecs.c	/^ecs_entity_t get_actual_event($/;"	f	typeref:typename:ecs_entity_t	file:
get_actual_event	lib/flecs/src/trigger.c	/^ecs_entity_t get_actual_event($/;"	f	typeref:typename:ecs_entity_t	file:
get_alignment	lib/flecs/flecs.c	/^ecs_size_t get_alignment($/;"	f	typeref:typename:ecs_size_t	file:
get_alignment	lib/flecs/src/addons/meta/cursor.c	/^ecs_size_t get_alignment($/;"	f	typeref:typename:ecs_size_t	file:
get_alive	lib/flecs/flecs.h	/^inline flecs::entity world::get_alive(flecs::entity_t e) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
get_alive	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity world::get_alive(flecs::entity_t e) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
get_any_write_state	lib/flecs/flecs.c	/^int32_t get_any_write_state($/;"	f	typeref:typename:int32_t	file:
get_any_write_state	lib/flecs/src/addons/pipeline/pipeline.c	/^int32_t get_any_write_state($/;"	f	typeref:typename:int32_t	file:
get_base_component	lib/flecs/flecs.c	/^void* get_base_component($/;"	f	typeref:typename:void *	file:
get_base_component	lib/flecs/src/entity.c	/^void* get_base_component($/;"	f	typeref:typename:void *	file:
get_bool	lib/flecs/flecs.h	/^    bool get_bool() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:bool
get_bool	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    bool get_bool() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:bool
get_brief	lib/flecs/flecs.h	/^inline const char* get_brief(const flecs::entity_view& e) {$/;"	f	namespace:flecs::doc	typeref:typename:const char *
get_brief	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline const char* get_brief(const flecs::entity_view& e) {$/;"	f	namespace:flecs::doc	typeref:typename:const char *
get_bucket	lib/flecs/flecs.c	/^ecs_bucket_t* get_bucket($/;"	f	typeref:typename:ecs_bucket_t *	file:
get_bucket	lib/flecs/src/datastructures/map.c	/^ecs_bucket_t* get_bucket($/;"	f	typeref:typename:ecs_bucket_t *	file:
get_bucket_count	lib/flecs/flecs.c	/^int32_t get_bucket_count($/;"	f	typeref:typename:int32_t	file:
get_bucket_count	lib/flecs/src/datastructures/map.c	/^int32_t get_bucket_count($/;"	f	typeref:typename:int32_t	file:
get_bucket_index	lib/flecs/flecs.c	/^int32_t get_bucket_index($/;"	f	typeref:typename:int32_t	file:
get_bucket_index	lib/flecs/src/datastructures/map.c	/^int32_t get_bucket_index($/;"	f	typeref:typename:int32_t	file:
get_bucket_shift	lib/flecs/flecs.c	/^uint8_t get_bucket_shift ($/;"	f	typeref:typename:uint8_t	file:
get_bucket_shift	lib/flecs/src/datastructures/map.c	/^uint8_t get_bucket_shift ($/;"	f	typeref:typename:uint8_t	file:
get_builtin	lib/flecs/flecs.c	/^ecs_entity_t get_builtin($/;"	f	typeref:typename:ecs_entity_t	file:
get_builtin	lib/flecs/src/hierarchy.c	/^ecs_entity_t get_builtin($/;"	f	typeref:typename:ecs_entity_t	file:
get_c_info	lib/flecs/flecs.c	/^const ecs_type_info_t *get_c_info($/;"	f	typeref:typename:const ecs_type_info_t *	file:
get_c_info	lib/flecs/src/entity.c	/^const ecs_type_info_t *get_c_info($/;"	f	typeref:typename:const ecs_type_info_t *	file:
get_case	lib/flecs/flecs.h	/^inline flecs::entity entity_view::get_case() const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_case	lib/flecs/flecs.h	/^inline flecs::entity entity_view::get_case(const flecs::type& sw) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_case	lib/flecs/flecs.h	/^inline flecs::entity entity_view::get_case(flecs::id_t sw) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_case	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::get_case() const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_case	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::get_case(const flecs::type& sw) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_case	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::get_case(flecs::id_t sw) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_char	lib/flecs/flecs.h	/^    char get_char() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:char
get_char	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    char get_char() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:char
get_chunk	lib/flecs/flecs.c	/^chunk_t* get_chunk($/;"	f	typeref:typename:chunk_t *	file:
get_chunk	lib/flecs/src/datastructures/sparse.c	/^chunk_t* get_chunk($/;"	f	typeref:typename:chunk_t *	file:
get_color	src/colors.c	/^color_t *get_color(struct DColor *colors, char *name) {$/;"	f	typeref:typename:color_t *
get_comp_and_src	lib/flecs/flecs.c	/^int get_comp_and_src($/;"	f	typeref:typename:int	file:
get_comp_and_src	lib/flecs/src/query.c	/^int get_comp_and_src($/;"	f	typeref:typename:int	file:
get_component	lib/flecs/flecs.c	/^void* get_component($/;"	f	typeref:typename:void *	file:
get_component	lib/flecs/src/entity.c	/^void* get_component($/;"	f	typeref:typename:void *	file:
get_component_action_flags	lib/flecs/flecs.c	/^ecs_flags32_t get_component_action_flags($/;"	f	typeref:typename:ecs_flags32_t	file:
get_component_action_flags	lib/flecs/src/table.c	/^ecs_flags32_t get_component_action_flags($/;"	f	typeref:typename:ecs_flags32_t	file:
get_component_index	lib/flecs/flecs.c	/^int32_t get_component_index($/;"	f	typeref:typename:int32_t	file:
get_component_index	lib/flecs/src/query.c	/^int32_t get_component_index($/;"	f	typeref:typename:int32_t	file:
get_component_ptr	lib/flecs/flecs.c	/^const EcsComponent* get_component_ptr($/;"	f	typeref:typename:const EcsComponent *	file:
get_component_ptr	lib/flecs/src/addons/meta/cursor.c	/^const EcsComponent* get_component_ptr($/;"	f	typeref:typename:const EcsComponent *	file:
get_component_w_index	lib/flecs/flecs.c	/^void* get_component_w_index($/;"	f	typeref:typename:void *	file:
get_component_w_index	lib/flecs/src/entity.c	/^void* get_component_w_index($/;"	f	typeref:typename:void *	file:
get_container	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^flecs::entity get_container(flecs::entity container) {$/;"	f	typeref:typename:flecs::entity
get_context	lib/flecs/flecs.h	/^    void* get_context() const {$/;"	f	struct:flecs::world	typeref:typename:void *
get_context	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void* get_context() const {$/;"	f	struct:flecs::world	typeref:typename:void *
get_depth_from_term	lib/flecs/flecs.c	/^int32_t get_depth_from_term($/;"	f	typeref:typename:int32_t	file:
get_depth_from_term	lib/flecs/src/addons/rules.c	/^int32_t get_depth_from_term($/;"	f	typeref:typename:int32_t	file:
get_depth_from_var	lib/flecs/flecs.c	/^int32_t get_depth_from_var($/;"	f	typeref:typename:int32_t	file:
get_depth_from_var	lib/flecs/src/addons/rules.c	/^int32_t get_depth_from_var($/;"	f	typeref:typename:int32_t	file:
get_detail	lib/flecs/flecs.h	/^inline const char* get_detail(const flecs::entity_view& e) {$/;"	f	namespace:flecs::doc	typeref:typename:const char *
get_detail	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline const char* get_detail(const flecs::entity_view& e) {$/;"	f	namespace:flecs::doc	typeref:typename:const char *
get_dirty_state	lib/flecs/flecs.c	/^void get_dirty_state($/;"	f	typeref:typename:void	file:
get_dirty_state	lib/flecs/src/query.c	/^void get_dirty_state($/;"	f	typeref:typename:void	file:
get_elem_count	lib/flecs/flecs.c	/^int32_t get_elem_count($/;"	f	typeref:typename:int32_t	file:
get_elem_count	lib/flecs/src/addons/meta/cursor.c	/^int32_t get_elem_count($/;"	f	typeref:typename:int32_t	file:
get_entity	lib/flecs/flecs.h	/^inline flecs::entity cursor::get_entity() const {$/;"	f	class:flecs::meta::cursor	typeref:typename:flecs::entity
get_entity	lib/flecs/include/flecs/addons/cpp/mixins/meta/impl.hpp	/^inline flecs::entity cursor::get_entity() const {$/;"	f	class:flecs::meta::cursor	typeref:typename:flecs::entity
get_float	lib/flecs/flecs.h	/^    double get_float() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:double
get_float	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    double get_float() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:double
get_from_bucket	lib/flecs/flecs.c	/^void* get_from_bucket($/;"	f	typeref:typename:void *	file:
get_from_bucket	lib/flecs/src/datastructures/map.c	/^void* get_from_bucket($/;"	f	typeref:typename:void *	file:
get_generation	lib/flecs/flecs.h	/^inline uint32_t get_generation(flecs::entity_t e) {$/;"	f	namespace:flecs	typeref:typename:uint32_t
get_generation	lib/flecs/include/flecs/addons/cpp/world.hpp	/^inline uint32_t get_generation(flecs::entity_t e) {$/;"	f	namespace:flecs	typeref:typename:uint32_t
get_group	lib/flecs/flecs.c	/^ecs_query_table_list_t* get_group($/;"	f	typeref:typename:ecs_query_table_list_t *	file:
get_group	lib/flecs/src/query.c	/^ecs_query_table_list_t* get_group($/;"	f	typeref:typename:ecs_query_table_list_t *	file:
get_header	lib/flecs/flecs.c	/^flecs_switch_header_t *get_header($/;"	f	typeref:typename:flecs_switch_header_t *	file:
get_header	lib/flecs/src/datastructures/switch_list.c	/^flecs_switch_header_t *get_header($/;"	f	typeref:typename:flecs_switch_header_t *	file:
get_id	lib/flecs/flecs.c	/^uint64_t get_id($/;"	f	typeref:typename:uint64_t	file:
get_id	lib/flecs/src/datastructures/sparse.c	/^uint64_t get_id($/;"	f	typeref:typename:uint64_t	file:
get_identifier	lib/flecs/flecs.c	/^const char* get_identifier($/;"	f	typeref:typename:const char *	file:
get_identifier	lib/flecs/src/entity.c	/^const char* get_identifier($/;"	f	typeref:typename:const char *	file:
get_input	lib/libflint/src/lfinput.c	/^char *get_input(const char *path) {$/;"	f	typeref:typename:char *
get_int	lib/flecs/flecs.h	/^    int64_t get_int() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int64_t
get_int	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int64_t get_int() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int64_t
get_ints	lib/libflint/src/lfinput.c	/^int *get_ints(const char *path, size_t *sz) {$/;"	f	typeref:typename:int *
get_iter	lib/flecs/flecs.h	/^    ecs_iter_t get_iter() const override {$/;"	f	struct:flecs::filter	typeref:typename:ecs_iter_t
get_iter	lib/flecs/flecs.h	/^    ecs_iter_t get_iter() const override {$/;"	f	struct:flecs::query	typeref:typename:ecs_iter_t
get_iter	lib/flecs/flecs.h	/^    ecs_iter_t get_iter() const override {$/;"	f	struct:flecs::rule	typeref:typename:ecs_iter_t
get_iter	lib/flecs/flecs.h	/^    ecs_iter_t get_iter() const {$/;"	f	struct:flecs::iter_iterable	typeref:typename:ecs_iter_t
get_iter	lib/flecs/flecs.h	/^    ecs_iter_t get_iter() const {$/;"	f	struct:flecs::page_iterable	typeref:typename:ecs_iter_t
get_iter	lib/flecs/flecs.h	/^    ecs_iter_t get_iter() const {$/;"	f	struct:flecs::worker_iterable	typeref:typename:ecs_iter_t
get_iter	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    ecs_iter_t get_iter() const override {$/;"	f	struct:flecs::filter	typeref:typename:ecs_iter_t
get_iter	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    ecs_iter_t get_iter() const override {$/;"	f	struct:flecs::query	typeref:typename:ecs_iter_t
get_iter	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    ecs_iter_t get_iter() const override {$/;"	f	struct:flecs::rule	typeref:typename:ecs_iter_t
get_iter	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_t get_iter() const {$/;"	f	struct:flecs::iter_iterable	typeref:typename:ecs_iter_t
get_iter	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_t get_iter() const {$/;"	f	struct:flecs::page_iterable	typeref:typename:ecs_iter_t
get_iter	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_t get_iter() const {$/;"	f	struct:flecs::worker_iterable	typeref:typename:ecs_iter_t
get_lines	lib/libflint/src/lfinput.c	/^char **get_lines(const char *path, size_t *lsz) {$/;"	f	typeref:typename:char **
get_link	lib/flecs/flecs.h	/^inline const char* get_link(const flecs::entity_view& e) {$/;"	f	namespace:flecs::doc	typeref:typename:const char *
get_link	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline const char* get_link(const flecs::entity_view& e) {$/;"	f	namespace:flecs::doc	typeref:typename:const char *
get_match_monitor	lib/flecs/flecs.c	/^bool get_match_monitor($/;"	f	typeref:typename:bool	file:
get_match_monitor	lib/flecs/src/query.c	/^bool get_match_monitor($/;"	f	typeref:typename:bool	file:
get_member	lib/flecs/flecs.h	/^    flecs::string_view get_member() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:flecs::string_view
get_member	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    flecs::string_view get_member() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:flecs::string_view
get_mixin	lib/flecs/flecs.c	/^void* get_mixin($/;"	f	typeref:typename:void *	file:
get_mixin	lib/flecs/src/poly.c	/^void* get_mixin($/;"	f	typeref:typename:void *	file:
get_most_specific_var	lib/flecs/flecs.c	/^ecs_rule_var_t *get_most_specific_var($/;"	f	typeref:typename:ecs_rule_var_t *	file:
get_most_specific_var	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t *get_most_specific_var($/;"	f	typeref:typename:ecs_rule_var_t *	file:
get_mut	lib/flecs/flecs.h	/^    Relation* get_mut(entity_t object, bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:Relation *
get_mut	lib/flecs/flecs.h	/^    T* get_mut(bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:T *
get_mut	lib/flecs/flecs.h	/^    void* get_mut(entity_t comp, bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:void *
get_mut	lib/flecs/flecs.h	/^    void* get_mut(entity_t relation, entity_t object, bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:void *
get_mut	lib/flecs/flecs.h	/^T* world::get_mut() const {$/;"	f	class:flecs::world	typeref:typename:T *
get_mut	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    Relation* get_mut(entity_t object, bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:Relation *
get_mut	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    T* get_mut(bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:T *
get_mut	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    void* get_mut(entity_t comp, bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:void *
get_mut	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    void* get_mut(entity_t relation, entity_t object, bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:void *
get_mut	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^T* world::get_mut() const {$/;"	f	class:flecs::world	typeref:typename:T *
get_mut_ptrs	lib/flecs/flecs.h	/^    static bool get_mut_ptrs(world_t *world, ecs_entity_t e, ArrayType& ptrs) {$/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:bool
get_mut_ptrs	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static bool get_mut_ptrs(world_t *world, ecs_entity_t e, ArrayType& ptrs) {$/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:bool
get_mut_w_object	lib/flecs/flecs.h	/^    Object* get_mut_w_object(entity_t relation, bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:Object *
get_mut_w_object	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    Object* get_mut_w_object(entity_t relation, bool *is_added = nullptr) const {$/;"	f	struct:flecs::entity	typeref:typename:Object *
get_mutable	lib/flecs/flecs.c	/^void *get_mutable($/;"	f	typeref:typename:void *	file:
get_mutable	lib/flecs/src/entity.c	/^void *get_mutable($/;"	f	typeref:typename:void *	file:
get_name	lib/flecs/flecs.h	/^inline const char* get_name(const flecs::entity_view& e) {$/;"	f	namespace:flecs::doc	typeref:typename:const char *
get_name	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline const char* get_name(const flecs::entity_view& e) {$/;"	f	namespace:flecs::doc	typeref:typename:const char *
get_node_list	lib/flecs/flecs.c	/^ecs_query_table_list_t* get_node_list($/;"	f	typeref:typename:ecs_query_table_list_t *	file:
get_node_list	lib/flecs/src/query.c	/^ecs_query_table_list_t* get_node_list($/;"	f	typeref:typename:ecs_query_table_list_t *	file:
get_object	lib/flecs/flecs.h	/^    flecs::entity get_object() {$/;"	f	struct:flecs::term	typeref:typename:flecs::entity
get_object	lib/flecs/flecs.h	/^inline flecs::entity entity_view::get_object($/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_object	lib/flecs/flecs.h	/^inline flecs::entity entity_view::get_object(int32_t index) const $/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_object	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::get_object($/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_object	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::get_object(int32_t index) const $/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_object	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    flecs::entity get_object() {$/;"	f	struct:flecs::term	typeref:typename:flecs::entity
get_object_for	lib/flecs/flecs.h	/^inline flecs::entity entity_view::get_object_for($/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_object_for	lib/flecs/flecs.h	/^inline flecs::entity entity_view::get_object_for(flecs::entity_t relation) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_object_for	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::get_object_for($/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_object_for	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::get_object_for(flecs::entity_t relation) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
get_op	lib/flecs/flecs.c	/^ecs_meta_type_op_t* get_op($/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
get_op	lib/flecs/src/addons/meta/cursor.c	/^ecs_meta_type_op_t* get_op($/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
get_or_create_chunk	lib/flecs/flecs.c	/^chunk_t* get_or_create_chunk($/;"	f	typeref:typename:chunk_t *	file:
get_or_create_chunk	lib/flecs/src/datastructures/sparse.c	/^chunk_t* get_or_create_chunk($/;"	f	typeref:typename:chunk_t *	file:
get_pair_count	lib/flecs/flecs.c	/^int32_t get_pair_count($/;"	f	typeref:typename:int32_t	file:
get_pair_count	lib/flecs/src/query.c	/^int32_t get_pair_count($/;"	f	typeref:typename:int32_t	file:
get_pair_index	lib/flecs/flecs.c	/^int32_t get_pair_index($/;"	f	typeref:typename:int32_t	file:
get_pair_index	lib/flecs/src/query.c	/^int32_t get_pair_index($/;"	f	typeref:typename:int32_t	file:
get_parent_from_path	lib/flecs/flecs.c	/^ecs_entity_t get_parent_from_path($/;"	f	typeref:typename:ecs_entity_t	file:
get_parent_from_path	lib/flecs/src/hierarchy.c	/^ecs_entity_t get_parent_from_path($/;"	f	typeref:typename:ecs_entity_t	file:
get_pipeline	lib/flecs/flecs.h	/^inline flecs::pipeline world::get_pipeline() const {$/;"	f	class:flecs::world	typeref:typename:flecs::pipeline
get_pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline flecs::pipeline world::get_pipeline() const {$/;"	f	class:flecs::world	typeref:typename:flecs::pipeline
get_prev_scope	lib/flecs/flecs.c	/^ecs_meta_scope_t* get_prev_scope($/;"	f	typeref:typename:ecs_meta_scope_t *	file:
get_prev_scope	lib/flecs/src/addons/meta/cursor.c	/^ecs_meta_scope_t* get_prev_scope($/;"	f	typeref:typename:ecs_meta_scope_t *	file:
get_ptr	lib/flecs/flecs.c	/^ecs_meta_type_op_t* get_ptr($/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
get_ptr	lib/flecs/flecs.h	/^    void* get_ptr() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:void *
get_ptr	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    void* get_ptr() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:void *
get_ptr	lib/flecs/src/addons/meta/cursor.c	/^ecs_meta_type_op_t* get_ptr($/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
get_ptrs	lib/flecs/flecs.h	/^    static bool get_ptrs(world_t *world, ecs_record_t *r, ecs_table_t *table,$/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:bool
get_ptrs	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static bool get_ptrs(world_t *world, ecs_record_t *r, ecs_table_t *table,$/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:bool
get_ref	lib/flecs/flecs.h	/^    ref<T> get_ref() const {$/;"	f	struct:flecs::entity	typeref:typename:ref<T>
get_ref	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    ref<T> get_ref() const {$/;"	f	struct:flecs::entity	typeref:typename:ref<T>
get_register_frame	lib/flecs/flecs.c	/^ecs_rule_reg_t* get_register_frame($/;"	f	typeref:typename:ecs_rule_reg_t *	file:
get_register_frame	lib/flecs/src/addons/rules.c	/^ecs_rule_reg_t* get_register_frame($/;"	f	typeref:typename:ecs_rule_reg_t *	file:
get_registers	lib/flecs/flecs.c	/^ecs_rule_reg_t* get_registers($/;"	f	typeref:typename:ecs_rule_reg_t *	file:
get_registers	lib/flecs/src/addons/rules.c	/^ecs_rule_reg_t* get_registers($/;"	f	typeref:typename:ecs_rule_reg_t *	file:
get_row	lib/flecs/flecs.h	/^    T get_row() {$/;"	f	struct:flecs::_::each_column	typeref:typename:T
get_row	lib/flecs/flecs.h	/^    T& get_row() {$/;"	f	struct:flecs::_::each_column	typeref:typename:T &
get_row	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    T get_row() {$/;"	f	struct:flecs::_::each_column	typeref:typename:T
get_row	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    T& get_row() {$/;"	f	struct:flecs::_::each_column	typeref:typename:T &
get_scope	lib/flecs/flecs.c	/^ecs_meta_scope_t* get_scope($/;"	f	typeref:typename:ecs_meta_scope_t *	file:
get_scope	lib/flecs/flecs.h	/^inline flecs::entity world::get_scope() const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
get_scope	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity world::get_scope() const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
get_scope	lib/flecs/src/addons/meta/cursor.c	/^ecs_meta_scope_t* get_scope($/;"	f	typeref:typename:ecs_meta_scope_t *	file:
get_size	lib/flecs/flecs.c	/^ecs_size_t get_size($/;"	f	typeref:typename:ecs_size_t	file:
get_size	lib/flecs/src/addons/meta/cursor.c	/^ecs_size_t get_size($/;"	f	typeref:typename:ecs_size_t	file:
get_sparse	lib/flecs/flecs.c	/^void* get_sparse($/;"	f	typeref:typename:void *	file:
get_sparse	lib/flecs/src/datastructures/sparse.c	/^void* get_sparse($/;"	f	typeref:typename:void *	file:
get_stage	lib/flecs/flecs.h	/^    flecs::world get_stage(int32_t stage_id) const {$/;"	f	struct:flecs::world	typeref:typename:flecs::world
get_stage	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    flecs::world get_stage(int32_t stage_id) const {$/;"	f	struct:flecs::world	typeref:typename:flecs::world
get_stage_count	lib/flecs/flecs.h	/^    int32_t get_stage_count() const {$/;"	f	struct:flecs::world	typeref:typename:int32_t
get_stage_count	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    int32_t get_stage_count() const {$/;"	f	struct:flecs::world	typeref:typename:int32_t
get_stage_id	lib/flecs/flecs.h	/^    int32_t get_stage_id() const {$/;"	f	struct:flecs::world	typeref:typename:int32_t
get_stage_id	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    int32_t get_stage_id() const {$/;"	f	struct:flecs::world	typeref:typename:int32_t
get_string	lib/flecs/flecs.h	/^    const char *get_string() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:const char *
get_string	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    const char *get_string() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:const char *
get_subject	lib/flecs/flecs.h	/^    flecs::entity get_subject() {$/;"	f	struct:flecs::term	typeref:typename:flecs::entity
get_subject	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    flecs::entity get_subject() {$/;"	f	struct:flecs::term	typeref:typename:flecs::entity
get_system_stats	lib/flecs/flecs.c	/^ecs_system_stats_t* get_system_stats($/;"	f	typeref:typename:ecs_system_stats_t *	file:
get_system_stats	lib/flecs/src/addons/stats.c	/^ecs_system_stats_t* get_system_stats($/;"	f	typeref:typename:ecs_system_stats_t *	file:
get_target_fps	lib/flecs/flecs.h	/^inline FLECS_FLOAT world::get_target_fps() const {$/;"	f	class:flecs::world	typeref:typename:FLECS_FLOAT
get_target_fps	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline FLECS_FLOAT world::get_target_fps() const {$/;"	f	class:flecs::world	typeref:typename:FLECS_FLOAT
get_term	lib/flecs/flecs.h	/^    flecs::column<T> get_term(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<T>
get_term	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::column<T> get_term(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<T>
get_term_type	lib/flecs/flecs.c	/^ecs_type_t get_term_type($/;"	f	typeref:typename:ecs_type_t	file:
get_term_type	lib/flecs/src/query.c	/^ecs_type_t get_term_type($/;"	f	typeref:typename:ecs_type_t	file:
get_threads	lib/flecs/flecs.h	/^inline int32_t world::get_threads() const {$/;"	f	class:flecs::world	typeref:typename:int32_t
get_threads	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline int32_t world::get_threads() const {$/;"	f	class:flecs::world	typeref:typename:int32_t
get_tick	lib/flecs/flecs.h	/^inline int32_t world::get_tick() const {$/;"	f	class:flecs::world	typeref:typename:int32_t
get_tick	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline int32_t world::get_tick() const {$/;"	f	class:flecs::world	typeref:typename:int32_t
get_time_	lib/flecs/flecs.h	/^    ecs_os_api_get_time_t get_time_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_get_time_t
get_time_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_get_time_t get_time_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_get_time_t
get_time_scale	lib/flecs/flecs.h	/^inline FLECS_FLOAT world::get_time_scale() const {$/;"	f	class:flecs::world	typeref:typename:FLECS_FLOAT
get_time_scale	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline FLECS_FLOAT world::get_time_scale() const {$/;"	f	class:flecs::world	typeref:typename:FLECS_FLOAT
get_triggers_for_event	lib/flecs/flecs.c	/^ecs_map_t* get_triggers_for_event($/;"	f	typeref:typename:ecs_map_t *	file:
get_triggers_for_event	lib/flecs/src/trigger.c	/^ecs_map_t* get_triggers_for_event($/;"	f	typeref:typename:ecs_map_t *	file:
get_triggers_for_id	lib/flecs/flecs.c	/^ecs_event_id_record_t* get_triggers_for_id($/;"	f	typeref:typename:ecs_event_id_record_t *	file:
get_triggers_for_id	lib/flecs/src/trigger.c	/^ecs_event_id_record_t* get_triggers_for_id($/;"	f	typeref:typename:ecs_event_id_record_t *	file:
get_type	lib/flecs/flecs.h	/^inline flecs::entity cursor::get_type() const {$/;"	f	class:flecs::meta::cursor	typeref:typename:flecs::entity
get_type	lib/flecs/include/flecs/addons/cpp/mixins/meta/impl.hpp	/^inline flecs::entity cursor::get_type() const {$/;"	f	class:flecs::meta::cursor	typeref:typename:flecs::entity
get_uint	lib/flecs/flecs.h	/^    uint64_t get_uint() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:uint64_t
get_uint	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    uint64_t get_uint() const {$/;"	f	struct:flecs::meta::cursor	typeref:typename:uint64_t
get_unit	lib/flecs/flecs.h	/^inline flecs::entity cursor::get_unit() const {$/;"	f	class:flecs::meta::cursor	typeref:typename:flecs::entity
get_unit	lib/flecs/include/flecs/addons/cpp/mixins/meta/impl.hpp	/^inline flecs::entity cursor::get_unit() const {$/;"	f	class:flecs::meta::cursor	typeref:typename:flecs::entity
get_unsafe_term	lib/flecs/flecs.h	/^    flecs::unsafe_column get_unsafe_term(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::unsafe_column
get_unsafe_term	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::unsafe_column get_unsafe_term(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::unsafe_column
get_var	lib/flecs/flecs.h	/^inline flecs::entity iter::get_var(const char *name) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
get_var	lib/flecs/flecs.h	/^inline flecs::entity iter::get_var(int var_id) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
get_var	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::entity iter::get_var(const char *name) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
get_var	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::entity iter::get_var(int var_id) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
get_var_name	lib/flecs/flecs.c	/^const char* get_var_name(const char *name) {$/;"	f	typeref:typename:const char *	file:
get_var_name	lib/flecs/src/addons/rules.c	/^const char* get_var_name(const char *name) {$/;"	f	typeref:typename:const char *	file:
get_variable	lib/flecs/flecs.c	/^ecs_rule_var_t* get_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
get_variable	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* get_variable($/;"	f	typeref:typename:ecs_rule_var_t *	file:
get_variable_depth	lib/flecs/flecs.c	/^int32_t get_variable_depth($/;"	f	typeref:typename:int32_t	file:
get_variable_depth	lib/flecs/src/addons/rules.c	/^int32_t get_variable_depth($/;"	f	typeref:typename:int32_t	file:
get_w_object	lib/flecs/flecs.h	/^    const O* get_w_object() const {$/;"	f	struct:flecs::entity_view	typeref:typename:const O *
get_w_object	lib/flecs/flecs.h	/^    const O* get_w_object(flecs::entity_t relation) const {$/;"	f	struct:flecs::entity_view	typeref:typename:const O *
get_w_object	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    const O* get_w_object() const {$/;"	f	struct:flecs::entity_view	typeref:typename:const O *
get_w_object	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    const O* get_w_object(flecs::entity_t relation) const {$/;"	f	struct:flecs::entity_view	typeref:typename:const O *
get_world	lib/flecs/flecs.h	/^    flecs::world get_world() const {$/;"	f	struct:flecs::world	typeref:typename:flecs::world
get_world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    flecs::world get_world() const {$/;"	f	struct:flecs::world	typeref:typename:flecs::world
get_write_state	lib/flecs/flecs.c	/^int32_t get_write_state($/;"	f	typeref:typename:int32_t	file:
get_write_state	lib/flecs/src/addons/pipeline/pipeline.c	/^int32_t get_write_state($/;"	f	typeref:typename:int32_t	file:
getkeys	lib/uthash/tests/hashscan.c	/^int getkeys=0;$/;"	v	typeref:typename:int
getl	lib/uthash/tests/example.c	/^const char *getl(const char *prompt)$/;"	f	typeref:typename:const char *
gettimeofday	lib/uthash/tests/keystat.c	/^#define gettimeofday /;"	d	file:
graph_edge_free	lib/flecs/flecs.c	/^void graph_edge_free($/;"	f	typeref:typename:void	file:
graph_edge_free	lib/flecs/src/table_graph.c	/^void graph_edge_free($/;"	f	typeref:typename:void	file:
graph_edge_new	lib/flecs/flecs.c	/^ecs_graph_edge_t* graph_edge_new($/;"	f	typeref:typename:ecs_graph_edge_t *	file:
graph_edge_new	lib/flecs/src/table_graph.c	/^ecs_graph_edge_t* graph_edge_new($/;"	f	typeref:typename:ecs_graph_edge_t *	file:
group_by	lib/flecs/flecs.c	/^    ecs_group_by_action_t group_by;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_group_by_action_t	file:
group_by	lib/flecs/flecs.h	/^    Base& group_by(flecs::entity_t component, uint64_t(*rank)(flecs::world_t*, flecs::type_t typ/;"	f	struct:flecs::query_builder_i	typeref:typename:Base &
group_by	lib/flecs/flecs.h	/^    Base& group_by(uint64_t(*rank)(flecs::world_t*, flecs::type_t type, flecs::id_t id, void* ct/;"	f	struct:flecs::query_builder_i	typeref:typename:Base &
group_by	lib/flecs/flecs.h	/^    ecs_group_by_action_t group_by;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_group_by_action_t
group_by	lib/flecs/include/flecs.h	/^    ecs_group_by_action_t group_by;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_group_by_action_t
group_by	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    Base& group_by(flecs::entity_t component, uint64_t(*rank)(flecs::world_t*, flecs::type_t typ/;"	f	struct:flecs::query_builder_i	typeref:typename:Base &
group_by	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    Base& group_by(uint64_t(*rank)(flecs::world_t*, flecs::type_t type, flecs::id_t id, void* ct/;"	f	struct:flecs::query_builder_i	typeref:typename:Base &
group_by	lib/flecs/src/private_types.h	/^    ecs_group_by_action_t group_by;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_group_by_action_t
group_by_cascade	lib/flecs/flecs.c	/^uint64_t group_by_cascade($/;"	f	typeref:typename:uint64_t	file:
group_by_cascade	lib/flecs/src/query.c	/^uint64_t group_by_cascade($/;"	f	typeref:typename:uint64_t	file:
group_by_ctx	lib/flecs/flecs.c	/^    void *group_by_ctx;$/;"	m	struct:ecs_query_t	typeref:typename:void *	file:
group_by_ctx	lib/flecs/flecs.h	/^    void *group_by_ctx;$/;"	m	struct:ecs_query_desc_t	typeref:typename:void *
group_by_ctx	lib/flecs/include/flecs.h	/^    void *group_by_ctx;$/;"	m	struct:ecs_query_desc_t	typeref:typename:void *
group_by_ctx	lib/flecs/src/private_types.h	/^    void *group_by_ctx;$/;"	m	struct:ecs_query_t	typeref:typename:void *
group_by_ctx_free	lib/flecs/flecs.c	/^    ecs_ctx_free_t group_by_ctx_free;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_ctx_free_t	file:
group_by_ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t group_by_ctx_free;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_ctx_free_t
group_by_ctx_free	lib/flecs/include/flecs.h	/^    ecs_ctx_free_t group_by_ctx_free;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_ctx_free_t
group_by_ctx_free	lib/flecs/src/private_types.h	/^    ecs_ctx_free_t group_by_ctx_free;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_ctx_free_t
group_by_first_id	lib/flecs/test/api/src/Query.c	/^uint64_t group_by_first_id($/;"	f	typeref:typename:uint64_t	file:
group_by_first_id	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^uint64_t group_by_first_id($/;"	f	typeref:typename:uint64_t
group_by_first_id_negated	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^uint64_t group_by_first_id_negated($/;"	f	typeref:typename:uint64_t
group_by_id	lib/flecs/flecs.c	/^    ecs_entity_t group_by_id;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_entity_t	file:
group_by_id	lib/flecs/flecs.h	/^    ecs_id_t group_by_id;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_id_t
group_by_id	lib/flecs/include/flecs.h	/^    ecs_id_t group_by_id;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_id_t
group_by_id	lib/flecs/src/private_types.h	/^    ecs_entity_t group_by_id;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_entity_t
group_by_phase	lib/flecs/flecs.c	/^uint64_t group_by_phase($/;"	f	typeref:typename:uint64_t	file:
group_by_phase	lib/flecs/src/addons/pipeline/pipeline.c	/^uint64_t group_by_phase($/;"	f	typeref:typename:uint64_t	file:
group_id	lib/flecs/flecs.c	/^    uint64_t group_id;        \/* Value used to organize tables in groups *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:uint64_t	file:
group_id	lib/flecs/src/private_types.h	/^    uint64_t group_id;        \/* Value used to organize tables in groups *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:uint64_t
groups	lib/flecs/flecs.c	/^    ecs_map_t groups;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_map_t	file:
groups	lib/flecs/src/private_types.h	/^    ecs_map_t groups;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_map_t
grow_column	lib/flecs/flecs.c	/^void grow_column($/;"	f	typeref:typename:void	file:
grow_column	lib/flecs/src/table.c	/^void grow_column($/;"	f	typeref:typename:void	file:
grow_data	lib/flecs/flecs.c	/^int32_t grow_data($/;"	f	typeref:typename:int32_t	file:
grow_data	lib/flecs/src/table.c	/^int32_t grow_data($/;"	f	typeref:typename:int32_t	file:
grow_dense	lib/flecs/flecs.c	/^void grow_dense($/;"	f	typeref:typename:void	file:
grow_dense	lib/flecs/src/datastructures/sparse.c	/^void grow_dense($/;"	f	typeref:typename:void	file:
h	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t h[8];$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_bool_t[8]	file:
handle_request	lib/flecs/flecs.c	/^void handle_request($/;"	f	typeref:typename:void	file:
handle_request	lib/flecs/src/addons/http.c	/^void handle_request($/;"	f	typeref:typename:void	file:
has	lib/flecs/flecs.h	/^    bool has() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/flecs.h	/^    bool has() {$/;"	f	struct:flecs::type_base	typeref:typename:bool
has	lib/flecs/flecs.h	/^    bool has(E value) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/flecs.h	/^    bool has(flecs::id_t e) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/flecs.h	/^    bool has(flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/flecs.h	/^    bool has(flecs::id_t relation, flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/flecs.h	/^    bool has(id_t id) {$/;"	f	struct:flecs::type_base	typeref:typename:bool
has	lib/flecs/flecs.h	/^    bool has(id_t relation, id_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:bool
has	lib/flecs/flecs.h	/^bool world::has() const {$/;"	f	class:flecs::world	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has(E value) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has(flecs::id_t e) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has(flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has(flecs::id_t relation, flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^bool world::has() const {$/;"	f	class:flecs::world	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    bool has() {$/;"	f	struct:flecs::type_base	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    bool has(id_t id) {$/;"	f	struct:flecs::type_base	typeref:typename:bool
has	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    bool has(id_t relation, id_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:bool
has_case	lib/flecs/flecs.h	/^    bool has_case() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has_case	lib/flecs/flecs.h	/^    bool has_case(flecs::id_t sw_case) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has_case	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has_case() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has_case	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has_case(flecs::id_t sw_case) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has_cloned	lib/flecs/test/api/src/Prefab.c	/^static bool has_cloned = false;$/;"	v	typeref:typename:bool	file:
has_component	lib/flecs/flecs.c	/^bool has_component($/;"	f	typeref:typename:bool	file:
has_component	lib/flecs/src/table.c	/^bool has_component($/;"	f	typeref:typename:bool	file:
has_flecs_ctor	lib/flecs/flecs.h	/^struct has_flecs_ctor {$/;"	s	namespace:flecs
has_flecs_ctor	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^struct has_flecs_ctor {$/;"	s	namespace:flecs
has_in	lib/flecs/flecs.c	/^    bool has_in, has_out;       \/* Keep track of whether operation uses input$/;"	m	struct:ecs_rule_op_t	typeref:typename:bool	file:
has_in	lib/flecs/src/addons/rules.c	/^    bool has_in, has_out;       \/* Keep track of whether operation uses input$/;"	m	struct:ecs_rule_op_t	typeref:typename:bool	file:
has_module	lib/flecs/flecs.h	/^    bool has_module() const {$/;"	f	struct:flecs::iter	typeref:typename:bool
has_module	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    bool has_module() const {$/;"	f	struct:flecs::iter	typeref:typename:bool
has_out	lib/flecs/flecs.c	/^    bool has_in, has_out;       \/* Keep track of whether operation uses input$/;"	m	struct:ecs_rule_op_t	typeref:typename:bool	file:
has_out	lib/flecs/src/addons/rules.c	/^    bool has_in, has_out;       \/* Keep track of whether operation uses input$/;"	m	struct:ecs_rule_op_t	typeref:typename:bool	file:
has_pairs	lib/flecs/flecs.c	/^bool has_pairs($/;"	f	typeref:typename:bool	file:
has_pairs	lib/flecs/src/query.c	/^bool has_pairs($/;"	f	typeref:typename:bool	file:
has_ran	lib/flecs/test/api/src/MultiThread.c	/^static bool has_ran = false;$/;"	v	typeref:typename:bool	file:
has_refs	lib/flecs/flecs.c	/^bool has_refs($/;"	f	typeref:typename:bool	file:
has_refs	lib/flecs/src/query.c	/^bool has_refs($/;"	f	typeref:typename:bool	file:
has_relation	lib/flecs/flecs.h	/^    bool has_relation(flecs::id_t relation) const {$/;"	f	struct:flecs::id	typeref:typename:bool
has_relation	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    bool has_relation(flecs::id_t relation) const {$/;"	f	struct:flecs::id	typeref:typename:bool
has_role	lib/flecs/flecs.h	/^    bool has_role() const {$/;"	f	struct:flecs::id	typeref:typename:bool
has_role	lib/flecs/flecs.h	/^    bool has_role(flecs::id_t role) const {$/;"	f	struct:flecs::id	typeref:typename:bool
has_role	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    bool has_role() const {$/;"	f	struct:flecs::id	typeref:typename:bool
has_role	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    bool has_role(flecs::id_t role) const {$/;"	f	struct:flecs::id	typeref:typename:bool
has_shared	lib/flecs/flecs.h	/^    bool has_shared;              \/* Iterator may set this when iterator has shared terms *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
has_shared	lib/flecs/include/flecs/private/api_types.h	/^    bool has_shared;              \/* Iterator may set this when iterator has shared terms *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
has_switch	lib/flecs/flecs.h	/^    bool has_switch() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has_switch	lib/flecs/flecs.h	/^inline bool entity_view::has_switch(const flecs::type& type) const {$/;"	f	class:flecs::entity_view	typeref:typename:bool
has_switch	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has_switch() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has_switch	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline bool entity_view::has_switch(const flecs::type& type) const {$/;"	f	class:flecs::entity_view	typeref:typename:bool
has_w_object	lib/flecs/flecs.h	/^    bool has_w_object(flecs::id_t relation) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
has_w_object	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool has_w_object(flecs::id_t relation) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
hash	lib/flecs/flecs.c	/^    uint64_t hash;$/;"	m	struct:ecs_hashed_string_t	typeref:typename:uint64_t	file:
hash	lib/flecs/flecs.h	/^    ecs_hash_value_action_t hash;$/;"	m	struct:__anona642c00a0308	typeref:typename:ecs_hash_value_action_t
hash	lib/flecs/flecs.h	/^    uint64_t hash;$/;"	m	struct:EcsIdentifier	typeref:typename:uint64_t
hash	lib/flecs/flecs.h	/^    uint64_t hash;$/;"	m	struct:__anona642c00a0508	typeref:typename:uint64_t
hash	lib/flecs/include/flecs.h	/^    uint64_t hash;$/;"	m	struct:EcsIdentifier	typeref:typename:uint64_t
hash	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_hash_value_action_t hash;$/;"	m	struct:__anonceb012f80208	typeref:typename:ecs_hash_value_action_t
hash	lib/flecs/include/flecs/private/hashmap.h	/^    uint64_t hash;$/;"	m	struct:__anonceb012f80408	typeref:typename:uint64_t
hash	lib/flecs/src/private_types.h	/^    uint64_t hash;$/;"	m	struct:ecs_hashed_string_t	typeref:typename:uint64_t
hash	lib/flecs/test/collections/src/Map.c	/^struct elem { int hash; char *value; } elems[] = {$/;"	m	struct:elem	typeref:typename:int	file:
hash_chain_len_histogram	lib/uthash/tests/keystat.c	/^static void hash_chain_len_histogram(const UT_hash_table *tbl)$/;"	f	typeref:typename:void	file:
hash_fcns	lib/uthash/tests/hashscan.c	/^const char *hash_fcns[] = {"???","JEN","BER","SFH","SAX","FNV","OAT"};$/;"	v	typeref:typename:const char * []
hashlittle2	lib/flecs/flecs.c	/^void hashlittle2( $/;"	f	typeref:typename:void	file:
hashlittle2	lib/flecs/src/datastructures/hash.c	/^void hashlittle2( $/;"	f	typeref:typename:void	file:
hashscan	lib/uthash/tests/Makefile	/^hashscan : $(HASHDIR)\/uthash.h$/;"	t
hashv	lib/uthash/include/uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle	typeref:typename:unsigned
hashv	lib/uthash/src/uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle	typeref:typename:unsigned
hdr	lib/flecs/flecs.c	/^    ecs_graph_edge_hdr_t hdr;$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_graph_edge_hdr_t	file:
hdr	lib/flecs/flecs.c	/^    ecs_header_t hdr;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_header_t	file:
hdr	lib/flecs/flecs.c	/^    ecs_header_t hdr;$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_header_t	file:
hdr	lib/flecs/flecs.c	/^    ecs_header_t hdr;$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_header_t	file:
hdr	lib/flecs/flecs.c	/^    ecs_header_t hdr;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_header_t	file:
hdr	lib/flecs/flecs.c	/^    ecs_table_cache_hdr_t hdr;       \/* Header for ecs_table_cache_t *\/$/;"	m	struct:ecs_query_table_t	typeref:typename:ecs_table_cache_hdr_t	file:
hdr	lib/flecs/flecs.c	/^    ecs_table_cache_hdr_t hdr;$/;"	m	struct:ecs_table_record_t	typeref:typename:ecs_table_cache_hdr_t	file:
hdr	lib/flecs/flecs.h	/^    ecs_header_t hdr;$/;"	m	struct:ecs_filter_t	typeref:typename:ecs_header_t
hdr	lib/flecs/include/flecs.h	/^    ecs_header_t hdr;$/;"	m	struct:ecs_filter_t	typeref:typename:ecs_header_t
hdr	lib/flecs/src/addons/rules.c	/^    ecs_header_t hdr;$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_header_t	file:
hdr	lib/flecs/src/private_types.h	/^    ecs_graph_edge_hdr_t hdr;$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_graph_edge_hdr_t
hdr	lib/flecs/src/private_types.h	/^    ecs_header_t hdr;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_header_t
hdr	lib/flecs/src/private_types.h	/^    ecs_header_t hdr;$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_header_t
hdr	lib/flecs/src/private_types.h	/^    ecs_header_t hdr;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_header_t
hdr	lib/flecs/src/private_types.h	/^    ecs_table_cache_hdr_t hdr;       \/* Header for ecs_table_cache_t *\/$/;"	m	struct:ecs_query_table_t	typeref:typename:ecs_table_cache_hdr_t
hdr	lib/flecs/src/private_types.h	/^    ecs_table_cache_hdr_t hdr;$/;"	m	struct:ecs_table_record_t	typeref:typename:ecs_table_cache_hdr_t
head	lib/libflint/include/lflinkedlist.h	/^    struct ListNode* head;$/;"	m	struct:__anoncabdecbc0108	typeref:struct:ListNode *
header_buf	lib/flecs/flecs.c	/^    char header_buf[32];$/;"	m	struct:__anona642c0050a08	typeref:typename:char[32]	file:
header_buf	lib/flecs/src/addons/http.c	/^    char header_buf[32];$/;"	m	struct:__anonc2d932d70208	typeref:typename:char[32]	file:
header_buf_append	lib/flecs/flecs.c	/^void header_buf_append($/;"	f	typeref:typename:void	file:
header_buf_append	lib/flecs/src/addons/http.c	/^void header_buf_append($/;"	f	typeref:typename:void	file:
header_buf_ptr	lib/flecs/flecs.c	/^    char *header_buf_ptr;$/;"	m	struct:__anona642c0050a08	typeref:typename:char *	file:
header_buf_ptr	lib/flecs/src/addons/http.c	/^    char *header_buf_ptr;$/;"	m	struct:__anonc2d932d70208	typeref:typename:char *	file:
header_buf_reset	lib/flecs/flecs.c	/^void header_buf_reset($/;"	f	typeref:typename:void	file:
header_buf_reset	lib/flecs/src/addons/http.c	/^void header_buf_reset($/;"	f	typeref:typename:void	file:
header_count	lib/flecs/flecs.c	/^    int32_t header_count;$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t	file:
header_count	lib/flecs/flecs.h	/^    int32_t header_count;$/;"	m	struct:__anona642c00a0a08	typeref:typename:int32_t
header_count	lib/flecs/include/flecs/addons/http.h	/^    int32_t header_count;$/;"	m	struct:__anon12cf63340408	typeref:typename:int32_t
header_count	lib/flecs/src/addons/http.c	/^    int32_t header_count;$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t	file:
header_offsets	lib/flecs/flecs.c	/^    int32_t header_offsets[ECS_HTTP_HEADER_COUNT_MAX];$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t[]	file:
header_offsets	lib/flecs/src/addons/http.c	/^    int32_t header_offsets[ECS_HTTP_HEADER_COUNT_MAX];$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t[]	file:
header_value_offsets	lib/flecs/flecs.c	/^    int32_t header_value_offsets[ECS_HTTP_HEADER_COUNT_MAX];$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t[]	file:
header_value_offsets	lib/flecs/src/addons/http.c	/^    int32_t header_value_offsets[ECS_HTTP_HEADER_COUNT_MAX];$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t[]	file:
header_writable	lib/flecs/flecs.c	/^bool header_writable($/;"	f	typeref:typename:bool	file:
header_writable	lib/flecs/src/addons/http.c	/^bool header_writable($/;"	f	typeref:typename:bool	file:
headers	lib/flecs/flecs.c	/^    flecs_switch_header_t *headers;   \/* Array with headers, indexed by value *\/$/;"	m	struct:ecs_switch_t	typeref:typename:flecs_switch_header_t *	file:
headers	lib/flecs/flecs.h	/^    ecs_http_key_value_t headers[ECS_HTTP_HEADER_COUNT_MAX];$/;"	m	struct:__anona642c00a0a08	typeref:typename:ecs_http_key_value_t[]
headers	lib/flecs/flecs.h	/^    ecs_strbuf_t headers;       \/* default = "" *\/$/;"	m	struct:__anona642c00a0b08	typeref:typename:ecs_strbuf_t
headers	lib/flecs/include/flecs/addons/http.h	/^    ecs_http_key_value_t headers[ECS_HTTP_HEADER_COUNT_MAX];$/;"	m	struct:__anon12cf63340408	typeref:typename:ecs_http_key_value_t[]
headers	lib/flecs/include/flecs/addons/http.h	/^    ecs_strbuf_t headers;       \/* default = "" *\/$/;"	m	struct:__anon12cf63340508	typeref:typename:ecs_strbuf_t
headers	lib/flecs/include/flecs/private/switch_list.h	/^    flecs_switch_header_t *headers;   \/* Array with headers, indexed by value *\/$/;"	m	struct:ecs_switch_t	typeref:typename:flecs_switch_header_t *
height	include/BearLibTerminal.h	/^	int height;$/;"	m	struct:dimensions_t_	typeref:typename:int
height	include/mapping/map.h	/^    int height;$/;"	m	struct:Map	typeref:typename:int
helloworld	lib/flecs/meson.build	/^helloworld_exe = executable('helloworld',$/;"	B
helloworld_exe	lib/flecs/meson.build	/^helloworld_exe = executable('helloworld',$/;"	V
helloworld_inc	lib/flecs/meson.build	/^helloworld_inc = include_directories('examples\/c\/hello_world\/include')$/;"	V
help	cmake-build-debug/Makefile	/^help:$/;"	t
help	cmake-build-debug/lib/flecs/Makefile	/^help:$/;"	t
help	cmake-build-debug/lib/libflint/Makefile	/^help:$/;"	t
help	cmake-build-release/Makefile	/^help:$/;"	t
help	cmake-build-release/lib/flecs/Makefile	/^help:$/;"	t
help	cmake-build-release/lib/libflint/Makefile	/^help:$/;"	t
hex_2_int	lib/flecs/flecs.c	/^char hex_2_int(char a, char b){$/;"	f	typeref:typename:char	file:
hex_2_int	lib/flecs/src/addons/http.c	/^char hex_2_int(char a, char b){$/;"	f	typeref:typename:char	file:
hh	include/colors.h	/^    UT_hash_handle hh;$/;"	m	struct:DColor	typeref:typename:UT_hash_handle
hh	lib/uthash/tests/bloom_perf.c	/^    UT_hash_handle hh;$/;"	m	struct:name_rec	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/emit_keys.c	/^    UT_hash_handle hh;$/;"	m	struct:name_rec	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/example.c	/^    UT_hash_handle hh;         \/* makes this structure hashable *\/$/;"	m	struct:my_struct	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/keystat.c	/^    UT_hash_handle hh, hh2;$/;"	m	struct:stat_key	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/lru_cache/cache.c	/^	UT_hash_handle hh; \/**<Hash Handle for uthash *\/$/;"	m	struct:foo_cache_entry	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/sleep_test.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test1.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test10.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test11.c	/^    UT_hash_handle hh;$/;"	m	struct:name_rec	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test12.c	/^    UT_hash_handle hh;$/;"	m	struct:person_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test13.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test14.c	/^    UT_hash_handle hh;$/;"	m	struct:name_rec	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test15.c	/^    UT_hash_handle hh;         \/* makes this structure hashable *\/$/;"	m	struct:my_struct	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test16.c	/^    UT_hash_handle hh;         \/* makes this structure hashable *\/$/;"	m	struct:my_event	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test17.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test18.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test19.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test2.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test20.c	/^    UT_hash_handle hh;$/;"	m	struct:my_struct	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test21.c	/^    UT_hash_handle hh;$/;"	m	struct:__anonbb926b5d0208	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test22.c	/^    UT_hash_handle hh;$/;"	m	struct:__anonbb926f9e0108	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test23.c	/^    UT_hash_handle hh;$/;"	m	struct:__anonbb9273df0108	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test24.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test3.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test35.c	/^    UT_hash_handle hh;$/;"	m	struct:elt	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test36.c	/^    UT_hash_handle hh;$/;"	m	struct:__anonbb930d030108	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test37.c	/^    UT_hash_handle hh;$/;"	m	struct:__anonbb9311440108	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test38.c	/^    UT_hash_handle hh;$/;"	m	struct:test_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test39.c	/^    UT_hash_handle hh;$/;"	m	struct:__anonbb9319c60108	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test4.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test40.c	/^    UT_hash_handle hh;         \/* makes this structure hashable *\/$/;"	m	struct:my_struct	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test5.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test56.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test57.c	/^    UT_hash_handle hh;$/;"	m	struct:__anonbb942a060108	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test58.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test59.c	/^    UT_hash_handle hh;$/;"	m	struct:item	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test6.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test60.c	/^    UT_hash_handle hh;$/;"	m	struct:item	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test62.c	/^    UT_hash_handle hh;$/;"	m	struct:test_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test65.c	/^    UT_hash_handle hh;$/;"	m	struct:CacheEntry	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test66.c	/^    UT_hash_handle hh;$/;"	m	struct:person_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test7.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test79.c	/^    UT_hash_handle hh;$/;"	m	struct:hs_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test8.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test83.c	/^    UT_hash_handle hh;$/;"	m	struct:person_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test84.c	/^    UT_hash_handle hh;$/;"	m	struct:person_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test85.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test87.c	/^    UT_hash_handle hh;$/;"	m	struct:__anonbb95cf290108	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test88.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test9.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test90.c	/^    UT_hash_handle hh;$/;"	m	struct:item	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test92.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test93.c	/^    UT_hash_handle hh;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/test96.c	/^    UT_hash_handle hh;$/;"	m	struct:clockface	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/threads/test1.c	/^  UT_hash_handle hh;$/;"	m	struct:__anon26fef7250108	typeref:typename:UT_hash_handle	file:
hh	lib/uthash/tests/threads/test2.c	/^  UT_hash_handle hh;$/;"	m	struct:__anon26fefb660108	typeref:typename:UT_hash_handle	file:
hh2	lib/uthash/tests/keystat.c	/^    UT_hash_handle hh, hh2;$/;"	m	struct:stat_key	typeref:typename:UT_hash_handle	file:
hh2	lib/uthash/tests/test92.c	/^    UT_hash_handle hh2;$/;"	m	struct:example_user_t	typeref:typename:UT_hash_handle	file:
hh_head	lib/uthash/include/uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_handle *
hh_head	lib/uthash/src/uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_handle *
hh_next	lib/uthash/include/uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle *
hh_next	lib/uthash/src/uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle *
hh_prev	lib/uthash/include/uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle *
hh_prev	lib/uthash/src/uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle *
hho	lib/uthash/include/uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table	typeref:typename:ptrdiff_t
hho	lib/uthash/src/uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table	typeref:typename:ptrdiff_t
hi	lib/flecs/flecs.c	/^    ecs_map_t hi;  \/* Map for hi edges (map<id, edge_t>) *\/$/;"	m	struct:ecs_graph_edges_t	typeref:typename:ecs_map_t	file:
hi	lib/flecs/src/private_types.h	/^    ecs_map_t hi;  \/* Map for hi edges (map<id, edge_t>) *\/$/;"	m	struct:ecs_graph_edges_t	typeref:typename:ecs_map_t
hi_var	lib/flecs/flecs.c	/^    int32_t hi_var; \/* If hi part should be stored in var, this is the var id *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:int32_t	file:
hi_var	lib/flecs/src/addons/rules.c	/^    int32_t hi_var; \/* If hi part should be stored in var, this is the var id *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:int32_t	file:
host	lib/flecs/flecs.h	/^    char host[128];$/;"	m	struct:__anona642c00a0708	typeref:typename:char[128]
host	lib/flecs/include/flecs/addons/http.h	/^    char host[128];$/;"	m	struct:__anon12cf63340108	typeref:typename:char[128]
hp	include/ecs/components.h	/^    int hp;$/;"	m	struct:__anon1ffac85e0408	typeref:typename:int
hs_t	lib/uthash/tests/test79.c	/^typedef struct hs_t {$/;"	s	file:
hs_t	lib/uthash/tests/test79.c	/^} hs_t;$/;"	t	typeref:struct:hs_t	file:
hstruct_t	lib/uthash/tests/test87.c	/^} hstruct_t;$/;"	t	typeref:struct:__anonbb95cf290108	file:
http_accept	lib/flecs/flecs.c	/^ecs_http_socket_t http_accept($/;"	f	typeref:typename:ecs_http_socket_t	file:
http_accept	lib/flecs/src/addons/http.c	/^ecs_http_socket_t http_accept($/;"	f	typeref:typename:ecs_http_socket_t	file:
http_bind	lib/flecs/flecs.c	/^int http_bind($/;"	f	typeref:typename:int	file:
http_bind	lib/flecs/src/addons/http.c	/^int http_bind($/;"	f	typeref:typename:int	file:
http_close	lib/flecs/flecs.c	/^void http_close($/;"	f	typeref:typename:void	file:
http_close	lib/flecs/src/addons/http.c	/^void http_close($/;"	f	typeref:typename:void	file:
http_getnameinfo	lib/flecs/flecs.c	/^int http_getnameinfo($/;"	f	typeref:typename:int	file:
http_getnameinfo	lib/flecs/src/addons/http.c	/^int http_getnameinfo($/;"	f	typeref:typename:int	file:
http_recv	lib/flecs/flecs.c	/^ecs_size_t http_recv($/;"	f	typeref:typename:ecs_size_t	file:
http_recv	lib/flecs/src/addons/http.c	/^ecs_size_t http_recv($/;"	f	typeref:typename:ecs_size_t	file:
http_send	lib/flecs/flecs.c	/^ecs_size_t http_send($/;"	f	typeref:typename:ecs_size_t	file:
http_send	lib/flecs/src/addons/http.c	/^ecs_size_t http_send($/;"	f	typeref:typename:ecs_size_t	file:
http_server_thread	lib/flecs/flecs.c	/^void* http_server_thread(void* arg) {$/;"	f	typeref:typename:void *	file:
http_server_thread	lib/flecs/src/addons/http.c	/^void* http_server_thread(void* arg) {$/;"	f	typeref:typename:void *	file:
i	lib/flecs/flecs.c	/^  union { const void *ptr; size_t i; } u;     \/* needed for Mac Powerbook G4 *\/$/;"	m	union:hashlittle2::__anona642c005030a	typeref:typename:size_t	file:
i	lib/flecs/flecs.h	/^    int32_t i;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:int32_t
i	lib/flecs/include/flecs/private/api_types.h	/^    int32_t i;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:int32_t
i	lib/flecs/src/datastructures/hash.c	/^  union { const void *ptr; size_t i; } u;     \/* needed for Mac Powerbook G4 *\/$/;"	m	union:hashlittle2::__anon7c7af5a0010a	typeref:typename:size_t	file:
i	lib/uthash/include/utarray.h	/^    unsigned i,n;\/* i: index of next available slot, n: num slots *\/$/;"	m	struct:__anonf30a79380208	typeref:typename:unsigned
i	lib/uthash/include/utringbuffer.h	/^    unsigned i;       \/* index of next available slot; wraps at n *\/$/;"	m	struct:__anon8907aae30108	typeref:typename:unsigned
i	lib/uthash/include/utstring.h	/^    size_t i; \/* index of first unused byte *\/$/;"	m	struct:__anon8b7ab8d00108	typeref:typename:size_t
i	lib/uthash/src/utarray.h	/^    unsigned i,n;\/* i: index of next available slot, n: num slots *\/$/;"	m	struct:__anon57c8b0dc0208	typeref:typename:unsigned
i	lib/uthash/src/utringbuffer.h	/^    unsigned i;       \/* index of next available slot; wraps at n *\/$/;"	m	struct:__anon5ece49070108	typeref:typename:unsigned
i	lib/uthash/src/utstring.h	/^    size_t i; \/* index of first unused byte *\/$/;"	m	struct:__anon87ffe4f40108	typeref:typename:size_t
i	lib/uthash/tests/test57.c	/^    int i;$/;"	m	struct:__anonbb942a060108	typeref:typename:int	file:
i	lib/uthash/tests/threads/test1.c	/^  int i;$/;"	m	struct:__anon26fef7250108	typeref:typename:int	file:
i	lib/uthash/tests/threads/test2.c	/^  int i;$/;"	m	struct:__anon26fefb660108	typeref:typename:int	file:
i16_t	lib/flecs/flecs.h	/^using i16_t = ecs_i16_t;$/;"	t	namespace:flecs	typeref:typename:ecs_i16_t
i16_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using i16_t = ecs_i16_t;$/;"	t	namespace:flecs	typeref:typename:ecs_i16_t
i32	lib/flecs/examples/cpp/reflection/portable_type/src/main.cpp	/^    int32_t i32;$/;"	m	struct:PortableType	typeref:typename:int32_t	file:
i32_t	lib/flecs/flecs.h	/^using i32_t = ecs_i32_t;$/;"	t	namespace:flecs	typeref:typename:ecs_i32_t
i32_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using i32_t = ecs_i32_t;$/;"	t	namespace:flecs	typeref:typename:ecs_i32_t
i64_t	lib/flecs/flecs.h	/^using i64_t = ecs_i64_t;$/;"	t	namespace:flecs	typeref:typename:ecs_i64_t
i64_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using i64_t = ecs_i64_t;$/;"	t	namespace:flecs	typeref:typename:ecs_i64_t
i8_t	lib/flecs/flecs.h	/^using i8_t = ecs_i8_t;$/;"	t	namespace:flecs	typeref:typename:ecs_i8_t
i8_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using i8_t = ecs_i8_t;$/;"	t	namespace:flecs	typeref:typename:ecs_i8_t
icd	lib/uthash/include/utarray.h	/^    UT_icd icd;  \/* initializer, copy and destructor functions *\/$/;"	m	struct:__anonf30a79380208	typeref:typename:UT_icd
icd	lib/uthash/include/utringbuffer.h	/^    UT_icd icd;       \/* initializer, copy and destructor functions *\/$/;"	m	struct:__anon8907aae30108	typeref:typename:UT_icd
icd	lib/uthash/src/utarray.h	/^    UT_icd icd;  \/* initializer, copy and destructor functions *\/$/;"	m	struct:__anon57c8b0dc0208	typeref:typename:UT_icd
icd	lib/uthash/src/utringbuffer.h	/^    UT_icd icd;       \/* initializer, copy and destructor functions *\/$/;"	m	struct:__anon5ece49070108	typeref:typename:UT_icd
id	lib/flecs/flecs.c	/^    ecs_entity_t id;$/;"	m	struct:ecs_column_info_t	typeref:typename:ecs_entity_t	file:
id	lib/flecs/flecs.c	/^    ecs_id_t id;                \/* (Component) id *\/$/;"	m	struct:ecs_defer_op_t	typeref:typename:ecs_id_t	file:
id	lib/flecs/flecs.c	/^    ecs_id_t id;             \/* Id associated with edge *\/$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_id_t	file:
id	lib/flecs/flecs.c	/^    ecs_id_t id;$/;"	m	struct:ecs_table_record_t	typeref:typename:ecs_id_t	file:
id	lib/flecs/flecs.c	/^    int32_t id;                  \/* Unique id that identifies the stage *\/$/;"	m	struct:ecs_stage_t	typeref:typename:int32_t	file:
id	lib/flecs/flecs.c	/^    int32_t id;       \/* Unique variable id *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:int32_t	file:
id	lib/flecs/flecs.c	/^    uint64_t id;                     \/* Table id in sparse set *\/$/;"	m	struct:ecs_table_t	typeref:typename:uint64_t	file:
id	lib/flecs/flecs.c	/^    uint64_t id;                \/* Id of query in query storage *\/$/;"	m	struct:ecs_query_t	typeref:typename:uint64_t	file:
id	lib/flecs/flecs.h	/^    Base& id() {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
id	lib/flecs/flecs.h	/^    Base& id() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/flecs.h	/^    Base& id(entity_t object) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
id	lib/flecs/flecs.h	/^    Base& id(entity_t relation, entity_t object) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
id	lib/flecs/flecs.h	/^    Base& id(flecs::id_t id) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
id	lib/flecs/flecs.h	/^    Base& id(id_t id) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/flecs.h	/^    Base& id(id_t o) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/flecs.h	/^    Base& id(id_t r, id_t o) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/flecs.h	/^    ecs_id_t id;                \/* Can be used instead of pred, args and role to$/;"	m	struct:ecs_term_t	typeref:typename:ecs_id_t
id	lib/flecs/flecs.h	/^    ecs_id_t id;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_id_t
id	lib/flecs/flecs.h	/^    entity_t id() const {$/;"	f	struct:flecs::entity_view	typeref:typename:entity_t
id	lib/flecs/flecs.h	/^    explicit id(const flecs::id& relation, const flecs::id& object)$/;"	f	struct:flecs::id
id	lib/flecs/flecs.h	/^    explicit id(flecs::id_t relation, flecs::id_t object)$/;"	f	struct:flecs::id
id	lib/flecs/flecs.h	/^    explicit id(flecs::id_t value) $/;"	f	struct:flecs::id
id	lib/flecs/flecs.h	/^    explicit id(flecs::world_t *world, flecs::id_t relation, flecs::id_t object)$/;"	f	struct:flecs::id
id	lib/flecs/flecs.h	/^    explicit id(flecs::world_t *world, flecs::id_t value = 0)$/;"	f	struct:flecs::id
id	lib/flecs/flecs.h	/^    flecs::entity_t id;$/;"	m	struct:flecs::_::enum_constant_data	typeref:typename:flecs::entity_t
id	lib/flecs/flecs.h	/^    flecs::entity_t id;$/;"	m	struct:flecs::_::enum_data_impl	typeref:typename:flecs::entity_t
id	lib/flecs/flecs.h	/^    flecs::id id() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:flecs::id
id	lib/flecs/flecs.h	/^    flecs::id_t id() const { $/;"	f	struct:flecs::type_base	typeref:typename:flecs::id_t
id	lib/flecs/flecs.h	/^    id()$/;"	f	struct:flecs::id
id	lib/flecs/flecs.h	/^    static id_t id(world_t *world = nullptr) {$/;"	f	struct:flecs::_::cpp_type	typeref:typename:id_t
id	lib/flecs/flecs.h	/^    static id_t id(world_t *world = nullptr, const char *name = nullptr, $/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:id_t
id	lib/flecs/flecs.h	/^    uint64_t id;                \/* Internal id *\/  $/;"	m	struct:ecs_observer_t	typeref:typename:uint64_t
id	lib/flecs/flecs.h	/^    uint64_t id;                \/* Internal id *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:uint64_t
id	lib/flecs/flecs.h	/^    uint64_t id;$/;"	m	struct:__anona642c00a0708	typeref:typename:uint64_t
id	lib/flecs/flecs.h	/^    uint64_t id;$/;"	m	struct:__anona642c00a0a08	typeref:typename:uint64_t
id	lib/flecs/flecs.h	/^inline Base& term_builder_i<Base>::id(const flecs::type& type) {$/;"	f	class:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/flecs.h	/^inline Base& term_builder_i<Base>::id(const flecs::type& type, id_t o) {$/;"	f	class:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/flecs.h	/^inline flecs::entity iter::id(int32_t index) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
id	lib/flecs/flecs.h	/^inline flecs::entity world::id(E value) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
id	lib/flecs/flecs.h	/^inline flecs::id world::id() const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
id	lib/flecs/flecs.h	/^inline flecs::id world::id(Args&&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
id	lib/flecs/flecs.h	/^struct id {$/;"	s	namespace:flecs
id	lib/flecs/include/flecs.h	/^    ecs_id_t id;                \/* Can be used instead of pred, args and role to$/;"	m	struct:ecs_term_t	typeref:typename:ecs_id_t
id	lib/flecs/include/flecs.h	/^    uint64_t id;                \/* Internal id *\/  $/;"	m	struct:ecs_observer_t	typeref:typename:uint64_t
id	lib/flecs/include/flecs.h	/^    uint64_t id;                \/* Internal id *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:uint64_t
id	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static id_t id(world_t *world = nullptr) {$/;"	f	struct:flecs::_::cpp_type	typeref:typename:id_t
id	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static id_t id(world_t *world = nullptr, const char *name = nullptr, $/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:id_t
id	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    entity_t id() const {$/;"	f	struct:flecs::entity_view	typeref:typename:entity_t
id	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::entity iter::id(int32_t index) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
id	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity world::id(E value) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
id	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    Base& id() {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    Base& id(entity_t object) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    Base& id(entity_t relation, entity_t object) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    Base& id(flecs::id_t id) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    explicit id(const flecs::id& relation, const flecs::id& object)$/;"	f	struct:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    explicit id(flecs::id_t relation, flecs::id_t object)$/;"	f	struct:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    explicit id(flecs::id_t value) $/;"	f	struct:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    explicit id(flecs::world_t *world, flecs::id_t relation, flecs::id_t object)$/;"	f	struct:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    explicit id(flecs::world_t *world, flecs::id_t value = 0)$/;"	f	struct:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    id()$/;"	f	struct:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^struct id {$/;"	s	namespace:flecs
id	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::id world::id() const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::id world::id(Args&&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& id() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& id(id_t id) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& id(id_t o) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& id(id_t r, id_t o) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    flecs::id id() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:flecs::id
id	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^inline Base& term_builder_i<Base>::id(const flecs::type& type) {$/;"	f	class:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^inline Base& term_builder_i<Base>::id(const flecs::type& type, id_t o) {$/;"	f	class:flecs::term_builder_i	typeref:typename:Base &
id	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    flecs::id_t id() const { $/;"	f	struct:flecs::type_base	typeref:typename:flecs::id_t
id	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    flecs::entity_t id;$/;"	m	struct:flecs::_::enum_constant_data	typeref:typename:flecs::entity_t
id	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    flecs::entity_t id;$/;"	m	struct:flecs::_::enum_data_impl	typeref:typename:flecs::entity_t
id	lib/flecs/include/flecs/addons/http.h	/^    uint64_t id;$/;"	m	struct:__anon12cf63340108	typeref:typename:uint64_t
id	lib/flecs/include/flecs/addons/http.h	/^    uint64_t id;$/;"	m	struct:__anon12cf63340408	typeref:typename:uint64_t
id	lib/flecs/include/flecs/private/api_types.h	/^    ecs_id_t id;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_id_t
id	lib/flecs/src/addons/rules.c	/^    int32_t id;       \/* Unique variable id *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:int32_t	file:
id	lib/flecs/src/private_types.h	/^    ecs_entity_t id;$/;"	m	struct:ecs_column_info_t	typeref:typename:ecs_entity_t
id	lib/flecs/src/private_types.h	/^    ecs_id_t id;                \/* (Component) id *\/$/;"	m	struct:ecs_defer_op_t	typeref:typename:ecs_id_t
id	lib/flecs/src/private_types.h	/^    ecs_id_t id;             \/* Id associated with edge *\/$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_id_t
id	lib/flecs/src/private_types.h	/^    ecs_id_t id;$/;"	m	struct:ecs_table_record_t	typeref:typename:ecs_id_t
id	lib/flecs/src/private_types.h	/^    int32_t id;                  \/* Unique id that identifies the stage *\/$/;"	m	struct:ecs_stage_t	typeref:typename:int32_t
id	lib/flecs/src/private_types.h	/^    uint64_t id;                     \/* Table id in sparse set *\/$/;"	m	struct:ecs_table_t	typeref:typename:uint64_t
id	lib/flecs/src/private_types.h	/^    uint64_t id;                \/* Id of query in query storage *\/$/;"	m	struct:ecs_query_t	typeref:typename:uint64_t
id	lib/flecs/test/api/include/api.h	/^        int32_t id;$/;"	m	struct:test_iter_result_t::__anon6d6591e20108	typeref:typename:int32_t
id	lib/uthash/tests/example.c	/^    int id;                    \/* key *\/$/;"	m	struct:my_struct	typeref:typename:int	file:
id	lib/uthash/tests/sleep_test.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test1.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test10.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test12.c	/^    int id;$/;"	m	struct:person_t	typeref:typename:int	file:
id	lib/uthash/tests/test13.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test15.c	/^    int id;$/;"	m	struct:my_struct	typeref:typename:int	file:
id	lib/uthash/tests/test17.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test18.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test19.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test2.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test24.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test25.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test27.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test28.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test3.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test36.c	/^    int id;$/;"	m	struct:__anonbb930d030108	typeref:typename:int	file:
id	lib/uthash/tests/test37.c	/^    int id;$/;"	m	struct:__anonbb9311440108	typeref:typename:int	file:
id	lib/uthash/tests/test4.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test40.c	/^    int id;$/;"	m	struct:my_struct	typeref:typename:int	file:
id	lib/uthash/tests/test41.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test42.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test5.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test56.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test58.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test6.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test63.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test64.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test66.c	/^    int id;$/;"	m	struct:person_t	typeref:typename:int	file:
id	lib/uthash/tests/test68.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test69.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test7.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test70.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test71.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test72.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test73.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test78.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test79.c	/^    int id;$/;"	m	struct:hs_t	typeref:typename:int	file:
id	lib/uthash/tests/test8.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test83.c	/^    int id;$/;"	m	struct:person_t	typeref:typename:int	file:
id	lib/uthash/tests/test84.c	/^    int id;$/;"	m	struct:person_t	typeref:typename:int	file:
id	lib/uthash/tests/test85.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test86.c	/^    int id;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test88.c	/^    char id[3];$/;"	m	struct:example_user_t	typeref:typename:char[3]	file:
id	lib/uthash/tests/test9.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test91.c	/^    int id, score;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test92.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test93.c	/^    int id;$/;"	m	struct:example_user_t	typeref:typename:int	file:
id	lib/uthash/tests/test94.c	/^    int id, score;$/;"	m	struct:el	typeref:typename:int	file:
id	lib/uthash/tests/test95.c	/^    int id, score;$/;"	m	struct:el	typeref:typename:int	file:
id_explicit	lib/flecs/flecs.h	/^    static entity_t id_explicit(world_t *world = nullptr, $/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:entity_t
id_explicit	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static entity_t id_explicit(world_t *world = nullptr, $/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:entity_t
id_first_count_t	lib/flecs/flecs.c	/^} id_first_count_t;$/;"	t	typeref:struct:__anona642c0050f08	file:
id_first_count_t	lib/flecs/src/table_graph.c	/^} id_first_count_t;$/;"	t	typeref:struct:__anon5c65d2280108	file:
id_index	lib/flecs/flecs.c	/^    ecs_map_t id_index;          \/* map<id, ecs_id_record_t*> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_map_t	file:
id_index	lib/flecs/src/private_types.h	/^    ecs_map_t id_index;          \/* map<id, ecs_id_record_t*> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_map_t
id_t	lib/flecs/flecs.h	/^using id_t = ecs_id_t;$/;"	t	namespace:flecs	typeref:typename:ecs_id_t
id_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using id_t = ecs_id_t;$/;"	t	namespace:flecs	typeref:typename:ecs_id_t
idcmp	lib/uthash/tests/test36.c	/^static int idcmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
idcmp	lib/uthash/tests/test37.c	/^static int idcmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
ideal_chain_maxlen	lib/uthash/include/uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
ideal_chain_maxlen	lib/uthash/src/uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
idr	lib/flecs/flecs.c	/^    ecs_id_record_t *idr;      \/* Currently evaluated table set *\/$/;"	m	struct:ecs_rule_with_ctx_t	typeref:typename:ecs_id_record_t *	file:
idr	lib/flecs/flecs.c	/^    ecs_id_record_t *idr;$/;"	m	struct:ecs_rule_superset_ctx_t	typeref:typename:ecs_id_record_t *	file:
idr	lib/flecs/src/addons/rules.c	/^    ecs_id_record_t *idr;      \/* Currently evaluated table set *\/$/;"	m	struct:ecs_rule_with_ctx_t	typeref:typename:ecs_id_record_t *	file:
idr	lib/flecs/src/addons/rules.c	/^    ecs_id_record_t *idr;$/;"	m	struct:ecs_rule_superset_ctx_t	typeref:typename:ecs_id_record_t *	file:
idr_isa_wildcard	lib/flecs/flecs.c	/^    ecs_id_record_t *idr_isa_wildcard;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_id_record_t *	file:
idr_isa_wildcard	lib/flecs/src/private_types.h	/^    ecs_id_record_t *idr_isa_wildcard;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_id_record_t *
ids	lib/flecs/flecs.c	/^    ecs_id_t *ids;            \/* Resolved (component) ids for current table *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_id_t *	file:
ids	lib/flecs/flecs.h	/^        flecs::array<flecs::id_t, sizeof...(Components)> ids;$/;"	m	struct:flecs::_::sig	typeref:typename:flecs::array<flecs::id_t,sizeof...(Components)>
ids	lib/flecs/flecs.h	/^    const uint64_t *ids;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:const uint64_t *
ids	lib/flecs/flecs.h	/^    ecs_id_t *ids;                \/* (Component) ids *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_id_t *
ids	lib/flecs/flecs.h	/^    ecs_id_t ids[ECS_MAX_ADD_REMOVE];   \/* Ids to include in type *\/$/;"	m	struct:ecs_type_desc_t	typeref:typename:ecs_id_t[]
ids	lib/flecs/flecs.h	/^    ecs_id_t ids[ECS_MAX_ADD_REMOVE]; \/* Ids to create the entities with *\/$/;"	m	struct:ecs_bulk_desc_t	typeref:typename:ecs_id_t[]
ids	lib/flecs/flecs.h	/^    ecs_id_t ids[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:ecs_id_t[]
ids	lib/flecs/flecs.h	/^    ecs_ids_t *ids;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_ids_t *
ids	lib/flecs/include/flecs.h	/^    ecs_id_t ids[ECS_MAX_ADD_REMOVE];   \/* Ids to include in type *\/$/;"	m	struct:ecs_type_desc_t	typeref:typename:ecs_id_t[]
ids	lib/flecs/include/flecs.h	/^    ecs_id_t ids[ECS_MAX_ADD_REMOVE]; \/* Ids to create the entities with *\/$/;"	m	struct:ecs_bulk_desc_t	typeref:typename:ecs_id_t[]
ids	lib/flecs/include/flecs.h	/^    ecs_ids_t *ids;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_ids_t *
ids	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^        flecs::array<flecs::id_t, sizeof...(Components)> ids;$/;"	m	struct:flecs::_::sig	typeref:typename:flecs::array<flecs::id_t,sizeof...(Components)>
ids	lib/flecs/include/flecs/private/api_types.h	/^    const uint64_t *ids;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:const uint64_t *
ids	lib/flecs/include/flecs/private/api_types.h	/^    ecs_id_t *ids;                \/* (Component) ids *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_id_t *
ids	lib/flecs/include/flecs/private/api_types.h	/^    ecs_id_t ids[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:ecs_id_t[]
ids	lib/flecs/src/private_types.h	/^    ecs_id_t *ids;            \/* Resolved (component) ids for current table *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_id_t *
ids_alloc	lib/flecs/flecs.h	/^    bool ids_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
ids_alloc	lib/flecs/include/flecs/private/api_types.h	/^    bool ids_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
ids_append	lib/flecs/flecs.c	/^void ids_append($/;"	f	typeref:typename:void	file:
ids_append	lib/flecs/src/table_graph.c	/^void ids_append($/;"	f	typeref:typename:void	file:
ids_compare	lib/flecs/flecs.c	/^int ids_compare(const void *ptr_1, const void *ptr_2) {$/;"	f	typeref:typename:int	file:
ids_compare	lib/flecs/src/table_graph.c	/^int ids_compare(const void *ptr_1, const void *ptr_2) {$/;"	f	typeref:typename:int	file:
ids_expr	lib/flecs/flecs.h	/^    const char *ids_expr;               \/* Id expression to include in type *\/$/;"	m	struct:ecs_type_desc_t	typeref:typename:const char *
ids_expr	lib/flecs/include/flecs.h	/^    const char *ids_expr;               \/* Id expression to include in type *\/$/;"	m	struct:ecs_type_desc_t	typeref:typename:const char *
ids_hash	lib/flecs/flecs.c	/^uint64_t ids_hash(const void *ptr) {$/;"	f	typeref:typename:uint64_t	file:
ids_hash	lib/flecs/src/table_graph.c	/^uint64_t ids_hash(const void *ptr) {$/;"	f	typeref:typename:uint64_t	file:
ids_merge	lib/flecs/flecs.c	/^void ids_merge($/;"	f	typeref:typename:void	file:
ids_merge	lib/flecs/src/entity.c	/^void ids_merge($/;"	f	typeref:typename:void	file:
ids_t	lib/flecs/flecs.h	/^using ids_t = ecs_ids_t;$/;"	t	namespace:flecs	typeref:typename:ecs_ids_t
ids_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using ids_t = ecs_ids_t;$/;"	t	namespace:flecs	typeref:typename:ecs_ids_t
ids_to_vector	lib/flecs/flecs.c	/^ecs_vector_t* ids_to_vector($/;"	f	typeref:typename:ecs_vector_t *	file:
ids_to_vector	lib/flecs/src/table_graph.c	/^ecs_vector_t* ids_to_vector($/;"	f	typeref:typename:ecs_vector_t *	file:
idx	src/mapping/map.c	/^inline int idx(struct Map *map, int x, int y) {$/;"	f	typeref:typename:int
if_not_t	lib/flecs/flecs.h	/^using if_not_t = enable_if_t<false == V, int>;$/;"	t	namespace:flecs	typeref:typename:enable_if_t<false==V,int>
if_not_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using if_not_t = enable_if_t<false == V, int>;$/;"	t	namespace:flecs	typeref:typename:enable_if_t<false==V,int>
if_t	lib/flecs/flecs.h	/^using if_t = enable_if_t<V, int>;$/;"	t	namespace:flecs	typeref:typename:enable_if_t<V,int>
if_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using if_t = enable_if_t<V, int>;$/;"	t	namespace:flecs	typeref:typename:enable_if_t<V,int>
ignore_trigger	lib/flecs/flecs.c	/^bool ignore_trigger($/;"	f	typeref:typename:bool	file:
ignore_trigger	lib/flecs/src/trigger.c	/^bool ignore_trigger($/;"	f	typeref:typename:bool	file:
impl	lib/flecs/flecs.h	/^    ecs_map_t impl;$/;"	m	struct:__anona642c00a0308	typeref:typename:ecs_map_t
impl	lib/flecs/flecs.h	/^    void *impl;$/;"	m	struct:__anona642c00a0608	typeref:typename:void *
impl	lib/flecs/include/flecs/addons/rest.h	/^    void *impl;$/;"	m	struct:__anon29130e920108	typeref:typename:void *
impl	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_map_t impl;$/;"	m	struct:__anonceb012f80208	typeref:typename:ecs_map_t
impl_	lib/flecs/flecs.h	/^    _::enum_data_impl& impl_;$/;"	m	struct:flecs::enum_data	typeref:typename:_::enum_data_impl &
impl_	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    _::enum_data_impl& impl_;$/;"	m	struct:flecs::enum_data	typeref:typename:_::enum_data_impl &
import	lib/flecs/flecs.h	/^flecs::entity import(world& world) {$/;"	f	namespace:flecs	typeref:typename:flecs::entity
import	lib/flecs/flecs.h	/^inline flecs::entity world::import() {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
import	lib/flecs/include/flecs/addons/cpp/mixins/module/impl.hpp	/^flecs::entity import(world& world) {$/;"	f	namespace:flecs	typeref:typename:flecs::entity
import	lib/flecs/include/flecs/addons/cpp/mixins/module/impl.hpp	/^inline flecs::entity world::import() {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
import_count	lib/flecs/test/cpp_api/src/World.cpp	/^        static int import_count;$/;"	m	struct:ns::namespace_module	typeref:typename:int	file:
import_count	lib/flecs/test/cpp_api/src/World.cpp	/^    int namespace_module::import_count = 0;$/;"	m	class:ns::namespace_module	typeref:typename:int
import_module	lib/flecs/test/api/src/Modules.c	/^ecs_entity_t import_module(ecs_world_t *world) {$/;"	f	typeref:typename:ecs_entity_t
inc_gen	lib/flecs/flecs.c	/^uint64_t inc_gen($/;"	f	typeref:typename:uint64_t	file:
inc_gen	lib/flecs/src/datastructures/sparse.c	/^uint64_t inc_gen($/;"	f	typeref:typename:uint64_t	file:
inc_id	lib/flecs/flecs.c	/^uint64_t inc_id($/;"	f	typeref:typename:uint64_t	file:
inc_id	lib/flecs/src/datastructures/sparse.c	/^uint64_t inc_id($/;"	f	typeref:typename:uint64_t	file:
inc_trigger_count	lib/flecs/flecs.c	/^void inc_trigger_count($/;"	f	typeref:typename:void	file:
inc_trigger_count	lib/flecs/src/trigger.c	/^void inc_trigger_count($/;"	f	typeref:typename:void	file:
include/flecs	lib/flecs/meson.build	/^install_subdir('include\/flecs', install_dir : get_option('includedir'))$/;"	S
index	lib/flecs/flecs.c	/^    ecs_map_t index; \/* <table_id, T*> *\/$/;"	m	struct:ecs_table_cache_t	typeref:typename:ecs_map_t	file:
index	lib/flecs/flecs.c	/^    int32_t index;$/;"	m	struct:pair_offset_t	typeref:typename:int32_t	file:
index	lib/flecs/flecs.h	/^    ecs_hashmap_t *index; \/* Current index *\/$/;"	m	struct:EcsIdentifier	typeref:typename:ecs_hashmap_t *
index	lib/flecs/flecs.h	/^    int32_t index;              \/* Computed term index in filter which takes $/;"	m	struct:ecs_term_t	typeref:typename:int32_t
index	lib/flecs/flecs.h	/^    int32_t index;$/;"	m	struct:__anona642c00a0408	typeref:typename:int32_t
index	lib/flecs/flecs.h	/^    int32_t index;$/;"	m	struct:ecs_snapshot_iter_t	typeref:typename:int32_t
index	lib/flecs/flecs.h	/^    int32_t index;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
index	lib/flecs/flecs.h	/^    int32_t index;$/;"	m	struct:ecs_worker_iter_t	typeref:typename:int32_t
index	lib/flecs/include/flecs.h	/^    ecs_hashmap_t *index; \/* Current index *\/$/;"	m	struct:EcsIdentifier	typeref:typename:ecs_hashmap_t *
index	lib/flecs/include/flecs.h	/^    int32_t index;              \/* Computed term index in filter which takes $/;"	m	struct:ecs_term_t	typeref:typename:int32_t
index	lib/flecs/include/flecs/private/api_types.h	/^    int32_t index;$/;"	m	struct:ecs_snapshot_iter_t	typeref:typename:int32_t
index	lib/flecs/include/flecs/private/api_types.h	/^    int32_t index;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
index	lib/flecs/include/flecs/private/api_types.h	/^    int32_t index;$/;"	m	struct:ecs_worker_iter_t	typeref:typename:int32_t
index	lib/flecs/include/flecs/private/hashmap.h	/^    int32_t index;$/;"	m	struct:__anonceb012f80308	typeref:typename:int32_t
index	lib/flecs/src/private_types.h	/^    ecs_map_t index; \/* <table_id, T*> *\/$/;"	m	struct:ecs_table_cache_t	typeref:typename:ecs_map_t
index	lib/flecs/src/query.c	/^    int32_t index;$/;"	m	struct:pair_offset_t	typeref:typename:int32_t	file:
index_hash	lib/flecs/flecs.h	/^    uint64_t index_hash; \/* Hash of existing record in current index *\/$/;"	m	struct:EcsIdentifier	typeref:typename:uint64_t
index_hash	lib/flecs/include/flecs.h	/^    uint64_t index_hash; \/* Hash of existing record in current index *\/$/;"	m	struct:EcsIdentifier	typeref:typename:uint64_t
ineff_expands	lib/uthash/include/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
ineff_expands	lib/uthash/src/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
infer_hash_function	lib/uthash/tests/hashscan.c	/^static int infer_hash_function(char *key, size_t keylen, uint32_t hashv)$/;"	f	typeref:typename:int	file:
init	lib/flecs/flecs.h	/^    app_builder& init(ecs_app_init_action_t value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
init	lib/flecs/flecs.h	/^    ecs_app_init_action_t init; \/* If set, function is ran before starting the$/;"	m	struct:ecs_app_desc_t	typeref:typename:ecs_app_init_action_t
init	lib/flecs/flecs.h	/^    ecs_iter_init_action_t init; \/* Callback that creates iterator. *\/$/;"	m	struct:ecs_iterable_t	typeref:typename:ecs_iter_init_action_t
init	lib/flecs/flecs.h	/^    static void init($/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:void
init	lib/flecs/flecs.h	/^    static void init(flecs::world_t *world) {$/;"	f	struct:flecs::_::enum_type	typeref:typename:void
init	lib/flecs/flecs.h	/^    void init(flecs::world_t *world, flecs::entity_t id) {$/;"	f	struct:flecs::_::enum_type	typeref:typename:void
init	lib/flecs/flecs.h	/^    void init(size_t count) {$/;"	f	class:flecs::vector	typeref:typename:void
init	lib/flecs/flecs.h	/^inline void init(flecs::world& world) {$/;"	f	namespace:flecs::doc::_	typeref:typename:void
init	lib/flecs/flecs.h	/^inline void init(flecs::world& world) {$/;"	f	namespace:flecs::meta::_	typeref:typename:void
init	lib/flecs/flecs.h	/^inline void init(flecs::world& world) {$/;"	f	namespace:flecs::rest::_	typeref:typename:void
init	lib/flecs/include/flecs.h	/^    ecs_iter_init_action_t init; \/* Callback that creates iterator. *\/$/;"	m	struct:ecs_iterable_t	typeref:typename:ecs_iter_init_action_t
init	lib/flecs/include/flecs/addons/app.h	/^    ecs_app_init_action_t init; \/* If set, function is ran before starting the$/;"	m	struct:ecs_app_desc_t	typeref:typename:ecs_app_init_action_t
init	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static void init($/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:void
init	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    app_builder& init(ecs_app_init_action_t value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
init	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline void init(flecs::world& world) {$/;"	f	namespace:flecs::doc::_	typeref:typename:void
init	lib/flecs/include/flecs/addons/cpp/mixins/meta/impl.hpp	/^inline void init(flecs::world& world) {$/;"	f	namespace:flecs::meta::_	typeref:typename:void
init	lib/flecs/include/flecs/addons/cpp/mixins/rest/impl.hpp	/^inline void init(flecs::world& world) {$/;"	f	namespace:flecs::rest::_	typeref:typename:void
init	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static void init(flecs::world_t *world) {$/;"	f	struct:flecs::_::enum_type	typeref:typename:void
init	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    void init(flecs::world_t *world, flecs::entity_t id) {$/;"	f	struct:flecs::_::enum_type	typeref:typename:void
init	lib/flecs/include/flecs/private/vector.h	/^    void init(size_t count) {$/;"	f	class:flecs::vector	typeref:typename:void
init	lib/uthash/include/utarray.h	/^    init_f *init;$/;"	m	struct:__anonf30a79380108	typeref:typename:init_f *
init	lib/uthash/src/utarray.h	/^    init_f *init;$/;"	m	struct:__anon57c8b0dc0108	typeref:typename:init_f *
init_	lib/flecs/flecs.h	/^    ecs_os_api_init_t init_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_init_t
init_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_init_t init_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_init_t
init_Map	src/mapping/map.c	/^struct Map *init_Map(int w, int h, enum MapType type) {$/;"	f	typeref:struct:Map *
init_add_edge	lib/flecs/flecs.c	/^void init_add_edge($/;"	f	typeref:typename:void	file:
init_add_edge	lib/flecs/src/table_graph.c	/^void init_add_edge($/;"	f	typeref:typename:void	file:
init_builtin_components	lib/flecs/flecs.h	/^inline void world::init_builtin_components() {$/;"	f	class:flecs::world	typeref:typename:void
init_builtin_components	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline void world::init_builtin_components() {$/;"	f	class:flecs::world	typeref:typename:void
init_component	lib/flecs/flecs.c	/^int init_component($/;"	f	typeref:typename:int	file:
init_component	lib/flecs/src/addons/meta/meta.c	/^int init_component($/;"	f	typeref:typename:int	file:
init_connection	lib/flecs/flecs.c	/^void init_connection($/;"	f	typeref:typename:void	file:
init_connection	lib/flecs/src/addons/http.c	/^void init_connection($/;"	f	typeref:typename:void	file:
init_constant	lib/flecs/flecs.h	/^    static void init_constant(flecs::world_t *world) {$/;"	f	struct:flecs::_::enum_type	typeref:typename:void
init_constant	lib/flecs/flecs.h	/^    static void init_constant(flecs::world_t*) { }$/;"	f	struct:flecs::_::enum_type	typeref:typename:void
init_constant	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static void init_constant(flecs::world_t *world) {$/;"	f	struct:flecs::_::enum_type	typeref:typename:void
init_constant	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static void init_constant(flecs::world_t*) { }$/;"	f	struct:flecs::_::enum_type	typeref:typename:void
init_edge	lib/flecs/flecs.c	/^void init_edge($/;"	f	typeref:typename:void	file:
init_edge	lib/flecs/src/table_graph.c	/^void init_edge($/;"	f	typeref:typename:void	file:
init_edges	lib/flecs/flecs.c	/^void init_edges($/;"	f	typeref:typename:void	file:
init_edges	lib/flecs/src/table_graph.c	/^void init_edges($/;"	f	typeref:typename:void	file:
init_enum	lib/flecs/flecs.h	/^inline static void init_enum(flecs::world_t *world, flecs::entity_t id) {$/;"	f	namespace:flecs::_	typeref:typename:void
init_enum	lib/flecs/flecs.h	/^inline static void init_enum(flecs::world_t*, flecs::entity_t) { }$/;"	f	namespace:flecs::_	typeref:typename:void
init_enum	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^inline static void init_enum(flecs::world_t *world, flecs::entity_t id) {$/;"	f	namespace:flecs::_	typeref:typename:void
init_enum	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^inline static void init_enum(flecs::world_t*, flecs::entity_t) { }$/;"	f	namespace:flecs::_	typeref:typename:void
init_f	lib/uthash/include/utarray.h	/^typedef void (init_f)(void *elt);$/;"	t	typeref:typename:void ()(void * elt)
init_f	lib/uthash/src/utarray.h	/^typedef void (init_f)(void *elt);$/;"	t	typeref:typename:void ()(void * elt)
init_filter_iter	lib/flecs/flecs.c	/^const ecs_filter_t* init_filter_iter($/;"	f	typeref:typename:const ecs_filter_t *	file:
init_filter_iter	lib/flecs/src/filter.c	/^const ecs_filter_t* init_filter_iter($/;"	f	typeref:typename:const ecs_filter_t *	file:
init_flags	lib/flecs/flecs.c	/^void init_flags($/;"	f	typeref:typename:void	file:
init_flags	lib/flecs/src/table_graph.c	/^void init_flags($/;"	f	typeref:typename:void	file:
init_iter	lib/flecs/flecs.c	/^void init_iter($/;"	f	typeref:typename:void	file:
init_iter	lib/flecs/src/trigger.c	/^void init_iter($/;"	f	typeref:typename:void	file:
init_node	lib/flecs/flecs.c	/^void init_node($/;"	f	typeref:typename:void	file:
init_node	lib/flecs/src/table_graph.c	/^void init_node($/;"	f	typeref:typename:void	file:
init_query_monitors	lib/flecs/flecs.c	/^void init_query_monitors($/;"	f	typeref:typename:void	file:
init_query_monitors	lib/flecs/src/query.c	/^void init_query_monitors($/;"	f	typeref:typename:void	file:
init_remove_edge	lib/flecs/flecs.c	/^void init_remove_edge($/;"	f	typeref:typename:void	file:
init_remove_edge	lib/flecs/src/table_graph.c	/^void init_remove_edge($/;"	f	typeref:typename:void	file:
init_screen_manager	src/screens/manager.c	/^void init_screen_manager() {$/;"	f	typeref:typename:void
init_storage_map	lib/flecs/flecs.c	/^void init_storage_map($/;"	f	typeref:typename:void	file:
init_storage_map	lib/flecs/src/table.c	/^void init_storage_map($/;"	f	typeref:typename:void	file:
init_storage_table	lib/flecs/flecs.c	/^void init_storage_table($/;"	f	typeref:typename:void	file:
init_storage_table	lib/flecs/src/table.c	/^void init_storage_table($/;"	f	typeref:typename:void	file:
init_store	lib/flecs/flecs.c	/^void init_store($/;"	f	typeref:typename:void	file:
init_store	lib/flecs/src/world.c	/^void init_store($/;"	f	typeref:typename:void	file:
init_table	lib/flecs/flecs.c	/^void init_table($/;"	f	typeref:typename:void	file:
init_table	lib/flecs/src/table_graph.c	/^void init_table($/;"	f	typeref:typename:void	file:
init_type	lib/flecs/flecs.c	/^int init_type($/;"	f	file:
init_type	lib/flecs/src/addons/meta/meta.c	/^int init_type($/;"	f	file:
init_users	lib/uthash/tests/test93.c	/^static void init_users(int need_malloc_cnt) {$/;"	f	typeref:typename:void	file:
init_world	lib/flecs/test/api/src/MultiThread.c	/^ecs_world_t* init_world(void) {$/;"	f	typeref:typename:ecs_world_t *	file:
initialized	lib/flecs/flecs.c	/^    bool initialized;$/;"	m	struct:ecs_http_server_t	typeref:typename:bool	file:
initialized	lib/flecs/src/addons/http.c	/^    bool initialized;$/;"	m	struct:ecs_http_server_t	typeref:typename:bool	file:
inkscape	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inkscape	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inner	lib/uthash/tests/test16.c	/^struct inner {$/;"	s	file:
inout	lib/flecs/flecs.h	/^        flecs::array<flecs::inout_kind_t, sizeof...(Components)> inout;$/;"	m	struct:flecs::_::sig	typeref:typename:flecs::array<flecs::inout_kind_t,sizeof...(Components)>
inout	lib/flecs/flecs.h	/^    Base& inout(flecs::inout_kind_t inout) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
inout	lib/flecs/flecs.h	/^    ecs_inout_kind_t inout;     \/* Access to contents matched with term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_inout_kind_t
inout	lib/flecs/flecs.h	/^    flecs::inout_kind_t inout() {$/;"	f	struct:flecs::term	typeref:typename:flecs::inout_kind_t
inout	lib/flecs/include/flecs.h	/^    ecs_inout_kind_t inout;     \/* Access to contents matched with term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_inout_kind_t
inout	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& inout(flecs::inout_kind_t inout) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
inout	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    flecs::inout_kind_t inout() {$/;"	f	struct:flecs::term	typeref:typename:flecs::inout_kind_t
inout	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^        flecs::array<flecs::inout_kind_t, sizeof...(Components)> inout;$/;"	m	struct:flecs::_::sig	typeref:typename:flecs::array<flecs::inout_kind_t,sizeof...(Components)>
inout_kind_t	lib/flecs/flecs.h	/^enum inout_kind_t {$/;"	g	namespace:flecs
inout_kind_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^enum inout_kind_t {$/;"	g	namespace:flecs
input	include/screens/screen.h	/^    screen_func input;$/;"	m	struct:Screen	typeref:typename:screen_func
insert_input	lib/flecs/flecs.c	/^void insert_input($/;"	f	typeref:typename:void	file:
insert_input	lib/flecs/src/addons/rules.c	/^void insert_input($/;"	f	typeref:typename:void	file:
insert_operation	lib/flecs/flecs.c	/^ecs_rule_op_t* insert_operation($/;"	f	typeref:typename:ecs_rule_op_t *	file:
insert_operation	lib/flecs/src/addons/rules.c	/^ecs_rule_op_t* insert_operation($/;"	f	typeref:typename:ecs_rule_op_t *	file:
insert_reflexive_set	lib/flecs/flecs.c	/^void insert_reflexive_set($/;"	f	typeref:typename:void	file:
insert_reflexive_set	lib/flecs/src/addons/rules.c	/^void insert_reflexive_set($/;"	f	typeref:typename:void	file:
insert_select_or_with	lib/flecs/flecs.c	/^void insert_select_or_with($/;"	f	typeref:typename:void	file:
insert_select_or_with	lib/flecs/src/addons/rules.c	/^void insert_select_or_with($/;"	f	typeref:typename:void	file:
insert_sleep	lib/flecs/flecs.c	/^FLECS_FLOAT insert_sleep($/;"	f	typeref:typename:FLECS_FLOAT	file:
insert_sleep	lib/flecs/src/world.c	/^FLECS_FLOAT insert_sleep($/;"	f	typeref:typename:FLECS_FLOAT	file:
insert_table_node	lib/flecs/flecs.c	/^void insert_table_node($/;"	f	typeref:typename:void	file:
insert_table_node	lib/flecs/src/query.c	/^void insert_table_node($/;"	f	typeref:typename:void	file:
insert_term	lib/flecs/flecs.c	/^void insert_term($/;"	f	typeref:typename:void	file:
insert_term	lib/flecs/src/addons/rules.c	/^void insert_term($/;"	f	typeref:typename:void	file:
insert_term_1	lib/flecs/flecs.c	/^void insert_term_1($/;"	f	typeref:typename:void	file:
insert_term_1	lib/flecs/src/addons/rules.c	/^void insert_term_1($/;"	f	typeref:typename:void	file:
insert_term_2	lib/flecs/flecs.c	/^void insert_term_2($/;"	f	typeref:typename:void	file:
insert_term_2	lib/flecs/src/addons/rules.c	/^void insert_term_2($/;"	f	typeref:typename:void	file:
insert_yield	lib/flecs/flecs.c	/^void insert_yield($/;"	f	typeref:typename:void	file:
insert_yield	lib/flecs/src/addons/rules.c	/^void insert_yield($/;"	f	typeref:typename:void	file:
inst_ent_a	lib/flecs/test/api/src/Observer.c	/^static ecs_entity_t inst_ent_a = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
inst_ent_a	lib/flecs/test/api/src/Trigger.c	/^static ecs_entity_t inst_ent_a = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
inst_ent_b	lib/flecs/test/api/src/Observer.c	/^static ecs_entity_t inst_ent_b = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
inst_ent_b	lib/flecs/test/api/src/Trigger.c	/^static ecs_entity_t inst_ent_b = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
install	cmake-build-debug/Makefile	/^install: preinstall$/;"	t
install	cmake-build-debug/lib/flecs/Makefile	/^install: preinstall$/;"	t
install	cmake-build-debug/lib/libflint/Makefile	/^install: preinstall$/;"	t
install	cmake-build-release/Makefile	/^install: preinstall$/;"	t
install	cmake-build-release/lib/flecs/Makefile	/^install: preinstall$/;"	t
install	cmake-build-release/lib/libflint/Makefile	/^install: preinstall$/;"	t
install/fast	cmake-build-debug/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	cmake-build-debug/lib/flecs/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	cmake-build-debug/lib/libflint/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	cmake-build-release/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	cmake-build-release/lib/flecs/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	cmake-build-release/lib/libflint/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/local	cmake-build-debug/Makefile	/^install\/local: preinstall$/;"	t
install/local	cmake-build-debug/lib/flecs/Makefile	/^install\/local: preinstall$/;"	t
install/local	cmake-build-debug/lib/libflint/Makefile	/^install\/local: preinstall$/;"	t
install/local	cmake-build-release/Makefile	/^install\/local: preinstall$/;"	t
install/local	cmake-build-release/lib/flecs/Makefile	/^install\/local: preinstall$/;"	t
install/local	cmake-build-release/lib/libflint/Makefile	/^install\/local: preinstall$/;"	t
install/local/fast	cmake-build-debug/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	cmake-build-debug/lib/flecs/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	cmake-build-debug/lib/libflint/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	cmake-build-release/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	cmake-build-release/lib/flecs/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	cmake-build-release/lib/libflint/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/strip	cmake-build-debug/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	cmake-build-debug/lib/flecs/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	cmake-build-debug/lib/libflint/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	cmake-build-release/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	cmake-build-release/lib/flecs/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	cmake-build-release/lib/libflint/Makefile	/^install\/strip: preinstall$/;"	t
install/strip/fast	cmake-build-debug/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	cmake-build-debug/lib/flecs/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	cmake-build-debug/lib/libflint/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	cmake-build-release/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	cmake-build-release/lib/flecs/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	cmake-build-release/lib/libflint/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install_test_abort	lib/flecs/test/api/src/util.c	/^void install_test_abort() {$/;"	f	typeref:typename:void
install_test_abort	lib/flecs/test/collections/src/utils.c	/^void install_test_abort() {$/;"	f	typeref:typename:void
install_test_abort	lib/flecs/test/cpp_api/src/util.cpp	/^void install_test_abort() {$/;"	f	typeref:typename:void
instance_count	lib/flecs/flecs.h	/^    int32_t instance_count;       \/* Number of entities to iterate before next table *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
instance_count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t instance_count;       \/* Number of entities to iterate before next table *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
instanced	lib/flecs/flecs.h	/^    Base& instanced() {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
instanced	lib/flecs/flecs.h	/^    bool instanced;             \/* See ecs_filter_desc_t *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:bool
instanced	lib/flecs/flecs.h	/^    bool instanced;            \/* See ecs_filter_desc_t *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
instanced	lib/flecs/flecs.h	/^    bool instanced;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:bool
instanced	lib/flecs/flecs.h	/^    bool instanced;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:bool
instanced	lib/flecs/flecs.h	/^    static bool instanced() {$/;"	f	struct:flecs::_::each_invoker	typeref:typename:bool
instanced	lib/flecs/flecs.h	/^    static bool instanced() {$/;"	f	struct:flecs::_::iter_invoker	typeref:typename:bool
instanced	lib/flecs/include/flecs.h	/^    bool instanced;             \/* See ecs_filter_desc_t *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:bool
instanced	lib/flecs/include/flecs.h	/^    bool instanced;            \/* See ecs_filter_desc_t *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
instanced	lib/flecs/include/flecs.h	/^    bool instanced;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:bool
instanced	lib/flecs/include/flecs.h	/^    bool instanced;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:bool
instanced	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static bool instanced() {$/;"	f	struct:flecs::_::each_invoker	typeref:typename:bool
instanced	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static bool instanced() {$/;"	f	struct:flecs::_::iter_invoker	typeref:typename:bool
instanced	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& instanced() {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
instantiate	lib/flecs/flecs.c	/^void instantiate($/;"	f	typeref:typename:void	file:
instantiate	lib/flecs/src/entity.c	/^void instantiate($/;"	f	typeref:typename:void	file:
instantiate_children	lib/flecs/flecs.c	/^void instantiate_children($/;"	f	typeref:typename:void	file:
instantiate_children	lib/flecs/src/entity.c	/^void instantiate_children($/;"	f	typeref:typename:void	file:
int_match	lib/libflint/tests/tests.c	/^int int_match(const void* a, const void* b) {$/;"	f	typeref:typename:int
intchar_copy	lib/uthash/tests/test52.c	/^static void intchar_copy(void *_dst, const void *_src)$/;"	f	typeref:typename:void	file:
intchar_dtor	lib/uthash/tests/test52.c	/^static void intchar_dtor(void *_elt)$/;"	f	typeref:typename:void	file:
intchar_t	lib/uthash/tests/test52.c	/^} intchar_t;$/;"	t	typeref:struct:__anonbb9414c10108	file:
interop	lib/flecs/test/cpp_api/src/World.cpp	/^namespace interop {$/;"	n	namespace:test	file:
interrupted_by	lib/flecs/flecs.h	/^    ecs_entity_t interrupted_by;  \/* When set, system execution is interrupted *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t
interrupted_by	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t interrupted_by;  \/* When set, system execution is interrupted *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t
interval	lib/flecs/flecs.h	/^    Base& interval(FLECS_FLOAT interval) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
interval	lib/flecs/flecs.h	/^    FLECS_FLOAT interval;$/;"	m	struct:ecs_system_desc_t	typeref:typename:FLECS_FLOAT
interval	lib/flecs/flecs.h	/^inline FLECS_FLOAT system::interval() {$/;"	f	class:flecs::system	typeref:typename:FLECS_FLOAT
interval	lib/flecs/flecs.h	/^inline void system::interval(FLECS_FLOAT interval) {$/;"	f	class:flecs::system	typeref:typename:void
interval	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& interval(FLECS_FLOAT interval) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
interval	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline FLECS_FLOAT system::interval() {$/;"	f	class:flecs::system	typeref:typename:FLECS_FLOAT
interval	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline void system::interval(FLECS_FLOAT interval) {$/;"	f	class:flecs::system	typeref:typename:void
interval	lib/flecs/include/flecs/addons/system.h	/^    FLECS_FLOAT interval;$/;"	m	struct:ecs_system_desc_t	typeref:typename:FLECS_FLOAT
intpair_t	lib/uthash/tests/test43.c	/^} intpair_t;$/;"	t	typeref:struct:__anonbb938ca10108	file:
intpair_t	lib/uthash/tests/test51.c	/^} intpair_t;$/;"	t	typeref:struct:__anonbb9410800108	file:
intptr	lib/flecs/examples/cpp/reflection/portable_type/src/main.cpp	/^    uintptr_t intptr;$/;"	m	struct:PortableType	typeref:typename:uintptr_t	file:
invalid	lib/flecs/flecs.c	/^    bool invalid;$/;"	m	struct:__anona642c0050a08	typeref:typename:bool	file:
invalid	lib/flecs/src/addons/http.c	/^    bool invalid;$/;"	m	struct:__anonc2d932d70208	typeref:typename:bool	file:
invoke	lib/flecs/flecs.h	/^    void invoke(ecs_iter_t *iter) const {$/;"	f	struct:flecs::_::each_invoker	typeref:typename:void
invoke	lib/flecs/flecs.h	/^    void invoke(ecs_iter_t *iter) const {$/;"	f	struct:flecs::_::iter_invoker	typeref:typename:void
invoke	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    void invoke(ecs_iter_t *iter) const {$/;"	f	struct:flecs::_::each_invoker	typeref:typename:void
invoke	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    void invoke(ecs_iter_t *iter) const {$/;"	f	struct:flecs::_::iter_invoker	typeref:typename:void
invoke_callback	lib/flecs/flecs.h	/^    static void invoke_callback($/;"	f	struct:flecs::_::each_invoker	typeref:typename:void
invoke_callback	lib/flecs/flecs.h	/^    static void invoke_callback($/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:void
invoke_callback	lib/flecs/flecs.h	/^    static void invoke_callback(const Func& f, size_t arg, ArrayType& ptrs, $/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:void
invoke_callback	lib/flecs/flecs.h	/^    static void invoke_callback(ecs_iter_t *iter, const Func& func, $/;"	f	struct:flecs::_::each_invoker	typeref:typename:void
invoke_callback	lib/flecs/flecs.h	/^    static void invoke_callback(ecs_iter_t *iter, const Func& func, $/;"	f	struct:flecs::_::iter_invoker	typeref:typename:void
invoke_callback	lib/flecs/flecs.h	/^    static void invoke_callback(ecs_iter_t *iter, const Func& func, size_t, $/;"	f	struct:flecs::_::iter_invoker	typeref:typename:void
invoke_callback	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static void invoke_callback($/;"	f	struct:flecs::_::each_invoker	typeref:typename:void
invoke_callback	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static void invoke_callback($/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:void
invoke_callback	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static void invoke_callback(const Func& f, size_t arg, ArrayType& ptrs, $/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:void
invoke_callback	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static void invoke_callback(ecs_iter_t *iter, const Func& func, $/;"	f	struct:flecs::_::each_invoker	typeref:typename:void
invoke_callback	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static void invoke_callback(ecs_iter_t *iter, const Func& func, $/;"	f	struct:flecs::_::iter_invoker	typeref:typename:void
invoke_callback	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static void invoke_callback(ecs_iter_t *iter, const Func& func, size_t, $/;"	f	struct:flecs::_::iter_invoker	typeref:typename:void
invoke_count	lib/flecs/flecs.c	/^    int32_t invoke_count;           \/* Number of times system is invoked *\/$/;"	m	struct:EcsSystem	typeref:typename:int32_t	file:
invoke_count	lib/flecs/flecs.h	/^    ecs_counter_t invoke_count;     \/* Number of times system is invoked *\/$/;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_counter_t
invoke_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t invoke_count;     \/* Number of times system is invoked *\/$/;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_counter_t
invoke_count	lib/flecs/src/addons/system/system.h	/^    int32_t invoke_count;           \/* Number of times system is invoked *\/$/;"	m	struct:EcsSystem	typeref:typename:int32_t
invoke_count	lib/flecs/test/api/src/Observer.c	/^static int invoke_count = 0;$/;"	v	typeref:typename:int	file:
invoke_count	lib/flecs/test/api/src/Trigger.c	/^static int invoke_count = 0;$/;"	v	typeref:typename:int	file:
invoke_get	lib/flecs/flecs.h	/^    static bool invoke_get(world_t *world, entity_t id, const Func& func) {$/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:bool
invoke_get	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static bool invoke_get(world_t *world, entity_t id, const Func& func) {$/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:bool
invoke_get_mut	lib/flecs/flecs.h	/^    static bool invoke_get_mut(world_t *world, entity_t id, const Func& func) {$/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:bool
invoke_get_mut	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static bool invoke_get_mut(world_t *world, entity_t id, const Func& func) {$/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:bool
invoke_status_action	lib/flecs/flecs.c	/^void invoke_status_action($/;"	f	typeref:typename:void	file:
invoke_status_action	lib/flecs/src/addons/system/system.c	/^void invoke_status_action($/;"	f	typeref:typename:void	file:
invoked	lib/flecs/test/api/include/api.h	/^    int32_t invoked;$/;"	m	struct:Probe	typeref:typename:int32_t
invoked	lib/flecs/test/api/src/ComponentLifecycle.c	/^    int32_t invoked;$/;"	m	struct:copy_ctx	typeref:typename:int32_t	file:
invoked	lib/flecs/test/api/src/ComponentLifecycle.c	/^    int32_t invoked;$/;"	m	struct:xtor_ctx	typeref:typename:int32_t	file:
invoked	lib/flecs/test/api/src/Internals.c	/^static int invoked = 0;$/;"	v	typeref:typename:int	file:
invoked	lib/flecs/test/api/src/Prefab.c	/^static int invoked;$/;"	v	typeref:typename:int	file:
invoked	lib/flecs/test/api/src/Snapshot.c	/^static bool invoked = false;$/;"	v	typeref:typename:bool	file:
invoked_count	lib/flecs/test/cpp_api/src/Query.cpp	/^static int invoked_count = 0;$/;"	v	typeref:typename:int	file:
invoker	lib/flecs/flecs.h	/^struct invoker { };$/;"	s	namespace:flecs::_
invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct invoker { };$/;"	s	namespace:flecs::_
ipaddr	lib/flecs/flecs.c	/^    const char *ipaddr;$/;"	m	struct:ecs_http_server_t	typeref:typename:const char *	file:
ipaddr	lib/flecs/flecs.h	/^    char *ipaddr;         \/* Interface address (optional, default = 0.0.0.0) *\/$/;"	m	struct:__anona642c00a0608	typeref:typename:char *
ipaddr	lib/flecs/flecs.h	/^    const char *ipaddr;               \/* Interface to listen on (optional) *\/$/;"	m	struct:__anona642c00a0c08	typeref:typename:const char *
ipaddr	lib/flecs/include/flecs/addons/http.h	/^    const char *ipaddr;               \/* Interface to listen on (optional) *\/$/;"	m	struct:__anon12cf63340608	typeref:typename:const char *
ipaddr	lib/flecs/include/flecs/addons/rest.h	/^    char *ipaddr;         \/* Interface address (optional, default = 0.0.0.0) *\/$/;"	m	struct:__anon29130e920108	typeref:typename:char *
ipaddr	lib/flecs/src/addons/http.c	/^    const char *ipaddr;$/;"	m	struct:ecs_http_server_t	typeref:typename:const char *	file:
iptr_t	lib/flecs/flecs.h	/^using iptr_t = ecs_iptr_t;$/;"	t	namespace:flecs	typeref:typename:ecs_iptr_t
iptr_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using iptr_t = ecs_iptr_t;$/;"	t	namespace:flecs	typeref:typename:ecs_iptr_t
is	lib/flecs/flecs.c	/^    } is;$/;"	m	struct:ecs_defer_op_t	typeref:union:ecs_defer_op_t::__anona642c005010a	file:
is	lib/flecs/flecs.c	/^    } is;$/;"	m	struct:ecs_rule_op_ctx_t	typeref:union:ecs_rule_op_ctx_t::__anona642c005070a	file:
is	lib/flecs/src/addons/rules.c	/^    } is;$/;"	m	struct:ecs_rule_op_ctx_t	typeref:union:ecs_rule_op_ctx_t::__anon218568c2030a	file:
is	lib/flecs/src/private_types.h	/^    } is;$/;"	m	struct:ecs_defer_op_t	typeref:union:ecs_defer_op_t::__anon1e338c63010a
is	lib/uthash/tests/test16.c	/^    struct inner is;           \/* key is aggregate of this field *\/$/;"	m	struct:my_event	typeref:struct:inner	file:
is_a	lib/flecs/flecs.h	/^    Base& is_a(entity_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
is_a	lib/flecs/flecs.h	/^    Self& is_a() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
is_a	lib/flecs/flecs.h	/^    Self& is_a(entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
is_a	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& is_a() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
is_a	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& is_a(entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
is_a	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    Base& is_a(entity_t object) {$/;"	f	struct:flecs::type_base	typeref:typename:Base &
is_actual	lib/flecs/flecs.h	/^struct is_actual {$/;"	s	namespace:flecs
is_actual	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^struct is_actual {$/;"	s	namespace:flecs
is_alive	lib/flecs/flecs.h	/^    bool is_alive() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
is_alive	lib/flecs/flecs.h	/^    bool is_alive(flecs::entity_t e) const {$/;"	f	struct:flecs::world	typeref:typename:bool
is_alive	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool is_alive() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
is_alive	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool is_alive(flecs::entity_t e) const {$/;"	f	struct:flecs::world	typeref:typename:bool
is_callable	lib/flecs/flecs.h	/^    static constexpr bool is_callable = false;$/;"	m	struct:flecs::_::function_traits_impl	typeref:typename:bool
is_callable	lib/flecs/flecs.h	/^    static constexpr bool is_callable = true;$/;"	m	struct:flecs::_::function_traits_defs	typeref:typename:bool
is_callable	lib/flecs/flecs.h	/^struct is_callable {$/;"	s	namespace:flecs
is_callable	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    static constexpr bool is_callable = false;$/;"	m	struct:flecs::_::function_traits_impl	typeref:typename:bool
is_callable	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    static constexpr bool is_callable = true;$/;"	m	struct:flecs::_::function_traits_defs	typeref:typename:bool
is_callable	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^struct is_callable {$/;"	s	namespace:flecs
is_case	lib/flecs/flecs.h	/^    bool is_case() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_case	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    bool is_case() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_collection	lib/flecs/flecs.h	/^    bool is_collection() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:bool
is_collection	lib/flecs/flecs.h	/^    bool is_collection;       \/* Is the scope iterating elements? *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:bool
is_collection	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    bool is_collection() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:bool
is_collection	lib/flecs/include/flecs/addons/meta.h	/^    bool is_collection;       \/* Is the scope iterating elements? *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:bool
is_const	lib/flecs/flecs.c	/^    bool is_const;$/;"	m	struct:meta_type_t	typeref:typename:bool	file:
is_const	lib/flecs/src/addons/meta_c.c	/^    bool is_const;$/;"	m	struct:meta_type_t	typeref:typename:bool	file:
is_control_flow	lib/flecs/flecs.c	/^bool is_control_flow($/;"	f	typeref:typename:bool	file:
is_control_flow	lib/flecs/src/addons/rules.c	/^bool is_control_flow($/;"	f	typeref:typename:bool	file:
is_deferred	lib/flecs/flecs.c	/^    bool is_deferred;$/;"	m	struct:__anona642c0050208	typeref:typename:bool	file:
is_deferred	lib/flecs/flecs.h	/^    bool is_deferred() {$/;"	f	struct:flecs::world	typeref:typename:bool
is_deferred	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool is_deferred() {$/;"	f	struct:flecs::world	typeref:typename:bool
is_deferred	lib/flecs/src/private_api.h	/^    bool is_deferred;$/;"	m	struct:__anonf633b8e80108	typeref:typename:bool
is_dirty	lib/flecs/flecs.c	/^    bool is_dirty;               \/* Should monitor sets be evaluated? *\/$/;"	m	struct:ecs_relation_monitor_t	typeref:typename:bool	file:
is_dirty	lib/flecs/flecs.c	/^    bool is_dirty;               \/* Should monitors be evaluated? *\/$/;"	m	struct:ecs_monitor_set_t	typeref:typename:bool	file:
is_dirty	lib/flecs/flecs.c	/^    bool is_dirty;               \/* Should queries be rematched? *\/$/;"	m	struct:ecs_monitor_t	typeref:typename:bool	file:
is_dirty	lib/flecs/src/private_types.h	/^    bool is_dirty;               \/* Should monitor sets be evaluated? *\/$/;"	m	struct:ecs_relation_monitor_t	typeref:typename:bool
is_dirty	lib/flecs/src/private_types.h	/^    bool is_dirty;               \/* Should monitors be evaluated? *\/$/;"	m	struct:ecs_monitor_set_t	typeref:typename:bool
is_dirty	lib/flecs/src/private_types.h	/^    bool is_dirty;               \/* Should queries be rematched? *\/$/;"	m	struct:ecs_monitor_t	typeref:typename:bool
is_enabled	lib/flecs/flecs.h	/^    bool is_enabled() {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
is_enabled	lib/flecs/flecs.h	/^    bool is_enabled(const flecs::entity_view& e) {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
is_enabled	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool is_enabled() {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
is_enabled	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool is_enabled(const flecs::entity_view& e) {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
is_entity	lib/flecs/flecs.h	/^    bool is_entity() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_entity	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    bool is_entity() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_entity_valid	lib/flecs/flecs.c	/^bool is_entity_valid($/;"	f	typeref:typename:bool	file:
is_entity_valid	lib/flecs/src/entity.c	/^bool is_entity_valid($/;"	f	typeref:typename:bool	file:
is_fatal	lib/uthash/tests/test93.c	/^static int is_fatal;$/;"	v	typeref:typename:int	file:
is_filter	lib/flecs/flecs.h	/^    bool is_filter;               \/* When true, data fields are not set *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
is_filter	lib/flecs/include/flecs/private/api_types.h	/^    bool is_filter;               \/* When true, data fields are not set *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
is_fini	lib/flecs/flecs.c	/^    bool is_fini;                \/* Is the world being cleaned up? *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool	file:
is_fini	lib/flecs/src/private_types.h	/^    bool is_fini;                \/* Is the world being cleaned up? *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool
is_fixed_size	lib/flecs/flecs.c	/^    bool is_fixed_size;$/;"	m	struct:meta_params_t	typeref:typename:bool	file:
is_fixed_size	lib/flecs/src/addons/meta_c.c	/^    bool is_fixed_size;$/;"	m	struct:meta_params_t	typeref:typename:bool	file:
is_flecs_constructible	lib/flecs/flecs.h	/^struct is_flecs_constructible {$/;"	s	namespace:flecs
is_flecs_constructible	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^struct is_flecs_constructible {$/;"	s	namespace:flecs
is_inline_array	lib/flecs/flecs.h	/^    bool is_inline_array;     \/* Is the scope iterating an inline array? *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:bool
is_inline_array	lib/flecs/include/flecs/addons/meta.h	/^    bool is_inline_array;     \/* Is the scope iterating an inline array? *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:bool
is_instanced	lib/flecs/flecs.h	/^    bool is_instanced;            \/* When true, owned terms are always returned as arrays *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
is_instanced	lib/flecs/include/flecs/private/api_types.h	/^    bool is_instanced;            \/* When true, owned terms are always returned as arrays *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
is_invoked	lib/flecs/test/api/src/Set.c	/^static bool is_invoked = false;$/;"	v	typeref:typename:bool	file:
is_invoked	lib/flecs/test/api/src/SystemMisc.c	/^static int is_invoked;$/;"	v	typeref:typename:int	file:
is_key_value	lib/flecs/flecs.c	/^    bool is_key_value;$/;"	m	struct:meta_params_t	typeref:typename:bool	file:
is_key_value	lib/flecs/src/addons/meta_c.c	/^    bool is_key_value;$/;"	m	struct:meta_params_t	typeref:typename:bool	file:
is_known	lib/flecs/flecs.c	/^bool is_known($/;"	f	typeref:typename:bool	file:
is_known	lib/flecs/src/addons/rules.c	/^bool is_known($/;"	f	typeref:typename:bool	file:
is_monitor	lib/flecs/flecs.h	/^    bool is_monitor;            \/* If true, the observer only triggers when the$/;"	m	struct:ecs_observer_t	typeref:typename:bool
is_monitor	lib/flecs/include/flecs.h	/^    bool is_monitor;            \/* If true, the observer only triggers when the$/;"	m	struct:ecs_observer_t	typeref:typename:bool
is_newline_comment	lib/flecs/flecs.c	/^bool is_newline_comment($/;"	f	typeref:typename:bool	file:
is_newline_comment	lib/flecs/src/addons/parser.c	/^bool is_newline_comment($/;"	f	typeref:typename:bool	file:
is_not_0	lib/flecs/flecs.h	/^    static constexpr int is_not_0() {$/;"	f	struct:flecs::_::enum_type	typeref:typename:int
is_not_0	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static constexpr int is_not_0() {$/;"	f	struct:flecs::_::enum_type	typeref:typename:int
is_number	lib/flecs/flecs.c	/^bool is_number($/;"	f	typeref:typename:bool	file:
is_number	lib/flecs/src/hierarchy.c	/^bool is_number($/;"	f	typeref:typename:bool	file:
is_owned	lib/flecs/flecs.h	/^    bool is_owned(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:bool
is_owned	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    bool is_owned(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:bool
is_pair	lib/flecs/flecs.h	/^    bool is_pair() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_pair	lib/flecs/flecs.h	/^struct is_pair {$/;"	s	namespace:flecs
is_pair	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    bool is_pair() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_pair	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^struct is_pair {$/;"	s	namespace:flecs
is_pair_known	lib/flecs/flecs.c	/^bool is_pair_known($/;"	f	typeref:typename:bool	file:
is_pair_known	lib/flecs/src/addons/rules.c	/^bool is_pair_known($/;"	f	typeref:typename:bool	file:
is_partial	lib/flecs/flecs.c	/^    bool is_partial;$/;"	m	struct:meta_member_t	typeref:typename:bool	file:
is_partial	lib/flecs/src/addons/meta_c.c	/^    bool is_partial;$/;"	m	struct:meta_member_t	typeref:typename:bool	file:
is_primitive_scope	lib/flecs/flecs.h	/^    bool is_primitive_scope;  \/* If in root scope, this allows for a push for primitive types */;"	m	struct:ecs_meta_cursor_t	typeref:typename:bool
is_primitive_scope	lib/flecs/include/flecs/addons/meta.h	/^    bool is_primitive_scope;  \/* If in root scope, this allows for a push for primitive types */;"	m	struct:ecs_meta_cursor_t	typeref:typename:bool
is_ptr	lib/flecs/flecs.c	/^    bool is_ptr;$/;"	m	struct:meta_type_t	typeref:typename:bool	file:
is_ptr	lib/flecs/src/addons/meta_c.c	/^    bool is_ptr;$/;"	m	struct:meta_type_t	typeref:typename:bool	file:
is_readonly	lib/flecs/flecs.c	/^    bool is_readonly;            \/* Is world being progressed *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool	file:
is_readonly	lib/flecs/flecs.c	/^    bool is_readonly;$/;"	m	struct:__anona642c0050208	typeref:typename:bool	file:
is_readonly	lib/flecs/flecs.h	/^    bool is_readonly() const {$/;"	f	struct:flecs::world	typeref:typename:bool
is_readonly	lib/flecs/flecs.h	/^    bool is_readonly(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:bool
is_readonly	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    bool is_readonly(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:bool
is_readonly	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool is_readonly() const {$/;"	f	struct:flecs::world	typeref:typename:bool
is_readonly	lib/flecs/src/private_api.h	/^    bool is_readonly;$/;"	m	struct:__anonf633b8e80108	typeref:typename:bool
is_readonly	lib/flecs/src/private_types.h	/^    bool is_readonly;            \/* Is world being progressed *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool
is_ref	lib/flecs/flecs.h	/^    bool is_ref;$/;"	m	struct:flecs::_::term_ptr	typeref:typename:bool
is_ref	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    bool is_ref;$/;"	m	struct:flecs::_::term_ptr	typeref:typename:bool
is_self_constructible	lib/flecs/flecs.h	/^struct is_self_constructible {$/;"	s	namespace:flecs
is_self_constructible	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^struct is_self_constructible {$/;"	s	namespace:flecs
is_sep	lib/flecs/flecs.c	/^bool is_sep($/;"	f	typeref:typename:bool	file:
is_sep	lib/flecs/src/hierarchy.c	/^bool is_sep($/;"	f	typeref:typename:bool	file:
is_set	lib/flecs/flecs.h	/^    bool is_set() {$/;"	f	struct:flecs::term	typeref:typename:bool
is_set	lib/flecs/flecs.h	/^    bool is_set(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:bool
is_set	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    bool is_set(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:bool
is_set	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    bool is_set() {$/;"	f	struct:flecs::term	typeref:typename:bool
is_subject	lib/flecs/flecs.c	/^bool is_subject($/;"	f	typeref:typename:bool	file:
is_subject	lib/flecs/src/addons/rules.c	/^bool is_subject($/;"	f	typeref:typename:bool	file:
is_switch	lib/flecs/flecs.h	/^    bool is_switch() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_switch	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    bool is_switch() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_term_id_supported	lib/flecs/flecs.c	/^bool is_term_id_supported($/;"	f	typeref:typename:bool	file:
is_term_id_supported	lib/flecs/src/query.c	/^bool is_term_id_supported($/;"	f	typeref:typename:bool	file:
is_trivial	lib/flecs/flecs.h	/^    bool is_trivial() {$/;"	f	struct:flecs::term	typeref:typename:bool
is_trivial	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    bool is_trivial() {$/;"	f	struct:flecs::term	typeref:typename:bool
is_true	lib/flecs/flecs.h	/^    bool is_true() {$/;"	f	struct:flecs::iter_iterable	typeref:typename:bool
is_true	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    bool is_true() {$/;"	f	struct:flecs::iter_iterable	typeref:typename:bool
is_valid	lib/flecs/flecs.h	/^    bool is_valid() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
is_valid	lib/flecs/flecs.h	/^    bool is_valid(flecs::entity_t e) const {$/;"	f	struct:flecs::world	typeref:typename:bool
is_valid	lib/flecs/flecs.h	/^    bool is_valid(int value) {$/;"	f	struct:flecs::enum_data	typeref:typename:bool
is_valid	lib/flecs/flecs.h	/^    bool is_valid;                \/* Set to true after first next() *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
is_valid	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool is_valid() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
is_valid	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    bool is_valid(int value) {$/;"	f	struct:flecs::enum_data	typeref:typename:bool
is_valid	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool is_valid(flecs::entity_t e) const {$/;"	f	struct:flecs::world	typeref:typename:bool
is_valid	lib/flecs/include/flecs/private/api_types.h	/^    bool is_valid;                \/* Set to true after first next() *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
is_valid_end_of_term	lib/flecs/flecs.c	/^bool is_valid_end_of_term($/;"	f	typeref:typename:bool	file:
is_valid_end_of_term	lib/flecs/src/addons/parser.c	/^bool is_valid_end_of_term($/;"	f	typeref:typename:bool	file:
is_value_set	lib/flecs/flecs.c	/^    bool is_value_set;$/;"	m	struct:meta_constant_t	typeref:typename:bool	file:
is_value_set	lib/flecs/src/addons/meta_c.c	/^    bool is_value_set;$/;"	m	struct:meta_constant_t	typeref:typename:bool	file:
is_wildcard	lib/flecs/flecs.h	/^    bool is_wildcard() const {$/;"	f	struct:flecs::id	typeref:typename:bool
is_wildcard	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    bool is_wildcard() const {$/;"	f	struct:flecs::id	typeref:typename:bool
isa_stmt	lib/flecs/flecs.c	/^    bool isa_stmt;$/;"	m	struct:__anona642c0050408	typeref:typename:bool	file:
isa_stmt	lib/flecs/src/addons/plecs.c	/^    bool isa_stmt;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:bool	file:
it	lib/flecs/flecs.c	/^    ecs_table_cache_iter_t it;$/;"	m	struct:ecs_rule_with_ctx_t	typeref:typename:ecs_table_cache_iter_t	file:
it	lib/flecs/flecs.h	/^    ecs_map_iter_t it;$/;"	m	struct:__anona642c00a0408	typeref:typename:ecs_map_iter_t
it	lib/flecs/flecs.h	/^    ecs_table_cache_iter_t it;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_table_cache_iter_t
it	lib/flecs/include/flecs/private/api_types.h	/^    ecs_table_cache_iter_t it;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_table_cache_iter_t
it	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_map_iter_t it;$/;"	m	struct:__anonceb012f80308	typeref:typename:ecs_map_iter_t
it	lib/flecs/src/addons/rules.c	/^    ecs_table_cache_iter_t it;$/;"	m	struct:ecs_rule_with_ctx_t	typeref:typename:ecs_table_cache_iter_t	file:
item	lib/uthash/tests/test23.c	/^} item;$/;"	t	typeref:struct:__anonbb9273df0108	file:
item	lib/uthash/tests/test59.c	/^typedef struct item {$/;"	s	file:
item	lib/uthash/tests/test60.c	/^typedef struct item {$/;"	s	file:
item	lib/uthash/tests/test90.c	/^struct item {$/;"	s	file:
item_kind	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^flecs::entity item_kind(flecs::entity item) {$/;"	f	typeref:typename:flecs::entity
item_name	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^const char* item_name(flecs::entity item) {$/;"	f	typeref:typename:const char *
item_t	lib/uthash/tests/test59.c	/^} item_t;$/;"	t	typeref:struct:item	file:
item_t	lib/uthash/tests/test60.c	/^} item_t;$/;"	t	typeref:struct:item	file:
iter	lib/flecs/flecs.h	/^    T iter(Func&& func) {$/;"	f	struct:flecs::_::node_builder	typeref:typename:T
iter	lib/flecs/flecs.h	/^    iter(ecs_iter_t *it) : m_iter(it) { $/;"	f	struct:flecs::iter
iter	lib/flecs/flecs.h	/^    void iter(Func&& func) const { $/;"	f	struct:flecs::iterable	typeref:typename:void
iter	lib/flecs/flecs.h	/^    } iter;                       \/* Iterator specific data *\/$/;"	m	struct:ecs_iter_private_t	typeref:union:ecs_iter_private_t::__anona642c00a010a
iter	lib/flecs/flecs.h	/^iter_iterable<Components...> iterable<Components...>::iter() const$/;"	f	class:flecs::iterable	typeref:typename:iter_iterable<Components...>
iter	lib/flecs/flecs.h	/^struct iter {$/;"	s	namespace:flecs
iter	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    iter(ecs_iter_t *it) : m_iter(it) { $/;"	f	struct:flecs::iter
iter	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^struct iter {$/;"	s	namespace:flecs
iter	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    void iter(Func&& func) const { $/;"	f	struct:flecs::iterable	typeref:typename:void
iter	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^iter_iterable<Components...> iterable<Components...>::iter() const$/;"	f	class:flecs::iterable	typeref:typename:iter_iterable<Components...>
iter	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    T iter(Func&& func) {$/;"	f	struct:flecs::_::node_builder	typeref:typename:T
iter	lib/flecs/include/flecs/private/api_types.h	/^    } iter;                       \/* Iterator specific data *\/$/;"	m	struct:ecs_iter_private_t	typeref:union:ecs_iter_private_t::__anon49db2d84010a
iter_invoker	lib/flecs/flecs.h	/^    explicit iter_invoker(Func&& func) noexcept $/;"	f	struct:flecs::_::iter_invoker
iter_invoker	lib/flecs/flecs.h	/^    explicit iter_invoker(const Func& func) noexcept $/;"	f	struct:flecs::_::iter_invoker
iter_invoker	lib/flecs/flecs.h	/^struct iter_invoker : invoker {$/;"	s	namespace:flecs::_
iter_invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    explicit iter_invoker(Func&& func) noexcept $/;"	f	struct:flecs::_::iter_invoker
iter_invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    explicit iter_invoker(const Func& func) noexcept $/;"	f	struct:flecs::_::iter_invoker
iter_invoker	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct iter_invoker : invoker {$/;"	s	namespace:flecs::_
iter_iterable	lib/flecs/flecs.h	/^    iter_iterable(Iterable *it) $/;"	f	struct:flecs::iter_iterable
iter_iterable	lib/flecs/flecs.h	/^struct iter_iterable final : iterable<Components...> {$/;"	s	namespace:flecs
iter_iterable	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    iter_iterable(Iterable *it) $/;"	f	struct:flecs::iter_iterable
iter_iterable	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^struct iter_iterable final : iterable<Components...> {$/;"	s	namespace:flecs
iter_t	lib/flecs/flecs.h	/^using iter_t = ecs_iter_t;$/;"	t	namespace:flecs	typeref:typename:ecs_iter_t
iter_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using iter_t = ecs_iter_t;$/;"	t	namespace:flecs	typeref:typename:ecs_iter_t
iter_to_json_desc_t	lib/flecs/flecs.h	/^using iter_to_json_desc_t = ecs_iter_to_json_desc_t;$/;"	t	namespace:flecs	typeref:typename:ecs_iter_to_json_desc_t
iter_to_json_desc_t	lib/flecs/include/flecs/addons/cpp/mixins/json/decl.hpp	/^using iter_to_json_desc_t = ecs_iter_to_json_desc_t;$/;"	t	namespace:flecs	typeref:typename:ecs_iter_to_json_desc_t
iterable	lib/flecs/flecs.c	/^    ecs_iterable_t iterable;    \/* Iterable mixin *\/$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_iterable_t	file:
iterable	lib/flecs/flecs.c	/^    ecs_iterable_t iterable;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_iterable_t	file:
iterable	lib/flecs/flecs.c	/^    ecs_iterable_t iterable;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_iterable_t	file:
iterable	lib/flecs/flecs.h	/^    ecs_iterable_t iterable;   \/* Iterable mixin *\/$/;"	m	struct:ecs_filter_t	typeref:typename:ecs_iterable_t
iterable	lib/flecs/flecs.h	/^struct iterable {$/;"	s	namespace:flecs
iterable	lib/flecs/include/flecs.h	/^    ecs_iterable_t iterable;   \/* Iterable mixin *\/$/;"	m	struct:ecs_filter_t	typeref:typename:ecs_iterable_t
iterable	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^struct iterable {$/;"	s	namespace:flecs
iterable	lib/flecs/src/addons/rules.c	/^    ecs_iterable_t iterable;    \/* Iterable mixin *\/$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_iterable_t	file:
iterable	lib/flecs/src/private_types.h	/^    ecs_iterable_t iterable;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_iterable_t
iterable	lib/flecs/src/private_types.h	/^    ecs_iterable_t iterable;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_iterable_t
iterate	lib/flecs/flecs.h	/^    void iterate(Func&& func, NextFunc next, Args &&... args) const {$/;"	f	struct:flecs::iterable	typeref:typename:void
iterate	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    void iterate(Func&& func, NextFunc next, Args &&... args) const {$/;"	f	struct:flecs::iterable	typeref:typename:void
iterate_components	lib/flecs/examples/c/entities/iterate_components/src/main.c	/^void iterate_components(ecs_world_t *ecs, ecs_entity_t e) {$/;"	f	typeref:typename:void
iterate_components	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^void iterate_components(flecs::entity e) {$/;"	f	typeref:typename:void
iterate_tree	lib/flecs/examples/c/entities/hierarchy/src/main.c	/^void iterate_tree(ecs_world_t *ecs, ecs_entity_t e, Position p_parent) {$/;"	f	typeref:typename:void
iterate_tree	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^void iterate_tree(flecs::entity e, Position p_parent = {0, 0}) {$/;"	f	typeref:typename:void
j_buf	lib/uthash/tests/test93.c	/^static jmp_buf j_buf;$/;"	v	typeref:typename:jmp_buf	file:
json_array_pop	lib/flecs/flecs.c	/^void json_array_pop($/;"	f	typeref:typename:void
json_array_pop	lib/flecs/src/addons/json/json.c	/^void json_array_pop($/;"	f	typeref:typename:void
json_array_push	lib/flecs/flecs.c	/^void json_array_push($/;"	f	typeref:typename:void
json_array_push	lib/flecs/src/addons/json/json.c	/^void json_array_push($/;"	f	typeref:typename:void
json_bool	lib/flecs/flecs.c	/^void json_bool($/;"	f	typeref:typename:void
json_bool	lib/flecs/src/addons/json/json.c	/^void json_bool($/;"	f	typeref:typename:void
json_false	lib/flecs/flecs.c	/^void json_false($/;"	f	typeref:typename:void
json_false	lib/flecs/src/addons/json/json.c	/^void json_false($/;"	f	typeref:typename:void
json_id	lib/flecs/flecs.c	/^void json_id($/;"	f	typeref:typename:void
json_id	lib/flecs/src/addons/json/json.c	/^void json_id($/;"	f	typeref:typename:void
json_label	lib/flecs/flecs.c	/^void json_label($/;"	f	typeref:typename:void
json_label	lib/flecs/src/addons/json/json.c	/^void json_label($/;"	f	typeref:typename:void
json_literal	lib/flecs/flecs.c	/^void json_literal($/;"	f	typeref:typename:void
json_literal	lib/flecs/src/addons/json/json.c	/^void json_literal($/;"	f	typeref:typename:void
json_member	lib/flecs/flecs.c	/^void json_member($/;"	f	typeref:typename:void
json_member	lib/flecs/src/addons/json/json.c	/^void json_member($/;"	f	typeref:typename:void
json_next	lib/flecs/flecs.c	/^void json_next($/;"	f	typeref:typename:void
json_next	lib/flecs/src/addons/json/json.c	/^void json_next($/;"	f	typeref:typename:void
json_number	lib/flecs/flecs.c	/^void json_number($/;"	f	typeref:typename:void
json_number	lib/flecs/src/addons/json/json.c	/^void json_number($/;"	f	typeref:typename:void
json_object_pop	lib/flecs/flecs.c	/^void json_object_pop($/;"	f	typeref:typename:void
json_object_pop	lib/flecs/src/addons/json/json.c	/^void json_object_pop($/;"	f	typeref:typename:void
json_object_push	lib/flecs/flecs.c	/^void json_object_push($/;"	f	typeref:typename:void
json_object_push	lib/flecs/src/addons/json/json.c	/^void json_object_push($/;"	f	typeref:typename:void
json_op_to_primitive_kind	lib/flecs/flecs.c	/^ecs_primitive_kind_t json_op_to_primitive_kind($/;"	f	typeref:typename:ecs_primitive_kind_t
json_op_to_primitive_kind	lib/flecs/src/addons/json/json.c	/^ecs_primitive_kind_t json_op_to_primitive_kind($/;"	f	typeref:typename:ecs_primitive_kind_t
json_path	lib/flecs/flecs.c	/^void json_path($/;"	f	typeref:typename:void
json_path	lib/flecs/src/addons/json/json.c	/^void json_path($/;"	f	typeref:typename:void
json_ser_array	lib/flecs/flecs.c	/^int json_ser_array($/;"	f	typeref:typename:int	file:
json_ser_array	lib/flecs/src/addons/json/serialize.c	/^int json_ser_array($/;"	f	typeref:typename:int	file:
json_ser_bitmask	lib/flecs/flecs.c	/^int json_ser_bitmask($/;"	f	typeref:typename:int	file:
json_ser_bitmask	lib/flecs/src/addons/json/serialize.c	/^int json_ser_bitmask($/;"	f	typeref:typename:int	file:
json_ser_elements	lib/flecs/flecs.c	/^int json_ser_elements($/;"	f	typeref:typename:int	file:
json_ser_elements	lib/flecs/src/addons/json/serialize.c	/^int json_ser_elements($/;"	f	typeref:typename:int	file:
json_ser_enum	lib/flecs/flecs.c	/^int json_ser_enum($/;"	f	typeref:typename:int	file:
json_ser_enum	lib/flecs/src/addons/json/serialize.c	/^int json_ser_enum($/;"	f	typeref:typename:int	file:
json_ser_type	lib/flecs/flecs.c	/^int json_ser_type($/;"	f	typeref:typename:int	file:
json_ser_type	lib/flecs/src/addons/json/serialize.c	/^int json_ser_type($/;"	f	typeref:typename:int	file:
json_ser_type_elements	lib/flecs/flecs.c	/^int json_ser_type_elements($/;"	f	typeref:typename:int	file:
json_ser_type_elements	lib/flecs/src/addons/json/serialize.c	/^int json_ser_type_elements($/;"	f	typeref:typename:int	file:
json_ser_type_op	lib/flecs/flecs.c	/^int json_ser_type_op($/;"	f	typeref:typename:int	file:
json_ser_type_op	lib/flecs/src/addons/json/serialize.c	/^int json_ser_type_op($/;"	f	typeref:typename:int	file:
json_ser_type_ops	lib/flecs/flecs.c	/^int json_ser_type_ops($/;"	f	typeref:typename:int	file:
json_ser_type_ops	lib/flecs/src/addons/json/serialize.c	/^int json_ser_type_ops($/;"	f	typeref:typename:int	file:
json_ser_vector	lib/flecs/flecs.c	/^int json_ser_vector($/;"	f	typeref:typename:int	file:
json_ser_vector	lib/flecs/src/addons/json/serialize.c	/^int json_ser_vector($/;"	f	typeref:typename:int	file:
json_string	lib/flecs/flecs.c	/^void json_string($/;"	f	typeref:typename:void
json_string	lib/flecs/src/addons/json/json.c	/^void json_string($/;"	f	typeref:typename:void
json_true	lib/flecs/flecs.c	/^void json_true($/;"	f	typeref:typename:void
json_true	lib/flecs/src/addons/json/json.c	/^void json_true($/;"	f	typeref:typename:void
json_typeinfo_ser_array	lib/flecs/flecs.c	/^int json_typeinfo_ser_array($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_array	lib/flecs/src/addons/json/serialize_type_info.c	/^int json_typeinfo_ser_array($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_array_type	lib/flecs/flecs.c	/^int json_typeinfo_ser_array_type($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_array_type	lib/flecs/src/addons/json/serialize_type_info.c	/^int json_typeinfo_ser_array_type($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_bitmask	lib/flecs/flecs.c	/^void json_typeinfo_ser_bitmask($/;"	f	typeref:typename:void	file:
json_typeinfo_ser_bitmask	lib/flecs/src/addons/json/serialize_type_info.c	/^void json_typeinfo_ser_bitmask($/;"	f	typeref:typename:void	file:
json_typeinfo_ser_constants	lib/flecs/flecs.c	/^void json_typeinfo_ser_constants($/;"	f	typeref:typename:void	file:
json_typeinfo_ser_constants	lib/flecs/src/addons/json/serialize_type_info.c	/^void json_typeinfo_ser_constants($/;"	f	typeref:typename:void	file:
json_typeinfo_ser_enum	lib/flecs/flecs.c	/^void json_typeinfo_ser_enum($/;"	f	typeref:typename:void	file:
json_typeinfo_ser_enum	lib/flecs/src/addons/json/serialize_type_info.c	/^void json_typeinfo_ser_enum($/;"	f	typeref:typename:void	file:
json_typeinfo_ser_primitive	lib/flecs/flecs.c	/^int json_typeinfo_ser_primitive($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_primitive	lib/flecs/src/addons/json/serialize_type_info.c	/^int json_typeinfo_ser_primitive($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_type	lib/flecs/flecs.c	/^int json_typeinfo_ser_type($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_type	lib/flecs/src/addons/json/serialize_type_info.c	/^int json_typeinfo_ser_type($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_type_op	lib/flecs/flecs.c	/^int json_typeinfo_ser_type_op($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_type_op	lib/flecs/src/addons/json/serialize_type_info.c	/^int json_typeinfo_ser_type_op($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_type_ops	lib/flecs/flecs.c	/^int json_typeinfo_ser_type_ops($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_type_ops	lib/flecs/src/addons/json/serialize_type_info.c	/^int json_typeinfo_ser_type_ops($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_unit	lib/flecs/flecs.c	/^int json_typeinfo_ser_unit($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_unit	lib/flecs/src/addons/json/serialize_type_info.c	/^int json_typeinfo_ser_unit($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_vector	lib/flecs/flecs.c	/^int json_typeinfo_ser_vector($/;"	f	typeref:typename:int	file:
json_typeinfo_ser_vector	lib/flecs/src/addons/json/serialize_type_info.c	/^int json_typeinfo_ser_vector($/;"	f	typeref:typename:int	file:
key	lib/flecs/flecs.h	/^    const char *key;$/;"	m	struct:__anona642c00a0808	typeref:typename:const char *
key	lib/flecs/flecs.h	/^    void *key;$/;"	m	struct:__anona642c00a0508	typeref:typename:void *
key	lib/flecs/include/flecs/addons/http.h	/^    const char *key;$/;"	m	struct:__anon12cf63340208	typeref:typename:const char *
key	lib/flecs/include/flecs/private/hashmap.h	/^    void *key;$/;"	m	struct:__anonceb012f80408	typeref:typename:void *
key	lib/uthash/include/uthash.h	/^   const void *key;                  \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle	typeref:typename:const void *
key	lib/uthash/src/uthash.h	/^   const void *key;                  \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle	typeref:typename:const void *
key	lib/uthash/tests/keystat.c	/^    char *key;$/;"	m	struct:stat_key	typeref:typename:char *	file:
key	lib/uthash/tests/lru_cache/cache.c	/^	char *key; \/**<The key *\/$/;"	m	struct:foo_cache_entry	typeref:typename:char *	file:
key	lib/uthash/tests/lru_cache/main.c	/^	char *key;$/;"	m	struct:key_record	typeref:typename:char *	file:
key	lib/uthash/tests/test21.c	/^    record_key_t key;$/;"	m	struct:__anonbb926b5d0208	typeref:typename:record_key_t	file:
key	lib/uthash/tests/test23.c	/^    int key;$/;"	m	struct:__anonbb9273df0108	typeref:typename:int	file:
key	lib/uthash/tests/test57.c	/^    void *key;$/;"	m	struct:__anonbb942a060108	typeref:typename:void *	file:
key	lib/uthash/tests/test65.c	/^    char *key;$/;"	m	struct:CacheEntry	typeref:typename:char *	file:
key_record	lib/uthash/tests/lru_cache/main.c	/^struct key_record {$/;"	s	file:
key_size	lib/flecs/flecs.h	/^    ecs_size_t key_size;$/;"	m	struct:__anona642c00a0308	typeref:typename:ecs_size_t
key_size	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_size_t key_size;$/;"	m	struct:__anonceb012f80208	typeref:typename:ecs_size_t
key_type	lib/flecs/flecs.c	/^    meta_type_t key_type;$/;"	m	struct:meta_params_t	typeref:typename:meta_type_t	file:
key_type	lib/flecs/src/addons/meta_c.c	/^    meta_type_t key_type;$/;"	m	struct:meta_params_t	typeref:typename:meta_type_t	file:
keylen	lib/uthash/include/uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle	typeref:typename:unsigned
keylen	lib/uthash/src/uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle	typeref:typename:unsigned
keys	lib/flecs/flecs.h	/^    ecs_map_key_t *keys;    \/* Array with keys *\/$/;"	m	struct:ecs_bucket_t	typeref:typename:ecs_map_key_t *
keys	lib/flecs/flecs.h	/^    ecs_vector_t *keys;$/;"	m	struct:__anona642c00a0208	typeref:typename:ecs_vector_t *
keys	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_vector_t *keys;$/;"	m	struct:__anonceb012f80108	typeref:typename:ecs_vector_t *
keys	lib/flecs/include/flecs/private/map.h	/^    ecs_map_key_t *keys;    \/* Array with keys *\/$/;"	m	struct:ecs_bucket_t	typeref:typename:ecs_map_key_t *
keystat	lib/uthash/tests/Makefile	/^keystat : $(HASHDIR)\/uthash.h$/;"	t
kind	lib/flecs/flecs.c	/^    ecs_defer_op_kind_t kind;         \/* Operation kind *\/    $/;"	m	struct:ecs_defer_op_t	typeref:typename:ecs_defer_op_kind_t	file:
kind	lib/flecs/flecs.c	/^    ecs_query_eventkind_t kind;$/;"	m	struct:ecs_query_event_t	typeref:typename:ecs_query_eventkind_t	file:
kind	lib/flecs/flecs.c	/^    ecs_rule_op_kind_t kind;    \/* What kind of operation is it *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:ecs_rule_op_kind_t	file:
kind	lib/flecs/flecs.c	/^    ecs_rule_var_kind_t kind;$/;"	m	struct:ecs_rule_var_t	typeref:typename:ecs_rule_var_kind_t	file:
kind	lib/flecs/flecs.c	/^    ecs_table_eventkind_t kind;$/;"	m	struct:ecs_table_event_t	typeref:typename:ecs_table_eventkind_t	file:
kind	lib/flecs/flecs.h	/^    Base& kind() {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
kind	lib/flecs/flecs.h	/^    Base& kind(entity_t phase) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
kind	lib/flecs/flecs.h	/^    ecs_iter_kind_t kind; $/;"	m	struct:ecs_filter_iter_t	typeref:typename:ecs_iter_kind_t
kind	lib/flecs/flecs.h	/^    ecs_meta_type_op_kind_t kind;$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_meta_type_op_kind_t
kind	lib/flecs/flecs.h	/^    ecs_primitive_kind_t kind;$/;"	m	struct:EcsPrimitive	typeref:typename:ecs_primitive_kind_t
kind	lib/flecs/flecs.h	/^    ecs_primitive_kind_t kind;$/;"	m	struct:ecs_primitive_desc_t	typeref:typename:ecs_primitive_kind_t
kind	lib/flecs/flecs.h	/^    ecs_type_kind_t kind;$/;"	m	struct:EcsMetaType	typeref:typename:ecs_type_kind_t
kind	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& kind() {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
kind	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& kind(entity_t phase) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
kind	lib/flecs/include/flecs/addons/meta.h	/^    ecs_meta_type_op_kind_t kind;$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_meta_type_op_kind_t
kind	lib/flecs/include/flecs/addons/meta.h	/^    ecs_primitive_kind_t kind;$/;"	m	struct:EcsPrimitive	typeref:typename:ecs_primitive_kind_t
kind	lib/flecs/include/flecs/addons/meta.h	/^    ecs_primitive_kind_t kind;$/;"	m	struct:ecs_primitive_desc_t	typeref:typename:ecs_primitive_kind_t
kind	lib/flecs/include/flecs/addons/meta.h	/^    ecs_type_kind_t kind;$/;"	m	struct:EcsMetaType	typeref:typename:ecs_type_kind_t
kind	lib/flecs/include/flecs/private/api_types.h	/^    ecs_iter_kind_t kind; $/;"	m	struct:ecs_filter_iter_t	typeref:typename:ecs_iter_kind_t
kind	lib/flecs/src/addons/rules.c	/^    ecs_rule_op_kind_t kind;    \/* What kind of operation is it *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:ecs_rule_op_kind_t	file:
kind	lib/flecs/src/addons/rules.c	/^    ecs_rule_var_kind_t kind;$/;"	m	struct:ecs_rule_var_t	typeref:typename:ecs_rule_var_kind_t	file:
kind	lib/flecs/src/private_types.h	/^    ecs_defer_op_kind_t kind;         \/* Operation kind *\/    $/;"	m	struct:ecs_defer_op_t	typeref:typename:ecs_defer_op_kind_t
kind	lib/flecs/src/private_types.h	/^    ecs_query_eventkind_t kind;$/;"	m	struct:ecs_query_event_t	typeref:typename:ecs_query_eventkind_t
kind	lib/flecs/src/private_types.h	/^    ecs_table_eventkind_t kind;$/;"	m	struct:ecs_table_event_t	typeref:typename:ecs_table_eventkind_t
label	lib/flecs/flecs.c	/^    int32_t label;             \/* Operation label to jump to *\/$/;"	m	struct:ecs_rule_setjmp_ctx_t	typeref:typename:int32_t	file:
label	lib/flecs/src/addons/rules.c	/^    int32_t label;             \/* Operation label to jump to *\/$/;"	m	struct:ecs_rule_setjmp_ctx_t	typeref:typename:int32_t	file:
last	lib/flecs/flecs.c	/^    ecs_query_table_match_t *last;   \/* Last discovered match for table *\/$/;"	m	struct:ecs_query_table_t	typeref:typename:ecs_query_table_match_t *	file:
last	lib/flecs/flecs.c	/^    ecs_query_table_node_t *last;$/;"	m	struct:ecs_query_table_list_t	typeref:typename:ecs_query_table_node_t *	file:
last	lib/flecs/flecs.c	/^    ecs_table_cache_hdr_t *last;$/;"	m	struct:ecs_table_cache_list_t	typeref:typename:ecs_table_cache_hdr_t *	file:
last	lib/flecs/flecs.h	/^    T& last() {$/;"	f	class:flecs::vector	typeref:typename:T &
last	lib/flecs/flecs.h	/^    int last() const {$/;"	f	struct:flecs::enum_data	typeref:typename:int
last	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    int last() const {$/;"	f	struct:flecs::enum_data	typeref:typename:int
last	lib/flecs/include/flecs/private/vector.h	/^    T& last() {$/;"	f	class:flecs::vector	typeref:typename:T &
last	lib/flecs/src/private_types.h	/^    ecs_query_table_match_t *last;   \/* Last discovered match for table *\/$/;"	m	struct:ecs_query_table_t	typeref:typename:ecs_query_table_match_t *
last	lib/flecs/src/private_types.h	/^    ecs_query_table_node_t *last;$/;"	m	struct:ecs_query_table_list_t	typeref:typename:ecs_query_table_node_t *
last	lib/flecs/src/private_types.h	/^    ecs_table_cache_hdr_t *last;$/;"	m	struct:ecs_table_cache_list_t	typeref:typename:ecs_table_cache_hdr_t *
last_assign_id	lib/flecs/flecs.c	/^    ecs_id_t last_assign_id;$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_id_t	file:
last_assign_id	lib/flecs/src/addons/plecs.c	/^    ecs_id_t last_assign_id;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_id_t	file:
last_column	lib/flecs/flecs.h	/^    int32_t last_column;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
last_column	lib/flecs/include/flecs/private/api_types.h	/^    int32_t last_column;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
last_component_id	lib/flecs/flecs.h	/^    ecs_entity_t last_component_id;   \/* Last issued component entity id *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:ecs_entity_t
last_component_id	lib/flecs/include/flecs.h	/^    ecs_entity_t last_component_id;   \/* Last issued component entity id *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:ecs_entity_t
last_event_id	lib/flecs/flecs.h	/^    int32_t *last_event_id;     \/* Optional pointer to observer last_event_id *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:int32_t *
last_event_id	lib/flecs/flecs.h	/^    int32_t *last_event_id;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:int32_t *
last_event_id	lib/flecs/flecs.h	/^    int32_t last_event_id;      \/* Last handled event id *\/$/;"	m	struct:ecs_observer_t	typeref:typename:int32_t
last_event_id	lib/flecs/include/flecs.h	/^    int32_t *last_event_id;     \/* Optional pointer to observer last_event_id *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:int32_t *
last_event_id	lib/flecs/include/flecs.h	/^    int32_t *last_event_id;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:int32_t *
last_event_id	lib/flecs/include/flecs.h	/^    int32_t last_event_id;      \/* Last handled event id *\/$/;"	m	struct:ecs_observer_t	typeref:typename:int32_t
last_frame	lib/flecs/flecs.c	/^    int32_t last_frame;             \/* Last frame for which the system was considered *\/$/;"	m	struct:EcsSystem	typeref:typename:int32_t	file:
last_frame	lib/flecs/src/addons/system/system.h	/^    int32_t last_frame;             \/* Last frame for which the system was considered *\/$/;"	m	struct:EcsSystem	typeref:typename:int32_t
last_id	lib/flecs/flecs.c	/^    ecs_entity_t last_id;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_entity_t	file:
last_id	lib/flecs/flecs.h	/^    ecs_entity_t last_id;             \/* Last issued entity id *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:ecs_entity_t
last_id	lib/flecs/include/flecs.h	/^    ecs_entity_t last_id;             \/* Last issued entity id *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:ecs_entity_t
last_id	lib/flecs/src/addons/snapshot.c	/^    ecs_entity_t last_id;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_entity_t	file:
last_object	lib/flecs/flecs.c	/^    ecs_entity_t last_object;$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_entity_t	file:
last_object	lib/flecs/src/addons/plecs.c	/^    ecs_entity_t last_object;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_entity_t	file:
last_predicate	lib/flecs/flecs.c	/^    ecs_entity_t last_predicate;$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_entity_t	file:
last_predicate	lib/flecs/src/addons/plecs.c	/^    ecs_entity_t last_predicate;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_entity_t	file:
last_subject	lib/flecs/flecs.c	/^    ecs_entity_t last_subject;$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_entity_t	file:
last_subject	lib/flecs/src/addons/plecs.c	/^    ecs_entity_t last_subject;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_entity_t	file:
last_system	lib/flecs/flecs.c	/^    ecs_entity_t last_system;$/;"	m	struct:EcsPipelineQuery	typeref:typename:ecs_entity_t	file:
last_system	lib/flecs/src/addons/pipeline/pipeline.h	/^    ecs_entity_t last_system;$/;"	m	struct:EcsPipelineQuery	typeref:typename:ecs_entity_t
layer1	lib/uthash/doc/banner.svg	/^     inkscape:groupmode="layer">$/;"	i
layer1	lib/uthash/doc/uthash-mini.svg	/^     transform="translate(-17.9166,-36.67108)">$/;"	i
left	lib/libflint/include/lfbinarytree.h	/^    struct BinTreeNode *left;$/;"	m	struct:BinTreeNode	typeref:struct:BinTreeNode *
len	lib/uthash/tests/keystat.c	/^    unsigned len;$/;"	m	struct:stat_key	typeref:typename:unsigned	file:
len	lib/uthash/tests/test22.c	/^    size_t len;$/;"	m	struct:__anonbb926f9e0108	typeref:typename:size_t	file:
length	lib/flecs/flecs.c	/^    ecs_size_t length;$/;"	m	struct:ecs_hashed_string_t	typeref:typename:ecs_size_t	file:
length	lib/flecs/flecs.h	/^    ecs_size_t length;$/;"	m	struct:EcsIdentifier	typeref:typename:ecs_size_t
length	lib/flecs/flecs.h	/^    int32_t length;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
length	lib/flecs/flecs.h	/^    static constexpr size_t length( char const (&)[N] ) {$/;"	f	struct:flecs::string	typeref:typename:size_t
length	lib/flecs/flecs.h	/^    std::size_t length() {$/;"	f	struct:flecs::string	typeref:typename:std::size_t
length	lib/flecs/flecs.h	/^struct length {$/;"	s	struct:flecs::units
length	lib/flecs/include/flecs.h	/^    ecs_size_t length;$/;"	m	struct:EcsIdentifier	typeref:typename:ecs_size_t
length	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct length {$/;"	s	struct:flecs::units
length	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    static constexpr size_t length( char const (&)[N] ) {$/;"	f	struct:flecs::string	typeref:typename:size_t
length	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    std::size_t length() {$/;"	f	struct:flecs::string	typeref:typename:std::size_t
length	lib/flecs/include/flecs/private/strbuf.h	/^    int32_t length;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
length	lib/flecs/src/private_types.h	/^    ecs_size_t length;$/;"	m	struct:ecs_hashed_string_t	typeref:typename:ecs_size_t
lib/flecs/CMakeFiles/flecs.dir/rule	cmake-build-debug/lib/flecs/Makefile	/^lib\/flecs\/CMakeFiles\/flecs.dir\/rule:$/;"	t
lib/flecs/CMakeFiles/flecs.dir/rule	cmake-build-release/lib/flecs/Makefile	/^lib\/flecs\/CMakeFiles\/flecs.dir\/rule:$/;"	t
lib/flecs/CMakeFiles/flecs_static.dir/rule	cmake-build-debug/lib/flecs/Makefile	/^lib\/flecs\/CMakeFiles\/flecs_static.dir\/rule:$/;"	t
lib/flecs/CMakeFiles/flecs_static.dir/rule	cmake-build-release/lib/flecs/Makefile	/^lib\/flecs\/CMakeFiles\/flecs_static.dir\/rule:$/;"	t
lib/libflint/CMakeFiles/flint.dir/rule	cmake-build-debug/lib/libflint/Makefile	/^lib\/libflint\/CMakeFiles\/flint.dir\/rule:$/;"	t
lib/libflint/CMakeFiles/flint.dir/rule	cmake-build-release/lib/libflint/Makefile	/^lib\/libflint\/CMakeFiles\/flint.dir\/rule:$/;"	t
lifecycle	lib/flecs/flecs.c	/^    EcsComponentLifecycle lifecycle; \/* Component lifecycle callbacks *\/$/;"	m	struct:ecs_type_info_t	typeref:typename:EcsComponentLifecycle	file:
lifecycle	lib/flecs/src/private_types.h	/^    EcsComponentLifecycle lifecycle; \/* Component lifecycle callbacks *\/$/;"	m	struct:ecs_type_info_t	typeref:typename:EcsComponentLifecycle
lifecycle_set	lib/flecs/flecs.c	/^    bool lifecycle_set;$/;"	m	struct:ecs_type_info_t	typeref:typename:bool	file:
lifecycle_set	lib/flecs/src/private_types.h	/^    bool lifecycle_set;$/;"	m	struct:ecs_type_info_t	typeref:typename:bool
limit	lib/flecs/flecs.h	/^    int32_t limit;$/;"	m	struct:ecs_page_iter_t	typeref:typename:int32_t
limit	lib/flecs/flecs.h	/^    system_runner_fluent& limit(int32_t limit) {$/;"	f	struct:flecs::system_runner_fluent	typeref:typename:system_runner_fluent &
limit	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    system_runner_fluent& limit(int32_t limit) {$/;"	f	struct:flecs::system_runner_fluent	typeref:typename:system_runner_fluent &
limit	lib/flecs/include/flecs/private/api_types.h	/^    int32_t limit;$/;"	m	struct:ecs_page_iter_t	typeref:typename:int32_t
linearGradient12743	lib/uthash/doc/banner.svg	/^       id="linearGradient12743">$/;"	d
linearGradient12743	lib/uthash/doc/banner.svg	/^       id="linearGradient12743">$/;"	i
linearGradient12743	lib/uthash/doc/uthash-mini.svg	/^       id="linearGradient12743">$/;"	d
linearGradient12743	lib/uthash/doc/uthash-mini.svg	/^       id="linearGradient12743">$/;"	i
linearGradient3964	lib/uthash/doc/banner.svg	/^       id="linearGradient3964">$/;"	d
linearGradient3964	lib/uthash/doc/banner.svg	/^       id="linearGradient3964">$/;"	i
linearGradient3964	lib/uthash/doc/uthash-mini.svg	/^       id="linearGradient3964">$/;"	d
linearGradient3964	lib/uthash/doc/uthash-mini.svg	/^       id="linearGradient3964">$/;"	i
list	lib/flecs/flecs.c	/^    ecs_query_table_list_t list;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_query_table_list_t	file:
list	lib/flecs/src/private_types.h	/^    ecs_query_table_list_t list;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_query_table_list_t
list_install_components	cmake-build-debug/Makefile	/^list_install_components:$/;"	t
list_install_components	cmake-build-debug/lib/flecs/Makefile	/^list_install_components:$/;"	t
list_install_components	cmake-build-debug/lib/libflint/Makefile	/^list_install_components:$/;"	t
list_install_components	cmake-build-release/Makefile	/^list_install_components:$/;"	t
list_install_components	cmake-build-release/lib/flecs/Makefile	/^list_install_components:$/;"	t
list_install_components	cmake-build-release/lib/libflint/Makefile	/^list_install_components:$/;"	t
list_install_components/fast	cmake-build-debug/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	cmake-build-debug/lib/flecs/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	cmake-build-debug/lib/libflint/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	cmake-build-release/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	cmake-build-release/lib/flecs/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	cmake-build-release/lib/libflint/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_sp	lib/flecs/flecs.h	/^    int32_t list_sp;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
list_sp	lib/flecs/include/flecs/private/strbuf.h	/^    int32_t list_sp;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
list_stack	lib/flecs/flecs.h	/^    ecs_strbuf_list_elem list_stack[ECS_STRBUF_MAX_LIST_DEPTH];$/;"	m	struct:ecs_strbuf_t	typeref:typename:ecs_strbuf_list_elem[]
list_stack	lib/flecs/include/flecs/private/strbuf.h	/^    ecs_strbuf_list_elem list_stack[ECS_STRBUF_MAX_LIST_DEPTH];$/;"	m	struct:ecs_strbuf_t	typeref:typename:ecs_strbuf_list_elem[]
lives	include/ecs/components.h	/^    int lives;$/;"	m	struct:__anon1ffac85e0508	typeref:typename:int
ll_destroy	lib/libflint/src/lflinkedlist.c	/^void ll_destroy(List* list) {$/;"	f	typeref:typename:void
ll_init	lib/libflint/src/lflinkedlist.c	/^void ll_init(List* list, void (*destroy)(void *data)) {$/;"	f	typeref:typename:void
ll_ins_next	lib/libflint/src/lflinkedlist.c	/^int ll_ins_next(List* list, ListNode* node, const void* data) {$/;"	f	typeref:typename:int
ll_ins_prev	lib/libflint/src/lflinkedlist.c	/^int ll_ins_prev(List* list, ListNode* node, const void* data) {$/;"	f	typeref:typename:int
ll_remove	lib/libflint/src/lflinkedlist.c	/^int ll_remove(List* list, ListNode* node, void** data) {$/;"	f	typeref:typename:int
ll_remove_next	lib/libflint/src/lflinkedlist.c	/^int ll_remove_next(List* list, ListNode* node, void** data) {$/;"	f	typeref:typename:int
ll_remove_prev	lib/libflint/src/lflinkedlist.c	/^int ll_remove_prev(List* list, ListNode* node, void** data) {$/;"	f	typeref:typename:int
lo	lib/flecs/flecs.c	/^    ecs_graph_edge_t *lo; \/* Small array optimized for low edges *\/$/;"	m	struct:ecs_graph_edges_t	typeref:typename:ecs_graph_edge_t *	file:
lo	lib/flecs/src/private_types.h	/^    ecs_graph_edge_t *lo; \/* Small array optimized for low edges *\/$/;"	m	struct:ecs_graph_edges_t	typeref:typename:ecs_graph_edge_t *
lo_var	lib/flecs/flecs.c	/^    int32_t lo_var; \/* If lo part should be stored in var, this is the var id *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:int32_t	file:
lo_var	lib/flecs/src/addons/rules.c	/^    int32_t lo_var; \/* If lo part should be stored in var, this is the var id *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:int32_t	file:
load_colors	src/colors.c	/^color_t* load_colors(char *path) {$/;"	f	typeref:typename:color_t *
lock	lib/flecs/flecs.c	/^    ecs_os_mutex_t lock;$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_os_mutex_t	file:
lock	lib/flecs/flecs.c	/^    int32_t lock;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t	file:
lock	lib/flecs/flecs.h	/^    void lock() {$/;"	f	struct:flecs::world	typeref:typename:void
lock	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void lock() {$/;"	f	struct:flecs::world	typeref:typename:void
lock	lib/flecs/src/addons/http.c	/^    ecs_os_mutex_t lock;$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_os_mutex_t	file:
lock	lib/flecs/src/private_types.h	/^    int32_t lock;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t
lock	lib/uthash/tests/threads/test1.c	/^pthread_rwlock_t lock;$/;"	v	typeref:typename:pthread_rwlock_t
lock	lib/uthash/tests/threads/test2.c	/^pthread_rwlock_t lock;$/;"	v	typeref:typename:pthread_rwlock_t
locking_enabled	lib/flecs/flecs.c	/^    bool locking_enabled;        \/* Lock world when in progress *\/ $/;"	m	struct:ecs_world_t	typeref:typename:bool	file:
locking_enabled	lib/flecs/src/private_types.h	/^    bool locking_enabled;        \/* Lock world when in progress *\/ $/;"	m	struct:ecs_world_t	typeref:typename:bool
log	lib/flecs/flecs.h	/^namespace log {$/;"	n	namespace:flecs
log	lib/flecs/include/flecs/addons/cpp/log.hpp	/^namespace log {$/;"	n	namespace:flecs
log2_num_buckets	lib/uthash/include/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
log2_num_buckets	lib/uthash/src/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
log_	lib/flecs/flecs.h	/^    ecs_os_api_log_t log_; \/* Logging function. The level should be interpreted as: *\/$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_log_t
log_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_log_t log_; \/* Logging function. The level should be interpreted as: *\/$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_log_t
log_addons	lib/flecs/flecs.c	/^void log_addons(void) {$/;"	f	typeref:typename:void	file:
log_addons	lib/flecs/src/world.c	/^void log_addons(void) {$/;"	f	typeref:typename:void	file:
log_indent_	lib/flecs/flecs.h	/^    int32_t log_indent_;$/;"	m	struct:ecs_os_api_t	typeref:typename:int32_t
log_indent_	lib/flecs/include/flecs/os_api.h	/^    int32_t log_indent_;$/;"	m	struct:ecs_os_api_t	typeref:typename:int32_t
log_last_error_	lib/flecs/flecs.h	/^    int32_t log_last_error_;$/;"	m	struct:ecs_os_api_t	typeref:typename:int32_t
log_last_error_	lib/flecs/include/flecs/os_api.h	/^    int32_t log_last_error_;$/;"	m	struct:ecs_os_api_t	typeref:typename:int32_t
log_level_	lib/flecs/flecs.h	/^    int32_t log_level_;$/;"	m	struct:ecs_os_api_t	typeref:typename:int32_t
log_level_	lib/flecs/include/flecs/os_api.h	/^    int32_t log_level_;$/;"	m	struct:ecs_os_api_t	typeref:typename:int32_t
log_msg	lib/flecs/flecs.c	/^void log_msg($/;"	f	typeref:typename:void	file:
log_msg	lib/flecs/src/os_api.c	/^void log_msg($/;"	f	typeref:typename:void	file:
log_with_color_	lib/flecs/flecs.h	/^    bool log_with_color_;$/;"	m	struct:ecs_os_api_t	typeref:typename:bool
log_with_color_	lib/flecs/include/flecs/os_api.h	/^    bool log_with_color_;$/;"	m	struct:ecs_os_api_t	typeref:typename:bool
lookup	lib/flecs/flecs.h	/^inline entity world::lookup(const char *name) const {$/;"	f	class:flecs::world	typeref:typename:entity
lookup	lib/flecs/flecs.h	/^inline flecs::entity entity_view::lookup(const char *path) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
lookup	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline entity world::lookup(const char *name) const {$/;"	f	class:flecs::world	typeref:typename:entity
lookup	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::lookup(const char *path) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
lookup_action	lib/flecs/flecs.h	/^    ecs_entity_t (*lookup_action)($/;"	m	struct:ecs_parse_expr_desc_t	typeref:typename:ecs_entity_t (*)(const ecs_world_t *,const char * value,void * ctx)
lookup_action	lib/flecs/flecs.h	/^    ecs_entity_t (*lookup_action)(const ecs_world_t*, const char*, void*);$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:ecs_entity_t (*)(const ecs_world_t *,const char *,void *)
lookup_action	lib/flecs/include/flecs/addons/expr.h	/^    ecs_entity_t (*lookup_action)($/;"	m	struct:ecs_parse_expr_desc_t	typeref:typename:ecs_entity_t (*)(const ecs_world_t *,const char * value,void * ctx)
lookup_action	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t (*lookup_action)(const ecs_world_t*, const char*, void*);$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:ecs_entity_t (*)(const ecs_world_t *,const char *,void *)
lookup_ctx	lib/flecs/flecs.h	/^    void *lookup_ctx;$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:void *
lookup_ctx	lib/flecs/flecs.h	/^    void *lookup_ctx;$/;"	m	struct:ecs_parse_expr_desc_t	typeref:typename:void *
lookup_ctx	lib/flecs/include/flecs/addons/expr.h	/^    void *lookup_ctx;$/;"	m	struct:ecs_parse_expr_desc_t	typeref:typename:void *
lookup_ctx	lib/flecs/include/flecs/addons/meta.h	/^    void *lookup_ctx;$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:void *
lookup_key_t	lib/uthash/tests/test22.c	/^} lookup_key_t;$/;"	t	typeref:struct:__anonbb926f9e0208	file:
lookup_path	lib/flecs/flecs.c	/^    ecs_entity_t *lookup_path;   \/* Search path used by lookup operations *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_entity_t *	file:
lookup_path	lib/flecs/src/private_types.h	/^    ecs_entity_t *lookup_path;   \/* Search path used by lookup operations *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_entity_t *
luminous_intensity	lib/flecs/flecs.h	/^struct luminous_intensity {$/;"	s	struct:flecs::units
luminous_intensity	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct luminous_intensity {$/;"	s	struct:flecs::units
m_1	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t m_1;$/;"	m	struct:Meta_unit_w_over::Test	typeref:typename:int32_t	file:
m_1	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t m_1;$/;"	m	struct:Meta_unit_w_prefix::Test	typeref:typename:int32_t	file:
m_1	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t m_1;$/;"	m	struct:Meta_unit_w_quantity::Test	typeref:typename:int32_t	file:
m_2	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t m_2;$/;"	m	struct:Meta_unit_w_over::Test	typeref:typename:int32_t	file:
m_2	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t m_2;$/;"	m	struct:Meta_unit_w_prefix::Test	typeref:typename:int32_t	file:
m_2	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t m_2;$/;"	m	struct:Meta_unit_w_quantity::Test	typeref:typename:int32_t	file:
m_array	lib/flecs/flecs.h	/^    T m_array[Size];$/;"	m	struct:flecs::array	typeref:typename:T[]
m_array	lib/flecs/flecs.h	/^    T* m_array;$/;"	m	struct:flecs::column	typeref:typename:T *
m_array	lib/flecs/flecs.h	/^    void* m_array;$/;"	m	struct:flecs::unsafe_column	typeref:typename:void *
m_array	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    T* m_array;$/;"	m	struct:flecs::column	typeref:typename:T *
m_array	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    void* m_array;$/;"	m	struct:flecs::unsafe_column	typeref:typename:void *
m_array	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    T m_array[Size];$/;"	m	struct:flecs::array	typeref:typename:T[]
m_begin	lib/flecs/flecs.h	/^    std::size_t m_begin;$/;"	m	struct:flecs::iter	typeref:typename:std::size_t
m_begin	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    std::size_t m_begin;$/;"	m	struct:flecs::iter	typeref:typename:std::size_t
m_buf	lib/flecs/flecs.h	/^    ecs_strbuf_t m_buf;$/;"	m	struct:flecs::stringstream	typeref:typename:ecs_strbuf_t
m_buf	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^    ecs_strbuf_t m_buf;$/;"	m	struct:flecs::stringstream	typeref:typename:ecs_strbuf_t
m_chain_it	lib/flecs/flecs.h	/^    ecs_iter_t m_chain_it;$/;"	m	struct:flecs::page_iterable	typeref:typename:ecs_iter_t
m_chain_it	lib/flecs/flecs.h	/^    ecs_iter_t m_chain_it;$/;"	m	struct:flecs::worker_iterable	typeref:typename:ecs_iter_t
m_chain_it	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_t m_chain_it;$/;"	m	struct:flecs::page_iterable	typeref:typename:ecs_iter_t
m_chain_it	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_t m_chain_it;$/;"	m	struct:flecs::worker_iterable	typeref:typename:ecs_iter_t
m_const_str	lib/flecs/flecs.h	/^    const char *m_const_str;$/;"	m	struct:flecs::string	typeref:typename:const char *
m_const_str	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    const char *m_const_str;$/;"	m	struct:flecs::string	typeref:typename:const char *
m_count	lib/flecs/flecs.h	/^    size_t m_count;$/;"	m	struct:flecs::column	typeref:typename:size_t
m_count	lib/flecs/flecs.h	/^    size_t m_count;$/;"	m	struct:flecs::unsafe_column	typeref:typename:size_t
m_count	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    size_t m_count;$/;"	m	struct:flecs::column	typeref:typename:size_t
m_count	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    size_t m_count;$/;"	m	struct:flecs::unsafe_column	typeref:typename:size_t
m_cursor	lib/flecs/flecs.h	/^    ecs_meta_cursor_t m_cursor;$/;"	m	struct:flecs::meta::cursor	typeref:typename:ecs_meta_cursor_t
m_cursor	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    ecs_meta_cursor_t m_cursor;$/;"	m	struct:flecs::meta::cursor	typeref:typename:ecs_meta_cursor_t
m_delta_time	lib/flecs/flecs.h	/^    FLECS_FLOAT m_delta_time;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:FLECS_FLOAT
m_delta_time	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    FLECS_FLOAT m_delta_time;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:FLECS_FLOAT
m_desc	lib/flecs/flecs.h	/^    TDesc m_desc;$/;"	m	struct:flecs::_::builder	typeref:typename:TDesc
m_desc	lib/flecs/flecs.h	/^    TDesc m_desc;$/;"	m	struct:flecs::_::node_builder	typeref:typename:TDesc
m_desc	lib/flecs/flecs.h	/^    ecs_app_desc_t m_desc;$/;"	m	struct:flecs::app_builder	typeref:typename:ecs_app_desc_t
m_desc	lib/flecs/flecs.h	/^    ecs_event_desc_t m_desc;$/;"	m	struct:flecs::event_builder_base	typeref:typename:ecs_event_desc_t
m_desc	lib/flecs/flecs.h	/^    ecs_filter_desc_t *m_desc;$/;"	m	struct:flecs::filter_builder_i	typeref:typename:ecs_filter_desc_t *
m_desc	lib/flecs/flecs.h	/^    ecs_observer_desc_t *m_desc;$/;"	m	struct:flecs::observer_builder_i	typeref:typename:ecs_observer_desc_t *
m_desc	lib/flecs/flecs.h	/^    ecs_query_desc_t *m_desc;$/;"	m	struct:flecs::query_builder_i	typeref:typename:ecs_query_desc_t *
m_desc	lib/flecs/flecs.h	/^    ecs_system_desc_t *m_desc;$/;"	m	struct:flecs::system_builder_i	typeref:typename:ecs_system_desc_t *
m_desc	lib/flecs/flecs.h	/^    ecs_trigger_desc_t *m_desc;$/;"	m	struct:flecs::trigger_builder_i	typeref:typename:ecs_trigger_desc_t *
m_desc	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    ecs_app_desc_t m_desc;$/;"	m	struct:flecs::app_builder	typeref:typename:ecs_app_desc_t
m_desc	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    ecs_event_desc_t m_desc;$/;"	m	struct:flecs::event_builder_base	typeref:typename:ecs_event_desc_t
m_desc	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    ecs_filter_desc_t *m_desc;$/;"	m	struct:flecs::filter_builder_i	typeref:typename:ecs_filter_desc_t *
m_desc	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    ecs_observer_desc_t *m_desc;$/;"	m	struct:flecs::observer_builder_i	typeref:typename:ecs_observer_desc_t *
m_desc	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    ecs_query_desc_t *m_desc;$/;"	m	struct:flecs::query_builder_i	typeref:typename:ecs_query_desc_t *
m_desc	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    ecs_system_desc_t *m_desc;$/;"	m	struct:flecs::system_builder_i	typeref:typename:ecs_system_desc_t *
m_desc	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    ecs_trigger_desc_t *m_desc;$/;"	m	struct:flecs::trigger_builder_i	typeref:typename:ecs_trigger_desc_t *
m_desc	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    TDesc m_desc;$/;"	m	struct:flecs::_::builder	typeref:typename:TDesc
m_desc	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    TDesc m_desc;$/;"	m	struct:flecs::_::node_builder	typeref:typename:TDesc
m_end	lib/flecs/flecs.h	/^    std::size_t m_end;$/;"	m	struct:flecs::iter	typeref:typename:std::size_t
m_end	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    std::size_t m_end;$/;"	m	struct:flecs::iter	typeref:typename:std::size_t
m_entity	lib/flecs/flecs.h	/^    entity_t m_entity;$/;"	m	struct:flecs::ref	typeref:typename:entity_t
m_entity	lib/flecs/flecs.h	/^    flecs::entity m_entity;$/;"	m	struct:flecs::type_base	typeref:typename:flecs::entity
m_entity	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^    entity_t m_entity;$/;"	m	struct:flecs::ref	typeref:typename:entity_t
m_entity	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    flecs::entity m_entity;$/;"	m	struct:flecs::type_base	typeref:typename:flecs::entity
m_event_count	lib/flecs/flecs.h	/^    int32_t m_event_count;$/;"	m	struct:flecs::observer_builder_i	typeref:typename:int32_t
m_event_count	lib/flecs/flecs.h	/^    int32_t m_event_count;$/;"	m	struct:flecs::trigger_builder_i	typeref:typename:int32_t
m_event_count	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    int32_t m_event_count;$/;"	m	struct:flecs::observer_builder_i	typeref:typename:int32_t
m_event_count	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    int32_t m_event_count;$/;"	m	struct:flecs::trigger_builder_i	typeref:typename:int32_t
m_expr_count	lib/flecs/flecs.h	/^    int32_t m_expr_count;$/;"	m	struct:flecs::filter_builder_i	typeref:typename:int32_t
m_expr_count	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    int32_t m_expr_count;$/;"	m	struct:flecs::filter_builder_i	typeref:typename:int32_t
m_filter	lib/flecs/flecs.h	/^    filter_t m_filter;$/;"	m	struct:flecs::filter_base	typeref:typename:filter_t
m_filter	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_t m_filter;$/;"	m	struct:flecs::filter_base	typeref:typename:filter_t
m_filter_ptr	lib/flecs/flecs.h	/^    const filter_t *m_filter_ptr;$/;"	m	struct:flecs::filter_base	typeref:typename:const filter_t *
m_filter_ptr	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    const filter_t *m_filter_ptr;$/;"	m	struct:flecs::filter_base	typeref:typename:const filter_t *
m_func	lib/flecs/flecs.h	/^    Func m_func;$/;"	m	struct:flecs::_::each_invoker	typeref:typename:Func
m_func	lib/flecs/flecs.h	/^    Func m_func;$/;"	m	struct:flecs::_::iter_invoker	typeref:typename:Func
m_func	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    Func m_func;$/;"	m	struct:flecs::_::each_invoker	typeref:typename:Func
m_func	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    Func m_func;$/;"	m	struct:flecs::_::iter_invoker	typeref:typename:Func
m_id	lib/flecs/flecs.h	/^    entity_t m_id;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:entity_t
m_id	lib/flecs/flecs.h	/^    flecs::id_t m_id;$/;"	m	struct:flecs::id	typeref:typename:flecs::id_t
m_id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    flecs::id_t m_id;$/;"	m	struct:flecs::id	typeref:typename:flecs::id_t
m_id	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    entity_t m_id;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:entity_t
m_ids	lib/flecs/flecs.h	/^    flecs::ids_t m_ids;$/;"	m	struct:flecs::event_builder_base	typeref:typename:flecs::ids_t
m_ids	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    flecs::ids_t m_ids;$/;"	m	struct:flecs::event_builder_base	typeref:typename:flecs::ids_t
m_ids_array	lib/flecs/flecs.h	/^    flecs::id_t m_ids_array[ECS_EVENT_DESC_ID_COUNT_MAX];$/;"	m	struct:flecs::event_builder_base	typeref:typename:flecs::id_t[]
m_ids_array	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    flecs::id_t m_ids_array[ECS_EVENT_DESC_ID_COUNT_MAX];$/;"	m	struct:flecs::event_builder_base	typeref:typename:flecs::id_t[]
m_index	lib/flecs/flecs.h	/^    int m_index;$/;"	m	class:flecs::vector_iterator	typeref:typename:int
m_index	lib/flecs/flecs.h	/^    int m_index;$/;"	m	struct:flecs::array_iterator	typeref:typename:int
m_index	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    int m_index;$/;"	m	struct:flecs::array_iterator	typeref:typename:int
m_index	lib/flecs/include/flecs/private/vector.h	/^    int m_index;$/;"	m	class:flecs::vector_iterator	typeref:typename:int
m_instanced	lib/flecs/flecs.h	/^    bool m_instanced;$/;"	m	struct:flecs::_::node_builder	typeref:typename:bool
m_instanced	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    bool m_instanced;$/;"	m	struct:flecs::_::node_builder	typeref:typename:bool
m_is_shared	lib/flecs/flecs.h	/^    bool m_is_shared;        $/;"	m	struct:flecs::unsafe_column	typeref:typename:bool
m_is_shared	lib/flecs/flecs.h	/^    bool m_is_shared;$/;"	m	struct:flecs::column	typeref:typename:bool
m_is_shared	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    bool m_is_shared;        $/;"	m	struct:flecs::unsafe_column	typeref:typename:bool
m_is_shared	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    bool m_is_shared;$/;"	m	struct:flecs::column	typeref:typename:bool
m_it	lib/flecs/flecs.h	/^    ecs_iter_t m_it;$/;"	m	struct:flecs::iter_iterable	typeref:typename:ecs_iter_t
m_it	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_t m_it;$/;"	m	struct:flecs::iter_iterable	typeref:typename:ecs_iter_t
m_iter	lib/flecs/flecs.h	/^    flecs::iter_t *m_iter;$/;"	m	struct:flecs::iter	typeref:typename:flecs::iter_t *
m_iter	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::iter_t *m_iter;$/;"	m	struct:flecs::iter	typeref:typename:flecs::iter_t *
m_length	lib/flecs/flecs.h	/^    ecs_size_t m_length;$/;"	m	struct:flecs::string	typeref:typename:ecs_size_t
m_length	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    ecs_size_t m_length;$/;"	m	struct:flecs::string	typeref:typename:ecs_size_t
m_limit	lib/flecs/flecs.h	/^    int32_t m_limit;$/;"	m	struct:flecs::page_iterable	typeref:typename:int32_t
m_limit	lib/flecs/flecs.h	/^    int32_t m_limit;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:int32_t
m_limit	lib/flecs/flecs.h	/^    int32_t m_limit;$/;"	m	struct:flecs::worker_iterable	typeref:typename:int32_t
m_limit	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    int32_t m_limit;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:int32_t
m_limit	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    int32_t m_limit;$/;"	m	struct:flecs::page_iterable	typeref:typename:int32_t
m_limit	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    int32_t m_limit;$/;"	m	struct:flecs::worker_iterable	typeref:typename:int32_t
m_next	lib/flecs/flecs.h	/^    ecs_iter_next_action_t m_next;$/;"	m	struct:flecs::iter_iterable	typeref:typename:ecs_iter_next_action_t
m_next	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_next_action_t m_next;$/;"	m	struct:flecs::iter_iterable	typeref:typename:ecs_iter_next_action_t
m_next_each	lib/flecs/flecs.h	/^    ecs_iter_next_action_t m_next_each;$/;"	m	struct:flecs::iter_iterable	typeref:typename:ecs_iter_next_action_t
m_next_each	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_next_action_t m_next_each;$/;"	m	struct:flecs::iter_iterable	typeref:typename:ecs_iter_next_action_t
m_offset	lib/flecs/flecs.h	/^    int32_t m_offset;$/;"	m	struct:flecs::page_iterable	typeref:typename:int32_t
m_offset	lib/flecs/flecs.h	/^    int32_t m_offset;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:int32_t
m_offset	lib/flecs/flecs.h	/^    int32_t m_offset;$/;"	m	struct:flecs::worker_iterable	typeref:typename:int32_t
m_offset	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    int32_t m_offset;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:int32_t
m_offset	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    int32_t m_offset;$/;"	m	struct:flecs::page_iterable	typeref:typename:int32_t
m_offset	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    int32_t m_offset;$/;"	m	struct:flecs::worker_iterable	typeref:typename:int32_t
m_owned	lib/flecs/flecs.h	/^    bool m_owned;$/;"	m	struct:flecs::world	typeref:typename:bool
m_owned	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool m_owned;$/;"	m	struct:flecs::world	typeref:typename:bool
m_param	lib/flecs/flecs.h	/^    void *m_param;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:void *
m_param	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    void *m_param;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:void *
m_prev_scope	lib/flecs/flecs.h	/^    flecs::entity_t m_prev_scope;$/;"	m	struct:flecs::scoped_world	typeref:typename:flecs::entity_t
m_prev_scope	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    flecs::entity_t m_prev_scope;$/;"	m	struct:flecs::scoped_world	typeref:typename:flecs::entity_t
m_query	lib/flecs/flecs.h	/^    query_t *m_query;$/;"	m	struct:flecs::query_base	typeref:typename:query_t *
m_query	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    query_t *m_query;$/;"	m	struct:flecs::query_base	typeref:typename:query_t *
m_ref	lib/flecs/flecs.h	/^    flecs::ref_t m_ref;$/;"	m	struct:flecs::ref	typeref:typename:flecs::ref_t
m_ref	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^    flecs::ref_t m_ref;$/;"	m	struct:flecs::ref	typeref:typename:flecs::ref_t
m_row	lib/flecs/flecs.h	/^    size_t m_row;    $/;"	m	struct:flecs::_::each_column_base	typeref:typename:size_t
m_row	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    size_t m_row;    $/;"	m	struct:flecs::_::each_column_base	typeref:typename:size_t
m_rule	lib/flecs/flecs.h	/^    rule_t *m_rule;$/;"	m	struct:flecs::rule_base	typeref:typename:rule_t *
m_rule	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    rule_t *m_rule;$/;"	m	struct:flecs::rule_base	typeref:typename:rule_t *
m_size	lib/flecs/flecs.h	/^    size_t m_size;$/;"	m	struct:flecs::unsafe_column	typeref:typename:size_t
m_size	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    size_t m_size;$/;"	m	struct:flecs::unsafe_column	typeref:typename:size_t
m_snapshot	lib/flecs/flecs.h	/^    snapshot_t *m_snapshot;$/;"	m	struct:flecs::snapshot	typeref:typename:snapshot_t *
m_snapshot	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    snapshot_t *m_snapshot;$/;"	m	struct:flecs::snapshot	typeref:typename:snapshot_t *
m_stage	lib/flecs/flecs.h	/^    world_t *m_stage;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:world_t *
m_stage	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    world_t *m_stage;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:world_t *
m_stage_count	lib/flecs/flecs.h	/^    int32_t m_stage_count;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:int32_t
m_stage_count	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    int32_t m_stage_count;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:int32_t
m_stage_current	lib/flecs/flecs.h	/^    int32_t m_stage_current;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:int32_t
m_stage_current	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    int32_t m_stage_current;$/;"	m	struct:flecs::system_runner_fluent	typeref:typename:int32_t
m_str	lib/flecs/flecs.h	/^    char *m_str = nullptr;$/;"	m	struct:flecs::string	typeref:typename:char *
m_str	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    char *m_str = nullptr;$/;"	m	struct:flecs::string	typeref:typename:char *
m_table	lib/flecs/flecs.h	/^    table_t *m_table = nullptr;$/;"	m	struct:flecs::type_base	typeref:typename:table_t *
m_table	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    table_t *m_table = nullptr;$/;"	m	struct:flecs::type_base	typeref:typename:table_t *
m_term	lib/flecs/flecs.h	/^    const _::term_ptr& m_term;$/;"	m	struct:flecs::_::each_column_base	typeref:typename:const _::term_ptr &
m_term	lib/flecs/flecs.h	/^    ecs_term_t *m_term;$/;"	m	struct:flecs::term_builder_i	typeref:typename:ecs_term_t *
m_term	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    const _::term_ptr& m_term;$/;"	m	struct:flecs::_::each_column_base	typeref:typename:const _::term_ptr &
m_term	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    ecs_term_t *m_term;$/;"	m	struct:flecs::term_builder_i	typeref:typename:ecs_term_t *
m_term_id	lib/flecs/flecs.h	/^    ecs_term_id_t *m_term_id;$/;"	m	struct:flecs::term_id_builder_i	typeref:typename:ecs_term_id_t *
m_term_id	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    ecs_term_id_t *m_term_id;$/;"	m	struct:flecs::term_id_builder_i	typeref:typename:ecs_term_id_t *
m_term_index	lib/flecs/flecs.h	/^    int32_t m_term_index;$/;"	m	struct:flecs::filter_builder_i	typeref:typename:int32_t
m_term_index	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    int32_t m_term_index;$/;"	m	struct:flecs::filter_builder_i	typeref:typename:int32_t
m_terms	lib/flecs/flecs.h	/^    array m_terms;$/;"	m	struct:flecs::_::term_ptrs	typeref:typename:array
m_terms	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    array m_terms;$/;"	m	struct:flecs::_::term_ptrs	typeref:typename:array
m_value	lib/flecs/flecs.h	/^    T m_value;$/;"	m	struct:flecs::_::range_iterator	typeref:typename:T
m_value	lib/flecs/flecs.h	/^    T* m_value;$/;"	m	class:flecs::vector_iterator	typeref:typename:T *
m_value	lib/flecs/flecs.h	/^    T* m_value;$/;"	m	struct:flecs::array_iterator	typeref:typename:T *
m_value	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    T m_value;$/;"	m	struct:flecs::_::range_iterator	typeref:typename:T
m_value	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    T* m_value;$/;"	m	struct:flecs::array_iterator	typeref:typename:T *
m_value	lib/flecs/include/flecs/private/vector.h	/^    T* m_value;$/;"	m	class:flecs::vector_iterator	typeref:typename:T *
m_vector	lib/flecs/flecs.h	/^    ecs_vector_t *m_vector;$/;"	m	class:flecs::vector	typeref:typename:ecs_vector_t *
m_vector	lib/flecs/include/flecs/private/vector.h	/^    ecs_vector_t *m_vector;$/;"	m	class:flecs::vector	typeref:typename:ecs_vector_t *
m_world	lib/flecs/flecs.h	/^    const world& m_world;$/;"	m	struct:flecs::snapshot	typeref:typename:const world &
m_world	lib/flecs/flecs.h	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::_::builder	typeref:typename:flecs::world_t *
m_world	lib/flecs/flecs.h	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::_::node_builder	typeref:typename:flecs::world_t *
m_world	lib/flecs/flecs.h	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::app_builder	typeref:typename:flecs::world_t *
m_world	lib/flecs/flecs.h	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::event_builder_base	typeref:typename:flecs::world_t *
m_world	lib/flecs/flecs.h	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::id	typeref:typename:flecs::world_t *
m_world	lib/flecs/flecs.h	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::term	typeref:typename:flecs::world_t *
m_world	lib/flecs/flecs.h	/^    world_t *m_world;$/;"	m	struct:flecs::filter_base	typeref:typename:world_t *
m_world	lib/flecs/flecs.h	/^    world_t *m_world;$/;"	m	struct:flecs::query_base	typeref:typename:world_t *
m_world	lib/flecs/flecs.h	/^    world_t *m_world;$/;"	m	struct:flecs::ref	typeref:typename:world_t *
m_world	lib/flecs/flecs.h	/^    world_t *m_world;$/;"	m	struct:flecs::rule_base	typeref:typename:world_t *
m_world	lib/flecs/flecs.h	/^    world_t *m_world;$/;"	m	struct:flecs::world	typeref:typename:world_t *
m_world	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::app_builder	typeref:typename:flecs::world_t *
m_world	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::event_builder_base	typeref:typename:flecs::world_t *
m_world	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    world_t *m_world;$/;"	m	struct:flecs::filter_base	typeref:typename:world_t *
m_world	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::id	typeref:typename:flecs::world_t *
m_world	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    world_t *m_world;$/;"	m	struct:flecs::query_base	typeref:typename:world_t *
m_world	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    world_t *m_world;$/;"	m	struct:flecs::rule_base	typeref:typename:world_t *
m_world	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    const world& m_world;$/;"	m	struct:flecs::snapshot	typeref:typename:const world &
m_world	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::term	typeref:typename:flecs::world_t *
m_world	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^    world_t *m_world;$/;"	m	struct:flecs::ref	typeref:typename:world_t *
m_world	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::_::builder	typeref:typename:flecs::world_t *
m_world	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    flecs::world_t *m_world;$/;"	m	struct:flecs::_::node_builder	typeref:typename:flecs::world_t *
m_world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    world_t *m_world;$/;"	m	struct:flecs::world	typeref:typename:world_t *
magic	lib/flecs/flecs.h	/^    int32_t magic; \/* Magic number verifying it's a flecs object *\/$/;"	m	struct:ecs_header_t	typeref:typename:int32_t
magic	lib/flecs/include/flecs.h	/^    int32_t magic; \/* Magic number verifying it's a flecs object *\/$/;"	m	struct:ecs_header_t	typeref:typename:int32_t
main	lib/flecs/examples/c/entities/basics/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/entities/hierarchy/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/entities/iterate_components/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/entities/prefab/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/entities/relations/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/hello_world/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/queries/basics/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/queries/change_tracking/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/queries/hierarchies/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/queries/instancing/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/queries/sorting/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/queries/wildcards/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/auto_define_enum/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/auto_define_nested_struct/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/auto_define_struct/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/basics/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/basics_bitmask/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/basics_deserialize/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/basics_enum/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/basics_json/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/entity_type/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/nested_set_member/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/runtime_component/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/runtime_nested_component/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/reflection/units/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/rules/basics/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/rules/component_inheritance/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/rules/cyclic_variables/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/rules/facts/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/rules/setting_variables/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/rules/transitive_queries/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/systems/basics/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/systems/delta_time/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/systems/mutate_entity/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/systems/pipeline/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/systems/sync_point/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/c/systems/target_fps/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/entities/basics/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/queries/ad_hoc_query/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/queries/hierarchy/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/queries/instancing/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/queries/sorting/src/main.cpp	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/queries/wildcards/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/basics/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/basics_bitmask/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/basics_deserialize/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/basics_enum/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/basics_json/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/entity_type/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/nested_set_member/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/nested_struct/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/portable_type/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/runtime_component/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/runtime_nested_component/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/reflection/units/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/relations/basics/src/main.cpp	/^int main(int, char*[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/relations/enum_relations/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/rules/basics/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/rules/component_inheritance/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/rules/cyclic_variables/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/rules/facts/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/rules/setting_variables/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/rules/transitive_queries/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/systems/basics/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/systems/delta_time/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/systems/mutate_entity/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/systems/mutate_entity_handle/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/examples/cpp/systems/target_fps/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/templates/c/flecs/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/templates/cpp/flecs/src/main.cpp	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/api/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/collections/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/cpp_api/src/main.cpp	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/log/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/meta/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/meta_c/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/module/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/no_addons/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/pipeline/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/pipeline_w_system/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/plecs/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/plecs_w_parser/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/rest/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/system/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/c/timer/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/app/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/doc/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/log/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/module/src/main.cpp	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/no_addons/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/pipeline/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/rest/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/snapshot/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/system/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/custom_builds/cpp/timer/src/main.cpp	/^int main(int, char *[]) {$/;"	f	typeref:typename:int
main	lib/flecs/test/meta/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	lib/libflint/tests/tests.c	/^int main() {$/;"	f	typeref:typename:int
main	lib/uthash/tests/bloom_perf.c	/^int main(int argc,char *argv[])$/;"	f	typeref:typename:int
main	lib/uthash/tests/emit_keys.c	/^int main(int argc,char *argv[])$/;"	f	typeref:typename:int
main	lib/uthash/tests/example.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/hashscan.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/uthash/tests/keystat.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/uthash/tests/lru_cache/main.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/sleep_test.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/tdiff.cpp	/^int main(int argc, char *argv[] ) {$/;"	f	typeref:typename:int
main	lib/uthash/tests/test1.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test10.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test11.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test12.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test13.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test14.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test15.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test16.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test17.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test18.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test19.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test2.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test20.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test21.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test22.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test23.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test24.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test25.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test26.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test27.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test28.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test29.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test3.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test30.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test31.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test32.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test33.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test34.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test35.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test36.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test37.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test38.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test39.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test4.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test40.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test41.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test42.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test43.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test44.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test45.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test46.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test47.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test48.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test49.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test5.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test50.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test51.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test52.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test53.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test54.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test55.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test56.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test57.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test58.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test59.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test6.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test60.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test61.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test62.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test63.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test64.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test65.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test66.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test67.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test68.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test69.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test7.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test70.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test71.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test72.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test73.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test74.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test75.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test76.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test77.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test78.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test79.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test8.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test80.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test81.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test82.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test83.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test84.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test85.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test86.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test87.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test88.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test89.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test9.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test90.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test91.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test92.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test93.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test94.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test95.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/test96.c	/^int main()$/;"	f	typeref:typename:int
main	lib/uthash/tests/threads/test1.c	/^int main() {$/;"	f	typeref:typename:int
main	lib/uthash/tests/threads/test2.c	/^int main() {$/;"	f	typeref:typename:int
main	src/main.c	/^int main() {$/;"	f	typeref:typename:int
main.o	lib/uthash/tests/lru_cache/Makefile	/^main.o: main.c$/;"	t
main_menu_input	src/screens/mainmenu.c	/^void main_menu_input(struct GameState *gs) {$/;"	f	typeref:typename:void
main_menu_render	src/screens/mainmenu.c	/^void main_menu_render(struct GameState *gs) {$/;"	f	typeref:typename:void
main_menu_update	src/screens/mainmenu.c	/^void main_menu_update(struct GameState *gs) {$/;"	f	typeref:typename:void
make_test	lib/uthash/tests/test62.c	/^struct test_t *make_test(int value)$/;"	f	typeref:struct:test_t *
malloc	lib/uthash/tests/test6.c	/^#define malloc /;"	d	file:
malloc_	lib/flecs/flecs.h	/^    ecs_os_api_malloc_t malloc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_malloc_t
malloc_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_malloc_t malloc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_malloc_t
malloc_cnt	lib/uthash/tests/test92.c	/^static int malloc_cnt = 0;$/;"	v	typeref:typename:int	file:
malloc_cnt	lib/uthash/tests/test93.c	/^static int malloc_cnt = 0;$/;"	v	typeref:typename:int	file:
malloc_count	lib/flecs/test/api/src/World.c	/^static int32_t malloc_count;$/;"	v	typeref:typename:int32_t	file:
malloc_count	lib/flecs/test/collections/src/Map.c	/^static int32_t malloc_count;$/;"	v	typeref:typename:int32_t	file:
malloc_failed	lib/uthash/tests/test92.c	/^static int malloc_failed = 0;$/;"	v	typeref:typename:int	file:
malloc_failed	lib/uthash/tests/test93.c	/^static int malloc_failed;$/;"	v	typeref:typename:int	file:
map	lib/flecs/flecs.h	/^    const ecs_map_t *map;$/;"	m	struct:ecs_map_iter_t	typeref:typename:const ecs_map_t *
map	lib/flecs/include/flecs/private/map.h	/^    const ecs_map_t *map;$/;"	m	struct:ecs_map_iter_t	typeref:typename:const ecs_map_t *
mark_columns_dirty	lib/flecs/flecs.c	/^void mark_columns_dirty($/;"	f	typeref:typename:void	file:
mark_columns_dirty	lib/flecs/src/query.c	/^void mark_columns_dirty($/;"	f	typeref:typename:void	file:
mark_table_dirty	lib/flecs/flecs.c	/^void mark_table_dirty($/;"	f	typeref:typename:void	file:
mark_table_dirty	lib/flecs/src/table.c	/^void mark_table_dirty($/;"	f	typeref:typename:void	file:
marked	lib/flecs/flecs.c	/^    bool marked;      \/* Used for cycle detection *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:bool	file:
marked	lib/flecs/src/addons/rules.c	/^    bool marked;      \/* Used for cycle detection *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:bool	file:
mask	lib/flecs/flecs.c	/^    ecs_id_t mask;  \/* Mask with wildcard in place of variables *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:ecs_id_t	file:
mask	lib/flecs/flecs.h	/^    uint8_t mask;               \/* Substitute as self, subset, superset *\/$/;"	m	struct:ecs_term_set_t	typeref:typename:uint8_t
mask	lib/flecs/include/flecs.h	/^    uint8_t mask;               \/* Substitute as self, subset, superset *\/$/;"	m	struct:ecs_term_set_t	typeref:typename:uint8_t
mask	lib/flecs/src/addons/rules.c	/^    ecs_id_t mask;  \/* Mask with wildcard in place of variables *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:ecs_id_t	file:
mass	lib/flecs/flecs.h	/^struct mass {$/;"	s	struct:flecs::units
mass	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct mass {$/;"	s	struct:flecs::units
match	lib/flecs/flecs.c	/^    ecs_query_table_match_t *match;  \/* Reference to the match *\/$/;"	m	struct:ecs_query_table_node_t	typeref:typename:ecs_query_table_match_t *	file:
match	lib/flecs/flecs.c	/^    ecs_query_table_match_t *match;$/;"	m	struct:sort_helper_t	typeref:typename:ecs_query_table_match_t *	file:
match	lib/flecs/src/private_types.h	/^    ecs_query_table_match_t *match;  \/* Reference to the match *\/$/;"	m	struct:ecs_query_table_node_t	typeref:typename:ecs_query_table_match_t *
match	lib/flecs/src/query.c	/^    ecs_query_table_match_t *match;$/;"	m	struct:sort_helper_t	typeref:typename:ecs_query_table_match_t *	file:
match	lib/libflint/include/lflinkedlist.h	/^    int (*match)(const void* a, const void* b);$/;"	m	struct:__anoncabdecbc0108	typeref:typename:int (*)(const void * a,const void * b)
match_anything	lib/flecs/flecs.h	/^    bool match_anything;       \/* False if filter has no\/only Not terms *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_anything	lib/flecs/include/flecs.h	/^    bool match_anything;       \/* False if filter has no\/only Not terms *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_count	lib/flecs/flecs.c	/^    int32_t match_count;        \/* How often have tables been (un)matched *\/$/;"	m	struct:ecs_query_t	typeref:typename:int32_t	file:
match_count	lib/flecs/flecs.c	/^    int32_t match_count;$/;"	m	struct:EcsPipelineQuery	typeref:typename:int32_t	file:
match_count	lib/flecs/flecs.h	/^    int32_t match_count;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
match_count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t match_count;$/;"	m	struct:ecs_term_iter_t	typeref:typename:int32_t
match_count	lib/flecs/src/addons/pipeline/pipeline.h	/^    int32_t match_count;$/;"	m	struct:EcsPipelineQuery	typeref:typename:int32_t
match_count	lib/flecs/src/private_types.h	/^    int32_t match_count;        \/* How often have tables been (un)matched *\/$/;"	m	struct:ecs_query_t	typeref:typename:int32_t
match_disabled	lib/flecs/flecs.h	/^    bool match_disabled;        \/* Should trigger ignore disabled entities *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:bool
match_disabled	lib/flecs/flecs.h	/^    bool match_disabled;       \/* Does filter match disabled entities *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_disabled	lib/flecs/flecs.h	/^    bool match_disabled;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:bool
match_disabled	lib/flecs/include/flecs.h	/^    bool match_disabled;        \/* Should trigger ignore disabled entities *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:bool
match_disabled	lib/flecs/include/flecs.h	/^    bool match_disabled;       \/* Does filter match disabled entities *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_disabled	lib/flecs/include/flecs.h	/^    bool match_disabled;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:bool
match_empty_tables	lib/flecs/flecs.h	/^    bool match_empty_tables;   \/* See ecs_filter_desc_t *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_empty_tables	lib/flecs/flecs.h	/^    bool match_empty_tables;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:bool
match_empty_tables	lib/flecs/include/flecs.h	/^    bool match_empty_tables;   \/* See ecs_filter_desc_t *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_empty_tables	lib/flecs/include/flecs.h	/^    bool match_empty_tables;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:bool
match_indices	lib/flecs/flecs.h	/^    int32_t *match_indices;       \/* Indices of current match for term. Allows an iterator to i/;"	m	struct:ecs_iter_t	typeref:typename:int32_t *
match_indices	lib/flecs/flecs.h	/^    int32_t match_indices[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:int32_t[]
match_indices	lib/flecs/include/flecs/private/api_types.h	/^    int32_t *match_indices;       \/* Indices of current match for term. Allows an iterator to i/;"	m	struct:ecs_iter_t	typeref:typename:int32_t *
match_indices	lib/flecs/include/flecs/private/api_types.h	/^    int32_t match_indices[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:int32_t[]
match_indices_alloc	lib/flecs/flecs.h	/^    bool match_indices_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
match_indices_alloc	lib/flecs/include/flecs/private/api_types.h	/^    bool match_indices_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
match_only_this	lib/flecs/flecs.h	/^    bool match_only_this;      \/* Has only terms that match EcsThis *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_only_this	lib/flecs/include/flecs.h	/^    bool match_only_this;      \/* Has only terms that match EcsThis *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_prefab	lib/flecs/flecs.h	/^    bool match_prefab;          \/* Should trigger ignore prefabs *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:bool
match_prefab	lib/flecs/flecs.h	/^    bool match_prefab;         \/* Does filter match prefabs *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_prefab	lib/flecs/flecs.h	/^    bool match_prefab;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:bool
match_prefab	lib/flecs/include/flecs.h	/^    bool match_prefab;          \/* Should trigger ignore prefabs *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:bool
match_prefab	lib/flecs/include/flecs.h	/^    bool match_prefab;         \/* Does filter match prefabs *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_prefab	lib/flecs/include/flecs.h	/^    bool match_prefab;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:bool
match_table	lib/flecs/flecs.c	/^bool match_table($/;"	f	typeref:typename:bool	file:
match_table	lib/flecs/src/query.c	/^bool match_table($/;"	f	typeref:typename:bool	file:
match_tables	lib/flecs/flecs.c	/^void match_tables($/;"	f	typeref:typename:void	file:
match_tables	lib/flecs/src/query.c	/^void match_tables($/;"	f	typeref:typename:void	file:
match_term	lib/flecs/flecs.c	/^bool match_term($/;"	f	typeref:typename:bool	file:
match_term	lib/flecs/src/query.c	/^bool match_term($/;"	f	typeref:typename:bool	file:
match_this	lib/flecs/flecs.h	/^    bool match_this;           \/* Has terms that match EcsThis *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
match_this	lib/flecs/include/flecs.h	/^    bool match_this;           \/* Has terms that match EcsThis *\/$/;"	m	struct:ecs_filter_t	typeref:typename:bool
matched	lib/flecs/test/api/include/api.h	/^    int32_t matched[ITER_MAX_ENTITIES];$/;"	m	struct:test_iter_result_t	typeref:typename:int32_t[]
matched_empty_table_count	lib/flecs/flecs.h	/^    ecs_gauge_t matched_empty_table_count; \/* Number of matched empty tables. Empty tables are /;"	m	struct:ecs_query_stats_t	typeref:typename:ecs_gauge_t
matched_empty_table_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t matched_empty_table_count; \/* Number of matched empty tables. Empty tables are /;"	m	struct:ecs_query_stats_t	typeref:typename:ecs_gauge_t
matched_entity_count	lib/flecs/flecs.h	/^    ecs_gauge_t matched_entity_count;         \/* Number of entities matched by queries *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
matched_entity_count	lib/flecs/flecs.h	/^    ecs_gauge_t matched_entity_count;      \/* Number of matched entities across all tables *\/$/;"	m	struct:ecs_query_stats_t	typeref:typename:ecs_gauge_t
matched_entity_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t matched_entity_count;         \/* Number of entities matched by queries *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
matched_entity_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t matched_entity_count;      \/* Number of matched entities across all tables *\/$/;"	m	struct:ecs_query_stats_t	typeref:typename:ecs_gauge_t
matched_table_count	lib/flecs/flecs.h	/^    ecs_gauge_t matched_table_count;          \/* Number of tables matched by queries *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
matched_table_count	lib/flecs/flecs.h	/^    ecs_gauge_t matched_table_count;       \/* Number of matched non-empty tables. This is the n/;"	m	struct:ecs_query_stats_t	typeref:typename:ecs_gauge_t
matched_table_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t matched_table_count;          \/* Number of tables matched by queries *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
matched_table_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t matched_table_count;       \/* Number of matched non-empty tables. This is the n/;"	m	struct:ecs_query_stats_t	typeref:typename:ecs_gauge_t
matches_left	lib/flecs/flecs.h	/^    int32_t matches_left;$/;"	m	struct:ecs_filter_iter_t	typeref:typename:int32_t
matches_left	lib/flecs/include/flecs/private/api_types.h	/^    int32_t matches_left;$/;"	m	struct:ecs_filter_iter_t	typeref:typename:int32_t
max	lib/flecs/flecs.c	/^    uint64_t max;           \/* Maximum value the switch can store *\/$/;"	m	struct:ecs_switch_t	typeref:typename:uint64_t	file:
max	lib/flecs/flecs.h	/^    float max[ECS_STAT_WINDOW];$/;"	m	struct:ecs_gauge_t	typeref:typename:float[]
max	lib/flecs/flecs.h	/^    int max;$/;"	m	struct:flecs::_::enum_data_impl	typeref:typename:int
max	lib/flecs/flecs.h	/^    int32_t max;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
max	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    int max;$/;"	m	struct:flecs::_::enum_data_impl	typeref:typename:int
max	lib/flecs/include/flecs/addons/stats.h	/^    float max[ECS_STAT_WINDOW];$/;"	m	struct:ecs_gauge_t	typeref:typename:float[]
max	lib/flecs/include/flecs/private/strbuf.h	/^    int32_t max;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
max	lib/flecs/include/flecs/private/switch_list.h	/^    uint64_t max;           \/* Maximum value the switch can store *\/$/;"	m	struct:ecs_switch_t	typeref:typename:uint64_t
max_depth	lib/flecs/flecs.h	/^    Base& max_depth(int32_t max_depth) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
max_depth	lib/flecs/flecs.h	/^    int32_t max_depth;          \/* Max depth of subset\/superset substitution *\/$/;"	m	struct:ecs_term_set_t	typeref:typename:int32_t
max_depth	lib/flecs/include/flecs.h	/^    int32_t max_depth;          \/* Max depth of subset\/superset substitution *\/$/;"	m	struct:ecs_term_set_t	typeref:typename:int32_t
max_depth	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& max_depth(int32_t max_depth) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
max_entries	lib/uthash/tests/lru_cache/cache.c	/^	size_t max_entries; \/**<Amount of entries this cache object can hold *\/$/;"	m	struct:foo_cache	typeref:typename:size_t	file:
max_id	lib/flecs/flecs.h	/^    ecs_entity_t max_id;              \/* Last allowed entity id *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:ecs_entity_t
max_id	lib/flecs/flecs.h	/^    uint64_t *max_id;           \/* Maximum issued sparse index *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:uint64_t *
max_id	lib/flecs/include/flecs.h	/^    ecs_entity_t max_id;              \/* Last allowed entity id *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:ecs_entity_t
max_id	lib/flecs/include/flecs/private/sparse.h	/^    uint64_t *max_id;           \/* Maximum issued sparse index *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:uint64_t *
max_id_local	lib/flecs/flecs.h	/^    uint64_t max_id_local;      \/* Local max index (if no global is set) *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:uint64_t
max_id_local	lib/flecs/include/flecs/private/sparse.h	/^    uint64_t max_id_local;      \/* Local max index (if no global is set) *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:uint64_t
max_int	lib/libflint/src/lfmath.c	/^int max_int(int a, int b) {$/;"	f	typeref:typename:int
measure_eval_duration	lib/flecs/flecs.h	/^    bool measure_eval_duration; \/* Include evaluation duration *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
measure_eval_duration	lib/flecs/include/flecs/addons/json.h	/^    bool measure_eval_duration; \/* Include evaluation duration *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
measure_frame_time	lib/flecs/flecs.c	/^    bool measure_frame_time;     \/* Time spent on each frame *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool	file:
measure_frame_time	lib/flecs/src/private_types.h	/^    bool measure_frame_time;     \/* Time spent on each frame *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool
measure_system_time	lib/flecs/flecs.c	/^    bool measure_system_time;    \/* Time spent by each system *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool	file:
measure_system_time	lib/flecs/src/private_types.h	/^    bool measure_system_time;    \/* Time spent by each system *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool
mem_failed	lib/uthash/tests/test92.c	/^    int mem_failed;$/;"	m	struct:example_user_t	typeref:typename:int	file:
member	lib/flecs/flecs.h	/^    ecs_entity_t member;$/;"	m	struct:ecs_member_t	typeref:typename:ecs_entity_t
member	lib/flecs/flecs.h	/^    int member(const char *name) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
member	lib/flecs/flecs.h	/^untyped_component& member(const char *name, int32_t count = 0) {$/;"	f	struct:flecs::untyped_component	typeref:typename:untyped_component &
member	lib/flecs/flecs.h	/^untyped_component& member(flecs::entity_t type_id, const char *name, int32_t count = 0) {$/;"	f	struct:flecs::untyped_component	typeref:typename:untyped_component &
member	lib/flecs/flecs.h	/^untyped_component& member(flecs::entity_t type_id, flecs::entity_t unit, const char *name, int32/;"	f	struct:flecs::untyped_component	typeref:typename:untyped_component &
member	lib/flecs/flecs.h	/^untyped_component& member(flecs::entity_t unit, const char *name, int32_t count = 0) {$/;"	f	struct:flecs::untyped_component	typeref:typename:untyped_component &
member	lib/flecs/include/flecs/addons/cpp/mixins/meta/component.inl	/^untyped_component& member(const char *name, int32_t count = 0) {$/;"	f	typeref:typename:untyped_component &
member	lib/flecs/include/flecs/addons/cpp/mixins/meta/component.inl	/^untyped_component& member(flecs::entity_t type_id, const char *name, int32_t count = 0) {$/;"	f	typeref:typename:untyped_component &
member	lib/flecs/include/flecs/addons/cpp/mixins/meta/component.inl	/^untyped_component& member(flecs::entity_t type_id, flecs::entity_t unit, const char *name, int32/;"	f	typeref:typename:untyped_component &
member	lib/flecs/include/flecs/addons/cpp/mixins/meta/component.inl	/^untyped_component& member(flecs::entity_t unit, const char *name, int32_t count = 0) {$/;"	f	typeref:typename:untyped_component &
member	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int member(const char *name) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
member	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t member;$/;"	m	struct:ecs_member_t	typeref:typename:ecs_entity_t
member_on_set	lib/flecs/flecs.c	/^void member_on_set(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
member_on_set	lib/flecs/src/addons/meta/meta.c	/^void member_on_set(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
member_t	lib/flecs/flecs.h	/^using member_t = ecs_member_t;$/;"	t	namespace:flecs	typeref:typename:ecs_member_t
member_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using member_t = ecs_member_t;$/;"	t	namespace:flecs	typeref:typename:ecs_member_t
members	lib/flecs/flecs.h	/^    ecs_hashmap_t *members; \/* string -> member index (structs only) *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_hashmap_t *
members	lib/flecs/flecs.h	/^    ecs_member_t members[ECS_MEMBER_DESC_CACHE_SIZE];$/;"	m	struct:ecs_struct_desc_t	typeref:typename:ecs_member_t[]
members	lib/flecs/flecs.h	/^    ecs_vector_t *members; \/* vector<ecs_member_t> *\/$/;"	m	struct:EcsStruct	typeref:typename:ecs_vector_t *
members	lib/flecs/include/flecs/addons/meta.h	/^    ecs_hashmap_t *members; \/* string -> member index (structs only) *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_hashmap_t *
members	lib/flecs/include/flecs/addons/meta.h	/^    ecs_member_t members[ECS_MEMBER_DESC_CACHE_SIZE];$/;"	m	struct:ecs_struct_desc_t	typeref:typename:ecs_member_t[]
members	lib/flecs/include/flecs/addons/meta.h	/^    ecs_vector_t *members; \/* vector<ecs_member_t> *\/$/;"	m	struct:EcsStruct	typeref:typename:ecs_vector_t *
memcmp	lib/uthash/tests/test6.c	/^#define memcmp /;"	d	file:
memset	lib/uthash/tests/test6.c	/^#define memset /;"	d	file:
merge	lib/flecs/flecs.h	/^    void merge() {$/;"	f	struct:flecs::world	typeref:typename:void
merge	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void merge() {$/;"	f	struct:flecs::world	typeref:typename:void
merge_column	lib/flecs/flecs.c	/^void merge_column($/;"	f	typeref:typename:void	file:
merge_column	lib/flecs/src/table.c	/^void merge_column($/;"	f	typeref:typename:void	file:
merge_count_total	lib/flecs/flecs.h	/^    ecs_counter_t merge_count_total;          \/* Number of merges executed. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
merge_count_total	lib/flecs/flecs.h	/^    int32_t merge_count_total;        \/* Total number of merges *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:int32_t
merge_count_total	lib/flecs/include/flecs.h	/^    int32_t merge_count_total;        \/* Total number of merges *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:int32_t
merge_count_total	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t merge_count_total;          \/* Number of merges executed. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
merge_stages	lib/flecs/flecs.c	/^void merge_stages($/;"	f	typeref:typename:void	file:
merge_stages	lib/flecs/src/stage.c	/^void merge_stages($/;"	f	typeref:typename:void	file:
merge_table_data	lib/flecs/flecs.c	/^void merge_table_data($/;"	f	typeref:typename:void	file:
merge_table_data	lib/flecs/src/table.c	/^void merge_table_data($/;"	f	typeref:typename:void	file:
merge_time_total	lib/flecs/flecs.h	/^    ecs_counter_t merge_time_total;           \/* Time spent on merging deferred actions. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
merge_time_total	lib/flecs/flecs.h	/^    float merge_time_total;           \/* Total time spent in merges *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:float
merge_time_total	lib/flecs/include/flecs.h	/^    float merge_time_total;           \/* Total time spent in merges *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:float
merge_time_total	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t merge_time_total;           \/* Time spent on merging deferred actions. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
merge_vector	lib/flecs/flecs.c	/^void merge_vector($/;"	f	typeref:typename:void	file:
merge_vector	lib/flecs/src/table.c	/^void merge_vector($/;"	f	typeref:typename:void	file:
meta	lib/flecs/flecs.h	/^namespace meta {$/;"	n	namespace:flecs
meta	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^namespace meta {$/;"	n	namespace:flecs
meta	lib/flecs/include/flecs/addons/cpp/mixins/meta/impl.hpp	/^namespace meta {$/;"	n	namespace:flecs
meta_constant_t	lib/flecs/flecs.c	/^typedef struct meta_constant_t {$/;"	s	file:
meta_constant_t	lib/flecs/flecs.c	/^} meta_constant_t;$/;"	t	typeref:struct:meta_constant_t	file:
meta_constant_t	lib/flecs/src/addons/meta_c.c	/^typedef struct meta_constant_t {$/;"	s	file:
meta_constant_t	lib/flecs/src/addons/meta_c.c	/^} meta_constant_t;$/;"	t	typeref:struct:meta_constant_t	file:
meta_lookup	lib/flecs/flecs.c	/^ecs_entity_t meta_lookup($/;"	f	typeref:typename:ecs_entity_t	file:
meta_lookup	lib/flecs/src/addons/meta_c.c	/^ecs_entity_t meta_lookup($/;"	f	typeref:typename:ecs_entity_t	file:
meta_lookup_array	lib/flecs/flecs.c	/^ecs_entity_t meta_lookup_array($/;"	f	typeref:typename:ecs_entity_t	file:
meta_lookup_array	lib/flecs/src/addons/meta_c.c	/^ecs_entity_t meta_lookup_array($/;"	f	typeref:typename:ecs_entity_t	file:
meta_lookup_bitmask	lib/flecs/flecs.c	/^ecs_entity_t meta_lookup_bitmask($/;"	f	typeref:typename:ecs_entity_t	file:
meta_lookup_bitmask	lib/flecs/src/addons/meta_c.c	/^ecs_entity_t meta_lookup_bitmask($/;"	f	typeref:typename:ecs_entity_t	file:
meta_lookup_vector	lib/flecs/flecs.c	/^ecs_entity_t meta_lookup_vector($/;"	f	typeref:typename:ecs_entity_t	file:
meta_lookup_vector	lib/flecs/src/addons/meta_c.c	/^ecs_entity_t meta_lookup_vector($/;"	f	typeref:typename:ecs_entity_t	file:
meta_member_t	lib/flecs/flecs.c	/^typedef struct meta_member_t {$/;"	s	file:
meta_member_t	lib/flecs/flecs.c	/^} meta_member_t;$/;"	t	typeref:struct:meta_member_t	file:
meta_member_t	lib/flecs/src/addons/meta_c.c	/^typedef struct meta_member_t {$/;"	s	file:
meta_member_t	lib/flecs/src/addons/meta_c.c	/^} meta_member_t;$/;"	t	typeref:struct:meta_member_t	file:
meta_open_scope	lib/flecs/flecs.c	/^const char * meta_open_scope($/;"	f	typeref:typename:const char *	file:
meta_open_scope	lib/flecs/src/addons/meta_c.c	/^const char * meta_open_scope($/;"	f	typeref:typename:const char *	file:
meta_params_t	lib/flecs/flecs.c	/^typedef struct meta_params_t {$/;"	s	file:
meta_params_t	lib/flecs/flecs.c	/^} meta_params_t;$/;"	t	typeref:struct:meta_params_t	file:
meta_params_t	lib/flecs/src/addons/meta_c.c	/^typedef struct meta_params_t {$/;"	s	file:
meta_params_t	lib/flecs/src/addons/meta_c.c	/^} meta_params_t;$/;"	t	typeref:struct:meta_params_t	file:
meta_parse_bitmask	lib/flecs/flecs.c	/^int meta_parse_bitmask($/;"	f	typeref:typename:int	file:
meta_parse_bitmask	lib/flecs/src/addons/meta_c.c	/^int meta_parse_bitmask($/;"	f	typeref:typename:int	file:
meta_parse_constant	lib/flecs/flecs.c	/^const char* meta_parse_constant($/;"	f	typeref:typename:const char *	file:
meta_parse_constant	lib/flecs/src/addons/meta_c.c	/^const char* meta_parse_constant($/;"	f	typeref:typename:const char *	file:
meta_parse_constants	lib/flecs/flecs.c	/^int meta_parse_constants($/;"	f	typeref:typename:int	file:
meta_parse_constants	lib/flecs/src/addons/meta_c.c	/^int meta_parse_constants($/;"	f	typeref:typename:int	file:
meta_parse_ctx_t	lib/flecs/flecs.c	/^typedef struct meta_parse_ctx_t {$/;"	s	file:
meta_parse_ctx_t	lib/flecs/flecs.c	/^} meta_parse_ctx_t;$/;"	t	typeref:struct:meta_parse_ctx_t	file:
meta_parse_ctx_t	lib/flecs/src/addons/meta_c.c	/^typedef struct meta_parse_ctx_t {$/;"	s	file:
meta_parse_ctx_t	lib/flecs/src/addons/meta_c.c	/^} meta_parse_ctx_t;$/;"	t	typeref:struct:meta_parse_ctx_t	file:
meta_parse_desc	lib/flecs/flecs.c	/^int meta_parse_desc($/;"	f	typeref:typename:int	file:
meta_parse_desc	lib/flecs/src/addons/meta_c.c	/^int meta_parse_desc($/;"	f	typeref:typename:int	file:
meta_parse_enum	lib/flecs/flecs.c	/^int meta_parse_enum($/;"	f	typeref:typename:int	file:
meta_parse_enum	lib/flecs/src/addons/meta_c.c	/^int meta_parse_enum($/;"	f	typeref:typename:int	file:
meta_parse_member	lib/flecs/flecs.c	/^const char* meta_parse_member($/;"	f	typeref:typename:const char *	file:
meta_parse_member	lib/flecs/src/addons/meta_c.c	/^const char* meta_parse_member($/;"	f	typeref:typename:const char *	file:
meta_parse_struct	lib/flecs/flecs.c	/^int meta_parse_struct($/;"	f	typeref:typename:int	file:
meta_parse_struct	lib/flecs/src/addons/meta_c.c	/^int meta_parse_struct($/;"	f	typeref:typename:int	file:
meta_parse_type	lib/flecs/flecs.c	/^const char* meta_parse_type($/;"	f	typeref:typename:const char *	file:
meta_parse_type	lib/flecs/src/addons/meta_c.c	/^const char* meta_parse_type($/;"	f	typeref:typename:const char *	file:
meta_test_bitmask	lib/flecs/test/meta/src/BitmaskTypes.c	/^void meta_test_bitmask($/;"	f	typeref:typename:void	file:
meta_test_builtin	lib/flecs/test/meta/src/PrimitiveTypes.c	/^#define meta_test_builtin(/;"	d	file:
meta_test_constant	lib/flecs/test/meta/src/BitmaskTypes.c	/^void meta_test_constant($/;"	f	typeref:typename:void	file:
meta_test_constant	lib/flecs/test/meta/src/EnumTypes.c	/^void meta_test_constant($/;"	f	typeref:typename:void	file:
meta_test_enum	lib/flecs/test/meta/src/EnumTypes.c	/^void meta_test_enum($/;"	f	typeref:typename:void	file:
meta_test_member	lib/flecs/test/meta/include/meta.h	/^#define meta_test_member(/;"	d
meta_test_primitive	lib/flecs/test/meta/src/PrimitiveTypes.c	/^static void meta_test_primitive($/;"	f	typeref:typename:void	file:
meta_test_struct	lib/flecs/test/meta/include/meta.h	/^#define meta_test_struct(/;"	d
meta_test_type	lib/flecs/test/meta/src/PrimitiveTypes.c	/^#define meta_test_type(/;"	d	file:
meta_test_type	lib/flecs/test/meta/src/PrimitiveTypes.c	/^meta_test_type(EcsBool, bool)$/;"	f
meta_test_vector	lib/flecs/test/meta/src/VectorTypes.c	/^void meta_test_vector($/;"	f	typeref:typename:void
meta_type_t	lib/flecs/flecs.c	/^typedef struct meta_type_t {$/;"	s	file:
meta_type_t	lib/flecs/flecs.c	/^} meta_type_t;$/;"	t	typeref:struct:meta_type_t	file:
meta_type_t	lib/flecs/src/addons/meta_c.c	/^typedef struct meta_type_t {$/;"	s	file:
meta_type_t	lib/flecs/src/addons/meta_c.c	/^} meta_type_t;$/;"	t	typeref:struct:meta_type_t	file:
metadata1312	lib/uthash/doc/banner.svg	/^     id="metadata1312">$/;"	i
metadata2022	lib/uthash/doc/uthash-mini.svg	/^     id="metadata2022">$/;"	i
meters	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t meters;$/;"	m	struct:Meta_units::Test	typeref:typename:int32_t	file:
method	lib/flecs/flecs.c	/^    ecs_http_method_t method;$/;"	m	struct:__anona642c0050a08	typeref:typename:ecs_http_method_t	file:
method	lib/flecs/flecs.h	/^    ecs_http_method_t method;$/;"	m	struct:__anona642c00a0a08	typeref:typename:ecs_http_method_t
method	lib/flecs/include/flecs/addons/http.h	/^    ecs_http_method_t method;$/;"	m	struct:__anon12cf63340408	typeref:typename:ecs_http_method_t
method	lib/flecs/src/addons/http.c	/^    ecs_http_method_t method;$/;"	m	struct:__anonc2d932d70208	typeref:typename:ecs_http_method_t	file:
min	lib/flecs/flecs.c	/^    uint64_t min;           \/* Minimum value the switch can store *\/$/;"	m	struct:ecs_switch_t	typeref:typename:uint64_t	file:
min	lib/flecs/flecs.h	/^    float min[ECS_STAT_WINDOW];$/;"	m	struct:ecs_gauge_t	typeref:typename:float[]
min	lib/flecs/flecs.h	/^    int min;$/;"	m	struct:flecs::_::enum_data_impl	typeref:typename:int
min	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    int min;$/;"	m	struct:flecs::_::enum_data_impl	typeref:typename:int
min	lib/flecs/include/flecs/addons/stats.h	/^    float min[ECS_STAT_WINDOW];$/;"	m	struct:ecs_gauge_t	typeref:typename:float[]
min	lib/flecs/include/flecs/private/switch_list.h	/^    uint64_t min;           \/* Minimum value the switch can store *\/$/;"	m	struct:ecs_switch_t	typeref:typename:uint64_t
min_depth	lib/flecs/flecs.h	/^    Base& min_depth(int32_t min_depth) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
min_depth	lib/flecs/flecs.h	/^    int32_t min_depth;          \/* Min depth of subset\/superset substitution *\/$/;"	m	struct:ecs_term_set_t	typeref:typename:int32_t
min_depth	lib/flecs/include/flecs.h	/^    int32_t min_depth;          \/* Min depth of subset\/superset substitution *\/$/;"	m	struct:ecs_term_set_t	typeref:typename:int32_t
min_depth	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& min_depth(int32_t min_depth) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
min_id	lib/flecs/flecs.h	/^    ecs_entity_t min_id;              \/* First allowed entity id *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:ecs_entity_t
min_id	lib/flecs/include/flecs.h	/^    ecs_entity_t min_id;              \/* First allowed entity id *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:ecs_entity_t
min_int	lib/libflint/src/lfmath.c	/^int min_int(int a, int b) {$/;"	f	typeref:typename:int
mix	lib/flecs/flecs.c	/^#define mix(/;"	d	file:
mix	lib/flecs/src/datastructures/hash.c	/^#define mix(/;"	d	file:
mixin_kind_str	lib/flecs/flecs.c	/^static const char* mixin_kind_str[] = {$/;"	v	typeref:typename:const char * []	file:
mixin_kind_str	lib/flecs/src/poly.c	/^static const char* mixin_kind_str[] = {$/;"	v	typeref:typename:const char * []	file:
mixins	lib/flecs/flecs.h	/^    ecs_mixins_t *mixins; \/* Table with offsets to (optional) mixins *\/$/;"	m	struct:ecs_header_t	typeref:typename:ecs_mixins_t *
mixins	lib/flecs/include/flecs.h	/^    ecs_mixins_t *mixins; \/* Table with offsets to (optional) mixins *\/$/;"	m	struct:ecs_header_t	typeref:typename:ecs_mixins_t *
modified	lib/flecs/flecs.h	/^    void modified() const {$/;"	f	struct:flecs::entity	typeref:typename:void
modified	lib/flecs/flecs.h	/^    void modified(entity_t comp) const {$/;"	f	struct:flecs::entity	typeref:typename:void
modified	lib/flecs/flecs.h	/^    void modified(entity_t object) const {$/;"	f	struct:flecs::entity	typeref:typename:void
modified	lib/flecs/flecs.h	/^    void modified(entity_t relation, entity_t object) const {$/;"	f	struct:flecs::entity	typeref:typename:void
modified	lib/flecs/flecs.h	/^void world::modified() const {$/;"	f	class:flecs::world	typeref:typename:void
modified	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    void modified() const {$/;"	f	struct:flecs::entity	typeref:typename:void
modified	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    void modified(entity_t comp) const {$/;"	f	struct:flecs::entity	typeref:typename:void
modified	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    void modified(entity_t object) const {$/;"	f	struct:flecs::entity	typeref:typename:void
modified	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    void modified(entity_t relation, entity_t object) const {$/;"	f	struct:flecs::entity	typeref:typename:void
modified	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^void world::modified() const {$/;"	f	class:flecs::world	typeref:typename:void
module	lib/flecs/flecs.h	/^inline flecs::entity world::module() const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
module	lib/flecs/include/flecs/addons/cpp/mixins/module/impl.hpp	/^inline flecs::entity world::module() const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
module	lib/flecs/test/cpp_api/src/World.cpp	/^    module(flecs::world& ecs) {$/;"	f	class:test::interop::module	file:
module	lib/flecs/test/cpp_api/src/World.cpp	/^class module : TestInteropModule {$/;"	c	namespace:test::interop	file:
module_ctor_invoked	lib/flecs/test/cpp_api/src/Module.cpp	/^static int module_ctor_invoked = 0;$/;"	v	typeref:typename:int	file:
module_dtor_invoked	lib/flecs/test/cpp_api/src/Module.cpp	/^static int module_dtor_invoked = 0;$/;"	v	typeref:typename:int	file:
module_file_base	lib/flecs/flecs.c	/^char *module_file_base(const char *module, char sep) {$/;"	f	typeref:typename:char *	file:
module_file_base	lib/flecs/src/os_api.c	/^char *module_file_base(const char *module, char sep) {$/;"	f	typeref:typename:char *	file:
module_to_dl_	lib/flecs/flecs.h	/^    ecs_os_api_module_to_path_t module_to_dl_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_module_to_path_t
module_to_dl_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_module_to_path_t module_to_dl_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_module_to_path_t
module_to_etc_	lib/flecs/flecs.h	/^    ecs_os_api_module_to_path_t module_to_etc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_module_to_path_t
module_to_etc_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_module_to_path_t module_to_etc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_module_to_path_t
monitor	lib/flecs/flecs.c	/^    int32_t *monitor;                \/* Used to monitor table for changes *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:int32_t *	file:
monitor	lib/flecs/src/private_types.h	/^    int32_t *monitor;                \/* Used to monitor table for changes *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:int32_t *
monitor_sets	lib/flecs/flecs.c	/^    ecs_map_t monitor_sets;     \/* map<relation_id, ecs_monitor_set_t> *\/$/;"	m	struct:ecs_relation_monitor_t	typeref:typename:ecs_map_t	file:
monitor_sets	lib/flecs/src/private_types.h	/^    ecs_map_t monitor_sets;     \/* map<relation_id, ecs_monitor_set_t> *\/$/;"	m	struct:ecs_relation_monitor_t	typeref:typename:ecs_map_t
monitors	lib/flecs/flecs.c	/^    ecs_map_t monitors;         \/* map<id, ecs_monitor_t> *\/$/;"	m	struct:ecs_monitor_set_t	typeref:typename:ecs_map_t	file:
monitors	lib/flecs/flecs.c	/^    ecs_relation_monitor_t monitors;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_relation_monitor_t	file:
monitors	lib/flecs/src/private_types.h	/^    ecs_map_t monitors;         \/* map<id, ecs_monitor_t> *\/$/;"	m	struct:ecs_monitor_set_t	typeref:typename:ecs_map_t
monitors	lib/flecs/src/private_types.h	/^    ecs_relation_monitor_t monitors;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_relation_monitor_t
monitors_fini	lib/flecs/flecs.c	/^void monitors_fini($/;"	f	typeref:typename:void	file:
monitors_fini	lib/flecs/src/world.c	/^void monitors_fini($/;"	f	typeref:typename:void	file:
monitors_init	lib/flecs/flecs.c	/^void monitors_init($/;"	f	typeref:typename:void	file:
monitors_init	lib/flecs/src/world.c	/^void monitors_init($/;"	f	typeref:typename:void	file:
most_specific_var	lib/flecs/flecs.c	/^ecs_rule_var_t* most_specific_var($/;"	f	typeref:typename:ecs_rule_var_t *	file:
most_specific_var	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* most_specific_var($/;"	f	typeref:typename:ecs_rule_var_t *	file:
move	lib/flecs/flecs.h	/^    bool move;                  \/* When true, this signals to ecs_term_copy that$/;"	m	struct:ecs_term_t	typeref:typename:bool
move	lib/flecs/flecs.h	/^    ecs_move_t move;            \/* move assignment *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_move_t
move	lib/flecs/flecs.h	/^    ecs_term_t move() { \/* explicit move to ecs_term_t *\/$/;"	f	struct:flecs::term	typeref:typename:ecs_term_t
move	lib/flecs/flecs.h	/^ecs_move_t move() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_move_t
move	lib/flecs/include/flecs.h	/^    bool move;                  \/* When true, this signals to ecs_term_copy that$/;"	m	struct:ecs_term_t	typeref:typename:bool
move	lib/flecs/include/flecs.h	/^    ecs_move_t move;            \/* move assignment *\/$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_move_t
move	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^ecs_move_t move() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_move_t
move	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    ecs_term_t move() { \/* explicit move to ecs_term_t *\/$/;"	f	struct:flecs::term	typeref:typename:ecs_term_t
move	lib/flecs/test/api/src/ComponentLifecycle.c	/^    copy_ctx move;$/;"	m	struct:cl_ctx	typeref:typename:copy_ctx	file:
move_bitset_columns	lib/flecs/flecs.c	/^void move_bitset_columns($/;"	f	typeref:typename:void	file:
move_bitset_columns	lib/flecs/src/table.c	/^void move_bitset_columns($/;"	f	typeref:typename:void	file:
move_ctor	lib/flecs/flecs.h	/^    ecs_move_ctor_t move_ctor;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_move_ctor_t
move_ctor	lib/flecs/flecs.h	/^ecs_move_ctor_t move_ctor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_move_ctor_t
move_ctor	lib/flecs/include/flecs.h	/^    ecs_move_ctor_t move_ctor;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_move_ctor_t
move_ctor	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^ecs_move_ctor_t move_ctor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_move_ctor_t
move_ctor_impl	lib/flecs/flecs.h	/^void move_ctor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
move_ctor_impl	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^void move_ctor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
move_ctor_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int move_ctor_invoked;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
move_ctor_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int move_ctor_invoked;$/;"	m	class:Pod	typeref:typename:int
move_ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CountNoDefaultCtor::move_ctor_invoked = 0;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
move_ctor_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int Pod::move_ctor_invoked = 0;$/;"	m	class:Pod	typeref:typename:int
move_dst_x	lib/flecs/test/api/src/Delete.c	/^static int move_dst_x;$/;"	v	typeref:typename:int	file:
move_dst_y	lib/flecs/test/api/src/Delete.c	/^static int move_dst_y;$/;"	v	typeref:typename:int	file:
move_dtor	lib/flecs/flecs.h	/^    ecs_move_ctor_t move_dtor;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_move_ctor_t
move_dtor	lib/flecs/flecs.h	/^ecs_move_ctor_t move_dtor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_move_ctor_t
move_dtor	lib/flecs/include/flecs.h	/^    ecs_move_ctor_t move_dtor;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_move_ctor_t
move_dtor	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^ecs_move_ctor_t move_dtor() {$/;"	f	namespace:flecs::_	typeref:typename:ecs_move_ctor_t
move_dtor_impl	lib/flecs/flecs.h	/^void move_dtor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
move_dtor_impl	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^void move_dtor_impl($/;"	f	namespace:flecs::_	typeref:typename:void
move_entity	lib/flecs/flecs.c	/^int32_t move_entity($/;"	f	typeref:typename:int32_t	file:
move_entity	lib/flecs/src/entity.c	/^int32_t move_entity($/;"	f	typeref:typename:int32_t	file:
move_impl	lib/flecs/flecs.h	/^void move_impl($/;"	f	namespace:flecs::_	typeref:typename:void
move_impl	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^void move_impl($/;"	f	namespace:flecs::_	typeref:typename:void
move_invoked	lib/flecs/test/api/src/Delete.c	/^static int move_invoked = 0;$/;"	v	typeref:typename:int	file:
move_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int move_invoked;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
move_invoked	lib/flecs/test/cpp_api/include/cpp_api.h	/^    static int move_invoked;$/;"	m	class:Pod	typeref:typename:int
move_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CountNoDefaultCtor::move_invoked = 0;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
move_invoked	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int Pod::move_invoked = 0;$/;"	m	class:Pod	typeref:typename:int
move_position	lib/flecs/test/api/src/SingleThreadStaging.c	/^static int move_position = 0;$/;"	v	typeref:typename:int	file:
move_src_x	lib/flecs/test/api/src/Delete.c	/^static int move_src_x;$/;"	v	typeref:typename:int	file:
move_src_y	lib/flecs/test/api/src/Delete.c	/^static int move_src_y;$/;"	v	typeref:typename:int	file:
move_switch_columns	lib/flecs/flecs.c	/^void move_switch_columns($/;"	f	typeref:typename:void	file:
move_switch_columns	lib/flecs/src/table.c	/^void move_switch_columns($/;"	f	typeref:typename:void	file:
move_system	src/ecs/systems.c	/^void move_system(ecs_iter_t *it) {$/;"	f	typeref:typename:void
move_value	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    static int move_value;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int	file:
move_value	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^int CtorDtor_w_MoveAssign::move_value;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int
msg_t	lib/uthash/tests/test22.c	/^} msg_t;$/;"	t	typeref:struct:__anonbb926f9e0108	file:
multi_threaded	lib/flecs/flecs.c	/^    bool multi_threaded;        \/* Whether systems can be ran multi threaded *\/$/;"	m	struct:ecs_pipeline_op_t	typeref:typename:bool	file:
multi_threaded	lib/flecs/flecs.c	/^    bool multi_threaded;$/;"	m	struct:EcsSystem	typeref:typename:bool	file:
multi_threaded	lib/flecs/flecs.h	/^    Base& multi_threaded(bool value = true) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
multi_threaded	lib/flecs/flecs.h	/^    bool multi_threaded;$/;"	m	struct:ecs_system_desc_t	typeref:typename:bool
multi_threaded	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& multi_threaded(bool value = true) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
multi_threaded	lib/flecs/include/flecs/addons/system.h	/^    bool multi_threaded;$/;"	m	struct:ecs_system_desc_t	typeref:typename:bool
multi_threaded	lib/flecs/src/addons/pipeline/pipeline.h	/^    bool multi_threaded;        \/* Whether systems can be ran multi threaded *\/$/;"	m	struct:ecs_pipeline_op_t	typeref:typename:bool
multi_threaded	lib/flecs/src/addons/system/system.h	/^    bool multi_threaded;$/;"	m	struct:EcsSystem	typeref:typename:bool
mut	lib/flecs/flecs.h	/^inline flecs::entity entity_view::mut(const flecs::entity_view& e) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
mut	lib/flecs/flecs.h	/^inline flecs::entity entity_view::mut(const flecs::iter& it) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
mut	lib/flecs/flecs.h	/^inline flecs::entity entity_view::mut(const flecs::world& stage) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
mut	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::mut(const flecs::entity_view& e) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
mut	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::mut(const flecs::iter& it) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
mut	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::mut(const flecs::world& stage) const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
mutex	lib/flecs/flecs.c	/^    ecs_os_mutex_t mutex;        \/* Locks the world if locking enabled *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_mutex_t	file:
mutex	lib/flecs/src/private_types.h	/^    ecs_os_mutex_t mutex;        \/* Locks the world if locking enabled *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_mutex_t
mutex_free_	lib/flecs/flecs.h	/^    ecs_os_api_mutex_free_t mutex_free_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_mutex_free_t
mutex_free_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_mutex_free_t mutex_free_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_mutex_free_t
mutex_lock_	lib/flecs/flecs.h	/^    ecs_os_api_mutex_lock_t mutex_lock_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_mutex_lock_t
mutex_lock_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_mutex_lock_t mutex_lock_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_mutex_lock_t
mutex_new_	lib/flecs/flecs.h	/^    ecs_os_api_mutex_new_t mutex_new_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_mutex_new_t
mutex_new_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_mutex_new_t mutex_new_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_mutex_new_t
mutex_unlock_	lib/flecs/flecs.h	/^    ecs_os_api_mutex_lock_t mutex_unlock_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_mutex_lock_t
mutex_unlock_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_mutex_lock_t mutex_unlock_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_mutex_lock_t
my_abort	lib/flecs/test/api/src/Error.c	/^void my_abort(void) {$/;"	f	typeref:typename:void	file:
my_abort_called	lib/flecs/test/api/src/Error.c	/^static bool my_abort_called = false;$/;"	v	typeref:typename:bool	file:
my_event	lib/uthash/tests/test16.c	/^struct my_event {$/;"	s	file:
my_module	lib/flecs/test/custom_builds/cpp/module/src/main.cpp	/^    my_module(flecs::world& world) {$/;"	f	struct:my_module	file:
my_module	lib/flecs/test/custom_builds/cpp/module/src/main.cpp	/^struct my_module {$/;"	s	file:
my_struct	lib/uthash/tests/example.c	/^struct my_struct {$/;"	s	file:
my_struct	lib/uthash/tests/test15.c	/^struct my_struct {$/;"	s	file:
my_struct	lib/uthash/tests/test20.c	/^struct my_struct {$/;"	s	file:
my_struct	lib/uthash/tests/test40.c	/^struct my_struct {$/;"	s	file:
n	lib/uthash/include/utarray.h	/^    unsigned i,n;\/* i: index of next available slot, n: num slots *\/$/;"	m	struct:__anonf30a79380208	typeref:typename:unsigned
n	lib/uthash/include/utringbuffer.h	/^    unsigned n;       \/* capacity *\/$/;"	m	struct:__anon8907aae30108	typeref:typename:unsigned
n	lib/uthash/include/utstring.h	/^    size_t n; \/* allocated capacity *\/$/;"	m	struct:__anon8b7ab8d00108	typeref:typename:size_t
n	lib/uthash/src/utarray.h	/^    unsigned i,n;\/* i: index of next available slot, n: num slots *\/$/;"	m	struct:__anon57c8b0dc0208	typeref:typename:unsigned
n	lib/uthash/src/utringbuffer.h	/^    unsigned n;       \/* capacity *\/$/;"	m	struct:__anon5ece49070108	typeref:typename:unsigned
n	lib/uthash/src/utstring.h	/^    size_t n; \/* allocated capacity *\/$/;"	m	struct:__anon87ffe4f40108	typeref:typename:size_t
n_1	lib/flecs/test/meta/src/ArrayTypes.c	/^        N1 n_1[3];$/;"	m	struct:ArrayTypes_array_struct_array_bool_3::__anon98b8c2480e08	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/ArrayTypes.c	/^        N1 n_1[3];$/;"	m	struct:ArrayTypes_array_struct_bool_3::__anon98b8c2480a08	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/ArrayTypes.c	/^        N1 n_1[3];$/;"	m	struct:ArrayTypes_array_struct_bool_3_before_i32_member::__anon98b8c2480c08	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        A1 n_1;$/;"	m	struct:Cursor_struct_w_2_array_type_struct::__anon23e81c322908	typeref:typename:A1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        A1 n_1;$/;"	m	struct:Cursor_struct_w_array_type_struct::__anon23e81c322608	typeref:typename:A1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_2_nested_1_i32_2_i32::__anon23e81c320b08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32::__anon23e81c320d08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320f08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_member_2_nested_i32_i32::__anon23e81c322108	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_member_2_nested_i32_i32_reverse::__anon23e81c322308	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_member_nested_i32_i32::__anon23e81c321f08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_nested_i32::__anon23e81c320908	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_w_2_array_type_i32_i32::__anon23e81c322708	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1;$/;"	m	struct:Cursor_struct_w_array_type_i32_i32::__anon23e81c322408	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1[3];$/;"	m	struct:Cursor_struct_set_2_array_w_struct_i32::__anon23e81c321608	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1[3];$/;"	m	struct:Cursor_struct_set_2_array_w_struct_w_array_i32::__anon23e81c321a08	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1[3];$/;"	m	struct:Cursor_struct_set_array_w_struct_i32::__anon23e81c321408	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_1[3];$/;"	m	struct:Cursor_struct_set_array_w_struct_w_array_i32::__anon23e81c321808	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        A1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_w_2_array_type_struct::__anon51c88b182208	typeref:typename:A1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        A1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_w_array_type_struct::__anon51c88b182008	typeref:typename:A1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_2_nested_i32_i32::__anon51c88b180d08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_member_2_nested_i32_i32::__anon51c88b181508	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse::__anon51c88b181708	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_member_nested_i32::__anon51c88b181108	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_member_nested_i32_i32::__anon51c88b181308	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_nested_i32::__anon51c88b180908	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_nested_i32_i32::__anon51c88b180b08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_w_2_array_type_i32_i32::__anon51c88b181e08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromExpr_struct_w_array_type_i32_i32::__anon51c88b181d08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1[3];$/;"	m	struct:DeserializeFromExpr_struct_struct_i32_array_3::__anon51c88b181a08	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_1[3];$/;"	m	struct:DeserializeFromExpr_struct_struct_i32_i32_array_3::__anon51c88b181c08	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromJson_struct_2_nested_i32_i32::__anon5d173e531e08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromJson_struct_nested_i32::__anon5d173e531a08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromJson_struct_nested_i32_i32::__anon5d173e531c08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromJson_struct_w_2_array_type_i32_i32::__anon5d173e532508	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_1;$/;"	m	struct:DeserializeFromJson_struct_w_array_type_i32_i32::__anon5d173e532408	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_1[3];$/;"	m	struct:DeserializeFromJson_struct_struct_i32_array_3::__anon5d173e532108	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_1[3];$/;"	m	struct:DeserializeFromJson_struct_struct_i32_i32_array_3::__anon5d173e532308	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool::__anon3cdfa8510208	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_2_bool::__anon3cdfa8511008	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_2_bool_bool::__anon3cdfa8511908	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_2_i32::__anon3cdfa8511308	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_2_same::__anon3cdfa8510e08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool::__anon3cdfa8511c08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8512108	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_same::__anon3cdfa8511e08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_w_bool_member::__anon3cdfa8510608	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_bool_w_int32_member::__anon3cdfa8510808	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_i32_2_bool::__anon3cdfa8511608	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_i32_2_i32::__anon3cdfa8512608	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_i32_2_i32_i32::__anon3cdfa8512908	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_i32_2_same::__anon3cdfa8512308	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32::__anon3cdfa8512c08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8513108	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_same::__anon3cdfa8512e08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_int32::__anon3cdfa8510408	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_int32_w_bool_member::__anon3cdfa8510a08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_1_int32_w_int32_member::__anon3cdfa8510c08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513608	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_1;$/;"	m	struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513b08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        A1 n_1;$/;"	m	struct:SerializeToExpr_struct_w_2_array_type_struct::__anon35ed1d3e1908	typeref:typename:A1	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        A1 n_1;$/;"	m	struct:SerializeToExpr_struct_w_array_type_struct::__anon35ed1d3e1708	typeref:typename:A1	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_1;$/;"	m	struct:SerializeToExpr_struct_2_nested_i32_i32::__anon35ed1d3e0e08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_1;$/;"	m	struct:SerializeToExpr_struct_nested_i32::__anon35ed1d3e0a08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_1;$/;"	m	struct:SerializeToExpr_struct_nested_i32_i32::__anon35ed1d3e0c08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_1;$/;"	m	struct:SerializeToExpr_struct_w_2_array_type_i32_i32::__anon35ed1d3e1508	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_1;$/;"	m	struct:SerializeToExpr_struct_w_array_type_i32_i32::__anon35ed1d3e1408	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_1[3];$/;"	m	struct:SerializeToExpr_struct_struct_i32_array_3::__anon35ed1d3e1108	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_1[3];$/;"	m	struct:SerializeToExpr_struct_struct_i32_i32_array_3::__anon35ed1d3e1308	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_1;$/;"	m	struct:SerializeToJson_struct_2_nested_i32_i32::__anon413bd0792108	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_1;$/;"	m	struct:SerializeToJson_struct_nested_i32::__anon413bd0791d08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_1;$/;"	m	struct:SerializeToJson_struct_nested_i32_i32::__anon413bd0791f08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_1;$/;"	m	struct:SerializeToJson_struct_w_2_array_type_i32_i32::__anon413bd0792808	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_1;$/;"	m	struct:SerializeToJson_struct_w_array_type_i32_i32::__anon413bd0792708	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_1[3];$/;"	m	struct:SerializeToJson_struct_struct_i32_array_3::__anon413bd0792408	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_1[3];$/;"	m	struct:SerializeToJson_struct_struct_i32_i32_array_3::__anon413bd0792608	typeref:typename:N1[3]	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003308	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003808	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002408	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002908	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002e08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_bool::__anond4af8f000808	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_2_bool::__anond4af8f001008	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001908	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001f08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_w_bool_member::__anond4af8f000c08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_w_i32_member::__anond4af8f000e08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_i32::__anond4af8f000a08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_2_bool::__anond4af8f001308	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001c08	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001608	typeref:typename:N1	file:
n_1	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_1[3];$/;"	m	struct:Serialized_ops_struct_array_struct_bool_3_w_i32_after::__anond4af8f004008	typeref:typename:N1[3]	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        A1 n_2;$/;"	m	struct:Cursor_struct_w_2_array_type_struct::__anon23e81c322908	typeref:typename:A1	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_2;$/;"	m	struct:Cursor_struct_2_nested_1_i32_2_i32::__anon23e81c320b08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_2;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32::__anon23e81c320d08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_2;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320f08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_2;$/;"	m	struct:Cursor_struct_member_2_nested_i32_i32::__anon23e81c322108	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_2;$/;"	m	struct:Cursor_struct_member_2_nested_i32_i32_reverse::__anon23e81c322308	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_2;$/;"	m	struct:Cursor_struct_w_2_array_type_i32_i32::__anon23e81c322708	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_2[3];$/;"	m	struct:Cursor_struct_set_2_array_w_struct_i32::__anon23e81c321608	typeref:typename:N1[3]	file:
n_2	lib/flecs/test/meta/src/Cursor.c	/^        N1 n_2[3];$/;"	m	struct:Cursor_struct_set_2_array_w_struct_w_array_i32::__anon23e81c321a08	typeref:typename:N1[3]	file:
n_2	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        A1 n_2;$/;"	m	struct:DeserializeFromExpr_struct_w_2_array_type_struct::__anon51c88b182208	typeref:typename:A1	file:
n_2	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_2;$/;"	m	struct:DeserializeFromExpr_struct_2_nested_i32_i32::__anon51c88b180d08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_2;$/;"	m	struct:DeserializeFromExpr_struct_member_2_nested_i32_i32::__anon51c88b181508	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_2;$/;"	m	struct:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse::__anon51c88b181708	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        N1 n_2;$/;"	m	struct:DeserializeFromExpr_struct_w_2_array_type_i32_i32::__anon51c88b181e08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_2;$/;"	m	struct:DeserializeFromJson_struct_2_nested_i32_i32::__anon5d173e531e08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        N1 n_2;$/;"	m	struct:DeserializeFromJson_struct_w_2_array_type_i32_i32::__anon5d173e532508	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_2;$/;"	m	struct:NestedStructTypes_1_bool_2_bool::__anon3cdfa8511008	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_2;$/;"	m	struct:NestedStructTypes_1_bool_2_same::__anon3cdfa8510e08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_2;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_same::__anon3cdfa8511e08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_2;$/;"	m	struct:NestedStructTypes_1_i32_2_same::__anon3cdfa8512308	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N1 n_2;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_same::__anon3cdfa8512e08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_bool_2_bool_bool::__anon3cdfa8511908	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_bool_2_i32::__anon3cdfa8511308	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool::__anon3cdfa8511c08	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8512108	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_i32_2_bool::__anon3cdfa8511608	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_i32_2_i32::__anon3cdfa8512608	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_i32_2_i32_i32::__anon3cdfa8512908	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32::__anon3cdfa8512c08	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8513108	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513608	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        N2 n_2;$/;"	m	struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513b08	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/SerializeToExpr.c	/^        A1 n_2;$/;"	m	struct:SerializeToExpr_struct_w_2_array_type_struct::__anon35ed1d3e1908	typeref:typename:A1	file:
n_2	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_2;$/;"	m	struct:SerializeToExpr_struct_2_nested_i32_i32::__anon35ed1d3e0e08	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/SerializeToExpr.c	/^        N1 n_2;$/;"	m	struct:SerializeToExpr_struct_w_2_array_type_i32_i32::__anon35ed1d3e1508	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_2;$/;"	m	struct:SerializeToJson_struct_2_nested_i32_i32::__anon413bd0792108	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/SerializeToJson.c	/^        N1 n_2;$/;"	m	struct:SerializeToJson_struct_w_2_array_type_i32_i32::__anon413bd0792808	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N1 n_2;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_2_bool::__anond4af8f001008	typeref:typename:N1	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003308	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003808	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002408	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002908	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002e08	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001908	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001f08	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_2_bool::__anond4af8f001308	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001c08	typeref:typename:N2	file:
n_2	lib/flecs/test/meta/src/Serialized.c	/^        N2 n_2;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001608	typeref:typename:N2	file:
name	include/colors.h	/^    char name[16];$/;"	m	struct:DColor	typeref:typename:char[16]
name	lib/flecs/flecs.c	/^    char *name;       \/* Variable name *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:char *	file:
name	lib/flecs/flecs.c	/^    const char *name;$/;"	m	struct:__anona642c0050408	typeref:typename:const char *	file:
name	lib/flecs/flecs.c	/^    const char *name;$/;"	m	struct:meta_parse_ctx_t	typeref:typename:const char *	file:
name	lib/flecs/flecs.c	/^    ecs_meta_token_t name;$/;"	m	struct:meta_constant_t	typeref:typename:ecs_meta_token_t	file:
name	lib/flecs/flecs.c	/^    ecs_meta_token_t name;$/;"	m	struct:meta_member_t	typeref:typename:ecs_meta_token_t	file:
name	lib/flecs/flecs.h	/^    Base& name(const char *name) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
name	lib/flecs/flecs.h	/^    char *name;                 \/* Name (default = ".") *\/$/;"	m	struct:ecs_term_id_t	typeref:typename:char *
name	lib/flecs/flecs.h	/^    char *name;                 \/* Name of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:char *
name	lib/flecs/flecs.h	/^    char *name;                \/* Name of filter (optional) *\/$/;"	m	struct:ecs_filter_t	typeref:typename:char *
name	lib/flecs/flecs.h	/^    const char *name;       \/* Name of value (only used for struct members) *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:const char *
name	lib/flecs/flecs.h	/^    const char *name;    \/* Name of the entity. If no entity is provided, an $/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
name	lib/flecs/flecs.h	/^    const char *name; \/* Name of expression (used for logging) *\/$/;"	m	struct:ecs_parse_json_desc_t	typeref:typename:const char *
name	lib/flecs/flecs.h	/^    const char *name;$/;"	m	struct:ecs_bitmask_constant_t	typeref:typename:const char *
name	lib/flecs/flecs.h	/^    const char *name;$/;"	m	struct:ecs_enum_constant_t	typeref:typename:const char *
name	lib/flecs/flecs.h	/^    const char *name;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:const char *
name	lib/flecs/flecs.h	/^    const char *name;$/;"	m	struct:ecs_member_t	typeref:typename:const char *
name	lib/flecs/flecs.h	/^    const char *name;$/;"	m	struct:ecs_parse_expr_desc_t	typeref:typename:const char *
name	lib/flecs/flecs.h	/^    flecs::string_view name() const {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::string_view
name	lib/flecs/flecs.h	/^    static const char* name(world_t *world = nullptr) {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:const char *
name	lib/flecs/include/flecs.h	/^    char *name;                 \/* Name (default = ".") *\/$/;"	m	struct:ecs_term_id_t	typeref:typename:char *
name	lib/flecs/include/flecs.h	/^    char *name;                 \/* Name of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:char *
name	lib/flecs/include/flecs.h	/^    char *name;                \/* Name of filter (optional) *\/$/;"	m	struct:ecs_filter_t	typeref:typename:char *
name	lib/flecs/include/flecs.h	/^    const char *name;    \/* Name of the entity. If no entity is provided, an $/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
name	lib/flecs/include/flecs.h	/^    const char *name;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:const char *
name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static const char* name(world_t *world = nullptr) {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:const char *
name	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    flecs::string_view name() const {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::string_view
name	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& name(const char *name) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
name	lib/flecs/include/flecs/addons/expr.h	/^    const char *name;$/;"	m	struct:ecs_parse_expr_desc_t	typeref:typename:const char *
name	lib/flecs/include/flecs/addons/json.h	/^    const char *name; \/* Name of expression (used for logging) *\/$/;"	m	struct:ecs_parse_json_desc_t	typeref:typename:const char *
name	lib/flecs/include/flecs/addons/meta.h	/^    const char *name;       \/* Name of value (only used for struct members) *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:const char *
name	lib/flecs/include/flecs/addons/meta.h	/^    const char *name;$/;"	m	struct:ecs_bitmask_constant_t	typeref:typename:const char *
name	lib/flecs/include/flecs/addons/meta.h	/^    const char *name;$/;"	m	struct:ecs_enum_constant_t	typeref:typename:const char *
name	lib/flecs/include/flecs/addons/meta.h	/^    const char *name;$/;"	m	struct:ecs_member_t	typeref:typename:const char *
name	lib/flecs/src/addons/meta_c.c	/^    const char *name;$/;"	m	struct:meta_parse_ctx_t	typeref:typename:const char *	file:
name	lib/flecs/src/addons/meta_c.c	/^    ecs_meta_token_t name;$/;"	m	struct:meta_constant_t	typeref:typename:ecs_meta_token_t	file:
name	lib/flecs/src/addons/meta_c.c	/^    ecs_meta_token_t name;$/;"	m	struct:meta_member_t	typeref:typename:ecs_meta_token_t	file:
name	lib/flecs/src/addons/plecs.c	/^    const char *name;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:const char *	file:
name	lib/flecs/src/addons/rules.c	/^    char *name;       \/* Variable name *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:char *	file:
name	lib/uthash/tests/example.c	/^    char name[21];$/;"	m	struct:my_struct	typeref:typename:char[21]	file:
name	lib/uthash/tests/test15.c	/^    char name[10];             \/* key *\/$/;"	m	struct:my_struct	typeref:typename:char[10]	file:
name	lib/uthash/tests/test39.c	/^    const char *name;$/;"	m	struct:__anonbb9319c60108	typeref:typename:const char *	file:
name	lib/uthash/tests/test40.c	/^    const char *name;          \/* key *\/$/;"	m	struct:my_struct	typeref:typename:const char *	file:
name	lib/uthash/tests/test59.c	/^    char name[10];$/;"	m	struct:item	typeref:typename:char[10]	file:
name	lib/uthash/tests/test60.c	/^    char name[10];$/;"	m	struct:item	typeref:typename:char[10]	file:
name	lib/uthash/tests/test87.c	/^    char name[32];$/;"	m	struct:__anonbb95cf290108	typeref:typename:char[32]	file:
name_index	lib/flecs/flecs.c	/^    ecs_hashmap_t *name_index;$/;"	m	struct:ecs_id_record_t	typeref:typename:ecs_hashmap_t *	file:
name_index	lib/flecs/src/private_types.h	/^    ecs_hashmap_t *name_index;$/;"	m	struct:ecs_id_record_t	typeref:typename:ecs_hashmap_t *
name_index_compare	lib/flecs/flecs.c	/^int name_index_compare($/;"	f	typeref:typename:int	file:
name_index_compare	lib/flecs/src/datastructures/name_index.c	/^int name_index_compare($/;"	f	typeref:typename:int	file:
name_index_hash	lib/flecs/flecs.c	/^uint64_t name_index_hash($/;"	f	typeref:typename:uint64_t	file:
name_index_hash	lib/flecs/src/datastructures/name_index.c	/^uint64_t name_index_hash($/;"	f	typeref:typename:uint64_t	file:
name_prefix	lib/flecs/flecs.c	/^    const char *name_prefix;     \/* Remove prefix from C names in modules *\/$/;"	m	struct:ecs_world_t	typeref:typename:const char *	file:
name_prefix	lib/flecs/src/private_types.h	/^    const char *name_prefix;     \/* Remove prefix from C names in modules *\/$/;"	m	struct:ecs_world_t	typeref:typename:const char *
name_rec	lib/uthash/tests/bloom_perf.c	/^typedef struct name_rec {$/;"	s	file:
name_rec	lib/uthash/tests/bloom_perf.c	/^} name_rec;$/;"	t	typeref:struct:name_rec	file:
name_rec	lib/uthash/tests/emit_keys.c	/^typedef struct name_rec {$/;"	s	file:
name_rec	lib/uthash/tests/emit_keys.c	/^} name_rec;$/;"	t	typeref:struct:name_rec	file:
name_rec	lib/uthash/tests/test11.c	/^typedef struct name_rec {$/;"	s	file:
name_rec	lib/uthash/tests/test11.c	/^} name_rec;$/;"	t	typeref:struct:name_rec	file:
name_rec	lib/uthash/tests/test14.c	/^typedef struct name_rec {$/;"	s	file:
name_rec	lib/uthash/tests/test14.c	/^} name_rec;$/;"	t	typeref:struct:name_rec	file:
name_to_id	lib/flecs/flecs.c	/^ecs_entity_t name_to_id($/;"	f	typeref:typename:ecs_entity_t	file:
name_to_id	lib/flecs/src/hierarchy.c	/^ecs_entity_t name_to_id($/;"	f	typeref:typename:ecs_entity_t	file:
namecmp	lib/uthash/tests/test11.c	/^static int namecmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
namecmp	lib/uthash/tests/test26.c	/^static int namecmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
namecmp	lib/uthash/tests/test29.c	/^static int namecmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
namecmp	lib/uthash/tests/test30.c	/^static int namecmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
namecmp	lib/uthash/tests/test31.c	/^static int namecmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
namecmp	lib/uthash/tests/test33.c	/^static int namecmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
namecmp	lib/uthash/tests/test56.c	/^static int namecmp(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
namespace_module	lib/flecs/test/cpp_api/src/World.cpp	/^        namespace_module(flecs::world& ecs) {$/;"	f	struct:ns::namespace_module	file:
namespace_module	lib/flecs/test/cpp_api/src/World.cpp	/^    struct namespace_module {$/;"	s	namespace:ns	file:
nanosec	lib/flecs/flecs.h	/^    uint32_t nanosec;$/;"	m	struct:ecs_time_t	typeref:typename:uint32_t
nanosec	lib/flecs/include/flecs/os_api.h	/^    uint32_t nanosec;$/;"	m	struct:ecs_time_t	typeref:typename:uint32_t
nested_trigger_invoked	lib/flecs/test/api/src/Trigger.c	/^static int nested_trigger_invoked = 0;$/;"	v	typeref:typename:int	file:
netq_insert_node	lib/uthash/tests/test89.c	/^int netq_insert_node(netq_t **queue, netq_t *node)$/;"	f	typeref:typename:int
netq_t	lib/uthash/tests/test89.c	/^typedef struct netq_t {$/;"	s	file:
netq_t	lib/uthash/tests/test89.c	/^} netq_t;$/;"	t	typeref:struct:netq_t	file:
new	lib/flecs/flecs.c	/^void new($/;"	f	typeref:typename:void	file:
new	lib/flecs/src/entity.c	/^void new($/;"	f	typeref:typename:void	file:
new_GameState	src/gamestate.c	/^struct GameState *new_GameState(int w, int h) {$/;"	f	typeref:struct:GameState *
new_count	lib/flecs/flecs.c	/^    int32_t new_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
new_count	lib/flecs/flecs.h	/^    ecs_counter_t new_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
new_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t new_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
new_count	lib/flecs/src/private_types.h	/^    int32_t new_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
new_defer_op	lib/flecs/flecs.c	/^ecs_defer_op_t* new_defer_op(ecs_stage_t *stage) {$/;"	f	typeref:typename:ecs_defer_op_t *	file:
new_defer_op	lib/flecs/src/stage.c	/^ecs_defer_op_t* new_defer_op(ecs_stage_t *stage) {$/;"	f	typeref:typename:ecs_defer_op_t *	file:
new_entities	lib/flecs/test/api/include/api.h	/^    ecs_entity_t new_entities[MAX_ENTITIES];$/;"	m	struct:IterData	typeref:typename:ecs_entity_t[]
new_entity	lib/flecs/flecs.c	/^int32_t new_entity($/;"	f	typeref:typename:int32_t	file:
new_entity	lib/flecs/src/entity.c	/^int32_t new_entity($/;"	f	typeref:typename:int32_t	file:
new_gamescreen	src/screens/gamescreen.c	/^struct Screen *new_gamescreen() {$/;"	f	typeref:struct:Screen *
new_id_record	lib/flecs/flecs.c	/^ecs_id_record_t* new_id_record($/;"	f	typeref:typename:ecs_id_record_t *	file:
new_id_record	lib/flecs/src/world.c	/^ecs_id_record_t* new_id_record($/;"	f	typeref:typename:ecs_id_record_t *	file:
new_index	lib/flecs/flecs.c	/^uint64_t new_index($/;"	f	typeref:typename:uint64_t	file:
new_index	lib/flecs/src/datastructures/sparse.c	/^uint64_t new_index($/;"	f	typeref:typename:uint64_t	file:
new_instance_1	lib/flecs/test/api/src/Prefab.c	/^static ecs_entity_t new_instance_1, new_instance_2;$/;"	v	typeref:typename:ecs_entity_t	file:
new_instance_2	lib/flecs/test/api/src/Prefab.c	/^static ecs_entity_t new_instance_1, new_instance_2;$/;"	v	typeref:typename:ecs_entity_t	file:
new_main_menu_screen	src/screens/mainmenu.c	/^struct Screen *new_main_menu_screen() {$/;"	f	typeref:struct:Screen *
new_w_data	lib/flecs/flecs.c	/^const ecs_entity_t* new_w_data($/;"	f	typeref:typename:const ecs_entity_t *	file:
new_w_data	lib/flecs/src/entity.c	/^const ecs_entity_t* new_w_data($/;"	f	typeref:typename:const ecs_entity_t *	file:
next	lib/flecs/flecs.c	/^    ecs_query_table_node_t *next, *prev;$/;"	m	struct:ecs_query_table_node_t	typeref:typename:ecs_query_table_node_t *	file:
next	lib/flecs/flecs.c	/^    int32_t next;           \/* Next node in list *\/$/;"	m	struct:flecs_switch_node_t	typeref:typename:int32_t	file:
next	lib/flecs/flecs.c	/^    struct ecs_graph_edge_hdr_t *next;$/;"	m	struct:ecs_graph_edge_hdr_t	typeref:struct:ecs_graph_edge_hdr_t *	file:
next	lib/flecs/flecs.c	/^    struct ecs_table_cache_hdr_t *prev, *next;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:struct:ecs_table_cache_hdr_t *	file:
next	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next;  \/* Function to progress iterator *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_next_action_t
next	lib/flecs/flecs.h	/^    int next() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
next	lib/flecs/flecs.h	/^    int next(int cur) const {$/;"	f	struct:flecs::enum_data	typeref:typename:int
next	lib/flecs/flecs.h	/^    int next;$/;"	m	struct:flecs::_::enum_constant_data	typeref:typename:int
next	lib/flecs/flecs.h	/^    struct ecs_strbuf_element *next;$/;"	m	struct:ecs_strbuf_element	typeref:struct:ecs_strbuf_element *
next	lib/flecs/flecs.h	/^    struct ecs_table_cache_hdr_t *cur, *next;$/;"	m	struct:ecs_table_cache_iter_t	typeref:struct:ecs_table_cache_hdr_t *
next	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int next() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
next	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    int next(int cur) const {$/;"	f	struct:flecs::enum_data	typeref:typename:int
next	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    int next;$/;"	m	struct:flecs::_::enum_constant_data	typeref:typename:int
next	lib/flecs/include/flecs/private/api_types.h	/^    ecs_iter_next_action_t next;  \/* Function to progress iterator *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_next_action_t
next	lib/flecs/include/flecs/private/api_types.h	/^    struct ecs_table_cache_hdr_t *cur, *next;$/;"	m	struct:ecs_table_cache_iter_t	typeref:struct:ecs_table_cache_hdr_t *
next	lib/flecs/include/flecs/private/strbuf.h	/^    struct ecs_strbuf_element *next;$/;"	m	struct:ecs_strbuf_element	typeref:struct:ecs_strbuf_element *
next	lib/flecs/include/flecs/private/switch_list.h	/^    int32_t next;           \/* Next node in list *\/$/;"	m	struct:flecs_switch_node_t	typeref:typename:int32_t
next	lib/flecs/src/private_types.h	/^    ecs_query_table_node_t *next, *prev;$/;"	m	struct:ecs_query_table_node_t	typeref:typename:ecs_query_table_node_t *
next	lib/flecs/src/private_types.h	/^    struct ecs_graph_edge_hdr_t *next;$/;"	m	struct:ecs_graph_edge_hdr_t	typeref:struct:ecs_graph_edge_hdr_t *
next	lib/flecs/src/private_types.h	/^    struct ecs_table_cache_hdr_t *prev, *next;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:struct:ecs_table_cache_hdr_t *
next	lib/libflint/include/lflinkedlist.h	/^    struct ListNode* next;$/;"	m	struct:ListNode	typeref:struct:ListNode *
next	lib/uthash/include/uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle	typeref:typename:void *
next	lib/uthash/src/uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle	typeref:typename:void *
next	lib/uthash/tests/test25.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test26.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test27.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test28.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test29.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test30.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test31.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test32.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test33.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test34.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test41.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test42.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test56.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test63.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test64.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test68.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test69.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test70.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test71.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test72.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test73.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test86.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test89.c	/^    struct netq_t *next;$/;"	m	struct:netq_t	typeref:struct:netq_t *	file:
next	lib/uthash/tests/test91.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test94.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
next	lib/uthash/tests/test95.c	/^    struct el *next;$/;"	m	struct:el	typeref:struct:el *	file:
next2	lib/uthash/tests/test95.c	/^    struct el *next2;$/;"	m	struct:el	typeref:struct:el *	file:
next_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_action() const override {$/;"	f	struct:flecs::filter	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_action() const override {$/;"	f	struct:flecs::query	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_action() const override {$/;"	f	struct:flecs::rule	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_action() const {$/;"	f	struct:flecs::iter_iterable	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_action() const {$/;"	f	struct:flecs::page_iterable	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_action() const {$/;"	f	struct:flecs::worker_iterable	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    ecs_iter_next_action_t next_action() const override {$/;"	f	struct:flecs::filter	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    ecs_iter_next_action_t next_action() const override {$/;"	f	struct:flecs::query	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    ecs_iter_next_action_t next_action() const override {$/;"	f	struct:flecs::rule	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_next_action_t next_action() const {$/;"	f	struct:flecs::iter_iterable	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_next_action_t next_action() const {$/;"	f	struct:flecs::page_iterable	typeref:typename:ecs_iter_next_action_t
next_action	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_next_action_t next_action() const {$/;"	f	struct:flecs::worker_iterable	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_each_action() const override {$/;"	f	struct:flecs::filter	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_each_action() const override {$/;"	f	struct:flecs::query	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_each_action() const override {$/;"	f	struct:flecs::rule	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_each_action() const {$/;"	f	struct:flecs::iter_iterable	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_each_action() const {$/;"	f	struct:flecs::page_iterable	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/flecs.h	/^    ecs_iter_next_action_t next_each_action() const {$/;"	f	struct:flecs::worker_iterable	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    ecs_iter_next_action_t next_each_action() const override {$/;"	f	struct:flecs::filter	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    ecs_iter_next_action_t next_each_action() const override {$/;"	f	struct:flecs::query	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    ecs_iter_next_action_t next_each_action() const override {$/;"	f	struct:flecs::rule	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_next_action_t next_each_action() const {$/;"	f	struct:flecs::iter_iterable	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_next_action_t next_each_action() const {$/;"	f	struct:flecs::page_iterable	typeref:typename:ecs_iter_next_action_t
next_each_action	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    ecs_iter_next_action_t next_each_action() const {$/;"	f	struct:flecs::worker_iterable	typeref:typename:ecs_iter_next_action_t
next_list2	lib/uthash/tests/test94.c	/^    struct el *next_list2, *prev_list2;$/;"	m	struct:el	typeref:struct:el *	file:
next_match	lib/flecs/flecs.c	/^    ecs_query_table_match_t *next_match;$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_query_table_match_t *	file:
next_match	lib/flecs/src/private_types.h	/^    ecs_query_table_match_t *next_match;$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_query_table_match_t *
next_table	lib/flecs/flecs.c	/^const ecs_table_record_t *next_table($/;"	f	typeref:typename:const ecs_table_record_t *	file:
next_table	lib/flecs/src/filter.c	/^const ecs_table_record_t *next_table($/;"	f	typeref:typename:const ecs_table_record_t *	file:
nn_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        NN1 nn_1;$/;"	m	struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513408	typeref:typename:NN1	file:
nn_1	lib/flecs/test/meta/src/NestedStructTypes.c	/^        NN1 nn_1;$/;"	m	struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513908	typeref:typename:NN1	file:
nn_1	lib/flecs/test/meta/src/Serialized.c	/^        NN1 nn_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003108	typeref:typename:NN1	file:
nn_1	lib/flecs/test/meta/src/Serialized.c	/^        NN1 nn_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003608	typeref:typename:NN1	file:
nn_1	lib/flecs/test/meta/src/Serialized.c	/^        NN1 nn_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002208	typeref:typename:NN1	file:
nn_1	lib/flecs/test/meta/src/Serialized.c	/^        NN1 nn_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002708	typeref:typename:NN1	file:
nn_1	lib/flecs/test/meta/src/Serialized.c	/^        NN1 nn_1;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002c08	typeref:typename:NN1	file:
nn_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        NN2 nn_2;$/;"	m	struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513508	typeref:typename:NN2	file:
nn_2	lib/flecs/test/meta/src/NestedStructTypes.c	/^        NN2 nn_2;$/;"	m	struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513a08	typeref:typename:NN2	file:
nn_2	lib/flecs/test/meta/src/Serialized.c	/^        NN2 nn_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003208	typeref:typename:NN2	file:
nn_2	lib/flecs/test/meta/src/Serialized.c	/^        NN2 nn_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003708	typeref:typename:NN2	file:
nn_2	lib/flecs/test/meta/src/Serialized.c	/^        NN2 nn_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002308	typeref:typename:NN2	file:
nn_2	lib/flecs/test/meta/src/Serialized.c	/^        NN2 nn_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002808	typeref:typename:NN2	file:
nn_2	lib/flecs/test/meta/src/Serialized.c	/^        NN2 nn_2;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002d08	typeref:typename:NN2	file:
no_staging	lib/flecs/flecs.c	/^    bool no_staging;            \/* Whether systems are staged or not *\/$/;"	m	struct:ecs_pipeline_op_t	typeref:typename:bool	file:
no_staging	lib/flecs/flecs.c	/^    bool no_staging;$/;"	m	struct:EcsSystem	typeref:typename:bool	file:
no_staging	lib/flecs/flecs.h	/^    Base& no_staging(bool value = true) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
no_staging	lib/flecs/flecs.h	/^    bool no_staging;$/;"	m	struct:ecs_system_desc_t	typeref:typename:bool
no_staging	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& no_staging(bool value = true) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
no_staging	lib/flecs/include/flecs/addons/system.h	/^    bool no_staging;$/;"	m	struct:ecs_system_desc_t	typeref:typename:bool
no_staging	lib/flecs/src/addons/pipeline/pipeline.h	/^    bool no_staging;            \/* Whether systems are staged or not *\/$/;"	m	struct:ecs_pipeline_op_t	typeref:typename:bool
no_staging	lib/flecs/src/addons/system/system.h	/^    bool no_staging;$/;"	m	struct:EcsSystem	typeref:typename:bool
node	lib/flecs/flecs.c	/^    ecs_graph_node_t node;           \/* Graph node *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_graph_node_t	file:
node	lib/flecs/flecs.c	/^    ecs_query_table_node_t node; \/* Embedded list node *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_query_table_node_t	file:
node	lib/flecs/flecs.h	/^    ecs_query_table_node_t *node, *prev;$/;"	m	struct:ecs_query_iter_t	typeref:typename:ecs_query_table_node_t *
node	lib/flecs/include/flecs/private/api_types.h	/^    ecs_query_table_node_t *node, *prev;$/;"	m	struct:ecs_query_iter_t	typeref:typename:ecs_query_table_node_t *
node	lib/flecs/src/private_types.h	/^    ecs_graph_node_t node;           \/* Graph node *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_graph_node_t
node	lib/flecs/src/private_types.h	/^    ecs_query_table_node_t node; \/* Embedded list node *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_query_table_node_t
node_builder	lib/flecs/flecs.h	/^    explicit node_builder(flecs::world_t* world, const char *name = nullptr)$/;"	f	struct:flecs::_::node_builder
node_builder	lib/flecs/flecs.h	/^struct node_builder : IBuilder<Base, Components ...>$/;"	s	namespace:flecs::_
node_builder	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    explicit node_builder(flecs::world_t* world, const char *name = nullptr)$/;"	f	struct:flecs::_::node_builder
node_builder	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^struct node_builder : IBuilder<Base, Components ...>$/;"	s	namespace:flecs::_
nodes	lib/flecs/flecs.c	/^    ecs_vector_t *nodes;    \/* Vector with nodes, of type flecs_switch_node_t *\/$/;"	m	struct:ecs_switch_t	typeref:typename:ecs_vector_t *	file:
nodes	lib/flecs/include/flecs/private/switch_list.h	/^    ecs_vector_t *nodes;    \/* Vector with nodes, of type flecs_switch_node_t *\/$/;"	m	struct:ecs_switch_t	typeref:typename:ecs_vector_t *
noexpand	lib/uthash/include/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
noexpand	lib/uthash/src/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
nonideal_items	lib/uthash/include/uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
nonideal_items	lib/uthash/src/uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
normal_count	lib/flecs/test/api/src/SystemManual.c	/^static int normal_count;$/;"	v	typeref:typename:int	file:
normal_count	lib/flecs/test/api/src/SystemPeriodic.c	/^static int normal_count;$/;"	v	typeref:typename:int	file:
normal_count_2	lib/flecs/test/api/src/SystemPeriodic.c	/^static int normal_count_2;$/;"	v	typeref:typename:int	file:
normal_count_3	lib/flecs/test/api/src/SystemPeriodic.c	/^static int normal_count_3;$/;"	v	typeref:typename:int	file:
normalized	lib/flecs/flecs.h	/^    ecs_table_t *normalized;  \/* Table with union of type + nested AND types *\/$/;"	m	struct:EcsType	typeref:typename:ecs_table_t *
normalized	lib/flecs/include/flecs.h	/^    ecs_table_t *normalized;  \/* Table with union of type + nested AND types *\/$/;"	m	struct:EcsType	typeref:typename:ecs_table_t *
notify	lib/flecs/flecs.c	/^void notify($/;"	f	typeref:typename:void	file:
notify	lib/flecs/src/entity.c	/^void notify($/;"	f	typeref:typename:void	file:
notify_component_info	lib/flecs/flecs.c	/^void notify_component_info($/;"	f	typeref:typename:void	file:
notify_component_info	lib/flecs/src/table.c	/^void notify_component_info($/;"	f	typeref:typename:void	file:
notify_entity_triggers	lib/flecs/flecs.c	/^void notify_entity_triggers($/;"	f	typeref:typename:void	file:
notify_entity_triggers	lib/flecs/src/trigger.c	/^void notify_entity_triggers($/;"	f	typeref:typename:void	file:
notify_self_triggers	lib/flecs/flecs.c	/^void notify_self_triggers($/;"	f	typeref:typename:void	file:
notify_self_triggers	lib/flecs/src/trigger.c	/^void notify_self_triggers($/;"	f	typeref:typename:void	file:
notify_set_base_triggers	lib/flecs/flecs.c	/^void notify_set_base_triggers($/;"	f	typeref:typename:void	file:
notify_set_base_triggers	lib/flecs/src/trigger.c	/^void notify_set_base_triggers($/;"	f	typeref:typename:void	file:
notify_set_triggers	lib/flecs/flecs.c	/^void notify_set_triggers($/;"	f	typeref:typename:void	file:
notify_set_triggers	lib/flecs/src/trigger.c	/^void notify_set_triggers($/;"	f	typeref:typename:void	file:
notify_set_triggers_for_id	lib/flecs/flecs.c	/^void notify_set_triggers_for_id($/;"	f	typeref:typename:void	file:
notify_set_triggers_for_id	lib/flecs/src/trigger.c	/^void notify_set_triggers_for_id($/;"	f	typeref:typename:void	file:
notify_subqueries	lib/flecs/flecs.c	/^void notify_subqueries($/;"	f	typeref:typename:void	file:
notify_subqueries	lib/flecs/src/query.c	/^void notify_subqueries($/;"	f	typeref:typename:void	file:
notify_subset	lib/flecs/flecs.c	/^void notify_subset($/;"	f	typeref:typename:void	file:
notify_subset	lib/flecs/src/observable.c	/^void notify_subset($/;"	f	typeref:typename:void	file:
notify_trigger	lib/flecs/flecs.c	/^void notify_trigger($/;"	f	typeref:typename:void	file:
notify_trigger	lib/flecs/src/table.c	/^void notify_trigger($/;"	f	typeref:typename:void	file:
notify_triggers_for_id	lib/flecs/flecs.c	/^void notify_triggers_for_id($/;"	f	typeref:typename:void	file:
notify_triggers_for_id	lib/flecs/src/trigger.c	/^void notify_triggers_for_id($/;"	f	typeref:typename:void	file:
now_	lib/flecs/flecs.h	/^    ecs_os_api_now_t now_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_now_t
now_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_now_t now_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_now_t
ns	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^namespace ns {$/;"	n	file:
ns	lib/flecs/test/cpp_api/src/Module.cpp	/^namespace ns {$/;"	n	file:
ns	lib/flecs/test/cpp_api/src/World.cpp	/^namespace ns {$/;"	n	file:
ns88fc06110101	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	n	uri:http://www.w3.org/2000/svg
ns_t	lib/uthash/tests/test39.c	/^} ns_t;$/;"	t	typeref:struct:__anonbb9319c60108	file:
nsa6209b000101	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	n	uri:http://www.w3.org/2000/svg
null	lib/flecs/flecs.h	/^    flecs::entity null() {$/;"	f	struct:flecs::entity	typeref:typename:flecs::entity
null	lib/flecs/flecs.h	/^    flecs::entity null(const flecs::world_t *world) {$/;"	f	struct:flecs::entity	typeref:typename:flecs::entity
null	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    flecs::entity null() {$/;"	f	struct:flecs::entity	typeref:typename:flecs::entity
null	lib/flecs/include/flecs/addons/cpp/entity.hpp	/^    flecs::entity null(const flecs::world_t *world) {$/;"	f	struct:flecs::entity	typeref:typename:flecs::entity
num_buckets	lib/uthash/include/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
num_buckets	lib/uthash/src/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
num_items	lib/uthash/include/uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
num_items	lib/uthash/src/uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table	typeref:typename:unsigned
obj	lib/flecs/flecs.c	/^    int32_t obj;$/;"	m	struct:ecs_rule_term_vars_t	typeref:typename:int32_t	file:
obj	lib/flecs/flecs.c	/^    } obj;$/;"	m	struct:ecs_rule_pair_t	typeref:union:ecs_rule_pair_t::__anona642c005060a	file:
obj	lib/flecs/flecs.h	/^    Base& obj() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
obj	lib/flecs/flecs.h	/^    Base& obj(const char *n) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
obj	lib/flecs/flecs.h	/^    Base& obj(entity_t entity) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
obj	lib/flecs/flecs.h	/^    ecs_term_id_t obj;          \/* Object of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_term_id_t
obj	lib/flecs/include/flecs.h	/^    ecs_term_id_t obj;          \/* Object of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_term_id_t
obj	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& obj() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
obj	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& obj(const char *n) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
obj	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& obj(entity_t entity) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
obj	lib/flecs/src/addons/rules.c	/^    int32_t obj;$/;"	m	struct:ecs_rule_term_vars_t	typeref:typename:int32_t	file:
obj	lib/flecs/src/addons/rules.c	/^    } obj;$/;"	m	struct:ecs_rule_pair_t	typeref:union:ecs_rule_pair_t::__anon218568c2020a	file:
obj_0	lib/flecs/flecs.c	/^    bool obj_0;$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
obj_0	lib/flecs/src/addons/rules.c	/^    bool obj_0;$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
obj_is_set	lib/flecs/flecs.c	/^bool obj_is_set($/;"	f	typeref:typename:bool	file:
obj_is_set	lib/flecs/src/addons/rules.c	/^bool obj_is_set($/;"	f	typeref:typename:bool	file:
obj_wildcard	lib/flecs/flecs.c	/^    bool obj_wildcard; \/* Is object a wildcard *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:bool	file:
obj_wildcard	lib/flecs/src/addons/rules.c	/^    bool obj_wildcard; \/* Is object a wildcard *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:bool	file:
object	lib/flecs/flecs.h	/^    using object = O;$/;"	t	struct:flecs::pair	typeref:typename:O
object	lib/flecs/flecs.h	/^inline flecs::entity id::object() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
object	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::object() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
object	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    using object = O;$/;"	t	struct:flecs::pair	typeref:typename:O
obs_invoked_count	lib/flecs/test/cpp_api/src/Misc.cpp	/^static int obs_invoked_count = 0;$/;"	v	typeref:typename:int	file:
observable	lib/flecs/flecs.c	/^    ecs_observable_t observable;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_observable_t	file:
observable	lib/flecs/flecs.h	/^    ecs_observable_t *observable;  \/* Observable for observer *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_observable_t *
observable	lib/flecs/flecs.h	/^    ecs_observable_t *observable;  \/* Observable for trigger *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_observable_t *
observable	lib/flecs/flecs.h	/^    ecs_poly_t *observable;  $/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_poly_t *
observable	lib/flecs/flecs.h	/^    ecs_poly_t *observable;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_poly_t *
observable	lib/flecs/flecs.h	/^    ecs_poly_t *observable;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_poly_t *
observable	lib/flecs/include/flecs.h	/^    ecs_observable_t *observable;  \/* Observable for observer *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_observable_t *
observable	lib/flecs/include/flecs.h	/^    ecs_observable_t *observable;  \/* Observable for trigger *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_observable_t *
observable	lib/flecs/include/flecs.h	/^    ecs_poly_t *observable;  $/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_poly_t *
observable	lib/flecs/include/flecs.h	/^    ecs_poly_t *observable;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_poly_t *
observable	lib/flecs/include/flecs.h	/^    ecs_poly_t *observable;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_poly_t *
observable	lib/flecs/src/private_types.h	/^    ecs_observable_t observable;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_observable_t
observer	lib/flecs/flecs.c	/^    ecs_entity_t observer;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_entity_t	file:
observer	lib/flecs/flecs.h	/^    const ecs_observer_t *observer;$/;"	m	struct:EcsObserver	typeref:typename:const ecs_observer_t *
observer	lib/flecs/flecs.h	/^    observer(flecs::world_t *world, ecs_observer_desc_t *desc) $/;"	f	struct:flecs::observer
observer	lib/flecs/flecs.h	/^inline observer_builder<Comps...> world::observer(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:observer_builder<Comps...>
observer	lib/flecs/flecs.h	/^struct observer final : entity$/;"	s	namespace:flecs
observer	lib/flecs/include/flecs.h	/^    const ecs_observer_t *observer;$/;"	m	struct:EcsObserver	typeref:typename:const ecs_observer_t *
observer	lib/flecs/include/flecs/addons/cpp/mixins/observer/impl.hpp	/^    observer(flecs::world_t *world, ecs_observer_desc_t *desc) $/;"	f	struct:flecs::observer
observer	lib/flecs/include/flecs/addons/cpp/mixins/observer/impl.hpp	/^inline observer_builder<Comps...> world::observer(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:observer_builder<Comps...>
observer	lib/flecs/include/flecs/addons/cpp/mixins/observer/impl.hpp	/^struct observer final : entity$/;"	s	namespace:flecs
observer	lib/flecs/src/private_types.h	/^    ecs_entity_t observer;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_entity_t
observer_builder	lib/flecs/flecs.h	/^    observer_builder(flecs::world_t* world, const char *name = nullptr)$/;"	f	struct:flecs::observer_builder
observer_builder	lib/flecs/flecs.h	/^struct observer_builder final : _::observer_builder_base<Components...> {$/;"	s	namespace:flecs
observer_builder	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder.hpp	/^    observer_builder(flecs::world_t* world, const char *name = nullptr)$/;"	f	struct:flecs::observer_builder
observer_builder	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder.hpp	/^struct observer_builder final : _::observer_builder_base<Components...> {$/;"	s	namespace:flecs
observer_builder_base	lib/flecs/flecs.h	/^    using observer_builder_base = node_builder<$/;"	t	namespace:flecs::_	typeref:typename:node_builder<observer,ecs_observer_desc_t,observer_builder<Components...>,observer_builder_i,Components...>
observer_builder_base	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder.hpp	/^    using observer_builder_base = node_builder<$/;"	t	namespace:flecs::_	typeref:typename:node_builder<observer,ecs_observer_desc_t,observer_builder<Components...>,observer_builder_i,Components...>
observer_builder_i	lib/flecs/flecs.h	/^    observer_builder_i()$/;"	f	struct:flecs::observer_builder_i
observer_builder_i	lib/flecs/flecs.h	/^    observer_builder_i(ecs_observer_desc_t *desc) $/;"	f	struct:flecs::observer_builder_i
observer_builder_i	lib/flecs/flecs.h	/^struct observer_builder_i : filter_builder_i<Base, Components ...> {$/;"	s	namespace:flecs
observer_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    observer_builder_i()$/;"	f	struct:flecs::observer_builder_i
observer_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    observer_builder_i(ecs_observer_desc_t *desc) $/;"	f	struct:flecs::observer_builder_i
observer_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^struct observer_builder_i : filter_builder_i<Base, Components ...> {$/;"	s	namespace:flecs
observer_run	lib/flecs/flecs.c	/^bool observer_run(ecs_iter_t *it) {$/;"	f	typeref:typename:bool	file:
observer_run	lib/flecs/src/observer.c	/^bool observer_run(ecs_iter_t *it) {$/;"	f	typeref:typename:bool	file:
observer_run_callback	lib/flecs/flecs.c	/^void observer_run_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
observer_run_callback	lib/flecs/src/observer.c	/^void observer_run_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
observer_yield_existing	lib/flecs/flecs.c	/^void observer_yield_existing($/;"	f	typeref:typename:void	file:
observer_yield_existing	lib/flecs/src/observer.c	/^void observer_yield_existing($/;"	f	typeref:typename:void	file:
observers	lib/flecs/flecs.c	/^    ecs_sparse_t *observers;       \/* sparse<query_id, ecs_observer_t> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *	file:
observers	lib/flecs/src/private_types.h	/^    ecs_sparse_t *observers;       \/* sparse<query_id, ecs_observer_t> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *
occurs	lib/flecs/flecs.c	/^    int32_t occurs;   \/* Number of occurrences (used for operation ordering) *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:int32_t	file:
occurs	lib/flecs/src/addons/rules.c	/^    int32_t occurs;   \/* Number of occurrences (used for operation ordering) *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:int32_t	file:
offset	lib/flecs/flecs.c	/^    int32_t offset;                  \/* Starting point in table  *\/$/;"	m	struct:ecs_query_table_node_t	typeref:typename:int32_t	file:
offset	lib/flecs/flecs.c	/^    int32_t offset;$/;"	m	struct:ecs_table_slice_t	typeref:typename:int32_t	file:
offset	lib/flecs/flecs.h	/^    ecs_size_t offset;      \/* Offset of current field *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_size_t
offset	lib/flecs/flecs.h	/^    int32_t offset;               \/* Offset relative to current table *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
offset	lib/flecs/flecs.h	/^    int32_t offset;$/;"	m	struct:ecs_event_desc_t	typeref:typename:int32_t
offset	lib/flecs/flecs.h	/^    int32_t offset;$/;"	m	struct:ecs_member_t	typeref:typename:int32_t
offset	lib/flecs/flecs.h	/^    int32_t offset;$/;"	m	struct:ecs_page_iter_t	typeref:typename:int32_t
offset	lib/flecs/flecs.h	/^    system_runner_fluent& offset(int32_t offset) {$/;"	f	struct:flecs::system_runner_fluent	typeref:typename:system_runner_fluent &
offset	lib/flecs/include/flecs.h	/^    int32_t offset;$/;"	m	struct:ecs_event_desc_t	typeref:typename:int32_t
offset	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    system_runner_fluent& offset(int32_t offset) {$/;"	f	struct:flecs::system_runner_fluent	typeref:typename:system_runner_fluent &
offset	lib/flecs/include/flecs/addons/meta.h	/^    ecs_size_t offset;      \/* Offset of current field *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_size_t
offset	lib/flecs/include/flecs/addons/meta.h	/^    int32_t offset;$/;"	m	struct:ecs_member_t	typeref:typename:int32_t
offset	lib/flecs/include/flecs/private/api_types.h	/^    int32_t offset;               \/* Offset relative to current table *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
offset	lib/flecs/include/flecs/private/api_types.h	/^    int32_t offset;$/;"	m	struct:ecs_page_iter_t	typeref:typename:int32_t
offset	lib/flecs/src/addons/rules.c	/^    int32_t offset;$/;"	m	struct:ecs_table_slice_t	typeref:typename:int32_t	file:
offset	lib/flecs/src/private_types.h	/^    int32_t offset;                  \/* Starting point in table  *\/$/;"	m	struct:ecs_query_table_node_t	typeref:typename:int32_t
offset	lib/flecs/test/api/include/api.h	/^    int32_t offset;$/;"	m	struct:Probe	typeref:typename:int32_t
offset_iter	lib/flecs/flecs.c	/^void offset_iter($/;"	f	typeref:typename:void	file:
offset_iter	lib/flecs/src/iter.c	/^void offset_iter($/;"	f	typeref:typename:void	file:
old_position	lib/flecs/test/api/src/TriggerOnRemove.c	/^static Position old_position = {0};$/;"	v	typeref:typename:Position	file:
on_delete_action	lib/flecs/flecs.c	/^void on_delete_action($/;"	f	typeref:typename:void	file:
on_delete_action	lib/flecs/src/entity.c	/^void on_delete_action($/;"	f	typeref:typename:void	file:
on_delete_any_w_entity	lib/flecs/flecs.c	/^void on_delete_any_w_entity($/;"	f	typeref:typename:void	file:
on_delete_any_w_entity	lib/flecs/src/entity.c	/^void on_delete_any_w_entity($/;"	f	typeref:typename:void	file:
on_delete_id_action	lib/flecs/flecs.c	/^void on_delete_id_action($/;"	f	typeref:typename:void	file:
on_delete_id_action	lib/flecs/src/entity.c	/^void on_delete_id_action($/;"	f	typeref:typename:void	file:
on_delete_object_action	lib/flecs/flecs.c	/^void on_delete_object_action($/;"	f	typeref:typename:void	file:
on_delete_object_action	lib/flecs/src/entity.c	/^void on_delete_object_action($/;"	f	typeref:typename:void	file:
on_event_iterable_init	lib/flecs/flecs.c	/^void on_event_iterable_init($/;"	f	typeref:typename:void	file:
on_event_iterable_init	lib/flecs/src/bootstrap.c	/^void on_event_iterable_init($/;"	f	typeref:typename:void	file:
on_fail	lib/flecs/flecs.c	/^    int32_t on_fail;            \/* Jump location when match fails *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
on_fail	lib/flecs/src/addons/rules.c	/^    int32_t on_fail;            \/* Jump location when match fails *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
on_parent_change	lib/flecs/flecs.c	/^void on_parent_change(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
on_parent_change	lib/flecs/src/bootstrap.c	/^void on_parent_change(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
on_pass	lib/flecs/flecs.c	/^    int32_t on_pass;            \/* Jump location when match succeeds *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
on_pass	lib/flecs/src/addons/rules.c	/^    int32_t on_pass;            \/* Jump location when match succeeds *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
on_period_count	lib/flecs/test/api/src/SystemPeriodic.c	/^static int on_period_count;$/;"	v	typeref:typename:int	file:
on_remove	lib/flecs/flecs.h	/^    ecs_iter_action_t on_remove;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_iter_action_t
on_remove	lib/flecs/include/flecs.h	/^    ecs_iter_action_t on_remove;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_iter_action_t
on_remove_component	lib/flecs/flecs.c	/^void on_remove_component($/;"	f	typeref:typename:void	file:
on_remove_component	lib/flecs/src/table.c	/^void on_remove_component($/;"	f	typeref:typename:void	file:
on_remove_count	lib/flecs/test/api/src/Hierarchies.c	/^static int on_remove_count = 0;$/;"	v	typeref:typename:int	file:
on_remove_count	lib/flecs/test/api/src/Trigger.c	/^static int on_remove_count = 0;$/;"	v	typeref:typename:int	file:
on_remove_has_tag_t	lib/flecs/test/api/src/TriggerOnRemove.c	/^typedef struct on_remove_has_tag_t {$/;"	s	file:
on_remove_has_tag_t	lib/flecs/test/api/src/TriggerOnRemove.c	/^} on_remove_has_tag_t;$/;"	t	typeref:struct:on_remove_has_tag_t	file:
on_remove_system_invoked	lib/flecs/test/api/src/Delete.c	/^static int on_remove_system_invoked;$/;"	v	typeref:typename:int	file:
on_set	lib/flecs/flecs.c	/^    ecs_ids_t on_set;        \/* OnSet from exposing\/adding base components *\/$/;"	m	struct:ecs_table_diff_t	typeref:typename:ecs_ids_t	file:
on_set	lib/flecs/flecs.h	/^    ecs_iter_action_t on_set;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_iter_action_t
on_set	lib/flecs/include/flecs.h	/^    ecs_iter_action_t on_set;$/;"	m	struct:EcsComponentLifecycle	typeref:typename:ecs_iter_action_t
on_set	lib/flecs/src/private_types.h	/^    ecs_ids_t on_set;        \/* OnSet from exposing\/adding base components *\/$/;"	m	struct:ecs_table_diff_t	typeref:typename:ecs_ids_t
on_set_component_lifecycle	lib/flecs/flecs.c	/^void on_set_component_lifecycle(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
on_set_component_lifecycle	lib/flecs/src/bootstrap.c	/^void on_set_component_lifecycle(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
on_set_invoked	lib/flecs/test/api/src/DeferredActions.c	/^static bool on_set_invoked = 0;$/;"	v	typeref:typename:bool	file:
on_set_rest	lib/flecs/flecs.c	/^void on_set_rest(ecs_iter_t *it)$/;"	f	typeref:typename:void	file:
on_set_rest	lib/flecs/src/addons/rest.c	/^void on_set_rest(ecs_iter_t *it)$/;"	f	typeref:typename:void	file:
on_set_symbol	lib/flecs/flecs.c	/^void on_set_symbol(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
on_set_symbol	lib/flecs/src/hierarchy.c	/^void on_set_symbol(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
on_set_velocity_invoked	lib/flecs/test/api/src/Prefab.c	/^static int on_set_velocity_invoked;$/;"	v	typeref:typename:int	file:
on_symmetric_add_remove	lib/flecs/flecs.c	/^void on_symmetric_add_remove(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
on_symmetric_add_remove	lib/flecs/src/bootstrap.c	/^void on_symmetric_add_remove(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
op	lib/flecs/flecs.h	/^    int32_t op;$/;"	m	struct:ecs_rule_iter_t	typeref:typename:int32_t
op	lib/flecs/include/flecs/private/api_types.h	/^    int32_t op;$/;"	m	struct:ecs_rule_iter_t	typeref:typename:int32_t
op_count	lib/flecs/flecs.h	/^    int32_t op_count;         \/* Number of operations in ops array to process *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:int32_t
op_count	lib/flecs/flecs.h	/^    int32_t op_count;       \/* Number of operations until next field or end *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:int32_t
op_count	lib/flecs/include/flecs/addons/meta.h	/^    int32_t op_count;         \/* Number of operations in ops array to process *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:int32_t
op_count	lib/flecs/include/flecs/addons/meta.h	/^    int32_t op_count;       \/* Number of operations until next field or end *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:int32_t
op_ctx	lib/flecs/flecs.h	/^    struct ecs_rule_op_ctx_t *op_ctx;    \/* Operation-specific state *\/$/;"	m	struct:ecs_rule_iter_t	typeref:struct:ecs_rule_op_ctx_t *
op_ctx	lib/flecs/include/flecs/private/api_types.h	/^    struct ecs_rule_op_ctx_t *op_ctx;    \/* Operation-specific state *\/$/;"	m	struct:ecs_rule_iter_t	typeref:struct:ecs_rule_op_ctx_t *
op_cur	lib/flecs/flecs.h	/^    int32_t op_cur;           \/* Current operation *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:int32_t
op_cur	lib/flecs/include/flecs/addons/meta.h	/^    int32_t op_cur;           \/* Current operation *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:int32_t
op_kind_str	lib/flecs/flecs.c	/^const char* op_kind_str($/;"	f	typeref:typename:const char *	file:
op_kind_str	lib/flecs/src/addons/meta/cursor.c	/^const char* op_kind_str($/;"	f	typeref:typename:const char *	file:
oper	lib/flecs/flecs.h	/^        flecs::array<flecs::oper_kind_t, sizeof...(Components)> oper;$/;"	m	struct:flecs::_::sig	typeref:typename:flecs::array<flecs::oper_kind_t,sizeof...(Components)>
oper	lib/flecs/flecs.h	/^    Base& oper(flecs::oper_kind_t oper) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
oper	lib/flecs/flecs.h	/^    ecs_oper_kind_t oper;       \/* Operator of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_oper_kind_t
oper	lib/flecs/flecs.h	/^    flecs::oper_kind_t oper() {$/;"	f	struct:flecs::term	typeref:typename:flecs::oper_kind_t
oper	lib/flecs/include/flecs.h	/^    ecs_oper_kind_t oper;       \/* Operator of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_oper_kind_t
oper	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& oper(flecs::oper_kind_t oper) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
oper	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    flecs::oper_kind_t oper() {$/;"	f	struct:flecs::term	typeref:typename:flecs::oper_kind_t
oper	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^        flecs::array<flecs::oper_kind_t, sizeof...(Components)> oper;$/;"	m	struct:flecs::_::sig	typeref:typename:flecs::array<flecs::oper_kind_t,sizeof...(Components)>
oper_kind_t	lib/flecs/flecs.h	/^enum oper_kind_t {$/;"	g	namespace:flecs
oper_kind_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^enum oper_kind_t {$/;"	g	namespace:flecs
operation_count	lib/flecs/flecs.c	/^    int32_t operation_count;    \/* Number of operations in rule *\/$/;"	m	struct:ecs_rule_t	typeref:typename:int32_t	file:
operation_count	lib/flecs/src/addons/rules.c	/^    int32_t operation_count;    \/* Number of operations in rule *\/$/;"	m	struct:ecs_rule_t	typeref:typename:int32_t	file:
operations	lib/flecs/flecs.c	/^    ecs_rule_op_t *operations;  \/* Operations array *\/$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_rule_op_t *	file:
operations	lib/flecs/src/addons/rules.c	/^    ecs_rule_op_t *operations;  \/* Operations array *\/$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_rule_op_t *	file:
operator !=	lib/flecs/flecs.h	/^    bool operator!=(array_iterator const& other) const$/;"	f	struct:flecs::array_iterator	typeref:typename:bool
operator !=	lib/flecs/flecs.h	/^    bool operator!=(const char *str) const {$/;"	f	struct:flecs::string	typeref:typename:bool
operator !=	lib/flecs/flecs.h	/^    bool operator!=(const flecs::string& str) const {$/;"	f	struct:flecs::string	typeref:typename:bool
operator !=	lib/flecs/flecs.h	/^    bool operator!=(range_iterator const& other) const$/;"	f	struct:flecs::_::range_iterator	typeref:typename:bool
operator !=	lib/flecs/flecs.h	/^    bool operator!=(vector_iterator const& other) const$/;"	f	class:flecs::vector_iterator	typeref:typename:bool
operator !=	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    bool operator!=(range_iterator const& other) const$/;"	f	struct:flecs::_::range_iterator	typeref:typename:bool
operator !=	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    bool operator!=(array_iterator const& other) const$/;"	f	struct:flecs::array_iterator	typeref:typename:bool
operator !=	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    bool operator!=(const char *str) const {$/;"	f	struct:flecs::string	typeref:typename:bool
operator !=	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    bool operator!=(const flecs::string& str) const {$/;"	f	struct:flecs::string	typeref:typename:bool
operator !=	lib/flecs/include/flecs/private/vector.h	/^    bool operator!=(vector_iterator const& other) const$/;"	f	class:flecs::vector_iterator	typeref:typename:bool
operator *	lib/flecs/flecs.h	/^    T & operator*() const$/;"	f	struct:flecs::array_iterator	typeref:typename:T &
operator *	lib/flecs/flecs.h	/^    T const& operator*() const$/;"	f	class:flecs::vector_iterator	typeref:typename:T const &
operator *	lib/flecs/flecs.h	/^    T const& operator*() const$/;"	f	struct:flecs::_::range_iterator	typeref:typename:T const &
operator *	lib/flecs/flecs.h	/^    T& operator*() {$/;"	f	struct:flecs::column	typeref:typename:T &
operator *	lib/flecs/flecs.h	/^    const type& operator*() const {$/;"	f	struct:flecs::pair	typeref:typename:const type &
operator *	lib/flecs/flecs.h	/^    type& operator*() {$/;"	f	struct:flecs::pair	typeref:typename:type &
operator *	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    T const& operator*() const$/;"	f	struct:flecs::_::range_iterator	typeref:typename:T const &
operator *	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    T& operator*() {$/;"	f	struct:flecs::column	typeref:typename:T &
operator *	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    const type& operator*() const {$/;"	f	struct:flecs::pair	typeref:typename:const type &
operator *	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    type& operator*() {$/;"	f	struct:flecs::pair	typeref:typename:type &
operator *	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    T & operator*() const$/;"	f	struct:flecs::array_iterator	typeref:typename:T &
operator *	lib/flecs/include/flecs/private/vector.h	/^    T const& operator*() const$/;"	f	class:flecs::vector_iterator	typeref:typename:T const &
operator ++	lib/flecs/flecs.h	/^    array_iterator& operator++()$/;"	f	struct:flecs::array_iterator	typeref:typename:array_iterator &
operator ++	lib/flecs/flecs.h	/^    range_iterator& operator++()$/;"	f	struct:flecs::_::range_iterator	typeref:typename:range_iterator &
operator ++	lib/flecs/flecs.h	/^    vector_iterator& operator++()$/;"	f	class:flecs::vector_iterator	typeref:typename:vector_iterator &
operator ++	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    range_iterator& operator++()$/;"	f	struct:flecs::_::range_iterator	typeref:typename:range_iterator &
operator ++	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    array_iterator& operator++()$/;"	f	struct:flecs::array_iterator	typeref:typename:array_iterator &
operator ++	lib/flecs/include/flecs/private/vector.h	/^    vector_iterator& operator++()$/;"	f	class:flecs::vector_iterator	typeref:typename:vector_iterator &
operator ->	lib/flecs/flecs.h	/^    T* operator->() {$/;"	f	struct:flecs::column	typeref:typename:T *
operator ->	lib/flecs/flecs.h	/^    const T* operator->() {$/;"	f	struct:flecs::ref	typeref:typename:const T *
operator ->	lib/flecs/flecs.h	/^    const type* operator->() const {$/;"	f	struct:flecs::pair	typeref:typename:const type *
operator ->	lib/flecs/flecs.h	/^    type* operator->() {$/;"	f	struct:flecs::pair	typeref:typename:type *
operator ->	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    T* operator->() {$/;"	f	struct:flecs::column	typeref:typename:T *
operator ->	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    const type* operator->() const {$/;"	f	struct:flecs::pair	typeref:typename:const type *
operator ->	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    type* operator->() {$/;"	f	struct:flecs::pair	typeref:typename:type *
operator ->	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^    const T* operator->() {$/;"	f	struct:flecs::ref	typeref:typename:const T *
operator <<	lib/flecs/flecs.h	/^    stringstream& operator<<(const char* str) {$/;"	f	struct:flecs::stringstream	typeref:typename:stringstream &
operator <<	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^    stringstream& operator<<(const char* str) {$/;"	f	struct:flecs::stringstream	typeref:typename:stringstream &
operator =	lib/flecs/flecs.h	/^    filter& operator=(const filter& obj) {$/;"	f	struct:flecs::filter	typeref:typename:filter &
operator =	lib/flecs/flecs.h	/^    filter& operator=(filter&& obj) {$/;"	f	struct:flecs::filter	typeref:typename:filter &
operator =	lib/flecs/flecs.h	/^    filter_base& operator=(const filter_base& obj) {$/;"	f	struct:flecs::filter_base	typeref:typename:filter_base &
operator =	lib/flecs/flecs.h	/^    filter_base& operator=(filter_base&& obj) {$/;"	f	struct:flecs::filter_base	typeref:typename:filter_base &
operator =	lib/flecs/flecs.h	/^    snapshot& operator=(const snapshot& obj) {$/;"	f	struct:flecs::snapshot	typeref:typename:snapshot &
operator =	lib/flecs/flecs.h	/^    snapshot& operator=(snapshot&& obj) {$/;"	f	struct:flecs::snapshot	typeref:typename:snapshot &
operator =	lib/flecs/flecs.h	/^    string& operator=(string&& str) {$/;"	f	struct:flecs::string	typeref:typename:string &
operator =	lib/flecs/flecs.h	/^    stringstream& operator=(stringstream&& str) {$/;"	f	struct:flecs::stringstream	typeref:typename:stringstream &
operator =	lib/flecs/flecs.h	/^    term& operator=(const term& t) {$/;"	f	struct:flecs::term	typeref:typename:term &
operator =	lib/flecs/flecs.h	/^    term& operator=(term&& t) {$/;"	f	struct:flecs::term	typeref:typename:term &
operator =	lib/flecs/flecs.h	/^    world& operator=(world&& obj) {$/;"	f	struct:flecs::world	typeref:typename:world &
operator =	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter& operator=(const filter& obj) {$/;"	f	struct:flecs::filter	typeref:typename:filter &
operator =	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter& operator=(filter&& obj) {$/;"	f	struct:flecs::filter	typeref:typename:filter &
operator =	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_base& operator=(const filter_base& obj) {$/;"	f	struct:flecs::filter_base	typeref:typename:filter_base &
operator =	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    filter_base& operator=(filter_base&& obj) {$/;"	f	struct:flecs::filter_base	typeref:typename:filter_base &
operator =	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    snapshot& operator=(const snapshot& obj) {$/;"	f	struct:flecs::snapshot	typeref:typename:snapshot &
operator =	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    snapshot& operator=(snapshot&& obj) {$/;"	f	struct:flecs::snapshot	typeref:typename:snapshot &
operator =	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term& operator=(const term& t) {$/;"	f	struct:flecs::term	typeref:typename:term &
operator =	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term& operator=(term&& t) {$/;"	f	struct:flecs::term	typeref:typename:term &
operator =	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    string& operator=(string&& str) {$/;"	f	struct:flecs::string	typeref:typename:string &
operator =	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^    stringstream& operator=(stringstream&& str) {$/;"	f	struct:flecs::stringstream	typeref:typename:stringstream &
operator =	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    world& operator=(world&& obj) {$/;"	f	struct:flecs::world	typeref:typename:world &
operator =	lib/flecs/test/cpp_api/include/cpp_api.h	/^    CountNoDefaultCtor& operator=(CountNoDefaultCtor&& obj) {$/;"	f	class:CountNoDefaultCtor	typeref:typename:CountNoDefaultCtor &
operator =	lib/flecs/test/cpp_api/include/cpp_api.h	/^    CountNoDefaultCtor& operator=(const CountNoDefaultCtor& obj) {$/;"	f	class:CountNoDefaultCtor	typeref:typename:CountNoDefaultCtor &
operator =	lib/flecs/test/cpp_api/include/cpp_api.h	/^    Pod& operator=(Pod&& obj) {$/;"	f	class:Pod	typeref:typename:Pod &
operator =	lib/flecs/test/cpp_api/include/cpp_api.h	/^    Pod& operator=(const Pod& obj) {$/;"	f	class:Pod	typeref:typename:Pod &
operator =	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    CtorDtor_w_MoveAssign& operator=(CtorDtor_w_MoveAssign&& obj) {$/;"	f	class:CtorDtor_w_MoveAssign	typeref:typename:CtorDtor_w_MoveAssign &	file:
operator ==	lib/flecs/flecs.h	/^    bool operator==(const char *str) const {$/;"	f	struct:flecs::string	typeref:typename:bool
operator ==	lib/flecs/flecs.h	/^    bool operator==(const flecs::string& str) const {$/;"	f	struct:flecs::string	typeref:typename:bool
operator ==	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    bool operator==(const char *str) const {$/;"	f	struct:flecs::string	typeref:typename:bool
operator ==	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    bool operator==(const flecs::string& str) const {$/;"	f	struct:flecs::string	typeref:typename:bool
operator Base&	lib/flecs/flecs.h	/^    operator Base&() { return *static_cast<Base*>(this); }$/;"	f	struct:flecs::type_base
operator Base&	lib/flecs/flecs.h	/^    operator Base&() {$/;"	f	struct:flecs::event_builder_base
operator Base&	lib/flecs/flecs.h	/^    operator Base&() {$/;"	f	struct:flecs::filter_builder_i
operator Base&	lib/flecs/flecs.h	/^    operator Base&() {$/;"	f	struct:flecs::observer_builder_i
operator Base&	lib/flecs/flecs.h	/^    operator Base&() {$/;"	f	struct:flecs::query_builder_i
operator Base&	lib/flecs/flecs.h	/^    operator Base&() {$/;"	f	struct:flecs::system_builder_i
operator Base&	lib/flecs/flecs.h	/^    operator Base&() {$/;"	f	struct:flecs::term_builder_i
operator Base&	lib/flecs/flecs.h	/^    operator Base&() {$/;"	f	struct:flecs::term_id_builder_i
operator Base&	lib/flecs/flecs.h	/^    operator Base&() {$/;"	f	struct:flecs::trigger_builder_i
operator Base&	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    operator Base&() {$/;"	f	struct:flecs::event_builder_base
operator Base&	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    operator Base&() {$/;"	f	struct:flecs::filter_builder_i
operator Base&	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    operator Base&() {$/;"	f	struct:flecs::observer_builder_i
operator Base&	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    operator Base&() {$/;"	f	struct:flecs::query_builder_i
operator Base&	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    operator Base&() {$/;"	f	struct:flecs::system_builder_i
operator Base&	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    operator Base&() {$/;"	f	struct:flecs::term_builder_i
operator Base&	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    operator Base&() {$/;"	f	struct:flecs::term_id_builder_i
operator Base&	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    operator Base&() {$/;"	f	struct:flecs::trigger_builder_i
operator Base&	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    operator Base&() { return *static_cast<Base*>(this); }$/;"	f	struct:flecs::type_base
operator TDesc*	lib/flecs/flecs.h	/^    operator TDesc*() {$/;"	f	struct:flecs::_::builder
operator TDesc*	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    operator TDesc*() {$/;"	f	struct:flecs::_::builder
operator []	lib/flecs/flecs.h	/^    T operator[](size_t index) { ecs_os_abort(); (void)index; return T(); }$/;"	f	struct:flecs::array	typeref:typename:T
operator []	lib/flecs/flecs.h	/^    T& operator[](int index) {$/;"	f	struct:flecs::array	typeref:typename:T &
operator []	lib/flecs/flecs.h	/^    T& operator[](size_t index) {$/;"	f	class:flecs::vector	typeref:typename:T &
operator []	lib/flecs/flecs.h	/^    T& operator[](size_t index) {$/;"	f	struct:flecs::array	typeref:typename:T &
operator []	lib/flecs/flecs.h	/^    T& operator[](size_t index) {$/;"	f	struct:flecs::column	typeref:typename:T &
operator []	lib/flecs/flecs.h	/^    void* operator[](size_t index) {$/;"	f	struct:flecs::unsafe_column	typeref:typename:void *
operator []	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    T& operator[](size_t index) {$/;"	f	struct:flecs::column	typeref:typename:T &
operator []	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    void* operator[](size_t index) {$/;"	f	struct:flecs::unsafe_column	typeref:typename:void *
operator []	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    T operator[](size_t index) { ecs_os_abort(); (void)index; return T(); }$/;"	f	struct:flecs::array	typeref:typename:T
operator []	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    T& operator[](int index) {$/;"	f	struct:flecs::array	typeref:typename:T &
operator []	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    T& operator[](size_t index) {$/;"	f	struct:flecs::array	typeref:typename:T &
operator []	lib/flecs/include/flecs/private/vector.h	/^    T& operator[](size_t index) {$/;"	f	class:flecs::vector	typeref:typename:T &
operator bool	lib/flecs/flecs.h	/^    explicit operator bool() const {$/;"	f	struct:flecs::entity_view
operator bool	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    explicit operator bool() const {$/;"	f	struct:flecs::entity_view
operator const Type&	lib/flecs/flecs.h	/^    operator const Type&() const { $/;"	f	struct:flecs::pair
operator const Type&	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    operator const Type&() const { $/;"	f	struct:flecs::pair
operator const char*	lib/flecs/flecs.h	/^    operator const char*() const {$/;"	f	struct:flecs::string
operator const char*	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    operator const char*() const {$/;"	f	struct:flecs::string
operator const flecs::filter_t*	lib/flecs/flecs.h	/^    operator const flecs::filter_t*() const {$/;"	f	struct:flecs::filter_base
operator const flecs::filter_t*	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    operator const flecs::filter_t*() const {$/;"	f	struct:flecs::filter_base
operator delete	lib/flecs/flecs.h	/^inline void  operator delete(void*, flecs::_::placement_new_tag_t, void*)      noexcept {       /;"	f	typeref:typename:void
operator delete	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^inline void  operator delete(void*, flecs::_::placement_new_tag_t, void*)      noexcept {       /;"	f	typeref:typename:void
operator flecs::filter<>	lib/flecs/flecs.h	/^inline filter_base::operator flecs::filter<> () const {$/;"	f	class:flecs::filter_base
operator flecs::filter<>	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^inline filter_base::operator flecs::filter<> () const {$/;"	f	class:flecs::filter_base
operator flecs::id_t	lib/flecs/flecs.h	/^    operator flecs::id_t() const {$/;"	f	struct:flecs::id
operator flecs::id_t	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    operator flecs::id_t() const {$/;"	f	struct:flecs::id
operator new	lib/flecs/flecs.h	/^inline void* operator new(size_t,   flecs::_::placement_new_tag_t, void* _ptr) noexcept { return/;"	f	typeref:typename:void *
operator new	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^inline void* operator new(size_t,   flecs::_::placement_new_tag_t, void* _ptr) noexcept { return/;"	f	typeref:typename:void *
operator query<>	lib/flecs/flecs.h	/^inline query_base::operator query<>() const {$/;"	f	class:flecs::query_base
operator query<>	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^inline query_base::operator query<>() const {$/;"	f	class:flecs::query_base
operator query_t*	lib/flecs/flecs.h	/^    operator query_t*() const {$/;"	f	struct:flecs::query_base
operator query_t*	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    operator query_t*() const {$/;"	f	struct:flecs::query_base
operator rule<>	lib/flecs/flecs.h	/^inline rule_base::operator rule<>() const {$/;"	f	class:flecs::rule_base
operator rule<>	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^inline rule_base::operator rule<>() const {$/;"	f	class:flecs::rule_base
operator rule_t*	lib/flecs/flecs.h	/^    operator rule_t*() const {$/;"	f	struct:flecs::rule_base
operator rule_t*	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    operator rule_t*() const {$/;"	f	struct:flecs::rule_base
operator type&	lib/flecs/flecs.h	/^    operator type&() { $/;"	f	struct:flecs::pair
operator type&	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    operator type&() { $/;"	f	struct:flecs::pair
operator type_t	lib/flecs/flecs.h	/^    operator type_t() const { return ecs_table_get_type(m_table); }$/;"	f	struct:flecs::type_base
operator type_t	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    operator type_t() const { return ecs_table_get_type(m_table); }$/;"	f	struct:flecs::type_base
operator world_t*	lib/flecs/flecs.h	/^    operator world_t*() const { return m_world; }$/;"	f	struct:flecs::world
operator world_t*	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    operator world_t*() const { return m_world; }$/;"	f	struct:flecs::world
ops	lib/flecs/flecs.c	/^    ecs_vector_t *ops;$/;"	m	struct:EcsPipelineQuery	typeref:typename:ecs_vector_t *	file:
ops	lib/flecs/flecs.h	/^    ecs_meta_type_op_t *ops;  \/* The type operations (see ecs_meta_type_op_t) *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:ecs_meta_type_op_t *
ops	lib/flecs/flecs.h	/^    ecs_vector_t* ops;     \/* vector<ecs_meta_type_op_t> *\/$/;"	m	struct:EcsMetaTypeSerialized	typeref:typename:ecs_vector_t *
ops	lib/flecs/include/flecs/addons/meta.h	/^    ecs_meta_type_op_t *ops;  \/* The type operations (see ecs_meta_type_op_t) *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:ecs_meta_type_op_t *
ops	lib/flecs/include/flecs/addons/meta.h	/^    ecs_vector_t* ops;     \/* vector<ecs_meta_type_op_t> *\/$/;"	m	struct:EcsMetaTypeSerialized	typeref:typename:ecs_vector_t *
ops	lib/flecs/src/addons/pipeline/pipeline.h	/^    ecs_vector_t *ops;$/;"	m	struct:EcsPipelineQuery	typeref:typename:ecs_vector_t *
ops_add	lib/flecs/flecs.c	/^ecs_meta_type_op_t* ops_add(ecs_vector_t **ops, ecs_meta_type_op_kind_t kind) {$/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
ops_add	lib/flecs/src/addons/meta/serialized.c	/^ecs_meta_type_op_t* ops_add(ecs_vector_t **ops, ecs_meta_type_op_kind_t kind) {$/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
ops_get	lib/flecs/flecs.c	/^ecs_meta_type_op_t* ops_get(ecs_vector_t *ops, int32_t index) {$/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
ops_get	lib/flecs/src/addons/meta/serialized.c	/^ecs_meta_type_op_t* ops_get(ecs_vector_t *ops, int32_t index) {$/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
ops_get	lib/flecs/test/meta/src/Serialized.c	/^static ecs_meta_type_op_t* ops_get(ecs_vector_t *ops, int32_t index) {$/;"	f	typeref:typename:ecs_meta_type_op_t *	file:
order_asc	lib/uthash/tests/test94.c	/^static int order_asc(el *a, el *b)$/;"	f	typeref:typename:int	file:
order_by	lib/flecs/flecs.c	/^    ecs_order_by_action_t order_by;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_order_by_action_t	file:
order_by	lib/flecs/flecs.h	/^    Base& order_by(flecs::entity_t component, int(*compare)(flecs::entity_t, const void*, flecs:/;"	f	struct:flecs::query_builder_i	typeref:typename:Base &
order_by	lib/flecs/flecs.h	/^    Base& order_by(int(*compare)(flecs::entity_t, const T*, flecs::entity_t, const T*)) {$/;"	f	struct:flecs::query_builder_i	typeref:typename:Base &
order_by	lib/flecs/flecs.h	/^    ecs_order_by_action_t order_by;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_order_by_action_t
order_by	lib/flecs/include/flecs.h	/^    ecs_order_by_action_t order_by;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_order_by_action_t
order_by	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    Base& order_by(flecs::entity_t component, int(*compare)(flecs::entity_t, const void*, flecs:/;"	f	struct:flecs::query_builder_i	typeref:typename:Base &
order_by	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    Base& order_by(int(*compare)(flecs::entity_t, const T*, flecs::entity_t, const T*)) {$/;"	f	struct:flecs::query_builder_i	typeref:typename:Base &
order_by	lib/flecs/src/private_types.h	/^    ecs_order_by_action_t order_by;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_order_by_action_t
order_by_component	lib/flecs/flecs.c	/^    ecs_entity_t order_by_component;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_entity_t	file:
order_by_component	lib/flecs/flecs.h	/^    ecs_entity_t order_by_component;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_entity_t
order_by_component	lib/flecs/include/flecs.h	/^    ecs_entity_t order_by_component;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_entity_t
order_by_component	lib/flecs/src/private_types.h	/^    ecs_entity_t order_by_component;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_entity_t
order_by_entity	lib/flecs/test/api/src/Query.c	/^int order_by_entity($/;"	f	typeref:typename:int
order_desc	lib/uthash/tests/test91.c	/^static int order_desc(el *a, el *b)$/;"	f	typeref:typename:int	file:
order_desc	lib/uthash/tests/test94.c	/^static int order_desc(el *a, el *b)$/;"	f	typeref:typename:int	file:
orphaned	lib/flecs/flecs.h	/^    bool orphaned() {$/;"	f	struct:flecs::query_base	typeref:typename:bool
orphaned	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    bool orphaned() {$/;"	f	struct:flecs::query_base	typeref:typename:bool
other	lib/flecs/flecs.c	/^    int32_t other;    \/* Id to table variable (-1 if none exists) *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:int32_t	file:
other	lib/flecs/src/addons/rules.c	/^    int32_t other;    \/* Id to table variable (-1 if none exists) *\/$/;"	m	struct:ecs_rule_var_t	typeref:typename:int32_t	file:
other	lib/flecs/test/api/src/OnDelete.c	/^    ecs_entity_t other;$/;"	m	struct:__anonb57edf370108	typeref:typename:ecs_entity_t	file:
other_comp_dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void other_comp_dtor($/;"	f	typeref:typename:void	file:
other_delete_dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void other_delete_dtor($/;"	f	typeref:typename:void	file:
other_dtor_invoked	lib/flecs/test/api/src/ComponentLifecycle.c	/^static int other_dtor_invoked;$/;"	v	typeref:typename:int	file:
other_dtor_valid_entity	lib/flecs/test/api/src/ComponentLifecycle.c	/^static int other_dtor_valid_entity;$/;"	v	typeref:typename:int	file:
other_table	lib/flecs/flecs.h	/^    ecs_table_t *other_table;     \/* Prev or next table when adding\/removing *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_table_t *
other_table	lib/flecs/flecs.h	/^    ecs_table_t *other_table;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_table_t *
other_table	lib/flecs/include/flecs.h	/^    ecs_table_t *other_table;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_table_t *
other_table	lib/flecs/include/flecs/private/api_types.h	/^    ecs_table_t *other_table;     \/* Prev or next table when adding\/removing *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_table_t *
other_type_dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void other_type_dtor($/;"	f	typeref:typename:void	file:
over	lib/flecs/flecs.h	/^    ecs_entity_t over; \/* Over unit (e.g. "per second") *\/$/;"	m	struct:EcsUnit	typeref:typename:ecs_entity_t
over	lib/flecs/flecs.h	/^    ecs_entity_t over;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_t
over	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t over; \/* Over unit (e.g. "per second") *\/$/;"	m	struct:EcsUnit	typeref:typename:ecs_entity_t
over	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t over;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_t
override	lib/flecs/flecs.h	/^    Self& override() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
override	lib/flecs/flecs.h	/^    Self& override(entity_t entity) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
override	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& override() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
override	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& override(entity_t entity) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
override_component	lib/flecs/flecs.c	/^bool override_component($/;"	f	typeref:typename:bool	file:
override_component	lib/flecs/src/entity.c	/^bool override_component($/;"	f	typeref:typename:bool	file:
override_from_base	lib/flecs/flecs.c	/^bool override_from_base($/;"	f	typeref:typename:bool	file:
override_from_base	lib/flecs/src/entity.c	/^bool override_from_base($/;"	f	typeref:typename:bool	file:
owned	lib/flecs/flecs.h	/^    Base& owned(bool value = true) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
owned	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& owned(bool value = true) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
owns	lib/flecs/flecs.h	/^    bool owns() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
owns	lib/flecs/flecs.h	/^    bool owns(flecs::id_t e) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
owns	lib/flecs/flecs.h	/^    bool owns(flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
owns	lib/flecs/flecs.h	/^    bool owns(flecs::id_t relation, flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
owns	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool owns() const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
owns	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool owns(flecs::id_t e) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
owns	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool owns(flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
owns	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    bool owns(flecs::id_t relation, flecs::id_t object) const {$/;"	f	struct:flecs::entity_view	typeref:typename:bool
p1	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i16_t p1;$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_i16_t	file:
p1	lib/flecs/test/meta/src/Cursor.c	/^        bool p1;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320f08	typeref:typename:bool	file:
p1	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t p1;$/;"	m	struct:Cursor_struct_set_2_array_i32_3_w_padding_members::__anon23e81c321208	typeref:typename:ecs_bool_t	file:
p2	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t p2;$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_i32_t	file:
p2	lib/flecs/test/meta/src/Cursor.c	/^        bool p2;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320f08	typeref:typename:bool	file:
p2	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t p2;$/;"	m	struct:Cursor_struct_set_2_array_i32_3_w_padding_members::__anon23e81c321208	typeref:typename:ecs_bool_t	file:
p3	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i64_t p3;$/;"	m	struct:ArrayTypes_8_arrays_bool_w_padded_member::__anon98b8c2481108	typeref:typename:ecs_i64_t	file:
p3	lib/flecs/test/meta/src/Cursor.c	/^        bool p3;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320f08	typeref:typename:bool	file:
p3	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t p3;$/;"	m	struct:Cursor_struct_set_2_array_i32_3_w_padding_members::__anon23e81c321208	typeref:typename:ecs_bool_t	file:
page	lib/flecs/flecs.h	/^        ecs_page_iter_t page;$/;"	m	union:ecs_iter_private_t::__anona642c00a010a	typeref:typename:ecs_page_iter_t
page	lib/flecs/flecs.h	/^page_iterable<Components...> iterable<Components...>::page($/;"	f	class:flecs::iterable	typeref:typename:page_iterable<Components...>
page	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^page_iterable<Components...> iterable<Components...>::page($/;"	f	class:flecs::iterable	typeref:typename:page_iterable<Components...>
page	lib/flecs/include/flecs/private/api_types.h	/^        ecs_page_iter_t page;$/;"	m	union:ecs_iter_private_t::__anon49db2d84010a	typeref:typename:ecs_page_iter_t
page_iterable	lib/flecs/flecs.h	/^    page_iterable(int32_t offset, int32_t limit, Iterable *it) $/;"	f	struct:flecs::page_iterable
page_iterable	lib/flecs/flecs.h	/^struct page_iterable final : iterable<Components...> {$/;"	s	namespace:flecs
page_iterable	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    page_iterable(int32_t offset, int32_t limit, Iterable *it) $/;"	f	struct:flecs::page_iterable
page_iterable	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^struct page_iterable final : iterable<Components...> {$/;"	s	namespace:flecs
pair	lib/flecs/flecs.h	/^    pair(const type& v) : ref_(const_cast<type&>(v)) { }$/;"	f	struct:flecs::pair
pair	lib/flecs/flecs.h	/^    pair(type& v) : ref_(v) { }$/;"	f	struct:flecs::pair
pair	lib/flecs/flecs.h	/^inline flecs::id iter::pair(int32_t index) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::id
pair	lib/flecs/flecs.h	/^inline flecs::id world::pair() const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
pair	lib/flecs/flecs.h	/^inline flecs::id world::pair(entity_t o) const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
pair	lib/flecs/flecs.h	/^inline flecs::id world::pair(entity_t r, entity_t o) const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
pair	lib/flecs/flecs.h	/^struct pair : _::pair_base { $/;"	s	namespace:flecs
pair	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::id iter::pair(int32_t index) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::id
pair	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::id world::pair() const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
pair	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::id world::pair(entity_t o) const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
pair	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::id world::pair(entity_t r, entity_t o) const {$/;"	f	class:flecs::world	typeref:typename:flecs::id
pair	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    pair(const type& v) : ref_(const_cast<type&>(v)) { }$/;"	f	struct:flecs::pair
pair	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    pair(type& v) : ref_(v) { }$/;"	f	struct:flecs::pair
pair	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^struct pair : _::pair_base { $/;"	s	namespace:flecs
pair_base	lib/flecs/flecs.h	/^    struct pair_base { };   $/;"	s	namespace:flecs::_
pair_base	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    struct pair_base { };   $/;"	s	namespace:flecs::_
pair_obj	lib/flecs/flecs.c	/^ecs_rule_var_t* pair_obj($/;"	f	typeref:typename:ecs_rule_var_t *	file:
pair_obj	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* pair_obj($/;"	f	typeref:typename:ecs_rule_var_t *	file:
pair_object	lib/flecs/flecs.h	/^using pair_object = pair<R, O>;$/;"	t	namespace:flecs	typeref:typename:pair<R,O>
pair_object	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^using pair_object = pair<R, O>;$/;"	t	namespace:flecs	typeref:typename:pair<R,O>
pair_object_t	lib/flecs/flecs.h	/^using pair_object_t = transcribe_cv_t<remove_reference_t<P>, typename remove_reference_t<P>::obj/;"	t	namespace:flecs	typeref:typename:transcribe_cv_t<remove_reference_t<P>,typename remove_reference_t<P>::object>
pair_object_t	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^using pair_object_t = transcribe_cv_t<remove_reference_t<P>, typename remove_reference_t<P>::obj/;"	t	namespace:flecs	typeref:typename:transcribe_cv_t<remove_reference_t<P>,typename remove_reference_t<P>::object>
pair_offset_t	lib/flecs/flecs.c	/^typedef struct pair_offset_t {$/;"	s	file:
pair_offset_t	lib/flecs/flecs.c	/^} pair_offset_t;$/;"	t	typeref:struct:pair_offset_t	file:
pair_offset_t	lib/flecs/src/query.c	/^typedef struct pair_offset_t {$/;"	s	file:
pair_offset_t	lib/flecs/src/query.c	/^} pair_offset_t;$/;"	t	typeref:struct:pair_offset_t	file:
pair_pred	lib/flecs/flecs.c	/^ecs_rule_var_t* pair_pred($/;"	f	typeref:typename:ecs_rule_var_t *	file:
pair_pred	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* pair_pred($/;"	f	typeref:typename:ecs_rule_var_t *	file:
pair_relation_t	lib/flecs/flecs.h	/^using pair_relation_t = transcribe_cv_t<remove_reference_t<P>, typename remove_reference_t<P>::r/;"	t	namespace:flecs	typeref:typename:transcribe_cv_t<remove_reference_t<P>,typename remove_reference_t<P>::relation>
pair_relation_t	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^using pair_relation_t = transcribe_cv_t<remove_reference_t<P>, typename remove_reference_t<P>::r/;"	t	namespace:flecs	typeref:typename:transcribe_cv_t<remove_reference_t<P>,typename remove_reference_t<P>::relation>
pair_to_filter	lib/flecs/flecs.c	/^ecs_rule_filter_t pair_to_filter($/;"	f	typeref:typename:ecs_rule_filter_t	file:
pair_to_filter	lib/flecs/src/addons/rules.c	/^ecs_rule_filter_t pair_to_filter($/;"	f	typeref:typename:ecs_rule_filter_t	file:
pair_type_t	lib/flecs/flecs.h	/^using pair_type_t = transcribe_cv_t<remove_reference_t<P>, typename remove_reference_t<P>::type>/;"	t	namespace:flecs	typeref:typename:transcribe_cv_t<remove_reference_t<P>,typename remove_reference_t<P>::type>
pair_type_t	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^using pair_type_t = transcribe_cv_t<remove_reference_t<P>, typename remove_reference_t<P>::type>/;"	t	namespace:flecs	typeref:typename:transcribe_cv_t<remove_reference_t<P>,typename remove_reference_t<P>::type>
param	lib/flecs/flecs.h	/^    T* param() {$/;"	f	struct:flecs::iter	typeref:typename:T *
param	lib/flecs/flecs.h	/^    const void *param;$/;"	m	struct:ecs_event_desc_t	typeref:typename:const void *
param	lib/flecs/flecs.h	/^    void *param;                  \/* Param passed to ecs_run *\/$/;"	m	struct:ecs_iter_t	typeref:typename:void *
param	lib/flecs/flecs.h	/^    void* param() {$/;"	f	struct:flecs::iter	typeref:typename:void *
param	lib/flecs/include/flecs.h	/^    const void *param;$/;"	m	struct:ecs_event_desc_t	typeref:typename:const void *
param	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    T* param() {$/;"	f	struct:flecs::iter	typeref:typename:T *
param	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    void* param() {$/;"	f	struct:flecs::iter	typeref:typename:void *
param	lib/flecs/include/flecs/private/api_types.h	/^    void *param;                  \/* Param passed to ecs_run *\/$/;"	m	struct:ecs_iter_t	typeref:typename:void *
param	lib/flecs/test/api/include/api.h	/^    void *param;$/;"	m	struct:Probe	typeref:typename:void *
param_count	lib/flecs/flecs.c	/^    int32_t param_count;$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t	file:
param_count	lib/flecs/flecs.h	/^    int32_t param_count;$/;"	m	struct:__anona642c00a0a08	typeref:typename:int32_t
param_count	lib/flecs/include/flecs/addons/http.h	/^    int32_t param_count;$/;"	m	struct:__anon12cf63340408	typeref:typename:int32_t
param_count	lib/flecs/src/addons/http.c	/^    int32_t param_count;$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t	file:
param_offsets	lib/flecs/flecs.c	/^    int32_t param_offsets[ECS_HTTP_QUERY_PARAM_COUNT_MAX];$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t[]	file:
param_offsets	lib/flecs/src/addons/http.c	/^    int32_t param_offsets[ECS_HTTP_QUERY_PARAM_COUNT_MAX];$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t[]	file:
param_value_offsets	lib/flecs/flecs.c	/^    int32_t param_value_offsets[ECS_HTTP_QUERY_PARAM_COUNT_MAX];$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t[]	file:
param_value_offsets	lib/flecs/src/addons/http.c	/^    int32_t param_value_offsets[ECS_HTTP_QUERY_PARAM_COUNT_MAX];$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t[]	file:
params	lib/flecs/flecs.c	/^    ecs_meta_token_t params;$/;"	m	struct:meta_type_t	typeref:typename:ecs_meta_token_t	file:
params	lib/flecs/flecs.h	/^    ecs_http_key_value_t params[ECS_HTTP_HEADER_COUNT_MAX];$/;"	m	struct:__anona642c00a0a08	typeref:typename:ecs_http_key_value_t[]
params	lib/flecs/include/flecs/addons/http.h	/^    ecs_http_key_value_t params[ECS_HTTP_HEADER_COUNT_MAX];$/;"	m	struct:__anon12cf63340408	typeref:typename:ecs_http_key_value_t[]
params	lib/flecs/src/addons/meta_c.c	/^    ecs_meta_token_t params;$/;"	m	struct:meta_type_t	typeref:typename:ecs_meta_token_t	file:
parent	lib/flecs/flecs.c	/^    ecs_query_t *parent;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_query_t *	file:
parent	lib/flecs/flecs.h	/^    ecs_query_t *parent;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_query_t *
parent	lib/flecs/flecs.h	/^inline Base& query_builder_i<Base, Components ...>::parent(const query_base& parent) {$/;"	f	class:flecs::query_builder_i	typeref:typename:Base &
parent	lib/flecs/include/flecs.h	/^    ecs_query_t *parent;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_query_t *
parent	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^inline Base& query_builder_i<Base, Components ...>::parent(const query_base& parent) {$/;"	f	class:flecs::query_builder_i	typeref:typename:Base &
parent	lib/flecs/src/private_types.h	/^    ecs_query_t *parent;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_query_t *
parent_query	lib/flecs/flecs.c	/^    ecs_query_t *parent_query;$/;"	m	struct:ecs_query_event_t	typeref:typename:ecs_query_t *	file:
parent_query	lib/flecs/src/private_types.h	/^    ecs_query_t *parent_query;$/;"	m	struct:ecs_query_event_t	typeref:typename:ecs_query_t *
parse_annotation	lib/flecs/flecs.c	/^const char* parse_annotation($/;"	f	typeref:typename:const char *	file:
parse_annotation	lib/flecs/src/addons/parser.c	/^const char* parse_annotation($/;"	f	typeref:typename:const char *	file:
parse_arguments	lib/flecs/flecs.c	/^const char* parse_arguments($/;"	f	typeref:typename:const char *	file:
parse_arguments	lib/flecs/src/addons/parser.c	/^const char* parse_arguments($/;"	f	typeref:typename:const char *	file:
parse_assign_expr	lib/flecs/flecs.c	/^const char* parse_assign_expr($/;"	f	typeref:typename:const char *	file:
parse_assign_expr	lib/flecs/src/addons/plecs.c	/^const char* parse_assign_expr($/;"	f	typeref:typename:const char *	file:
parse_assign_stmt	lib/flecs/flecs.c	/^const char* parse_assign_stmt($/;"	f	typeref:typename:const char *	file:
parse_assign_stmt	lib/flecs/src/addons/plecs.c	/^const char* parse_assign_stmt($/;"	f	typeref:typename:const char *	file:
parse_bitmask	lib/flecs/flecs.c	/^int parse_bitmask($/;"	f	typeref:typename:int	file:
parse_bitmask	lib/flecs/src/addons/meta/cursor.c	/^int parse_bitmask($/;"	f	typeref:typename:int	file:
parse_c_digit	lib/flecs/flecs.c	/^const char* parse_c_digit($/;"	f	typeref:typename:const char *	file:
parse_c_digit	lib/flecs/src/addons/meta_c.c	/^const char* parse_c_digit($/;"	f	typeref:typename:const char *	file:
parse_c_identifier	lib/flecs/flecs.c	/^const char* parse_c_identifier($/;"	f	typeref:typename:const char *	file:
parse_c_identifier	lib/flecs/src/addons/meta_c.c	/^const char* parse_c_identifier($/;"	f	typeref:typename:const char *	file:
parse_content_length	lib/flecs/flecs.c	/^    bool parse_content_length;$/;"	m	struct:__anona642c0050a08	typeref:typename:bool	file:
parse_content_length	lib/flecs/src/addons/http.c	/^    bool parse_content_length;$/;"	m	struct:__anonc2d932d70208	typeref:typename:bool	file:
parse_digit	lib/flecs/flecs.c	/^const char* parse_digit($/;"	f	typeref:typename:const char *	file:
parse_digit	lib/flecs/src/addons/parser.c	/^const char* parse_digit($/;"	f	typeref:typename:const char *	file:
parse_fluff	lib/flecs/flecs.c	/^const char* parse_fluff($/;"	f	typeref:typename:const char *	file:
parse_fluff	lib/flecs/src/addons/plecs.c	/^const char* parse_fluff($/;"	f	typeref:typename:const char *	file:
parse_identifier	lib/flecs/flecs.c	/^int parse_identifier($/;"	f	typeref:typename:int	file:
parse_identifier	lib/flecs/src/addons/parser.c	/^int parse_identifier($/;"	f	typeref:typename:int	file:
parse_inherit_stmt	lib/flecs/flecs.c	/^const char* parse_inherit_stmt($/;"	f	typeref:typename:const char *	file:
parse_inherit_stmt	lib/flecs/src/addons/plecs.c	/^const char* parse_inherit_stmt($/;"	f	typeref:typename:const char *	file:
parse_method	lib/flecs/flecs.c	/^void parse_method($/;"	f	typeref:typename:void	file:
parse_method	lib/flecs/src/addons/http.c	/^void parse_method($/;"	f	typeref:typename:void	file:
parse_operator	lib/flecs/flecs.c	/^ecs_oper_kind_t parse_operator($/;"	f	typeref:typename:ecs_oper_kind_t	file:
parse_operator	lib/flecs/src/addons/parser.c	/^ecs_oper_kind_t parse_operator($/;"	f	typeref:typename:ecs_oper_kind_t	file:
parse_plecs_term	lib/flecs/flecs.c	/^const char *parse_plecs_term($/;"	f	typeref:typename:const char *	file:
parse_plecs_term	lib/flecs/src/addons/plecs.c	/^const char *parse_plecs_term($/;"	f	typeref:typename:const char *	file:
parse_request	lib/flecs/flecs.c	/^bool parse_request($/;"	f	typeref:typename:bool	file:
parse_request	lib/flecs/src/addons/http.c	/^bool parse_request($/;"	f	typeref:typename:bool	file:
parse_role	lib/flecs/flecs.c	/^ecs_entity_t parse_role($/;"	f	typeref:typename:ecs_entity_t	file:
parse_role	lib/flecs/src/addons/parser.c	/^ecs_entity_t parse_role($/;"	f	typeref:typename:ecs_entity_t	file:
parse_scope_close	lib/flecs/flecs.c	/^const char* parse_scope_close($/;"	f	typeref:typename:const char *	file:
parse_scope_close	lib/flecs/src/addons/plecs.c	/^const char* parse_scope_close($/;"	f	typeref:typename:const char *	file:
parse_scope_open	lib/flecs/flecs.c	/^const char* parse_scope_open($/;"	f	typeref:typename:const char *	file:
parse_scope_open	lib/flecs/src/addons/plecs.c	/^const char* parse_scope_open($/;"	f	typeref:typename:const char *	file:
parse_set_expr	lib/flecs/flecs.c	/^const char* parse_set_expr($/;"	f	typeref:typename:const char *	file:
parse_set_expr	lib/flecs/src/addons/parser.c	/^const char* parse_set_expr($/;"	f	typeref:typename:const char *	file:
parse_set_token	lib/flecs/flecs.c	/^uint8_t parse_set_token($/;"	f	typeref:typename:uint8_t	file:
parse_set_token	lib/flecs/src/addons/parser.c	/^uint8_t parse_set_token($/;"	f	typeref:typename:uint8_t	file:
parse_stmt	lib/flecs/flecs.c	/^const char* parse_stmt($/;"	f	typeref:typename:const char *	file:
parse_stmt	lib/flecs/src/addons/plecs.c	/^const char* parse_stmt($/;"	f	typeref:typename:const char *	file:
parse_term	lib/flecs/flecs.c	/^const char* parse_term($/;"	f	typeref:typename:const char *	file:
parse_term	lib/flecs/src/addons/parser.c	/^const char* parse_term($/;"	f	typeref:typename:const char *	file:
parse_using_stmt	lib/flecs/flecs.c	/^const char* parse_using_stmt($/;"	f	typeref:typename:const char *	file:
parse_using_stmt	lib/flecs/src/addons/plecs.c	/^const char* parse_using_stmt($/;"	f	typeref:typename:const char *	file:
parse_with_stmt	lib/flecs/flecs.c	/^const char* parse_with_stmt($/;"	f	typeref:typename:const char *	file:
parse_with_stmt	lib/flecs/src/addons/plecs.c	/^const char* parse_with_stmt($/;"	f	typeref:typename:const char *	file:
parser_unexpected_char	lib/flecs/flecs.c	/^void parser_unexpected_char($/;"	f	typeref:typename:void	file:
parser_unexpected_char	lib/flecs/src/addons/parser.c	/^void parser_unexpected_char($/;"	f	typeref:typename:void	file:
path	lib/flecs/flecs.h	/^    char *path;$/;"	m	struct:__anona642c00a0a08	typeref:typename:char *
path	lib/flecs/flecs.h	/^    flecs::string path(const char *sep = "::", const char *init_sep = "::") const {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::string
path	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    flecs::string path(const char *sep = "::", const char *init_sep = "::") const {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::string
path	lib/flecs/include/flecs/addons/http.h	/^    char *path;$/;"	m	struct:__anon12cf63340408	typeref:typename:char *
path4890	lib/uthash/doc/banner.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1px;st/;"	i
path4890	lib/uthash/doc/uthash-mini.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:black;stroke-width:1px;stro/;"	i
path4892	lib/uthash/doc/banner.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1px;st/;"	i
path4892	lib/uthash/doc/uthash-mini.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:black;stroke-width:1px;stro/;"	i
path4902	lib/uthash/doc/banner.svg	/^         inkscape:connector-type="polyline" \/>$/;"	i
path4902	lib/uthash/doc/uthash-mini.svg	/^         inkscape:connector-type="polyline" \/>$/;"	i
path5789	lib/uthash/doc/banner.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1px;st/;"	i
path5789	lib/uthash/doc/uthash-mini.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:black;stroke-width:1px;stro/;"	i
path5795	lib/uthash/doc/banner.svg	/^         inkscape:connector-type="polyline" \/>$/;"	i
path5795	lib/uthash/doc/uthash-mini.svg	/^         inkscape:connector-type="polyline" \/>$/;"	i
path5807	lib/uthash/doc/banner.svg	/^         inkscape:connector-type="polyline" \/>$/;"	i
path5807	lib/uthash/doc/uthash-mini.svg	/^         inkscape:connector-type="polyline" \/>$/;"	i
path5813	lib/uthash/doc/banner.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1px;st/;"	i
path5813	lib/uthash/doc/uthash-mini.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:black;stroke-width:1px;stro/;"	i
path5833	lib/uthash/doc/banner.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#2f29df;stroke-width:1px;st/;"	i
path5833	lib/uthash/doc/uthash-mini.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#2f29df;stroke-width:1px;st/;"	i
path5835	lib/uthash/doc/banner.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#2f29df;stroke-width:1px;st/;"	i
path5835	lib/uthash/doc/uthash-mini.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#2f29df;stroke-width:1px;st/;"	i
path6716	lib/uthash/doc/banner.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#f3bf33;stroke-width:2;stro/;"	i
path6716	lib/uthash/doc/uthash-mini.svg	/^         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#f3bf33;stroke-width:2;stro/;"	i
path7651	lib/uthash/doc/banner.svg	/^         transform="scale(0.4)" \/>$/;"	i
path7651	lib/uthash/doc/uthash-mini.svg	/^         transform="scale(0.4,0.4)" \/>$/;"	i
path7654	lib/uthash/doc/banner.svg	/^         transform="scale(0.8)" \/>$/;"	i
path7660	lib/uthash/doc/banner.svg	/^         transform="scale(0.4)" \/>$/;"	i
path7669	lib/uthash/doc/banner.svg	/^         transform="scale(-0.4)" \/>$/;"	i
path7675	lib/uthash/doc/banner.svg	/^         transform="scale(0.2)" \/>$/;"	i
path7718	lib/uthash/doc/banner.svg	/^           style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:0.8;marker-start:none;/;"	i
path7720	lib/uthash/doc/banner.svg	/^           style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:0.8;marker-start:none;/;"	i
path7722	lib/uthash/doc/banner.svg	/^           style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:0.8;marker-start:none;/;"	i
path7724	lib/uthash/doc/banner.svg	/^           style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:0.8;marker-start:none;/;"	i
path7726	lib/uthash/doc/banner.svg	/^           style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:0.8;marker-start:none;/;"	i
path7728	lib/uthash/doc/banner.svg	/^           style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:0.8;marker-start:none;/;"	i
path7737	lib/uthash/doc/banner.svg	/^         transform="scale(0.6) rotate(180) translate(-5,0)" \/>$/;"	i
path7749	lib/uthash/doc/banner.svg	/^         transform="scale(0.2) rotate(180)" \/>$/;"	i
path7749	lib/uthash/doc/uthash-mini.svg	/^         transform="scale(-0.2,-0.2)" \/>$/;"	i
path7752	lib/uthash/doc/banner.svg	/^         transform="scale(0.2)" \/>$/;"	i
path7755	lib/uthash/doc/banner.svg	/^         transform="scale(0.4) rotate(180)" \/>$/;"	i
path7764	lib/uthash/doc/banner.svg	/^         transform="scale(0.8)" \/>$/;"	i
path_append	lib/flecs/flecs.c	/^bool path_append($/;"	f	typeref:typename:bool	file:
path_append	lib/flecs/src/hierarchy.c	/^bool path_append($/;"	f	typeref:typename:bool	file:
path_elem	lib/flecs/flecs.c	/^const char* path_elem($/;"	f	typeref:typename:const char *	file:
path_elem	lib/flecs/src/hierarchy.c	/^const char* path_elem($/;"	f	typeref:typename:const char *	file:
payload	lib/flecs/flecs.h	/^    void *payload;          \/* Payload array *\/$/;"	m	struct:ecs_bucket_t	typeref:typename:void *
payload	lib/flecs/flecs.h	/^    void *payload;$/;"	m	struct:ecs_map_iter_t	typeref:typename:void *
payload	lib/flecs/include/flecs/private/map.h	/^    void *payload;          \/* Payload array *\/$/;"	m	struct:ecs_bucket_t	typeref:typename:void *
payload	lib/flecs/include/flecs/private/map.h	/^    void *payload;$/;"	m	struct:ecs_map_iter_t	typeref:typename:void *
pedantic	lib/uthash/tests/Makefile	/^pedantic:$/;"	t
peek_screen	src/screens/manager.c	/^struct Screen *peek_screen() {$/;"	f	typeref:struct:Screen *
pending_buffer	lib/flecs/flecs.c	/^    ecs_sparse_t *pending_buffer;  \/* sparse<table_id, ecs_table_t*> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *	file:
pending_buffer	lib/flecs/src/private_types.h	/^    ecs_sparse_t *pending_buffer;  \/* sparse<table_id, ecs_table_t*> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *
pending_tables	lib/flecs/flecs.c	/^    ecs_sparse_t *pending_tables;  \/* sparse<table_id, ecs_table_t*> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *	file:
pending_tables	lib/flecs/src/private_types.h	/^    ecs_sparse_t *pending_tables;  \/* sparse<table_id, ecs_table_t*> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *
perms	lib/uthash/tests/hashscan.c	/^    char perms[4];   \/* rwxp *\/$/;"	m	struct:__anone6f392830208	typeref:typename:char[4]	file:
person_t	lib/uthash/tests/test12.c	/^typedef struct person_t {$/;"	s	file:
person_t	lib/uthash/tests/test12.c	/^} person_t;$/;"	t	typeref:struct:person_t	file:
person_t	lib/uthash/tests/test66.c	/^typedef struct person_t {$/;"	s	file:
person_t	lib/uthash/tests/test66.c	/^} person_t;$/;"	t	typeref:struct:person_t	file:
person_t	lib/uthash/tests/test83.c	/^typedef struct person_t {$/;"	s	file:
person_t	lib/uthash/tests/test83.c	/^} person_t;$/;"	t	typeref:struct:person_t	file:
person_t	lib/uthash/tests/test84.c	/^typedef struct person_t {$/;"	s	file:
person_t	lib/uthash/tests/test84.c	/^} person_t;$/;"	t	typeref:struct:person_t	file:
phase_counter	lib/flecs/test/api/src/Tasks.c	/^static int phase_counter = 0;$/;"	v	typeref:typename:int	file:
pipeline	lib/flecs/flecs.c	/^    ecs_entity_t pipeline;             \/* Current pipeline *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_entity_t	file:
pipeline	lib/flecs/flecs.h	/^    explicit pipeline(world_t *world, const char *name) : type_base(world, name)$/;"	f	struct:flecs::pipeline
pipeline	lib/flecs/flecs.h	/^    explicit pipeline(world_t *world, entity_t e) : type_base(world, e)$/;"	f	struct:flecs::pipeline
pipeline	lib/flecs/flecs.h	/^inline flecs::pipeline world::pipeline() const {$/;"	f	class:flecs::world	typeref:typename:flecs::pipeline
pipeline	lib/flecs/flecs.h	/^inline flecs::pipeline world::pipeline(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::pipeline
pipeline	lib/flecs/flecs.h	/^struct pipeline : type_base<pipeline> {$/;"	s	namespace:flecs
pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^    explicit pipeline(world_t *world, const char *name) : type_base(world, name)$/;"	f	struct:flecs::pipeline
pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^    explicit pipeline(world_t *world, entity_t e) : type_base(world, e)$/;"	f	struct:flecs::pipeline
pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline flecs::pipeline world::pipeline() const {$/;"	f	class:flecs::world	typeref:typename:flecs::pipeline
pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline flecs::pipeline world::pipeline(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::pipeline
pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^struct pipeline : type_base<pipeline> {$/;"	s	namespace:flecs
pipeline	lib/flecs/src/private_types.h	/^    ecs_entity_t pipeline;             \/* Current pipeline *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_entity_t
pipeline_build_count_total	lib/flecs/flecs.h	/^    ecs_counter_t pipeline_build_count_total; \/* Number of system pipeline rebuilds (occurs whe/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
pipeline_build_count_total	lib/flecs/flecs.h	/^    int32_t pipeline_build_count_total; \/* Total number of pipeline builds *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:int32_t
pipeline_build_count_total	lib/flecs/include/flecs.h	/^    int32_t pipeline_build_count_total; \/* Total number of pipeline builds *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:int32_t
pipeline_build_count_total	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t pipeline_build_count_total; \/* Number of system pipeline rebuilds (occurs whe/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
pkg	lib/flecs/meson.build	/^pkg = import('pkgconfig')$/;"	V
placement_new_tag	lib/flecs/flecs.h	/^constexpr placement_new_tag_t placement_new_tag{};$/;"	v	namespace:flecs::_	typeref:typename:placement_new_tag_t
placement_new_tag	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^constexpr placement_new_tag_t placement_new_tag{};$/;"	v	namespace:flecs::_	typeref:typename:placement_new_tag_t
placement_new_tag_t	lib/flecs/flecs.h	/^struct placement_new_tag_t{};$/;"	s	namespace:flecs::_
placement_new_tag_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^struct placement_new_tag_t{};$/;"	s	namespace:flecs::_
player	include/gamestate.h	/^    ecs_entity_t player;$/;"	m	struct:GameState	typeref:typename:ecs_entity_t
player_start_x	include/mapping/map.h	/^    int player_start_x;$/;"	m	struct:Map	typeref:typename:int
player_start_y	include/mapping/map.h	/^    int player_start_y;$/;"	m	struct:Map	typeref:typename:int
plecs_from_file	lib/flecs/flecs.h	/^int plecs_from_file(const char *filename) const {$/;"	f	struct:flecs::world	typeref:typename:int
plecs_from_file	lib/flecs/include/flecs/addons/cpp/mixins/plecs/mixin.inl	/^int plecs_from_file(const char *filename) const {$/;"	f	typeref:typename:int
plecs_from_str	lib/flecs/flecs.h	/^int plecs_from_str(const char *name, const char *str) const {$/;"	f	struct:flecs::world	typeref:typename:int
plecs_from_str	lib/flecs/include/flecs/addons/cpp/mixins/plecs/mixin.inl	/^int plecs_from_str(const char *name, const char *str) const {$/;"	f	typeref:typename:int
plecs_lookup	lib/flecs/flecs.c	/^ecs_entity_t plecs_lookup($/;"	f	typeref:typename:ecs_entity_t	file:
plecs_lookup	lib/flecs/src/addons/plecs.c	/^ecs_entity_t plecs_lookup($/;"	f	typeref:typename:ecs_entity_t	file:
plecs_lookup_action	lib/flecs/flecs.c	/^ecs_entity_t plecs_lookup_action($/;"	f	typeref:typename:ecs_entity_t	file:
plecs_lookup_action	lib/flecs/src/addons/plecs.c	/^ecs_entity_t plecs_lookup_action($/;"	f	typeref:typename:ecs_entity_t	file:
plecs_state_t	lib/flecs/flecs.c	/^} plecs_state_t;$/;"	t	typeref:struct:__anona642c0050408	file:
plecs_state_t	lib/flecs/src/addons/plecs.c	/^} plecs_state_t;$/;"	t	typeref:struct:__anon7212bd4e0108	file:
pop	lib/flecs/flecs.h	/^    int pop() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
pop	lib/flecs/flecs.h	/^inline void pop() {$/;"	f	namespace:flecs::log	typeref:typename:void
pop	lib/flecs/include/flecs/addons/cpp/log.hpp	/^inline void pop() {$/;"	f	namespace:flecs::log	typeref:typename:void
pop	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int pop() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
pop_screen	src/screens/manager.c	/^void pop_screen() {$/;"	f	typeref:typename:void
populate	lib/flecs/flecs.h	/^        void populate(const Builder& b) {$/;"	f	struct:flecs::_::sig	typeref:typename:void
populate	lib/flecs/flecs.h	/^    bool populate(const ecs_iter_t *iter) {$/;"	f	struct:flecs::_::term_ptrs	typeref:typename:bool
populate	lib/flecs/flecs.h	/^    bool populate(const ecs_iter_t *iter, size_t index, T, Targs... comps) {$/;"	f	struct:flecs::_::term_ptrs	typeref:typename:bool
populate	lib/flecs/flecs.h	/^    bool populate(const ecs_iter_t*, size_t) { return false; }$/;"	f	struct:flecs::_::term_ptrs	typeref:typename:bool
populate	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    bool populate(const ecs_iter_t *iter) {$/;"	f	struct:flecs::_::term_ptrs	typeref:typename:bool
populate	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    bool populate(const ecs_iter_t *iter, size_t index, T, Targs... comps) {$/;"	f	struct:flecs::_::term_ptrs	typeref:typename:bool
populate	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    bool populate(const ecs_iter_t*, size_t) { return false; }$/;"	f	struct:flecs::_::term_ptrs	typeref:typename:bool
populate	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^        void populate(const Builder& b) {$/;"	f	struct:flecs::_::sig	typeref:typename:void
populate	lib/flecs/test/collections/src/Sparse.c	/^void populate(ecs_sparse_t *sp, int count) {$/;"	f	typeref:typename:void	file:
populate_diff	lib/flecs/flecs.c	/^void populate_diff( $/;"	f	typeref:typename:void	file:
populate_diff	lib/flecs/src/table_graph.c	/^void populate_diff( $/;"	f	typeref:typename:void	file:
populate_from_term_id	lib/flecs/flecs.c	/^int populate_from_term_id($/;"	f	typeref:typename:int	file:
populate_from_term_id	lib/flecs/src/filter.c	/^int populate_from_term_id($/;"	f	typeref:typename:int	file:
populate_iterator	lib/flecs/flecs.c	/^void populate_iterator($/;"	f	typeref:typename:void	file:
populate_iterator	lib/flecs/src/addons/rules.c	/^void populate_iterator($/;"	f	typeref:typename:void	file:
port	lib/flecs/flecs.c	/^    uint16_t port;$/;"	m	struct:ecs_http_server_t	typeref:typename:uint16_t	file:
port	lib/flecs/flecs.h	/^    char port[16];$/;"	m	struct:__anona642c00a0708	typeref:typename:char[16]
port	lib/flecs/flecs.h	/^    uint16_t port;                    \/* HTTP port *\/$/;"	m	struct:__anona642c00a0c08	typeref:typename:uint16_t
port	lib/flecs/flecs.h	/^    uint16_t port;        \/* Port of server (optional, default = 27750) *\/$/;"	m	struct:__anona642c00a0608	typeref:typename:uint16_t
port	lib/flecs/include/flecs/addons/http.h	/^    char port[16];$/;"	m	struct:__anon12cf63340108	typeref:typename:char[16]
port	lib/flecs/include/flecs/addons/http.h	/^    uint16_t port;                    \/* HTTP port *\/$/;"	m	struct:__anon12cf63340608	typeref:typename:uint16_t
port	lib/flecs/include/flecs/addons/rest.h	/^    uint16_t port;        \/* Port of server (optional, default = 27750) *\/$/;"	m	struct:__anon29130e920108	typeref:typename:uint16_t
port	lib/flecs/src/addons/http.c	/^    uint16_t port;$/;"	m	struct:ecs_http_server_t	typeref:typename:uint16_t	file:
pos	lib/flecs/flecs.h	/^    int32_t pos;$/;"	m	struct:ecs_strbuf_element	typeref:typename:int32_t
pos	lib/flecs/include/flecs/private/strbuf.h	/^    int32_t pos;$/;"	m	struct:ecs_strbuf_element	typeref:typename:int32_t
position_ctor_invoked	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^static int position_ctor_invoked = 0;$/;"	v	typeref:typename:int	file:
position_on_set_invoked	lib/flecs/test/api/src/ComponentLifecycle.c	/^static int position_on_set_invoked;$/;"	v	typeref:typename:int	file:
posix_adec	lib/flecs/flecs.c	/^int32_t posix_adec($/;"	f	typeref:typename:int32_t	file:
posix_adec	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^int32_t posix_adec($/;"	f	typeref:typename:int32_t	file:
posix_ainc	lib/flecs/flecs.c	/^int32_t posix_ainc($/;"	f	typeref:typename:int32_t	file:
posix_ainc	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^int32_t posix_ainc($/;"	f	typeref:typename:int32_t	file:
posix_cond_broadcast	lib/flecs/flecs.c	/^void posix_cond_broadcast($/;"	f	typeref:typename:void	file:
posix_cond_broadcast	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_cond_broadcast($/;"	f	typeref:typename:void	file:
posix_cond_free	lib/flecs/flecs.c	/^void posix_cond_free($/;"	f	typeref:typename:void	file:
posix_cond_free	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_cond_free($/;"	f	typeref:typename:void	file:
posix_cond_new	lib/flecs/flecs.c	/^ecs_os_cond_t posix_cond_new(void) {$/;"	f	typeref:typename:ecs_os_cond_t	file:
posix_cond_new	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^ecs_os_cond_t posix_cond_new(void) {$/;"	f	typeref:typename:ecs_os_cond_t	file:
posix_cond_signal	lib/flecs/flecs.c	/^void posix_cond_signal($/;"	f	typeref:typename:void	file:
posix_cond_signal	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_cond_signal($/;"	f	typeref:typename:void	file:
posix_cond_wait	lib/flecs/flecs.c	/^void posix_cond_wait($/;"	f	typeref:typename:void	file:
posix_cond_wait	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_cond_wait($/;"	f	typeref:typename:void	file:
posix_enable_high_timer_resolution	lib/flecs/flecs.c	/^void posix_enable_high_timer_resolution(bool enable) {$/;"	f	typeref:typename:void	file:
posix_enable_high_timer_resolution	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_enable_high_timer_resolution(bool enable) {$/;"	f	typeref:typename:void	file:
posix_int64_muldiv	lib/flecs/flecs.c	/^int64_t posix_int64_muldiv(int64_t value, int64_t numer, int64_t denom) {$/;"	f	typeref:typename:int64_t	file:
posix_int64_muldiv	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^int64_t posix_int64_muldiv(int64_t value, int64_t numer, int64_t denom) {$/;"	f	typeref:typename:int64_t	file:
posix_mutex_free	lib/flecs/flecs.c	/^void posix_mutex_free($/;"	f	typeref:typename:void	file:
posix_mutex_free	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_mutex_free($/;"	f	typeref:typename:void	file:
posix_mutex_lock	lib/flecs/flecs.c	/^void posix_mutex_lock($/;"	f	typeref:typename:void	file:
posix_mutex_lock	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_mutex_lock($/;"	f	typeref:typename:void	file:
posix_mutex_new	lib/flecs/flecs.c	/^ecs_os_mutex_t posix_mutex_new(void) {$/;"	f	typeref:typename:ecs_os_mutex_t	file:
posix_mutex_new	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^ecs_os_mutex_t posix_mutex_new(void) {$/;"	f	typeref:typename:ecs_os_mutex_t	file:
posix_mutex_unlock	lib/flecs/flecs.c	/^void posix_mutex_unlock($/;"	f	typeref:typename:void	file:
posix_mutex_unlock	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_mutex_unlock($/;"	f	typeref:typename:void	file:
posix_osx_timebase	lib/flecs/flecs.c	/^static mach_timebase_info_data_t posix_osx_timebase;$/;"	v	typeref:typename:mach_timebase_info_data_t	file:
posix_osx_timebase	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^static mach_timebase_info_data_t posix_osx_timebase;$/;"	v	typeref:typename:mach_timebase_info_data_t	file:
posix_sleep	lib/flecs/flecs.c	/^void posix_sleep($/;"	f	typeref:typename:void	file:
posix_sleep	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_sleep($/;"	f	typeref:typename:void	file:
posix_thread_join	lib/flecs/flecs.c	/^void* posix_thread_join($/;"	f	typeref:typename:void *	file:
posix_thread_join	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void* posix_thread_join($/;"	f	typeref:typename:void *	file:
posix_thread_new	lib/flecs/flecs.c	/^ecs_os_thread_t posix_thread_new($/;"	f	typeref:typename:ecs_os_thread_t	file:
posix_thread_new	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^ecs_os_thread_t posix_thread_new($/;"	f	typeref:typename:ecs_os_thread_t	file:
posix_time_initialized	lib/flecs/flecs.c	/^static bool posix_time_initialized;$/;"	v	typeref:typename:bool	file:
posix_time_initialized	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^static bool posix_time_initialized;$/;"	v	typeref:typename:bool	file:
posix_time_now	lib/flecs/flecs.c	/^uint64_t posix_time_now(void) {$/;"	f	typeref:typename:uint64_t	file:
posix_time_now	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^uint64_t posix_time_now(void) {$/;"	f	typeref:typename:uint64_t	file:
posix_time_setup	lib/flecs/flecs.c	/^void posix_time_setup(void) {$/;"	f	typeref:typename:void	file:
posix_time_setup	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^void posix_time_setup(void) {$/;"	f	typeref:typename:void	file:
posix_time_start	lib/flecs/flecs.c	/^static uint64_t posix_time_start;$/;"	v	typeref:typename:uint64_t	file:
posix_time_start	lib/flecs/src/addons/os_api_impl/posix_impl.inl	/^static uint64_t posix_time_start;$/;"	v	typeref:typename:uint64_t	file:
post_frame_actions	lib/flecs/flecs.c	/^    ecs_vector_t *post_frame_actions;$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_vector_t *	file:
post_frame_actions	lib/flecs/src/private_types.h	/^    ecs_vector_t *post_frame_actions;$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_vector_t *
power	lib/flecs/flecs.h	/^    int32_t power; \/* Power to apply to factor (e.g. "1", "3", "-9") *\/$/;"	m	struct:ecs_unit_translation_t	typeref:typename:int32_t
power	lib/flecs/include/flecs/addons/meta.h	/^    int32_t power; \/* Power to apply to factor (e.g. "1", "3", "-9") *\/$/;"	m	struct:ecs_unit_translation_t	typeref:typename:int32_t
pr	lib/uthash/tests/test79.c	/^static void pr(hs_t **hdpp)$/;"	f	typeref:typename:void	file:
precipitation	lib/flecs/examples/c/reflection/units/src/main.c	/^    double precipitation;$/;"	m	struct:__anon444de4d00108	typeref:typename:double	file:
precipitation	lib/flecs/examples/cpp/reflection/units/src/main.cpp	/^    double precipitation;$/;"	m	struct:WeatherStation	typeref:typename:double	file:
pred	lib/flecs/flecs.c	/^    int32_t pred;$/;"	m	struct:ecs_rule_term_vars_t	typeref:typename:int32_t	file:
pred	lib/flecs/flecs.c	/^    } pred;$/;"	m	struct:ecs_rule_pair_t	typeref:union:ecs_rule_pair_t::__anona642c005050a	file:
pred	lib/flecs/flecs.h	/^    Base& pred() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
pred	lib/flecs/flecs.h	/^    Base& pred(const char *n) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
pred	lib/flecs/flecs.h	/^    ecs_term_id_t pred;         \/* Predicate of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_term_id_t
pred	lib/flecs/include/flecs.h	/^    ecs_term_id_t pred;         \/* Predicate of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_term_id_t
pred	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& pred() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
pred	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& pred(const char *n) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
pred	lib/flecs/src/addons/rules.c	/^    int32_t pred;$/;"	m	struct:ecs_rule_term_vars_t	typeref:typename:int32_t	file:
pred	lib/flecs/src/addons/rules.c	/^    } pred;$/;"	m	struct:ecs_rule_pair_t	typeref:union:ecs_rule_pair_t::__anon218568c2010a	file:
pred_is_subj	lib/flecs/flecs.c	/^bool pred_is_subj($/;"	f	typeref:typename:bool	file:
pred_is_subj	lib/flecs/src/addons/plecs.c	/^bool pred_is_subj($/;"	f	typeref:typename:bool	file:
pred_wildcard	lib/flecs/flecs.c	/^    bool pred_wildcard; \/* Is predicate a wildcard *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:bool	file:
pred_wildcard	lib/flecs/src/addons/rules.c	/^    bool pred_wildcard; \/* Is predicate a wildcard *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:bool	file:
prefab	lib/flecs/flecs.h	/^inline flecs::entity world::prefab(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
prefab	lib/flecs/flecs.h	/^inline flecs::entity world::prefab(const char *name) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
prefab	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity world::prefab(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
prefab	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity world::prefab(const char *name) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
prefix	lib/flecs/flecs.h	/^    ecs_entity_t prefix; \/* Order of magnitude prefix relative to derived *\/$/;"	m	struct:EcsUnit	typeref:typename:ecs_entity_t
prefix	lib/flecs/flecs.h	/^    ecs_entity_t prefix;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_t
prefix	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t prefix; \/* Order of magnitude prefix relative to derived *\/$/;"	m	struct:EcsUnit	typeref:typename:ecs_entity_t
prefix	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t prefix;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_t
preinstall	cmake-build-debug/Makefile	/^preinstall: all$/;"	t
preinstall	cmake-build-debug/lib/flecs/Makefile	/^preinstall: all$/;"	t
preinstall	cmake-build-debug/lib/libflint/Makefile	/^preinstall: all$/;"	t
preinstall	cmake-build-release/Makefile	/^preinstall: all$/;"	t
preinstall	cmake-build-release/lib/flecs/Makefile	/^preinstall: all$/;"	t
preinstall	cmake-build-release/lib/libflint/Makefile	/^preinstall: all$/;"	t
preinstall/fast	cmake-build-debug/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	cmake-build-debug/lib/flecs/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	cmake-build-debug/lib/libflint/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	cmake-build-release/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	cmake-build-release/lib/flecs/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	cmake-build-release/lib/libflint/Makefile	/^preinstall\/fast:$/;"	t
prepare_predicate	lib/flecs/flecs.c	/^void prepare_predicate($/;"	f	typeref:typename:void	file:
prepare_predicate	lib/flecs/src/addons/rules.c	/^void prepare_predicate($/;"	f	typeref:typename:void	file:
pressure	lib/flecs/examples/c/reflection/units/src/main.c	/^    double pressure;$/;"	m	struct:__anon444de4d00108	typeref:typename:double	file:
pressure	lib/flecs/examples/cpp/reflection/units/src/main.cpp	/^    double pressure;$/;"	m	struct:WeatherStation	typeref:typename:double	file:
pressure	lib/flecs/flecs.h	/^struct pressure {$/;"	s	struct:flecs::units
pressure	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct pressure {$/;"	s	struct:flecs::units
prev	lib/flecs/flecs.c	/^    ecs_query_table_node_t *next, *prev;$/;"	m	struct:ecs_query_table_node_t	typeref:typename:ecs_query_table_node_t *	file:
prev	lib/flecs/flecs.c	/^    int32_t prev;           \/* Prev node in list *\/$/;"	m	struct:flecs_switch_node_t	typeref:typename:int32_t	file:
prev	lib/flecs/flecs.c	/^    struct ecs_graph_edge_hdr_t *prev;$/;"	m	struct:ecs_graph_edge_hdr_t	typeref:struct:ecs_graph_edge_hdr_t *	file:
prev	lib/flecs/flecs.c	/^    struct ecs_table_cache_hdr_t *prev, *next;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:struct:ecs_table_cache_hdr_t *	file:
prev	lib/flecs/flecs.h	/^    ecs_query_table_node_t *node, *prev;$/;"	m	struct:ecs_query_iter_t	typeref:typename:ecs_query_table_node_t *
prev	lib/flecs/include/flecs/private/api_types.h	/^    ecs_query_table_node_t *node, *prev;$/;"	m	struct:ecs_query_iter_t	typeref:typename:ecs_query_table_node_t *
prev	lib/flecs/include/flecs/private/switch_list.h	/^    int32_t prev;           \/* Prev node in list *\/$/;"	m	struct:flecs_switch_node_t	typeref:typename:int32_t
prev	lib/flecs/src/private_types.h	/^    ecs_query_table_node_t *next, *prev;$/;"	m	struct:ecs_query_table_node_t	typeref:typename:ecs_query_table_node_t *
prev	lib/flecs/src/private_types.h	/^    struct ecs_graph_edge_hdr_t *prev;$/;"	m	struct:ecs_graph_edge_hdr_t	typeref:struct:ecs_graph_edge_hdr_t *
prev	lib/flecs/src/private_types.h	/^    struct ecs_table_cache_hdr_t *prev, *next;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:struct:ecs_table_cache_hdr_t *
prev	lib/libflint/include/lflinkedlist.h	/^    struct ListNode* prev;$/;"	m	struct:ListNode	typeref:struct:ListNode *
prev	lib/uthash/include/uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle	typeref:typename:void *
prev	lib/uthash/src/uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle	typeref:typename:void *
prev	lib/uthash/tests/test25.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test26.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test27.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test28.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test29.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test30.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test31.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test32.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test33.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test34.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test41.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test42.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test56.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test63.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test64.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test68.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test69.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test70.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test71.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test72.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test73.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test86.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test91.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev	lib/uthash/tests/test94.c	/^    struct el *next, *prev;$/;"	m	struct:el	typeref:struct:el *	file:
prev_list2	lib/uthash/tests/test94.c	/^    struct el *next_list2, *prev_list2;$/;"	m	struct:el	typeref:struct:el *	file:
prev_match_count	lib/flecs/flecs.c	/^    int32_t prev_match_count;   \/* Used to track if sorting is needed *\/$/;"	m	struct:ecs_query_t	typeref:typename:int32_t	file:
prev_match_count	lib/flecs/src/private_types.h	/^    int32_t prev_match_count;   \/* Used to track if sorting is needed *\/$/;"	m	struct:ecs_query_t	typeref:typename:int32_t
primitive_kind_t	lib/flecs/flecs.h	/^using primitive_kind_t = ecs_primitive_kind_t;$/;"	t	namespace:flecs	typeref:typename:ecs_primitive_kind_t
primitive_kind_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using primitive_kind_t = ecs_primitive_kind_t;$/;"	t	namespace:flecs	typeref:typename:ecs_primitive_kind_t
primitive_to_op_kind	lib/flecs/flecs.c	/^ecs_meta_type_op_kind_t primitive_to_op_kind(ecs_primitive_kind_t kind) {$/;"	f	typeref:typename:ecs_meta_type_op_kind_t	file:
primitive_to_op_kind	lib/flecs/src/addons/meta/serialized.c	/^ecs_meta_type_op_kind_t primitive_to_op_kind(ecs_primitive_kind_t kind) {$/;"	f	typeref:typename:ecs_meta_type_op_kind_t	file:
print_counter	lib/flecs/flecs.c	/^void print_counter($/;"	f	typeref:typename:void	file:
print_counter	lib/flecs/src/addons/stats.c	/^void print_counter($/;"	f	typeref:typename:void	file:
print_gauge	lib/flecs/flecs.c	/^void print_gauge($/;"	f	typeref:typename:void	file:
print_gauge	lib/flecs/src/addons/stats.c	/^void print_gauge($/;"	f	typeref:typename:void	file:
print_items	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^void print_items(flecs::entity container) {$/;"	f	typeref:typename:void
print_ll	lib/libflint/tests/tests.c	/^void print_ll(List* list) {$/;"	f	typeref:typename:void
print_node	lib/libflint/src/lfbinarytree.c	/^void print_node(char* prefix, BinTreeNode *node, int is_left, void (*pfunc)(void* data)) {$/;"	f	typeref:typename:void
print_position	lib/flecs/examples/c/queries/sorting/src/main.c	/^void print_position(ecs_iter_t *it) {$/;"	f	typeref:typename:void
print_query	lib/flecs/examples/c/queries/sorting/src/main.c	/^void print_query(ecs_world_t *ecs, ecs_query_t *q) {$/;"	f	typeref:typename:void
print_query	lib/flecs/examples/cpp/queries/sorting/src/main.cpp	/^void print_query(flecs::query<Position>& q) {$/;"	f	typeref:typename:void
print_users	lib/uthash/tests/example.c	/^void print_users()$/;"	f	typeref:typename:void
print_value	lib/flecs/examples/c/reflection/units/src/main.c	/^void print_value(ecs_world_t *world, const ecs_meta_cursor_t *cur) {$/;"	f	typeref:typename:void
print_value	lib/flecs/examples/cpp/reflection/units/src/main.cpp	/^void print_value(const flecs::meta::cursor& cur) {$/;"	f	typeref:typename:void
print_value	lib/flecs/flecs.c	/^void print_value($/;"	f	typeref:typename:void	file:
print_value	lib/flecs/src/addons/stats.c	/^void print_value($/;"	f	typeref:typename:void	file:
printtable	lib/uthash/tests/test87.c	/^void printtable(const hstruct_t *hTable)$/;"	f	typeref:typename:void
priv	lib/flecs/flecs.h	/^    ecs_iter_private_t priv;      \/* Private data *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_private_t
priv	lib/flecs/include/flecs/private/api_types.h	/^    ecs_iter_private_t priv;      \/* Private data *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_iter_private_t
probe_has_entity	lib/flecs/test/api/src/util.c	/^void probe_has_entity(Probe *probe, ecs_entity_t e) {$/;"	f	typeref:typename:void
probe_iter	lib/flecs/test/api/src/util.c	/^void probe_iter($/;"	f	typeref:typename:void
probe_system_w_ctx	lib/flecs/test/api/src/util.c	/^void probe_system_w_ctx($/;"	f	typeref:typename:void
proceed	lib/uthash/tests/all_funcs	/^function proceed {$/;"	f
process_signature	lib/flecs/flecs.c	/^void process_signature($/;"	f	typeref:typename:void	file:
process_signature	lib/flecs/src/query.c	/^void process_signature($/;"	f	typeref:typename:void	file:
producer	lib/uthash/tests/lru_cache/main.c	/^void *producer(void *arg)$/;"	f	typeref:typename:void *
progress	lib/flecs/flecs.h	/^inline bool world::progress(FLECS_FLOAT delta_time) const {$/;"	f	class:flecs::world	typeref:typename:bool
progress	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline bool world::progress(FLECS_FLOAT delta_time) const {$/;"	f	class:flecs::world	typeref:typename:bool
ptr	lib/flecs/flecs.c	/^    const void *ptr;$/;"	m	struct:sort_helper_t	typeref:typename:const void *	file:
ptr	lib/flecs/flecs.c	/^  union { const void *ptr; size_t i; } u;     \/* needed for Mac Powerbook G4 *\/$/;"	m	union:hashlittle2::__anona642c005030a	typeref:typename:const void *	file:
ptr	lib/flecs/flecs.h	/^    T* ptr() {$/;"	f	struct:flecs::array	typeref:typename:T *
ptr	lib/flecs/flecs.h	/^    const void *ptr;        \/* Cached ptr *\/$/;"	m	struct:ecs_ref_t	typeref:typename:const void *
ptr	lib/flecs/flecs.h	/^    ecs_vector_t *ptr() {$/;"	f	class:flecs::vector	typeref:typename:ecs_vector_t *
ptr	lib/flecs/flecs.h	/^    void *ptr;                \/* Pointer to the value being iterated *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:void *
ptr	lib/flecs/flecs.h	/^    void *ptr;$/;"	m	struct:ecs_term_iter_t	typeref:typename:void *
ptr	lib/flecs/flecs.h	/^    void *ptr;$/;"	m	struct:flecs::_::term_ptr	typeref:typename:void *
ptr	lib/flecs/flecs.h	/^    void ptr(ecs_vector_t *ptr) {$/;"	f	class:flecs::vector	typeref:typename:void
ptr	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    void *ptr;$/;"	m	struct:flecs::_::term_ptr	typeref:typename:void *
ptr	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    T* ptr() {$/;"	f	struct:flecs::array	typeref:typename:T *
ptr	lib/flecs/include/flecs/addons/meta.h	/^    void *ptr;                \/* Pointer to the value being iterated *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:void *
ptr	lib/flecs/include/flecs/private/api_types.h	/^    const void *ptr;        \/* Cached ptr *\/$/;"	m	struct:ecs_ref_t	typeref:typename:const void *
ptr	lib/flecs/include/flecs/private/api_types.h	/^    void *ptr;$/;"	m	struct:ecs_term_iter_t	typeref:typename:void *
ptr	lib/flecs/include/flecs/private/vector.h	/^    ecs_vector_t *ptr() {$/;"	f	class:flecs::vector	typeref:typename:ecs_vector_t *
ptr	lib/flecs/include/flecs/private/vector.h	/^    void ptr(ecs_vector_t *ptr) {$/;"	f	class:flecs::vector	typeref:typename:void
ptr	lib/flecs/src/datastructures/hash.c	/^  union { const void *ptr; size_t i; } u;     \/* needed for Mac Powerbook G4 *\/$/;"	m	union:hashlittle2::__anon7c7af5a0010a	typeref:typename:const void *	file:
ptr	lib/flecs/src/query.c	/^    const void *ptr;$/;"	m	struct:sort_helper_t	typeref:typename:const void *	file:
ptr_from_helper	lib/flecs/flecs.c	/^const void* ptr_from_helper($/;"	f	typeref:typename:const void *	file:
ptr_from_helper	lib/flecs/src/query.c	/^const void* ptr_from_helper($/;"	f	typeref:typename:const void *	file:
ptrs	lib/flecs/flecs.h	/^    void **ptrs;                  \/* Pointers to components. Array if from this, pointer if not/;"	m	struct:ecs_iter_t	typeref:typename:void **
ptrs	lib/flecs/flecs.h	/^    void *ptrs[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:void * []
ptrs	lib/flecs/include/flecs/private/api_types.h	/^    void **ptrs;                  \/* Pointers to components. Array if from this, pointer if not/;"	m	struct:ecs_iter_t	typeref:typename:void **
ptrs	lib/flecs/include/flecs/private/api_types.h	/^    void *ptrs[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:void * []
ptrs_alloc	lib/flecs/flecs.h	/^    bool ptrs_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
ptrs_alloc	lib/flecs/include/flecs/private/api_types.h	/^    bool ptrs_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
pub	lib/flecs/flecs.c	/^    ecs_http_connection_t pub;$/;"	m	struct:__anona642c0050b08	typeref:typename:ecs_http_connection_t	file:
pub	lib/flecs/flecs.c	/^    ecs_http_request_t pub;$/;"	m	struct:__anona642c0050c08	typeref:typename:ecs_http_request_t	file:
pub	lib/flecs/src/addons/http.c	/^    ecs_http_connection_t pub;$/;"	m	struct:__anonc2d932d70308	typeref:typename:ecs_http_connection_t	file:
pub	lib/flecs/src/addons/http.c	/^    ecs_http_request_t pub;$/;"	m	struct:__anonc2d932d70408	typeref:typename:ecs_http_request_t	file:
push	lib/flecs/flecs.h	/^    int push() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
push	lib/flecs/flecs.h	/^inline void push() {$/;"	f	namespace:flecs::log	typeref:typename:void
push	lib/flecs/include/flecs/addons/cpp/log.hpp	/^inline void push() {$/;"	f	namespace:flecs::log	typeref:typename:void
push	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int push() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
push_columns	lib/flecs/flecs.c	/^void push_columns($/;"	f	typeref:typename:void	file:
push_columns	lib/flecs/src/addons/rules.c	/^void push_columns($/;"	f	typeref:typename:void	file:
push_frame	lib/flecs/flecs.c	/^int32_t push_frame($/;"	f	typeref:typename:int32_t	file:
push_frame	lib/flecs/src/addons/rules.c	/^int32_t push_frame($/;"	f	typeref:typename:int32_t	file:
push_registers	lib/flecs/flecs.c	/^void push_registers($/;"	f	typeref:typename:void	file:
push_registers	lib/flecs/src/addons/rules.c	/^void push_registers($/;"	f	typeref:typename:void	file:
push_screen	src/screens/manager.c	/^void push_screen(struct Screen *s) {$/;"	f	typeref:typename:void
push_type	lib/flecs/flecs.c	/^int push_type($/;"	f	typeref:typename:int	file:
push_type	lib/flecs/src/addons/meta/cursor.c	/^int push_type($/;"	f	typeref:typename:int	file:
pv_probe	lib/flecs/test/api/src/SingleThreadStaging.c	/^static Probe pv_probe;$/;"	v	typeref:typename:Probe	file:
pv_probe	lib/flecs/test/api/src/SystemOnSet.c	/^static Probe pv_probe;$/;"	v	typeref:typename:Probe	file:
q	lib/flecs/test/cpp_api/src/Query.cpp	/^        flecs::query<Position, Velocity> q;$/;"	m	struct:Query_query_each_from_component::QueryComponent	typeref:typename:flecs::query<Position,Velocity>	file:
q	lib/flecs/test/cpp_api/src/Query.cpp	/^        flecs::query<Position, Velocity> q;$/;"	m	struct:Query_query_iter_from_component::QueryComponent	typeref:typename:flecs::query<Position,Velocity>	file:
q_result	lib/flecs/test/api/src/Pipeline.c	/^static ecs_query_t *q_result;$/;"	v	typeref:typename:ecs_query_t *	file:
qsort_array	lib/flecs/flecs.c	/^void qsort_array($/;"	f	typeref:typename:void	file:
qsort_array	lib/flecs/src/query.c	/^void qsort_array($/;"	f	typeref:typename:void	file:
qsort_partition	lib/flecs/flecs.c	/^int32_t qsort_partition($/;"	f	typeref:typename:int32_t	file:
qsort_partition	lib/flecs/src/query.c	/^int32_t qsort_partition($/;"	f	typeref:typename:int32_t	file:
quantity	lib/flecs/flecs.h	/^    ecs_entity_t quantity;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_t
quantity	lib/flecs/flecs.h	/^Self& quantity() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
quantity	lib/flecs/flecs.h	/^Self& quantity(flecs::entity_t quantity) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
quantity	lib/flecs/include/flecs/addons/cpp/mixins/meta/entity_builder.inl	/^Self& quantity() {$/;"	f	typeref:typename:Self &
quantity	lib/flecs/include/flecs/addons/cpp/mixins/meta/entity_builder.inl	/^Self& quantity(flecs::entity_t quantity) {$/;"	f	typeref:typename:Self &
quantity	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t quantity;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_entity_t
queries	lib/flecs/flecs.c	/^    ecs_sparse_t *queries;         \/* sparse<query_id, ecs_query_t> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *	file:
queries	lib/flecs/flecs.c	/^    ecs_vector_t *queries;       \/* vector<ecs_query_t*> *\/$/;"	m	struct:ecs_monitor_t	typeref:typename:ecs_vector_t *	file:
queries	lib/flecs/src/private_types.h	/^    ecs_sparse_t *queries;         \/* sparse<query_id, ecs_query_t> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *
queries	lib/flecs/src/private_types.h	/^    ecs_vector_t *queries;       \/* vector<ecs_query_t*> *\/$/;"	m	struct:ecs_monitor_t	typeref:typename:ecs_vector_t *
query	lib/flecs/flecs.c	/^    ecs_query_t *query;             \/* System query *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_query_t *	file:
query	lib/flecs/flecs.c	/^    ecs_query_t *query;$/;"	m	struct:EcsPipelineQuery	typeref:typename:ecs_query_t *	file:
query	lib/flecs/flecs.c	/^    ecs_query_t *query;$/;"	m	struct:ecs_table_event_t	typeref:typename:ecs_query_t *	file:
query	lib/flecs/flecs.h	/^        ecs_query_iter_t query;$/;"	m	union:ecs_iter_private_t::__anona642c00a010a	typeref:typename:ecs_query_iter_t
query	lib/flecs/flecs.h	/^    ecs_query_desc_t query;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_query_desc_t
query	lib/flecs/flecs.h	/^    ecs_query_t *query;$/;"	m	struct:EcsQuery	typeref:typename:ecs_query_t *
query	lib/flecs/flecs.h	/^    ecs_query_t *query;$/;"	m	struct:ecs_query_iter_t	typeref:typename:ecs_query_t *
query	lib/flecs/flecs.h	/^    flecs::query<> query() const {$/;"	f	struct:flecs::system	typeref:typename:flecs::query<>
query	lib/flecs/flecs.h	/^inline flecs::query<Comps...> world::query(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::query<Comps...>
query	lib/flecs/flecs.h	/^struct query final : query_base, iterable<Components...> {$/;"	s	namespace:flecs
query	lib/flecs/include/flecs.h	/^    ecs_query_t *query;$/;"	m	struct:EcsQuery	typeref:typename:ecs_query_t *
query	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^inline flecs::query<Comps...> world::query(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::query<Comps...>
query	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^struct query final : query_base, iterable<Components...> {$/;"	s	namespace:flecs
query	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    flecs::query<> query() const {$/;"	f	struct:flecs::system	typeref:typename:flecs::query<>
query	lib/flecs/include/flecs/addons/system.h	/^    ecs_query_desc_t query;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_query_desc_t
query	lib/flecs/include/flecs/private/api_types.h	/^        ecs_query_iter_t query;$/;"	m	union:ecs_iter_private_t::__anon49db2d84010a	typeref:typename:ecs_query_iter_t
query	lib/flecs/include/flecs/private/api_types.h	/^    ecs_query_t *query;$/;"	m	struct:ecs_query_iter_t	typeref:typename:ecs_query_t *
query	lib/flecs/src/addons/pipeline/pipeline.h	/^    ecs_query_t *query;$/;"	m	struct:EcsPipelineQuery	typeref:typename:ecs_query_t *
query	lib/flecs/src/addons/system/system.h	/^    ecs_query_t *query;             \/* System query *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_query_t *
query	lib/flecs/src/private_types.h	/^    ecs_query_t *query;$/;"	m	struct:ecs_table_event_t	typeref:typename:ecs_query_t *
query_base	lib/flecs/flecs.h	/^    query_base()$/;"	f	struct:flecs::query_base
query_base	lib/flecs/flecs.h	/^    query_base(world_t *world, ecs_query_desc_t *desc) $/;"	f	struct:flecs::query_base
query_base	lib/flecs/flecs.h	/^    query_base(world_t *world, query_t *query = nullptr)$/;"	f	struct:flecs::query_base
query_base	lib/flecs/flecs.h	/^struct query_base {$/;"	s	namespace:flecs
query_base	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    query_base()$/;"	f	struct:flecs::query_base
query_base	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    query_base(world_t *world, ecs_query_desc_t *desc) $/;"	f	struct:flecs::query_base
query_base	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    query_base(world_t *world, query_t *query = nullptr)$/;"	f	struct:flecs::query_base
query_base	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^struct query_base {$/;"	s	namespace:flecs
query_builder	lib/flecs/flecs.h	/^    query_builder(flecs::world_t* world)$/;"	f	struct:flecs::query_builder
query_builder	lib/flecs/flecs.h	/^inline flecs::query_builder<Comps...> world::query_builder(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::query_builder<Comps...>
query_builder	lib/flecs/flecs.h	/^struct query_builder final : _::query_builder_base<Components...> {$/;"	s	namespace:flecs
query_builder	lib/flecs/include/flecs/addons/cpp/mixins/query/builder.hpp	/^    query_builder(flecs::world_t* world)$/;"	f	struct:flecs::query_builder
query_builder	lib/flecs/include/flecs/addons/cpp/mixins/query/builder.hpp	/^struct query_builder final : _::query_builder_base<Components...> {$/;"	s	namespace:flecs
query_builder	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^inline flecs::query_builder<Comps...> world::query_builder(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::query_builder<Comps...>
query_builder_base	lib/flecs/flecs.h	/^    using query_builder_base = builder<$/;"	t	namespace:flecs::_	typeref:typename:builder<query,ecs_query_desc_t,query_builder<Components...>,query_builder_i,Components...>
query_builder_base	lib/flecs/include/flecs/addons/cpp/mixins/query/builder.hpp	/^    using query_builder_base = builder<$/;"	t	namespace:flecs::_	typeref:typename:builder<query,ecs_query_desc_t,query_builder<Components...>,query_builder_i,Components...>
query_builder_i	lib/flecs/flecs.h	/^    query_builder_i()$/;"	f	struct:flecs::query_builder_i
query_builder_i	lib/flecs/flecs.h	/^    query_builder_i(ecs_query_desc_t *desc, int32_t term_index = 0) $/;"	f	struct:flecs::query_builder_i
query_builder_i	lib/flecs/flecs.h	/^struct query_builder_i : filter_builder_i<Base, Components ...> {$/;"	s	namespace:flecs
query_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    query_builder_i()$/;"	f	struct:flecs::query_builder_i
query_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^    query_builder_i(ecs_query_desc_t *desc, int32_t term_index = 0) $/;"	f	struct:flecs::query_builder_i
query_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/query/builder_i.hpp	/^struct query_builder_i : filter_builder_i<Base, Components ...> {$/;"	s	namespace:flecs
query_count	lib/flecs/flecs.h	/^    ecs_gauge_t query_count;                  \/* Number of queries *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
query_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t query_count;                  \/* Number of queries *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
query_group_by	lib/flecs/flecs.c	/^void query_group_by($/;"	f	typeref:typename:void	file:
query_group_by	lib/flecs/src/query.c	/^void query_group_by($/;"	f	typeref:typename:void	file:
query_iter_cursor_t	lib/flecs/flecs.c	/^} query_iter_cursor_t;$/;"	t	typeref:struct:__anona642c0050e08	file:
query_iter_cursor_t	lib/flecs/src/query.c	/^} query_iter_cursor_t;$/;"	t	typeref:struct:__anon8da83e450208	file:
query_iter_init	lib/flecs/flecs.c	/^void query_iter_init($/;"	f	typeref:typename:void	file:
query_iter_init	lib/flecs/src/query.c	/^void query_iter_init($/;"	f	typeref:typename:void	file:
query_offset	lib/flecs/flecs.c	/^    int32_t query_offset;$/;"	m	struct:__anona642c0050a08	typeref:typename:int32_t	file:
query_offset	lib/flecs/src/addons/http.c	/^    int32_t query_offset;$/;"	m	struct:__anonc2d932d70208	typeref:typename:int32_t	file:
query_on_event	lib/flecs/flecs.c	/^void query_on_event($/;"	f	typeref:typename:void	file:
query_on_event	lib/flecs/src/query.c	/^void query_on_event($/;"	f	typeref:typename:void	file:
query_order_by	lib/flecs/flecs.c	/^void query_order_by($/;"	f	typeref:typename:void	file:
query_order_by	lib/flecs/src/query.c	/^void query_order_by($/;"	f	typeref:typename:void	file:
query_stats	lib/flecs/flecs.h	/^    ecs_query_stats_t query_stats;$/;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_query_stats_t
query_stats	lib/flecs/include/flecs/addons/stats.h	/^    ecs_query_stats_t query_stats;$/;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_query_stats_t
query_t	lib/flecs/flecs.h	/^using query_t = ecs_query_t;$/;"	t	namespace:flecs	typeref:typename:ecs_query_t
query_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using query_t = ecs_query_t;$/;"	t	namespace:flecs	typeref:typename:ecs_query_t
query_table_free	lib/flecs/flecs.c	/^void query_table_free($/;"	f	typeref:typename:void	file:
query_table_free	lib/flecs/src/query.c	/^void query_table_free($/;"	f	typeref:typename:void	file:
quit	lib/flecs/flecs.h	/^    void quit() {$/;"	f	struct:flecs::world	typeref:typename:void
quit	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void quit() {$/;"	f	struct:flecs::world	typeref:typename:void
quit_flag	include/gamestate.h	/^    int quit_flag;$/;"	m	struct:GameState	typeref:typename:int
quit_workers	lib/flecs/flecs.c	/^    bool quit_workers;           \/* Signals worker threads to quit *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool	file:
quit_workers	lib/flecs/src/private_types.h	/^    bool quit_workers;           \/* Signals worker threads to quit *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool
r	lib/flecs/test/api/include/api.h	/^    float r;$/;"	m	struct:Color	typeref:typename:float
r_in	lib/flecs/flecs.c	/^    int32_t r_in;               \/* Optional In\/Out registers *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
r_in	lib/flecs/src/addons/rules.c	/^    int32_t r_in;               \/* Optional In\/Out registers *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
r_out	lib/flecs/flecs.c	/^    int32_t r_out;$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
r_out	lib/flecs/src/addons/rules.c	/^    int32_t r_out;$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
radialGradient12751	lib/uthash/doc/banner.svg	/^       gradientUnits="userSpaceOnUse" \/>$/;"	d
radialGradient12751	lib/uthash/doc/banner.svg	/^       gradientUnits="userSpaceOnUse" \/>$/;"	i
radialGradient12751	lib/uthash/doc/uthash-mini.svg	/^       gradientUnits="userSpaceOnUse" \/>$/;"	d
radialGradient12751	lib/uthash/doc/uthash-mini.svg	/^       gradientUnits="userSpaceOnUse" \/>$/;"	i
radialGradient3996	lib/uthash/doc/banner.svg	/^       r="78.257812" \/>$/;"	d
radialGradient3996	lib/uthash/doc/banner.svg	/^       r="78.257812" \/>$/;"	i
radialGradient3996	lib/uthash/doc/uthash-mini.svg	/^       r="78.257812" \/>$/;"	d
radialGradient3996	lib/uthash/doc/uthash-mini.svg	/^       r="78.257812" \/>$/;"	i
range_check_enabled	lib/flecs/flecs.c	/^    bool range_check_enabled;$/;"	m	struct:ecs_world_t	typeref:typename:bool	file:
range_check_enabled	lib/flecs/src/private_types.h	/^    bool range_check_enabled;$/;"	m	struct:ecs_world_t	typeref:typename:bool
range_iterator	lib/flecs/flecs.h	/^    explicit range_iterator(T value)$/;"	f	struct:flecs::_::range_iterator
range_iterator	lib/flecs/flecs.h	/^struct range_iterator$/;"	s	namespace:flecs::_
range_iterator	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    explicit range_iterator(T value)$/;"	f	struct:flecs::_::range_iterator
range_iterator	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^struct range_iterator$/;"	s	namespace:flecs::_
rate	lib/flecs/flecs.h	/^    Base& rate(const entity_t tick_source, int32_t rate) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
rate	lib/flecs/flecs.h	/^    Base& rate(int32_t rate) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
rate	lib/flecs/flecs.h	/^    ecs_gauge_t rate;                          \/* Keep track of deltas too *\/$/;"	m	struct:ecs_counter_t	typeref:typename:ecs_gauge_t
rate	lib/flecs/flecs.h	/^    int32_t rate;                \/* Rate of the rate filter *\/$/;"	m	struct:EcsRateFilter	typeref:typename:int32_t
rate	lib/flecs/flecs.h	/^    int32_t rate;$/;"	m	struct:ecs_system_desc_t	typeref:typename:int32_t
rate	lib/flecs/flecs.h	/^inline void system::rate(int32_t rate) {$/;"	f	class:flecs::system	typeref:typename:void
rate	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& rate(const entity_t tick_source, int32_t rate) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
rate	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& rate(int32_t rate) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
rate	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline void system::rate(int32_t rate) {$/;"	f	class:flecs::system	typeref:typename:void
rate	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t rate;                          \/* Keep track of deltas too *\/$/;"	m	struct:ecs_counter_t	typeref:typename:ecs_gauge_t
rate	lib/flecs/include/flecs/addons/system.h	/^    int32_t rate;$/;"	m	struct:ecs_system_desc_t	typeref:typename:int32_t
rate	lib/flecs/include/flecs/addons/timer.h	/^    int32_t rate;                \/* Rate of the rate filter *\/$/;"	m	struct:EcsRateFilter	typeref:typename:int32_t
raw_id	lib/flecs/flecs.h	/^    flecs::id_t raw_id() const {$/;"	f	struct:flecs::id	typeref:typename:flecs::id_t
raw_id	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    flecs::id_t raw_id() const {$/;"	f	struct:flecs::id	typeref:typename:flecs::id_t
rc	lib/flecs/flecs.c	/^    int32_t rc;$/;"	m	struct:__anona642c0050808	typeref:typename:int32_t	file:
rc	lib/flecs/src/addons/rest.c	/^    int32_t rc;$/;"	m	struct:__anond91cde350108	typeref:typename:int32_t	file:
rdf	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	n	uri:http://www.w3.org/1999/02/22-rdf-syntax-ns#
rdf	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	n	uri:http://www.w3.org/1999/02/22-rdf-syntax-ns#
read_mem	lib/uthash/tests/hashscan.c	/^static int read_mem(void *dst, int fd, off_t start, size_t len)$/;"	f	typeref:typename:int	file:
read_mem	lib/uthash/tests/hashscan.c	/^static int read_mem(void *dst, pid_t pid, void *start, size_t len)$/;"	f	typeref:typename:int	file:
real_free	lib/uthash/tests/test6.c	/^static void real_free(void *p)$/;"	f	typeref:typename:void	file:
real_malloc	lib/uthash/tests/test6.c	/^static void *real_malloc(size_t n)$/;"	f	typeref:typename:void *	file:
real_world	lib/flecs/flecs.h	/^    ecs_world_t *real_world;      \/* Actual world. This differs from world when in staged mode /;"	m	struct:ecs_iter_t	typeref:typename:ecs_world_t *
real_world	lib/flecs/include/flecs/private/api_types.h	/^    ecs_world_t *real_world;      \/* Actual world. This differs from world when in staged mode /;"	m	struct:ecs_iter_t	typeref:typename:ecs_world_t *
realloc	lib/uthash/tests/test6.c	/^#define realloc /;"	d	file:
realloc_	lib/flecs/flecs.h	/^    ecs_os_api_realloc_t realloc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_realloc_t
realloc_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_realloc_t realloc_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_realloc_t
rebuild_cache	cmake-build-debug/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	cmake-build-debug/lib/flecs/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	cmake-build-debug/lib/libflint/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	cmake-build-release/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	cmake-build-release/lib/flecs/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	cmake-build-release/lib/libflint/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	cmake-build-debug/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	cmake-build-debug/lib/flecs/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	cmake-build-debug/lib/libflint/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	cmake-build-release/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	cmake-build-release/lib/flecs/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	cmake-build-release/lib/libflint/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_count	lib/flecs/flecs.c	/^    int32_t rebuild_count;$/;"	m	struct:EcsPipelineQuery	typeref:typename:int32_t	file:
rebuild_count	lib/flecs/flecs.h	/^    int32_t rebuild_count; \/* Number of times pipeline has rebuilt *\/$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:int32_t
rebuild_count	lib/flecs/include/flecs/addons/stats.h	/^    int32_t rebuild_count; \/* Number of times pipeline has rebuilt *\/$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:int32_t
rebuild_count	lib/flecs/src/addons/pipeline/pipeline.h	/^    int32_t rebuild_count;$/;"	m	struct:EcsPipelineQuery	typeref:typename:int32_t
record	lib/flecs/flecs.c	/^    ecs_record_t *record;       \/* Main stage record in entity index *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:ecs_record_t *	file:
record	lib/flecs/flecs.h	/^    ecs_record_t *record;   \/* Pointer to record, if in main stage *\/$/;"	m	struct:ecs_ref_t	typeref:typename:ecs_record_t *
record	lib/flecs/include/flecs/private/api_types.h	/^    ecs_record_t *record;   \/* Pointer to record, if in main stage *\/$/;"	m	struct:ecs_ref_t	typeref:typename:ecs_record_t *
record	lib/flecs/src/private_types.h	/^    ecs_record_t *record;       \/* Main stage record in entity index *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:ecs_record_t *
record_count	lib/flecs/flecs.c	/^    int32_t record_count;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t	file:
record_count	lib/flecs/src/private_types.h	/^    int32_t record_count;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t
record_counter	lib/flecs/flecs.c	/^#define record_counter(/;"	d	file:
record_counter	lib/flecs/src/addons/stats.c	/^#define record_counter(/;"	d	file:
record_gauge	lib/flecs/flecs.c	/^#define record_gauge(/;"	d	file:
record_gauge	lib/flecs/src/addons/stats.c	/^#define record_gauge(/;"	d	file:
record_key_t	lib/uthash/tests/test21.c	/^} record_key_t;$/;"	t	typeref:struct:__anonbb926b5d0108	file:
record_ptrs	lib/flecs/flecs.c	/^    ecs_vector_t *record_ptrs;   \/* Ptrs to records in main entity index *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_vector_t *	file:
record_ptrs	lib/flecs/src/private_types.h	/^    ecs_vector_t *record_ptrs;   \/* Ptrs to records in main entity index *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_vector_t *
record_t	lib/uthash/tests/test21.c	/^} record_t;$/;"	t	typeref:struct:__anonbb926b5d0208	file:
records	lib/flecs/flecs.c	/^    struct ecs_table_record_t *records; \/* Array with table records *\/$/;"	m	struct:ecs_table_t	typeref:struct:ecs_table_record_t *	file:
records	lib/flecs/src/private_types.h	/^    struct ecs_table_record_t *records; \/* Array with table records *\/$/;"	m	struct:ecs_table_t	typeref:struct:ecs_table_record_t *
rect10995	lib/uthash/doc/banner.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
rect10995	lib/uthash/doc/uthash-mini.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
rect3981	lib/uthash/doc/banner.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
rect3981	lib/uthash/doc/uthash-mini.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
rect3992	lib/uthash/doc/banner.svg	/^           id="rect3992" \/><\/flowRegion><flowPara$/;"	i
rect3992	lib/uthash/doc/uthash-mini.svg	/^           id="rect3992" \/><\/flowRegion><flowPara$/;"	i
rect4882	lib/uthash/doc/banner.svg	/^         style="opacity:1;fill:#9be5ea;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linec/;"	i
rect4882	lib/uthash/doc/uthash-mini.svg	/^         style="opacity:1;fill:#9be5ea;fill-opacity:1;stroke:black;stroke-width:2;stroke-linecap/;"	i
rect4886	lib/uthash/doc/banner.svg	/^         y="37.730064" \/>$/;"	i
rect4886	lib/uthash/doc/uthash-mini.svg	/^         y="37.730064" \/>$/;"	i
rect4896	lib/uthash/doc/banner.svg	/^         style="opacity:1;fill:#79c71a;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linec/;"	i
rect4896	lib/uthash/doc/uthash-mini.svg	/^         style="opacity:1;fill:#79c71a;fill-opacity:1;stroke:black;stroke-width:2;stroke-linecap/;"	i
rect4898	lib/uthash/doc/banner.svg	/^         y="9.7300644" \/>$/;"	i
rect4898	lib/uthash/doc/uthash-mini.svg	/^         y="9.7300644" \/>$/;"	i
rect4906	lib/uthash/doc/banner.svg	/^         style="opacity:1;fill:#1336e6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:/;"	i
rect4906	lib/uthash/doc/uthash-mini.svg	/^         style="opacity:1;fill:#1336e6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:/;"	i
rect5803	lib/uthash/doc/banner.svg	/^         style="opacity:1;fill:#e5e5e5;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linec/;"	i
rect5803	lib/uthash/doc/uthash-mini.svg	/^         style="opacity:1;fill:#e5e5e5;fill-opacity:1;stroke:black;stroke-width:2;stroke-linecap/;"	i
rect5805	lib/uthash/doc/banner.svg	/^         style="opacity:1;fill:#1336e6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:/;"	i
rect5805	lib/uthash/doc/uthash-mini.svg	/^         style="opacity:1;fill:#1336e6;fill-opacity:1;stroke:none;stroke-width:2;stroke-linecap:/;"	i
rect5809	lib/uthash/doc/banner.svg	/^         y="63.720913" \/>$/;"	i
rect5809	lib/uthash/doc/uthash-mini.svg	/^         y="63.720913" \/>$/;"	i
rect5811	lib/uthash/doc/banner.svg	/^         y="68.197968" \/>$/;"	i
rect5811	lib/uthash/doc/uthash-mini.svg	/^         y="68.197968" \/>$/;"	i
recv_request	lib/flecs/flecs.c	/^void recv_request($/;"	f	typeref:typename:void	file:
recv_request	lib/flecs/src/addons/http.c	/^void recv_request($/;"	f	typeref:typename:void	file:
redo	lib/flecs/flecs.h	/^    bool redo;$/;"	m	struct:ecs_rule_iter_t	typeref:typename:bool
redo	lib/flecs/include/flecs/private/api_types.h	/^    bool redo;$/;"	m	struct:ecs_rule_iter_t	typeref:typename:bool
ref	lib/flecs/flecs.h	/^    ref()$/;"	f	struct:flecs::ref
ref	lib/flecs/flecs.h	/^    ref(world_t *world, entity_t entity) $/;"	f	struct:flecs::ref
ref	lib/flecs/flecs.h	/^struct ref {$/;"	s	namespace:flecs
ref	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^    ref()$/;"	f	struct:flecs::ref
ref	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^    ref(world_t *world, entity_t entity) $/;"	f	struct:flecs::ref
ref	lib/flecs/include/flecs/addons/cpp/ref.hpp	/^struct ref {$/;"	s	namespace:flecs
ref_	lib/flecs/flecs.h	/^    type& ref_;$/;"	m	struct:flecs::pair	typeref:typename:type &
ref_	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    type& ref_;$/;"	m	struct:flecs::pair	typeref:typename:type &
ref_t	lib/flecs/flecs.h	/^using ref_t = ecs_ref_t;$/;"	t	namespace:flecs	typeref:typename:ecs_ref_t
ref_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using ref_t = ecs_ref_t;$/;"	t	namespace:flecs	typeref:typename:ecs_ref_t
refcount	lib/flecs/flecs.c	/^    int32_t refcount;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t	file:
refcount	lib/flecs/src/private_types.h	/^    int32_t refcount;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t
references	lib/flecs/flecs.c	/^    ecs_ref_t *references;    \/* Cached components for non-this terms *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_ref_t *	file:
references	lib/flecs/flecs.h	/^    ecs_ref_t *references;        \/* Cached refs to components (if iterating a cache) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_ref_t *
references	lib/flecs/include/flecs/private/api_types.h	/^    ecs_ref_t *references;        \/* Cached refs to components (if iterating a cache) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_ref_t *
references	lib/flecs/src/private_types.h	/^    ecs_ref_t *references;    \/* Cached components for non-this terms *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_ref_t *
reflexive	lib/flecs/flecs.c	/^    bool reflexive;  \/* Is predicate reflexive *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
reflexive	lib/flecs/src/addons/rules.c	/^    bool reflexive;  \/* Is predicate reflexive *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
refs	lib/flecs/flecs.c	/^    ecs_graph_edge_hdr_t refs;$/;"	m	struct:ecs_graph_node_t	typeref:typename:ecs_graph_edge_hdr_t	file:
refs	lib/flecs/src/private_types.h	/^    ecs_graph_edge_hdr_t refs;$/;"	m	struct:ecs_graph_node_t	typeref:typename:ecs_graph_edge_hdr_t
reg	lib/flecs/flecs.c	/^        int32_t reg;$/;"	m	union:ecs_rule_pair_t::__anona642c005050a	typeref:typename:int32_t	file:
reg	lib/flecs/flecs.c	/^        int32_t reg;$/;"	m	union:ecs_rule_pair_t::__anona642c005060a	typeref:typename:int32_t	file:
reg	lib/flecs/src/addons/rules.c	/^        int32_t reg;$/;"	m	union:ecs_rule_pair_t::__anon218568c2010a	typeref:typename:int32_t	file:
reg	lib/flecs/src/addons/rules.c	/^        int32_t reg;$/;"	m	union:ecs_rule_pair_t::__anon218568c2020a	typeref:typename:int32_t	file:
reg_get_entity	lib/flecs/flecs.c	/^ecs_entity_t reg_get_entity($/;"	f	typeref:typename:ecs_entity_t	file:
reg_get_entity	lib/flecs/src/addons/rules.c	/^ecs_entity_t reg_get_entity($/;"	f	typeref:typename:ecs_entity_t	file:
reg_get_table	lib/flecs/flecs.c	/^ecs_table_slice_t reg_get_table($/;"	f	typeref:typename:ecs_table_slice_t	file:
reg_get_table	lib/flecs/src/addons/rules.c	/^ecs_table_slice_t reg_get_table($/;"	f	typeref:typename:ecs_table_slice_t	file:
reg_mask	lib/flecs/flecs.c	/^    int32_t reg_mask; \/* bit 1 = predicate, bit 2 = object *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:int32_t	file:
reg_mask	lib/flecs/src/addons/rules.c	/^    int32_t reg_mask; \/* bit 1 = predicate, bit 2 = object *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:int32_t	file:
reg_set_entity	lib/flecs/flecs.c	/^void reg_set_entity($/;"	f	typeref:typename:void	file:
reg_set_entity	lib/flecs/src/addons/rules.c	/^void reg_set_entity($/;"	f	typeref:typename:void	file:
reg_set_table	lib/flecs/flecs.c	/^void reg_set_table($/;"	f	typeref:typename:void	file:
reg_set_table	lib/flecs/src/addons/rules.c	/^void reg_set_table($/;"	f	typeref:typename:void	file:
register_dont_inherit	lib/flecs/flecs.c	/^void register_dont_inherit(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_dont_inherit	lib/flecs/src/bootstrap.c	/^void register_dont_inherit(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_exclusive	lib/flecs/flecs.c	/^void register_exclusive(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_exclusive	lib/flecs/src/bootstrap.c	/^void register_exclusive(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_final	lib/flecs/flecs.c	/^void register_final(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_final	lib/flecs/src/bootstrap.c	/^void register_final(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_lifecycle_actions	lib/flecs/flecs.h	/^void register_lifecycle_actions($/;"	f	namespace:flecs::_	typeref:typename:void
register_lifecycle_actions	lib/flecs/flecs.h	/^void register_lifecycle_actions(ecs_world_t*, ecs_entity_t) { }$/;"	f	namespace:flecs::_	typeref:typename:void
register_lifecycle_actions	lib/flecs/include/flecs/addons/cpp/component.hpp	/^void register_lifecycle_actions($/;"	f	namespace:flecs::_	typeref:typename:void
register_lifecycle_actions	lib/flecs/include/flecs/addons/cpp/component.hpp	/^void register_lifecycle_actions(ecs_world_t*, ecs_entity_t) { }$/;"	f	namespace:flecs::_	typeref:typename:void
register_monitors	lib/flecs/flecs.c	/^void register_monitors($/;"	f	typeref:typename:void	file:
register_monitors	lib/flecs/src/query.c	/^void register_monitors($/;"	f	typeref:typename:void	file:
register_on_delete	lib/flecs/flecs.c	/^void register_on_delete(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_on_delete	lib/flecs/src/bootstrap.c	/^void register_on_delete(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_on_delete_object	lib/flecs/flecs.c	/^void register_on_delete_object(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_on_delete_object	lib/flecs/src/bootstrap.c	/^void register_on_delete_object(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_symmetric	lib/flecs/flecs.c	/^void register_symmetric(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_symmetric	lib/flecs/src/bootstrap.c	/^void register_symmetric(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
register_table_for_id	lib/flecs/flecs.c	/^void register_table_for_id($/;"	f	typeref:typename:void	file:
register_table_for_id	lib/flecs/src/table_graph.c	/^void register_table_for_id($/;"	f	typeref:typename:void	file:
register_trigger	lib/flecs/flecs.c	/^void register_trigger($/;"	f	typeref:typename:void	file:
register_trigger	lib/flecs/src/trigger.c	/^void register_trigger($/;"	f	typeref:typename:void	file:
register_trigger_for_id	lib/flecs/flecs.c	/^void register_trigger_for_id($/;"	f	typeref:typename:void	file:
register_trigger_for_id	lib/flecs/src/trigger.c	/^void register_trigger_for_id($/;"	f	typeref:typename:void	file:
registered	lib/flecs/flecs.h	/^    static bool registered() {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:bool
registered	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static bool registered() {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:bool
registers	lib/flecs/flecs.h	/^    struct ecs_rule_reg_t *registers;    \/* Variable storage (tables, entities) *\/$/;"	m	struct:ecs_rule_iter_t	typeref:struct:ecs_rule_reg_t *
registers	lib/flecs/include/flecs/private/api_types.h	/^    struct ecs_rule_reg_t *registers;    \/* Variable storage (tables, entities) *\/$/;"	m	struct:ecs_rule_iter_t	typeref:struct:ecs_rule_reg_t *
rehash	lib/flecs/flecs.c	/^void rehash($/;"	f	typeref:typename:void	file:
rehash	lib/flecs/src/datastructures/map.c	/^void rehash($/;"	f	typeref:typename:void	file:
reify_variables	lib/flecs/flecs.c	/^void reify_variables($/;"	f	typeref:typename:void	file:
reify_variables	lib/flecs/src/addons/rules.c	/^void reify_variables($/;"	f	typeref:typename:void	file:
relation	lib/flecs/flecs.h	/^    ecs_entity_t relation;      \/* Relationship to substitute (default = IsA) *\/$/;"	m	struct:ecs_term_set_t	typeref:typename:ecs_entity_t
relation	lib/flecs/flecs.h	/^    ecs_entity_t relation;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_entity_t
relation	lib/flecs/flecs.h	/^    using relation = R;$/;"	t	struct:flecs::pair	typeref:typename:R
relation	lib/flecs/flecs.h	/^inline flecs::entity id::relation() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
relation	lib/flecs/include/flecs.h	/^    ecs_entity_t relation;      \/* Relationship to substitute (default = IsA) *\/$/;"	m	struct:ecs_term_set_t	typeref:typename:ecs_entity_t
relation	lib/flecs/include/flecs.h	/^    ecs_entity_t relation;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_entity_t
relation	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::relation() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
relation	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    using relation = R;$/;"	t	struct:flecs::pair	typeref:typename:R
remaining	lib/flecs/flecs.h	/^    int32_t remaining;$/;"	m	struct:ecs_page_iter_t	typeref:typename:int32_t
remaining	lib/flecs/include/flecs/private/api_types.h	/^    int32_t remaining;$/;"	m	struct:ecs_page_iter_t	typeref:typename:int32_t
rematch_table	lib/flecs/flecs.c	/^void rematch_table($/;"	f	typeref:typename:void	file:
rematch_table	lib/flecs/src/query.c	/^void rematch_table($/;"	f	typeref:typename:void	file:
rematch_tables	lib/flecs/flecs.c	/^void rematch_tables($/;"	f	typeref:typename:void	file:
rematch_tables	lib/flecs/src/query.c	/^void rematch_tables($/;"	f	typeref:typename:void	file:
remove	lib/flecs/flecs.c	/^    ecs_graph_edges_t remove; $/;"	m	struct:ecs_graph_node_t	typeref:typename:ecs_graph_edges_t	file:
remove	lib/flecs/flecs.h	/^    Self& remove() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove	lib/flecs/flecs.h	/^    Self& remove(entity_t entity) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove	lib/flecs/flecs.h	/^    Self& remove(entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove	lib/flecs/flecs.h	/^    Self& remove(entity_t relation, entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove	lib/flecs/flecs.h	/^void world::remove() const {$/;"	f	class:flecs::world	typeref:typename:void
remove	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^void world::remove() const {$/;"	f	class:flecs::world	typeref:typename:void
remove	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove(entity_t entity) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove(entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove(entity_t relation, entity_t object) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove	lib/flecs/src/private_types.h	/^    ecs_graph_edges_t remove; $/;"	m	struct:ecs_graph_node_t	typeref:typename:ecs_graph_edges_t
remove_all	lib/flecs/flecs.h	/^    void remove_all() const {$/;"	f	struct:flecs::world	typeref:typename:void
remove_all	lib/flecs/flecs.h	/^    void remove_all(entity_t rel, entity_t obj) const {$/;"	f	struct:flecs::world	typeref:typename:void
remove_all	lib/flecs/flecs.h	/^    void remove_all(id_t the_id) const {$/;"	f	struct:flecs::world	typeref:typename:void
remove_all	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void remove_all() const {$/;"	f	struct:flecs::world	typeref:typename:void
remove_all	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void remove_all(entity_t rel, entity_t obj) const {$/;"	f	struct:flecs::world	typeref:typename:void
remove_all	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void remove_all(id_t the_id) const {$/;"	f	struct:flecs::world	typeref:typename:void
remove_case	lib/flecs/flecs.h	/^    Self& remove_case() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_case	lib/flecs/flecs.h	/^    Self& remove_case(entity_t sw_case) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_case	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove_case() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_case	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove_case(entity_t sw_case) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_count	lib/flecs/flecs.c	/^    int32_t remove_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
remove_count	lib/flecs/flecs.h	/^    ecs_counter_t remove_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
remove_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t remove_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
remove_count	lib/flecs/src/private_types.h	/^    int32_t remove_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
remove_edge	lib/flecs/flecs.c	/^void remove_edge($/;"	f	typeref:typename:void	file:
remove_edge	lib/flecs/src/table_graph.c	/^void remove_edge($/;"	f	typeref:typename:void	file:
remove_from_bucket	lib/flecs/flecs.c	/^void remove_from_bucket($/;"	f	typeref:typename:void	file:
remove_from_bucket	lib/flecs/src/datastructures/map.c	/^void remove_from_bucket($/;"	f	typeref:typename:void	file:
remove_from_table	lib/flecs/flecs.c	/^void remove_from_table($/;"	f	typeref:typename:void	file:
remove_from_table	lib/flecs/src/entity.c	/^void remove_from_table($/;"	f	typeref:typename:void	file:
remove_generation	lib/flecs/flecs.h	/^inline flecs::entity id::remove_generation() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
remove_generation	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::remove_generation() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
remove_group	lib/flecs/flecs.c	/^void remove_group($/;"	f	typeref:typename:void	file:
remove_group	lib/flecs/src/query.c	/^void remove_group($/;"	f	typeref:typename:void	file:
remove_id	lib/flecs/flecs.c	/^void remove_id($/;"	f	typeref:typename:void	file:
remove_id	lib/flecs/src/entity.c	/^void remove_id($/;"	f	typeref:typename:void	file:
remove_id_from_ids	lib/flecs/flecs.c	/^void remove_id_from_ids($/;"	f	typeref:typename:void	file:
remove_id_from_ids	lib/flecs/src/table_graph.c	/^void remove_id_from_ids($/;"	f	typeref:typename:void	file:
remove_invalid	lib/flecs/flecs.c	/^bool remove_invalid($/;"	f	typeref:typename:bool	file:
remove_invalid	lib/flecs/src/entity.c	/^bool remove_invalid($/;"	f	typeref:typename:bool	file:
remove_node	lib/flecs/flecs.c	/^void remove_node($/;"	f	typeref:typename:void	file:
remove_node	lib/flecs/src/datastructures/switch_list.c	/^void remove_node($/;"	f	typeref:typename:void	file:
remove_pointer_t	lib/flecs/flecs.h	/^using remove_pointer_t = typename std::remove_pointer<T>::type;$/;"	t	namespace:flecs	typeref:typename:std::remove_pointer<T>::type
remove_pointer_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using remove_pointer_t = typename std::remove_pointer<T>::type;$/;"	t	namespace:flecs	typeref:typename:std::remove_pointer<T>::type
remove_reference_t	lib/flecs/flecs.h	/^using remove_reference_t = typename std::remove_reference<T>::type;$/;"	t	namespace:flecs	typeref:typename:std::remove_reference<T>::type
remove_reference_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using remove_reference_t = typename std::remove_reference<T>::type;$/;"	t	namespace:flecs	typeref:typename:std::remove_reference<T>::type
remove_role	lib/flecs/flecs.h	/^inline flecs::entity id::remove_role() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
remove_role	lib/flecs/flecs.h	/^inline flecs::entity id::remove_role(flecs::id_t role) const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
remove_role	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::remove_role() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
remove_role	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::remove_role(flecs::id_t role) const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
remove_subquery	lib/flecs/flecs.c	/^void remove_subquery($/;"	f	typeref:typename:void	file:
remove_subquery	lib/flecs/src/query.c	/^void remove_subquery($/;"	f	typeref:typename:void	file:
remove_switch	lib/flecs/flecs.h	/^    Self& remove_switch() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_switch	lib/flecs/flecs.h	/^    Self& remove_switch(entity_t sw) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_switch	lib/flecs/flecs.h	/^inline Self& entity_builder<Self>::remove_switch(const flecs::type& sw) {$/;"	f	class:flecs::entity_builder	typeref:typename:Self &
remove_switch	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove_switch() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_switch	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove_switch(entity_t sw) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_switch	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline Self& entity_builder<Self>::remove_switch(const flecs::type& sw) {$/;"	f	class:flecs::entity_builder	typeref:typename:Self &
remove_table_node	lib/flecs/flecs.c	/^void remove_table_node($/;"	f	typeref:typename:void	file:
remove_table_node	lib/flecs/src/query.c	/^void remove_table_node($/;"	f	typeref:typename:void	file:
remove_w_object	lib/flecs/flecs.h	/^    Self& remove_w_object(entity_t relation) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
remove_w_object	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& remove_w_object(entity_t relation) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
removed	lib/flecs/flecs.c	/^    ecs_ids_t removed;       \/* Components removed between tables *\/$/;"	m	struct:ecs_table_diff_t	typeref:typename:ecs_ids_t	file:
removed	lib/flecs/src/private_types.h	/^    ecs_ids_t removed;       \/* Components removed between tables *\/$/;"	m	struct:ecs_table_diff_t	typeref:typename:ecs_ids_t
render	include/screens/screen.h	/^    screen_func render;$/;"	m	struct:Screen	typeref:typename:screen_func
reply_error	lib/flecs/flecs.c	/^void reply_error($/;"	f	typeref:typename:void	file:
reply_error	lib/flecs/src/addons/rest.c	/^void reply_error($/;"	f	typeref:typename:void	file:
reply_free	lib/flecs/flecs.c	/^void reply_free(ecs_http_reply_t* response) {$/;"	f	typeref:typename:void	file:
reply_free	lib/flecs/src/addons/http.c	/^void reply_free(ecs_http_reply_t* response) {$/;"	f	typeref:typename:void	file:
reply_verror	lib/flecs/flecs.c	/^void reply_verror($/;"	f	typeref:typename:void	file:
reply_verror	lib/flecs/src/addons/rest.c	/^void reply_verror($/;"	f	typeref:typename:void	file:
request_free	lib/flecs/flecs.c	/^void request_free(ecs_http_request_impl_t *req) {$/;"	f	typeref:typename:void	file:
request_free	lib/flecs/src/addons/http.c	/^void request_free(ecs_http_request_impl_t *req) {$/;"	f	typeref:typename:void	file:
request_time	lib/flecs/flecs.c	/^    FLECS_FLOAT request_time; \/* time spent on requests in last stats interval *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:FLECS_FLOAT	file:
request_time	lib/flecs/src/addons/http.c	/^    FLECS_FLOAT request_time; \/* time spent on requests in last stats interval *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:FLECS_FLOAT	file:
request_time_total	lib/flecs/flecs.c	/^    FLECS_FLOAT request_time_total; \/* total time spent on requests *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:FLECS_FLOAT	file:
request_time_total	lib/flecs/src/addons/http.c	/^    FLECS_FLOAT request_time_total; \/* total time spent on requests *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:FLECS_FLOAT	file:
requests	lib/flecs/flecs.c	/^    ecs_sparse_t *requests; \/* sparse<http_request_t> *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_sparse_t *	file:
requests	lib/flecs/src/addons/http.c	/^    ecs_sparse_t *requests; \/* sparse<http_request_t> *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_sparse_t *	file:
requests_processed	lib/flecs/flecs.c	/^    int32_t requests_processed; \/* requests processed in last stats interval *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:int32_t	file:
requests_processed	lib/flecs/src/addons/http.c	/^    int32_t requests_processed; \/* requests processed in last stats interval *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:int32_t	file:
requests_processed_total	lib/flecs/flecs.c	/^    int32_t requests_processed_total; \/* total requests processed *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:int32_t	file:
requests_processed_total	lib/flecs/src/addons/http.c	/^    int32_t requests_processed_total; \/* total requests processed *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:int32_t	file:
res	lib/flecs/flecs.c	/^    void *res;$/;"	m	struct:__anona642c0050c08	typeref:typename:void *	file:
res	lib/flecs/src/addons/http.c	/^    void *res;$/;"	m	struct:__anonc2d932d70408	typeref:typename:void *	file:
reset	lib/flecs/flecs.h	/^    static void reset() {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:void
reset	lib/flecs/flecs.h	/^    void reset() {$/;"	f	struct:flecs::term	typeref:typename:void
reset	lib/flecs/flecs.h	/^inline void reset() {$/;"	f	namespace:flecs	typeref:typename:void
reset	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static void reset() {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:void
reset	lib/flecs/include/flecs/addons/cpp/component.hpp	/^inline void reset() {$/;"	f	namespace:flecs	typeref:typename:void
reset	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    void reset() {$/;"	f	struct:flecs::term	typeref:typename:void
reset_clock	lib/flecs/flecs.h	/^inline void world::reset_clock() const {$/;"	f	class:flecs::world	typeref:typename:void
reset_clock	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline void world::reset_clock() const {$/;"	f	class:flecs::world	typeref:typename:void
reset_status	lib/flecs/test/api/src/SystemManual.c	/^void reset_status() {$/;"	f	typeref:typename:void	file:
reset_status	lib/flecs/test/api/src/SystemMisc.c	/^void reset_status() {$/;"	f	typeref:typename:void	file:
reset_write_state	lib/flecs/flecs.c	/^void reset_write_state($/;"	f	typeref:typename:void	file:
reset_write_state	lib/flecs/src/addons/pipeline/pipeline.c	/^void reset_write_state($/;"	f	typeref:typename:void	file:
resize	lib/flecs/flecs.c	/^ecs_vector_t* resize($/;"	f	typeref:typename:ecs_vector_t *	file:
resize	lib/flecs/src/datastructures/vector.c	/^ecs_vector_t* resize($/;"	f	typeref:typename:ecs_vector_t *	file:
resolve_cascade_subject	lib/flecs/flecs.c	/^void resolve_cascade_subject($/;"	f	typeref:typename:void	file:
resolve_cascade_subject	lib/flecs/src/query.c	/^void resolve_cascade_subject($/;"	f	typeref:typename:void	file:
resolve_cascade_subject_for_table	lib/flecs/flecs.c	/^void resolve_cascade_subject_for_table($/;"	f	typeref:typename:void	file:
resolve_cascade_subject_for_table	lib/flecs/src/query.c	/^void resolve_cascade_subject_for_table($/;"	f	typeref:typename:void	file:
rest	lib/flecs/flecs.h	/^namespace rest {$/;"	n	namespace:flecs
rest	lib/flecs/include/flecs/addons/cpp/mixins/rest/decl.hpp	/^namespace rest {$/;"	n	namespace:flecs
rest	lib/flecs/include/flecs/addons/cpp/mixins/rest/impl.hpp	/^namespace rest {$/;"	n	namespace:flecs
rest_bool_param	lib/flecs/flecs.c	/^void rest_bool_param($/;"	f	typeref:typename:void	file:
rest_bool_param	lib/flecs/src/addons/rest.c	/^void rest_bool_param($/;"	f	typeref:typename:void	file:
rest_capture_log	lib/flecs/flecs.c	/^void rest_capture_log($/;"	f	typeref:typename:void	file:
rest_capture_log	lib/flecs/src/addons/rest.c	/^void rest_capture_log($/;"	f	typeref:typename:void	file:
rest_get_captured_log	lib/flecs/flecs.c	/^char* rest_get_captured_log(void) {$/;"	f	typeref:typename:char *	file:
rest_get_captured_log	lib/flecs/src/addons/rest.c	/^char* rest_get_captured_log(void) {$/;"	f	typeref:typename:char *	file:
rest_parse_json_ser_entity_params	lib/flecs/flecs.c	/^void rest_parse_json_ser_entity_params($/;"	f	typeref:typename:void	file:
rest_parse_json_ser_entity_params	lib/flecs/src/addons/rest.c	/^void rest_parse_json_ser_entity_params($/;"	f	typeref:typename:void	file:
rest_parse_json_ser_iter_params	lib/flecs/flecs.c	/^void rest_parse_json_ser_iter_params($/;"	f	typeref:typename:void	file:
rest_parse_json_ser_iter_params	lib/flecs/src/addons/rest.c	/^void rest_parse_json_ser_iter_params($/;"	f	typeref:typename:void	file:
rest_reply	lib/flecs/flecs.c	/^bool rest_reply($/;"	f	typeref:typename:bool	file:
rest_reply	lib/flecs/src/addons/rest.c	/^bool rest_reply($/;"	f	typeref:typename:bool	file:
restore	lib/flecs/flecs.h	/^    void restore() {$/;"	f	struct:flecs::snapshot	typeref:typename:void
restore	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    void restore() {$/;"	f	struct:flecs::snapshot	typeref:typename:void
restore_filtered	lib/flecs/flecs.c	/^void restore_filtered($/;"	f	typeref:typename:void	file:
restore_filtered	lib/flecs/src/addons/snapshot.c	/^void restore_filtered($/;"	f	typeref:typename:void	file:
restore_unfiltered	lib/flecs/flecs.c	/^void restore_unfiltered($/;"	f	typeref:typename:void	file:
restore_unfiltered	lib/flecs/src/addons/snapshot.c	/^void restore_unfiltered($/;"	f	typeref:typename:void	file:
return_entity	lib/flecs/test/api/src/GlobalComponentIds.c	/^static ecs_entity_t return_entity() {$/;"	f	typeref:typename:ecs_entity_t	file:
return_type	lib/flecs/flecs.h	/^    using return_type = ReturnType;$/;"	t	struct:flecs::_::function_traits_defs	typeref:typename:ReturnType
return_type	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    using return_type = ReturnType;$/;"	t	struct:flecs::_::function_traits_defs	typeref:typename:ReturnType
return_type_t	lib/flecs/flecs.h	/^using return_type_t = typename _::function_traits<T>::return_type;$/;"	t	namespace:flecs	typeref:typename:_::function_traits<T>::return_type
return_type_t	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^using return_type_t = typename _::function_traits<T>::return_type;$/;"	t	namespace:flecs	typeref:typename:_::function_traits<T>::return_type
rev	lib/uthash/tests/test17.c	/^static int rev(void *_a, void *_b)$/;"	f	typeref:typename:int	file:
reverse	lib/uthash/tests/test44.c	/^static int reverse(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
revsort	lib/uthash/tests/test46.c	/^static int revsort(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
right	lib/libflint/include/lfbinarytree.h	/^    struct BinTreeNode *right;$/;"	m	struct:BinTreeNode	typeref:struct:BinTreeNode *
role	lib/flecs/flecs.h	/^    Base& role(id_t role) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
role	lib/flecs/flecs.h	/^    ecs_id_t role;              \/* Role of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_id_t
role	lib/flecs/flecs.h	/^inline flecs::entity id::role() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
role	lib/flecs/include/flecs.h	/^    ecs_id_t role;              \/* Role of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_id_t
role	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::role() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
role	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& role(id_t role) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
role_str	lib/flecs/flecs.h	/^    flecs::string role_str() const {$/;"	f	struct:flecs::id	typeref:typename:flecs::string
role_str	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    flecs::string role_str() const {$/;"	f	struct:flecs::id	typeref:typename:flecs::string
root	lib/flecs/flecs.c	/^    ecs_table_t root;$/;"	m	struct:ecs_store_t	typeref:typename:ecs_table_t	file:
root	lib/flecs/src/private_types.h	/^    ecs_table_t root;$/;"	m	struct:ecs_store_t	typeref:typename:ecs_table_t
root	lib/libflint/include/lfbinarytree.h	/^    struct BinTreeNode *root;$/;"	m	struct:__anonb782dc9e0108	typeref:struct:BinTreeNode *
root_sep	lib/flecs/flecs.h	/^    const char *root_sep; \/* Optional, used for identifiers relative to root *\/$/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
root_sep	lib/flecs/include/flecs.h	/^    const char *root_sep; \/* Optional, used for identifiers relative to root *\/$/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
rot	lib/flecs/flecs.c	/^#define rot(/;"	d	file:
rot	lib/flecs/src/datastructures/hash.c	/^#define rot(/;"	d	file:
rounders	lib/flecs/flecs.c	/^static const double rounders[MAX_PRECISION + 1] =$/;"	v	typeref:typename:const double[]	file:
rounders	lib/flecs/src/datastructures/strbuf.c	/^static const double rounders[MAX_PRECISION + 1] =$/;"	v	typeref:typename:const double[]	file:
row	lib/flecs/flecs.c	/^    int32_t row;                \/* Currently evaluated row in evaluated table *\/$/;"	m	struct:ecs_rule_each_ctx_t	typeref:typename:int32_t	file:
row	lib/flecs/flecs.c	/^    int32_t row;                \/* Row in table *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:int32_t	file:
row	lib/flecs/flecs.c	/^    int32_t row;$/;"	m	struct:ecs_rule_subset_frame_t	typeref:typename:int32_t	file:
row	lib/flecs/flecs.c	/^    int32_t row;$/;"	m	struct:sort_helper_t	typeref:typename:int32_t	file:
row	lib/flecs/flecs.h	/^    uint32_t row;           \/* Last known location in table *\/$/;"	m	struct:ecs_ref_t	typeref:typename:uint32_t
row	lib/flecs/flecs.h	/^    uint32_t row;        \/* Table row of the entity *\/$/;"	m	struct:ecs_record_t	typeref:typename:uint32_t
row	lib/flecs/include/flecs/private/api_types.h	/^    uint32_t row;           \/* Last known location in table *\/$/;"	m	struct:ecs_ref_t	typeref:typename:uint32_t
row	lib/flecs/include/flecs/private/api_types.h	/^    uint32_t row;        \/* Table row of the entity *\/$/;"	m	struct:ecs_record_t	typeref:typename:uint32_t
row	lib/flecs/src/addons/rules.c	/^    int32_t row;                \/* Currently evaluated row in evaluated table *\/$/;"	m	struct:ecs_rule_each_ctx_t	typeref:typename:int32_t	file:
row	lib/flecs/src/addons/rules.c	/^    int32_t row;$/;"	m	struct:ecs_rule_subset_frame_t	typeref:typename:int32_t	file:
row	lib/flecs/src/private_types.h	/^    int32_t row;                \/* Row in table *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:int32_t
row	lib/flecs/src/query.c	/^    int32_t row;$/;"	m	struct:sort_helper_t	typeref:typename:int32_t	file:
row_flags	lib/flecs/flecs.c	/^    uint32_t row_flags;         \/* Row flags (used to track observables) *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:uint32_t	file:
row_flags	lib/flecs/src/private_types.h	/^    uint32_t row_flags;         \/* Row flags (used to track observables) *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:uint32_t
row_iterator	lib/flecs/flecs.h	/^    using row_iterator = _::range_iterator<size_t>;$/;"	t	struct:flecs::iter	typeref:typename:_::range_iterator<size_t>
row_iterator	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    using row_iterator = _::range_iterator<size_t>;$/;"	t	struct:flecs::iter	typeref:typename:_::range_iterator<size_t>
rule	lib/flecs/flecs.h	/^        ecs_rule_iter_t rule;$/;"	m	union:ecs_iter_private_t::__anona642c00a010a	typeref:typename:ecs_rule_iter_t
rule	lib/flecs/flecs.h	/^    const ecs_rule_t *rule;$/;"	m	struct:ecs_rule_iter_t	typeref:typename:const ecs_rule_t *
rule	lib/flecs/flecs.h	/^inline flecs::rule<Comps...> world::rule(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::rule<Comps...>
rule	lib/flecs/flecs.h	/^struct rule final : rule_base, iterable<Components...> {$/;"	s	namespace:flecs
rule	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^inline flecs::rule<Comps...> world::rule(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::rule<Comps...>
rule	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^struct rule final : rule_base, iterable<Components...> {$/;"	s	namespace:flecs
rule	lib/flecs/include/flecs/private/api_types.h	/^        ecs_rule_iter_t rule;$/;"	m	union:ecs_iter_private_t::__anon49db2d84010a	typeref:typename:ecs_rule_iter_t
rule	lib/flecs/include/flecs/private/api_types.h	/^    const ecs_rule_t *rule;$/;"	m	struct:ecs_rule_iter_t	typeref:typename:const ecs_rule_t *
rule_base	lib/flecs/flecs.h	/^    rule_base()$/;"	f	struct:flecs::rule_base
rule_base	lib/flecs/flecs.h	/^    rule_base(world_t *world, ecs_filter_desc_t *desc) $/;"	f	struct:flecs::rule_base
rule_base	lib/flecs/flecs.h	/^    rule_base(world_t *world, rule_t *rule = nullptr)$/;"	f	struct:flecs::rule_base
rule_base	lib/flecs/flecs.h	/^struct rule_base {$/;"	s	namespace:flecs
rule_base	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    rule_base()$/;"	f	struct:flecs::rule_base
rule_base	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    rule_base(world_t *world, ecs_filter_desc_t *desc) $/;"	f	struct:flecs::rule_base
rule_base	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    rule_base(world_t *world, rule_t *rule = nullptr)$/;"	f	struct:flecs::rule_base
rule_base	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^struct rule_base {$/;"	s	namespace:flecs
rule_builder	lib/flecs/flecs.h	/^    rule_builder(flecs::world_t* world)$/;"	f	struct:flecs::rule_builder
rule_builder	lib/flecs/flecs.h	/^inline flecs::rule_builder<Comps...> world::rule_builder(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::rule_builder<Comps...>
rule_builder	lib/flecs/flecs.h	/^struct rule_builder final : _::rule_builder_base<Components...> {$/;"	s	namespace:flecs
rule_builder	lib/flecs/include/flecs/addons/cpp/mixins/rule/builder.hpp	/^    rule_builder(flecs::world_t* world)$/;"	f	struct:flecs::rule_builder
rule_builder	lib/flecs/include/flecs/addons/cpp/mixins/rule/builder.hpp	/^struct rule_builder final : _::rule_builder_base<Components...> {$/;"	s	namespace:flecs
rule_builder	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^inline flecs::rule_builder<Comps...> world::rule_builder(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::rule_builder<Comps...>
rule_builder_base	lib/flecs/flecs.h	/^    using rule_builder_base = builder<$/;"	t	namespace:flecs::_	typeref:typename:builder<rule,ecs_filter_desc_t,rule_builder<Components...>,filter_builder_i,Components...>
rule_builder_base	lib/flecs/include/flecs/addons/cpp/mixins/rule/builder.hpp	/^    using rule_builder_base = builder<$/;"	t	namespace:flecs::_	typeref:typename:builder<rule,ecs_filter_desc_t,rule_builder<Components...>,filter_builder_i,Components...>
rule_error	lib/flecs/flecs.c	/^void rule_error($/;"	f	typeref:typename:void	file:
rule_error	lib/flecs/src/addons/rules.c	/^void rule_error($/;"	f	typeref:typename:void	file:
rule_get_column	lib/flecs/flecs.c	/^ecs_id_t rule_get_column($/;"	f	typeref:typename:ecs_id_t	file:
rule_get_column	lib/flecs/src/addons/rules.c	/^ecs_id_t rule_get_column($/;"	f	typeref:typename:ecs_id_t	file:
rule_get_columns	lib/flecs/flecs.c	/^int32_t* rule_get_columns($/;"	f	typeref:typename:int32_t *	file:
rule_get_columns	lib/flecs/src/addons/rules.c	/^int32_t* rule_get_columns($/;"	f	typeref:typename:int32_t *	file:
rule_get_columns_frame	lib/flecs/flecs.c	/^int32_t* rule_get_columns_frame($/;"	f	typeref:typename:int32_t *	file:
rule_get_columns_frame	lib/flecs/src/addons/rules.c	/^int32_t* rule_get_columns_frame($/;"	f	typeref:typename:int32_t *	file:
rule_iter_init	lib/flecs/flecs.c	/^void rule_iter_init($/;"	f	typeref:typename:void	file:
rule_iter_init	lib/flecs/src/addons/rules.c	/^void rule_iter_init($/;"	f	typeref:typename:void	file:
rule_t	lib/flecs/flecs.h	/^using rule_t = ecs_rule_t;$/;"	t	namespace:flecs	typeref:typename:ecs_rule_t
rule_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using rule_t = ecs_rule_t;$/;"	t	namespace:flecs	typeref:typename:ecs_rule_t
rules	lib/flecs/test/api/src/Rules.c	/^const char *rules =$/;"	v	typeref:typename:const char *
run	lib/flecs/flecs.c	/^    ecs_run_action_t run;           \/* See ecs_system_desc_t *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_run_action_t	file:
run	lib/flecs/flecs.h	/^    ecs_run_action_t run;       \/* See ecs_observer_desc_t::run *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_run_action_t
run	lib/flecs/flecs.h	/^    ecs_run_action_t run;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_run_action_t
run	lib/flecs/flecs.h	/^    ecs_run_action_t run;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_run_action_t
run	lib/flecs/flecs.h	/^    int run() {$/;"	f	struct:flecs::app_builder	typeref:typename:int
run	lib/flecs/flecs.h	/^    static void run(ecs_iter_t *iter) {$/;"	f	struct:flecs::_::each_invoker	typeref:typename:void
run	lib/flecs/flecs.h	/^    static void run(ecs_iter_t *iter) {$/;"	f	struct:flecs::_::iter_invoker	typeref:typename:void
run	lib/flecs/flecs.h	/^    system_runner_fluent run(FLECS_FLOAT delta_time = 0.0f, void *param = nullptr) const {$/;"	f	struct:flecs::system	typeref:typename:system_runner_fluent
run	lib/flecs/include/flecs.h	/^    ecs_run_action_t run;       \/* See ecs_observer_desc_t::run *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_run_action_t
run	lib/flecs/include/flecs.h	/^    ecs_run_action_t run;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_run_action_t
run	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static void run(ecs_iter_t *iter) {$/;"	f	struct:flecs::_::each_invoker	typeref:typename:void
run	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static void run(ecs_iter_t *iter) {$/;"	f	struct:flecs::_::iter_invoker	typeref:typename:void
run	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    int run() {$/;"	f	struct:flecs::app_builder	typeref:typename:int
run	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    system_runner_fluent run(FLECS_FLOAT delta_time = 0.0f, void *param = nullptr) const {$/;"	f	struct:flecs::system	typeref:typename:system_runner_fluent
run	lib/flecs/include/flecs/addons/system.h	/^    ecs_run_action_t run;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_run_action_t
run	lib/flecs/src/addons/system/system.h	/^    ecs_run_action_t run;           \/* See ecs_system_desc_t *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_run_action_t
run_2_invoked	lib/flecs/test/api/src/SystemMisc.c	/^static int run_2_invoked = 0;$/;"	v	typeref:typename:int	file:
run_action	lib/flecs/flecs.c	/^static ecs_app_run_action_t run_action = default_run_action;$/;"	v	typeref:typename:ecs_app_run_action_t	file:
run_action	lib/flecs/src/addons/app.c	/^static ecs_app_run_action_t run_action = default_run_action;$/;"	v	typeref:typename:ecs_app_run_action_t	file:
run_invoked	lib/flecs/test/api/src/Observer.c	/^static int run_invoked = 0;$/;"	v	typeref:typename:int	file:
run_invoked	lib/flecs/test/api/src/SystemMisc.c	/^static int run_invoked = 0;$/;"	v	typeref:typename:int	file:
run_invoked_matched	lib/flecs/test/api/src/Observer.c	/^static int run_invoked_matched = 0;$/;"	v	typeref:typename:int	file:
run_on_remove	lib/flecs/flecs.c	/^void run_on_remove($/;"	f	typeref:typename:void	file:
run_on_remove	lib/flecs/src/table.c	/^void run_on_remove($/;"	f	typeref:typename:void	file:
run_pipeline	lib/flecs/flecs.h	/^inline void world::run_pipeline(const flecs::pipeline& pip, FLECS_FLOAT delta_time) const {$/;"	f	class:flecs::world	typeref:typename:void
run_pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline void world::run_pipeline(const flecs::pipeline& pip, FLECS_FLOAT delta_time) const {$/;"	f	class:flecs::world	typeref:typename:void
run_tests	lib/uthash/tests/Makefile	/^run_tests: $(PROGS)$/;"	t
run_tests	lib/uthash/tests/threads/Makefile	/^run_tests: $(PROGS)$/;"	t
run_tests_mingw	lib/uthash/tests/Makefile	/^run_tests_mingw: $(PROGS)$/;"	t
run_worker	lib/flecs/flecs.h	/^    system_runner_fluent run_worker($/;"	f	struct:flecs::system	typeref:typename:system_runner_fluent
run_worker	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    system_runner_fluent run_worker($/;"	f	struct:flecs::system	typeref:typename:system_runner_fluent
running	lib/flecs/flecs.c	/^    bool running;$/;"	m	struct:ecs_http_server_t	typeref:typename:bool	file:
running	lib/flecs/src/addons/http.c	/^    bool running;$/;"	m	struct:ecs_http_server_t	typeref:typename:bool	file:
s	lib/flecs/flecs.c	/^        int64_t s;$/;"	m	union:_flecs_ito::__anona642c005100a	typeref:typename:int64_t	file:
s	lib/flecs/src/misc.c	/^        int64_t s;$/;"	m	union:_flecs_ito::__anoneaa0a51b010a	typeref:typename:int64_t	file:
s	lib/flecs/test/api/include/api.h	/^    ecs_entity_t s[MAX_INVOCATIONS][MAX_SYS_COLUMNS];$/;"	m	struct:Probe	typeref:typename:ecs_entity_t[][]
s	lib/uthash/tests/test35.c	/^    char *s;$/;"	m	struct:elt	typeref:typename:char *	file:
s	lib/uthash/tests/test52.c	/^    char *s;$/;"	m	struct:__anonbb9414c10108	typeref:typename:char *	file:
s_alignment	lib/flecs/flecs.h	/^    static size_t s_alignment;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:size_t
s_alignment	lib/flecs/flecs.h	/^template <typename T> size_t        cpp_type_impl<T>::s_alignment;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:size_t
s_alignment	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static size_t s_alignment;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:size_t
s_alignment	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <typename T> size_t        cpp_type_impl<T>::s_alignment;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:size_t
s_allow_tag	lib/flecs/flecs.h	/^    static bool s_allow_tag;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:bool
s_allow_tag	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static bool s_allow_tag;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:bool
s_id	lib/flecs/flecs.h	/^    static entity_t s_id;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:entity_t
s_id	lib/flecs/flecs.h	/^template <typename T> entity_t      cpp_type_impl<T>::s_id;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:entity_t
s_id	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static entity_t s_id;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:entity_t
s_id	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <typename T> entity_t      cpp_type_impl<T>::s_id;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:entity_t
s_max	lib/flecs/flecs.c	/^static int64_t s_max[] = { $/;"	v	typeref:typename:int64_t[]	file:
s_max	lib/flecs/src/misc.c	/^static int64_t s_max[] = { $/;"	v	typeref:typename:int64_t[]	file:
s_min	lib/flecs/flecs.c	/^static int64_t s_min[] = { $/;"	v	typeref:typename:int64_t[]	file:
s_min	lib/flecs/src/misc.c	/^static int64_t s_min[] = { $/;"	v	typeref:typename:int64_t[]	file:
s_name	lib/flecs/flecs.h	/^    static flecs::string s_name;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:flecs::string
s_name	lib/flecs/flecs.h	/^template <typename T> flecs::string cpp_type_impl<T>::s_name;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:flecs::string
s_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static flecs::string s_name;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:flecs::string
s_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <typename T> flecs::string cpp_type_impl<T>::s_name;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:flecs::string
s_reset_count	lib/flecs/flecs.h	/^    static int32_t s_reset_count;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:int32_t
s_reset_count	lib/flecs/flecs.h	/^template <typename T> int32_t       cpp_type_impl<T>::s_reset_count;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:int32_t
s_reset_count	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static int32_t s_reset_count;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:int32_t
s_reset_count	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <typename T> int32_t       cpp_type_impl<T>::s_reset_count;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:int32_t
s_size	lib/flecs/flecs.h	/^    static size_t s_size;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:size_t
s_size	lib/flecs/flecs.h	/^template <typename T> size_t        cpp_type_impl<T>::s_size;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:size_t
s_size	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static size_t s_size;$/;"	m	struct:flecs::_::cpp_type_impl	typeref:typename:size_t
s_size	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <typename T> size_t        cpp_type_impl<T>::s_size;$/;"	m	class:flecs::_::cpp_type_impl<T>	typeref:typename:size_t
same_var	lib/flecs/flecs.c	/^    bool same_var; \/* True if pred & obj are both the same variable *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:bool	file:
same_var	lib/flecs/src/addons/rules.c	/^    bool same_var; \/* True if pred & obj are both the same variable *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:bool	file:
satisfy_constraints	lib/flecs/flecs.c	/^bool satisfy_constraints($/;"	f	typeref:typename:bool	file:
satisfy_constraints	lib/flecs/src/query.c	/^bool satisfy_constraints($/;"	f	typeref:typename:bool	file:
scan	lib/uthash/tests/hashscan.c	/^static int scan(pid_t pid)$/;"	f	typeref:typename:int	file:
scan_variables	lib/flecs/flecs.c	/^int scan_variables($/;"	f	typeref:typename:int	file:
scan_variables	lib/flecs/src/addons/rules.c	/^int scan_variables($/;"	f	typeref:typename:int	file:
scope	lib/flecs/flecs.c	/^    ecs_entity_t scope;          \/* Entity of current scope *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_entity_t	file:
scope	lib/flecs/flecs.c	/^    ecs_entity_t scope;$/;"	m	struct:__anona642c0050208	typeref:typename:ecs_entity_t	file:
scope	lib/flecs/flecs.c	/^    ecs_entity_t scope[STACK_MAX_SIZE];$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_entity_t[]	file:
scope	lib/flecs/flecs.h	/^    Self& scope(const Func& func) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
scope	lib/flecs/flecs.h	/^    ecs_meta_scope_t scope[ECS_META_MAX_SCOPE_DEPTH];$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:ecs_meta_scope_t[]
scope	lib/flecs/flecs.h	/^    void scope(const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
scope	lib/flecs/flecs.h	/^    void scope(id_t parent, const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
scope	lib/flecs/flecs.h	/^inline flecs::scoped_world world::scope() {$/;"	f	class:flecs::world	typeref:typename:flecs::scoped_world
scope	lib/flecs/flecs.h	/^inline flecs::scoped_world world::scope(id_t parent) {$/;"	f	class:flecs::world	typeref:typename:flecs::scoped_world
scope	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::scoped_world world::scope() {$/;"	f	class:flecs::world	typeref:typename:flecs::scoped_world
scope	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::scoped_world world::scope(id_t parent) {$/;"	f	class:flecs::world	typeref:typename:flecs::scoped_world
scope	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& scope(const Func& func) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
scope	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void scope(const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
scope	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void scope(id_t parent, const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
scope	lib/flecs/include/flecs/addons/meta.h	/^    ecs_meta_scope_t scope[ECS_META_MAX_SCOPE_DEPTH];$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:ecs_meta_scope_t[]
scope	lib/flecs/src/addons/plecs.c	/^    ecs_entity_t scope[STACK_MAX_SIZE];$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_entity_t[]	file:
scope	lib/flecs/src/private_api.h	/^    ecs_entity_t scope;$/;"	m	struct:__anonf633b8e80108	typeref:typename:ecs_entity_t
scope	lib/flecs/src/private_types.h	/^    ecs_entity_t scope;          \/* Entity of current scope *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_entity_t
scope_assign_stmt	lib/flecs/flecs.c	/^    bool scope_assign_stmt;$/;"	m	struct:__anona642c0050408	typeref:typename:bool	file:
scope_assign_stmt	lib/flecs/src/addons/plecs.c	/^    bool scope_assign_stmt;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:bool	file:
scoped_world	lib/flecs/flecs.h	/^    scoped_world($/;"	f	struct:flecs::scoped_world
scoped_world	lib/flecs/flecs.h	/^    scoped_world(const scoped_world& obj) : world(nullptr) {$/;"	f	struct:flecs::scoped_world
scoped_world	lib/flecs/flecs.h	/^struct scoped_world : world {$/;"	s	namespace:flecs
scoped_world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    scoped_world($/;"	f	struct:flecs::scoped_world
scoped_world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    scoped_world(const scoped_world& obj) : world(nullptr) {$/;"	f	struct:flecs::scoped_world
scoped_world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^struct scoped_world : world {$/;"	s	namespace:flecs
score	lib/uthash/tests/test91.c	/^    int id, score;$/;"	m	struct:el	typeref:typename:int	file:
score	lib/uthash/tests/test94.c	/^    int id, score;$/;"	m	struct:el	typeref:typename:int	file:
score	lib/uthash/tests/test95.c	/^    int id, score;$/;"	m	struct:el	typeref:typename:int	file:
screen_func	include/screens/screen.h	/^typedef void (*screen_func)(struct GameState* gs);$/;"	t	typeref:typename:void (*)(struct GameState * gs)
screen_manager	src/screens/manager.c	/^Stack *screen_manager;$/;"	v	typeref:typename:Stack *
sec	lib/flecs/flecs.h	/^    uint32_t sec;$/;"	m	struct:ecs_time_t	typeref:typename:uint32_t
sec	lib/flecs/include/flecs/os_api.h	/^    uint32_t sec;$/;"	m	struct:ecs_time_t	typeref:typename:uint32_t
second	lib/flecs/flecs.h	/^inline flecs::entity id::second() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
second	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::entity id::second() const {$/;"	f	class:flecs::id	typeref:typename:flecs::entity
self	lib/flecs/flecs.c	/^    ecs_entity_t self;              \/* Entity associated with system *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_entity_t	file:
self	lib/flecs/flecs.c	/^    ecs_world_t *self;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_world_t *	file:
self	lib/flecs/flecs.h	/^    Base& self(flecs::entity self) {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
self	lib/flecs/flecs.h	/^    Base& self(flecs::entity self) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
self	lib/flecs/flecs.h	/^    Base& self(flecs::entity self) {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
self	lib/flecs/flecs.h	/^    ecs_entity_t self;            \/* Self entity (if set for system) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t
self	lib/flecs/flecs.h	/^    ecs_entity_t self;          \/* Entity associated with observer *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_entity_t
self	lib/flecs/flecs.h	/^    ecs_entity_t self;          \/* Entity associated with observer *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_entity_t
self	lib/flecs/flecs.h	/^    ecs_entity_t self;    $/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_entity_t
self	lib/flecs/flecs.h	/^    ecs_entity_t self;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_entity_t
self	lib/flecs/flecs.h	/^    ecs_entity_t self;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_entity_t
self	lib/flecs/flecs.h	/^ inline flecs::entity iter::self() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
self	lib/flecs/include/flecs.h	/^    ecs_entity_t self;          \/* Entity associated with observer *\/$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_entity_t
self	lib/flecs/include/flecs.h	/^    ecs_entity_t self;          \/* Entity associated with observer *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_entity_t
self	lib/flecs/include/flecs.h	/^    ecs_entity_t self;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:ecs_entity_t
self	lib/flecs/include/flecs.h	/^    ecs_entity_t self;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_entity_t
self	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^ inline flecs::entity iter::self() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
self	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    Base& self(flecs::entity self) {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
self	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    Base& self(flecs::entity self) {$/;"	f	struct:flecs::system_builder_i	typeref:typename:Base &
self	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    Base& self(flecs::entity self) {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
self	lib/flecs/include/flecs/addons/system.h	/^    ecs_entity_t self;    $/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_entity_t
self	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t self;            \/* Self entity (if set for system) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t
self	lib/flecs/src/addons/system/system.h	/^    ecs_entity_t self;              \/* Entity associated with system *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_entity_t
self	lib/flecs/src/private_types.h	/^    ecs_world_t *self;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_world_t *
self	lib/flecs/test/api/include/api.h	/^    ecs_entity_t self;$/;"	m	struct:Probe	typeref:typename:ecs_entity_t
self_delete_dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void self_delete_dtor($/;"	f	typeref:typename:void	file:
self_index	lib/flecs/flecs.h	/^    ecs_id_record_t *self_index;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_id_record_t *
self_index	lib/flecs/include/flecs/private/api_types.h	/^    ecs_id_record_t *self_index;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_id_record_t *
send_reply	lib/flecs/flecs.c	/^void send_reply($/;"	f	typeref:typename:void	file:
send_reply	lib/flecs/src/addons/http.c	/^void send_reply($/;"	f	typeref:typename:void	file:
sep	lib/flecs/flecs.h	/^    const char *sep;     \/* Optional custom separator for hierarchical names *\/$/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
sep	lib/flecs/include/flecs.h	/^    const char *sep;     \/* Optional custom separator for hierarchical names *\/$/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
separator	lib/flecs/flecs.h	/^    const char *separator;$/;"	m	struct:ecs_strbuf_list_elem	typeref:typename:const char *
separator	lib/flecs/include/flecs/private/strbuf.h	/^    const char *separator;$/;"	m	struct:ecs_strbuf_list_elem	typeref:typename:const char *
serialize_array	lib/flecs/flecs.c	/^ecs_vector_t* serialize_array($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_array	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_array($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_array_component	lib/flecs/flecs.c	/^ecs_vector_t* serialize_array_component($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_array_component	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_array_component($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_base	lib/flecs/flecs.h	/^    bool serialize_base;       \/* Serialize base components *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_base	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_base;       \/* Serialize base components *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_bitmask	lib/flecs/flecs.c	/^ecs_vector_t* serialize_bitmask($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_bitmask	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_bitmask($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_brief	lib/flecs/flecs.h	/^    bool serialize_brief;      \/* Serialize brief doc description *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_brief	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_brief;      \/* Serialize brief doc description *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_component	lib/flecs/flecs.c	/^ecs_vector_t* serialize_component($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_component	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_component($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_entities	lib/flecs/flecs.h	/^    bool serialize_entities;    \/* Include entities (for This terms) *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_entities	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_entities;    \/* Include entities (for This terms) *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_entity_labels	lib/flecs/flecs.h	/^    bool serialize_entity_labels; \/* Include doc name for entities *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_entity_labels	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_entity_labels; \/* Include doc name for entities *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_enum	lib/flecs/flecs.c	/^ecs_vector_t* serialize_enum($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_enum	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_enum($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_hidden	lib/flecs/flecs.h	/^    bool serialize_hidden;     \/* Serialize ids hidden by override *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_hidden	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_hidden;     \/* Serialize ids hidden by override *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_id	lib/flecs/flecs.c	/^void serialize_id($/;"	f	typeref:typename:void	file:
serialize_id	lib/flecs/src/addons/json/serialize.c	/^void serialize_id($/;"	f	typeref:typename:void	file:
serialize_id_labels	lib/flecs/flecs.h	/^    bool serialize_id_labels;  \/* Serialize labels of (component) ids *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_id_labels	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_id_labels;  \/* Serialize labels of (component) ids *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_ids	lib/flecs/flecs.h	/^    bool serialize_ids;         \/* Include actual (matched) component ids *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_ids	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_ids;         \/* Include actual (matched) component ids *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_is_set	lib/flecs/flecs.h	/^    bool serialize_is_set;      \/* Include is_set (for optional terms) *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_is_set	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_is_set;      \/* Include is_set (for optional terms) *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_iter_ids	lib/flecs/flecs.c	/^void serialize_iter_ids($/;"	f	typeref:typename:void	file:
serialize_iter_ids	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_ids($/;"	f	typeref:typename:void	file:
serialize_iter_result	lib/flecs/flecs.c	/^void serialize_iter_result($/;"	f	typeref:typename:void	file:
serialize_iter_result	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result($/;"	f	typeref:typename:void	file:
serialize_iter_result_entities	lib/flecs/flecs.c	/^void serialize_iter_result_entities($/;"	f	typeref:typename:void	file:
serialize_iter_result_entities	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result_entities($/;"	f	typeref:typename:void	file:
serialize_iter_result_entity_labels	lib/flecs/flecs.c	/^void serialize_iter_result_entity_labels($/;"	f	typeref:typename:void	file:
serialize_iter_result_entity_labels	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result_entity_labels($/;"	f	typeref:typename:void	file:
serialize_iter_result_ids	lib/flecs/flecs.c	/^void serialize_iter_result_ids($/;"	f	typeref:typename:void	file:
serialize_iter_result_ids	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result_ids($/;"	f	typeref:typename:void	file:
serialize_iter_result_is_set	lib/flecs/flecs.c	/^void serialize_iter_result_is_set($/;"	f	typeref:typename:void	file:
serialize_iter_result_is_set	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result_is_set($/;"	f	typeref:typename:void	file:
serialize_iter_result_subjects	lib/flecs/flecs.c	/^void serialize_iter_result_subjects($/;"	f	typeref:typename:void	file:
serialize_iter_result_subjects	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result_subjects($/;"	f	typeref:typename:void	file:
serialize_iter_result_values	lib/flecs/flecs.c	/^void serialize_iter_result_values($/;"	f	typeref:typename:void	file:
serialize_iter_result_values	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result_values($/;"	f	typeref:typename:void	file:
serialize_iter_result_variable_labels	lib/flecs/flecs.c	/^void serialize_iter_result_variable_labels($/;"	f	typeref:typename:void	file:
serialize_iter_result_variable_labels	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result_variable_labels($/;"	f	typeref:typename:void	file:
serialize_iter_result_variables	lib/flecs/flecs.c	/^void serialize_iter_result_variables($/;"	f	typeref:typename:void	file:
serialize_iter_result_variables	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_result_variables($/;"	f	typeref:typename:void	file:
serialize_iter_variables	lib/flecs/flecs.c	/^void serialize_iter_variables(ecs_iter_t *it, ecs_strbuf_t *buf) {$/;"	f	typeref:typename:void	file:
serialize_iter_variables	lib/flecs/src/addons/json/serialize.c	/^void serialize_iter_variables(ecs_iter_t *it, ecs_strbuf_t *buf) {$/;"	f	typeref:typename:void	file:
serialize_label	lib/flecs/flecs.h	/^    bool serialize_label;      \/* Serialize doc name *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_label	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_label;      \/* Serialize doc name *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_link	lib/flecs/flecs.h	/^    bool serialize_link;       \/* Serialize doc link (URL) *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_link	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_link;       \/* Serialize doc link (URL) *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_meta_ids	lib/flecs/flecs.h	/^    bool serialize_meta_ids;   \/* Serialize 'meta' ids (Name, ChildOf, etc) *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_meta_ids	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_meta_ids;   \/* Serialize 'meta' ids (Name, ChildOf, etc) *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_path	lib/flecs/flecs.h	/^    bool serialize_path;       \/* Serialize full pathname *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_path	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_path;       \/* Serialize full pathname *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_primitive	lib/flecs/flecs.c	/^ecs_vector_t* serialize_primitive($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_primitive	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_primitive($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_private	lib/flecs/flecs.h	/^    bool serialize_private;    \/* Serialize private components *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_private	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_private;    \/* Serialize private components *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_struct	lib/flecs/flecs.c	/^ecs_vector_t* serialize_struct($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_struct	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_struct($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_subjects	lib/flecs/flecs.h	/^    bool serialize_subjects;    \/* Include subjects *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_subjects	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_subjects;    \/* Include subjects *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_term_ids	lib/flecs/flecs.h	/^    bool serialize_term_ids;    \/* Include term (query) component ids *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_term_ids	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_term_ids;    \/* Include term (query) component ids *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_type	lib/flecs/flecs.c	/^ecs_vector_t* serialize_type($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_type	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_type($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_type_info	lib/flecs/flecs.c	/^void serialize_type_info($/;"	f	typeref:typename:void	file:
serialize_type_info	lib/flecs/flecs.h	/^    bool serialize_type_info;   \/* Include type information *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_type_info	lib/flecs/flecs.h	/^    bool serialize_type_info;  \/* Serialize type info (requires serialize_values) *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_type_info	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_type_info;   \/* Include type information *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_type_info	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_type_info;  \/* Serialize type info (requires serialize_values) *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_type_info	lib/flecs/src/addons/json/serialize.c	/^void serialize_type_info($/;"	f	typeref:typename:void	file:
serialize_values	lib/flecs/flecs.h	/^    bool serialize_values;      \/* Include component values *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_values	lib/flecs/flecs.h	/^    bool serialize_values;     \/* Serialize component values *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_values	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_values;      \/* Include component values *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_values	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_values;     \/* Serialize component values *\/$/;"	m	struct:ecs_entity_to_json_desc_t	typeref:typename:bool
serialize_variable_labels	lib/flecs/flecs.h	/^    bool serialize_variable_labels; \/* Include doc name for variables *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_variable_labels	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_variable_labels; \/* Include doc name for variables *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_variables	lib/flecs/flecs.h	/^    bool serialize_variables;   \/* Include variables *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_variables	lib/flecs/include/flecs/addons/json.h	/^    bool serialize_variables;   \/* Include variables *\/$/;"	m	struct:ecs_iter_to_json_desc_t	typeref:typename:bool
serialize_vector	lib/flecs/flecs.c	/^ecs_vector_t* serialize_vector($/;"	f	typeref:typename:ecs_vector_t *	file:
serialize_vector	lib/flecs/src/addons/meta/serialized.c	/^ecs_vector_t* serialize_vector($/;"	f	typeref:typename:ecs_vector_t *	file:
server	lib/flecs/flecs.h	/^    ecs_http_server_t *server;$/;"	m	struct:__anona642c00a0708	typeref:typename:ecs_http_server_t *
server	lib/flecs/include/flecs/addons/http.h	/^    ecs_http_server_t *server;$/;"	m	struct:__anon12cf63340108	typeref:typename:ecs_http_server_t *
set	lib/flecs/flecs.h	/^    Base& set(uint8_t mask, const flecs::id_t relation = flecs::IsA)$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
set	lib/flecs/flecs.h	/^    Self& set(A&& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/flecs.h	/^    Self& set(T&& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/flecs.h	/^    Self& set(const A& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/flecs.h	/^    Self& set(const T& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/flecs.h	/^    Self& set(entity_t object, const R& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/flecs.h	/^    ecs_term_set_t set;         \/* Set substitution parameters *\/$/;"	m	struct:ecs_term_id_t	typeref:typename:ecs_term_set_t
set	lib/flecs/flecs.h	/^    void set(T&& value) const {$/;"	f	struct:flecs::world	typeref:typename:void
set	lib/flecs/flecs.h	/^    void set(const T& value) const {$/;"	f	struct:flecs::world	typeref:typename:void
set	lib/flecs/flecs.h	/^inline Self& entity_builder<Self>::set(const Func& func) {$/;"	f	class:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/flecs.h	/^inline void set(world_t *world, entity_t entity, A&& value) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/flecs.h	/^inline void set(world_t *world, entity_t entity, T&& value, ecs_id_t id) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/flecs.h	/^inline void set(world_t *world, entity_t entity, const A& value) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/flecs.h	/^inline void set(world_t *world, entity_t entity, const T& value, ecs_id_t id) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/flecs.h	/^inline void set(world_t *world, id_t entity, const T& value, id_t id) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/flecs.h	/^void world::set(const Func& func) {$/;"	f	class:flecs::world	typeref:typename:void
set	lib/flecs/include/flecs.h	/^    ecs_term_set_t set;         \/* Set substitution parameters *\/$/;"	m	struct:ecs_term_id_t	typeref:typename:ecs_term_set_t
set	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^void world::set(const Func& func) {$/;"	f	class:flecs::world	typeref:typename:void
set	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set(A&& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set(T&& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set(const A& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set(const T& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set(entity_t object, const R& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline Self& entity_builder<Self>::set(const Func& func) {$/;"	f	class:flecs::entity_builder	typeref:typename:Self &
set	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& set(uint8_t mask, const flecs::id_t relation = flecs::IsA)$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
set	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void set(T&& value) const {$/;"	f	struct:flecs::world	typeref:typename:void
set	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void set(const T& value) const {$/;"	f	struct:flecs::world	typeref:typename:void
set	lib/flecs/include/flecs/addons/cpp/world.hpp	/^inline void set(world_t *world, entity_t entity, A&& value) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/include/flecs/addons/cpp/world.hpp	/^inline void set(world_t *world, entity_t entity, T&& value, ecs_id_t id) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/include/flecs/addons/cpp/world.hpp	/^inline void set(world_t *world, entity_t entity, const A& value) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/include/flecs/addons/cpp/world.hpp	/^inline void set(world_t *world, entity_t entity, const T& value, ecs_id_t id) {$/;"	f	namespace:flecs	typeref:typename:void
set	lib/flecs/include/flecs/addons/cpp/world.hpp	/^inline void set(world_t *world, id_t entity, const T& value, id_t id) {$/;"	f	namespace:flecs	typeref:typename:void
set_T	lib/flecs/flecs.c	/^#define set_T(/;"	d	file:
set_T	lib/flecs/src/addons/meta/cursor.c	/^#define set_T(/;"	d	file:
set_array	lib/flecs/flecs.c	/^void set_array(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_array	lib/flecs/src/addons/meta/meta.c	/^void set_array(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_automerge	lib/flecs/flecs.h	/^    void set_automerge(bool automerge) {$/;"	f	struct:flecs::world	typeref:typename:void
set_automerge	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void set_automerge(bool automerge) {$/;"	f	struct:flecs::world	typeref:typename:void
set_bool	lib/flecs/flecs.h	/^    int set_bool(bool value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_bool	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_bool(bool value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_brief	lib/flecs/flecs.h	/^inline void set_brief(flecs::entity& e, const char *description) {$/;"	f	namespace:flecs::doc	typeref:typename:void
set_brief	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline void set_brief(flecs::entity& e, const char *description) {$/;"	f	namespace:flecs::doc	typeref:typename:void
set_called	lib/flecs/test/api/src/TriggerOnSet.c	/^static bool set_called;$/;"	v	typeref:typename:bool	file:
set_char	lib/flecs/flecs.h	/^    int set_char(char value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_char	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_char(char value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_context	lib/flecs/flecs.h	/^    void set_context(void* ctx) const {$/;"	f	struct:flecs::world	typeref:typename:void
set_context	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void set_context(void* ctx) const {$/;"	f	struct:flecs::world	typeref:typename:void
set_count	lib/flecs/flecs.c	/^    int32_t set_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
set_count	lib/flecs/flecs.h	/^    ecs_counter_t set_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
set_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t set_count;$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
set_count	lib/flecs/src/private_types.h	/^    int32_t set_count;$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
set_destroy	lib/libflint/src/lfset.c	/^void set_destroy(Set* set) {$/;"	f	typeref:typename:void
set_detail	lib/flecs/flecs.h	/^inline void set_detail(flecs::entity& e, const char *description) {$/;"	f	namespace:flecs::doc	typeref:typename:void
set_detail	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline void set_detail(flecs::entity& e, const char *description) {$/;"	f	namespace:flecs::doc	typeref:typename:void
set_difference	lib/libflint/src/lfset.c	/^int set_difference(Set* setd, const Set* a, const Set* b) {$/;"	f	typeref:typename:int
set_doc_brief	lib/flecs/flecs.h	/^Self& set_doc_brief(const char *brief) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_doc_brief	lib/flecs/include/flecs/addons/cpp/mixins/doc/entity_builder.inl	/^Self& set_doc_brief(const char *brief) {$/;"	f	typeref:typename:Self &
set_doc_detail	lib/flecs/flecs.h	/^Self& set_doc_detail(const char *detail) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_doc_detail	lib/flecs/include/flecs/addons/cpp/mixins/doc/entity_builder.inl	/^Self& set_doc_detail(const char *detail) {$/;"	f	typeref:typename:Self &
set_doc_link	lib/flecs/flecs.h	/^Self& set_doc_link(const char *link) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_doc_link	lib/flecs/include/flecs/addons/cpp/mixins/doc/entity_builder.inl	/^Self& set_doc_link(const char *link) {$/;"	f	typeref:typename:Self &
set_doc_name	lib/flecs/flecs.h	/^Self& set_doc_name(const char *name) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_doc_name	lib/flecs/include/flecs/addons/cpp/mixins/doc/entity_builder.inl	/^Self& set_doc_name(const char *name) {$/;"	f	typeref:typename:Self &
set_entity	lib/flecs/flecs.h	/^    int set_entity(flecs::entity_t value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_entity	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_entity(flecs::entity_t value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_entity_random_components	lib/flecs/test/api/src/Stresstests.c	/^void set_entity_random_components($/;"	f	typeref:typename:void	file:
set_entity_range	lib/flecs/flecs.h	/^    void set_entity_range(entity_t min, entity_t max) const {$/;"	f	struct:flecs::world	typeref:typename:void
set_entity_range	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void set_entity_range(entity_t min, entity_t max) const {$/;"	f	struct:flecs::world	typeref:typename:void
set_float	lib/flecs/flecs.h	/^    int set_float(double value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_float	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_float(double value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_id	lib/flecs/flecs.c	/^void set_id($/;"	f	typeref:typename:void	file:
set_id	lib/flecs/src/datastructures/sparse.c	/^void set_id($/;"	f	typeref:typename:void	file:
set_identifier	lib/flecs/flecs.c	/^ecs_entity_t set_identifier($/;"	f	typeref:typename:ecs_entity_t	file:
set_identifier	lib/flecs/src/entity.c	/^ecs_entity_t set_identifier($/;"	f	typeref:typename:ecs_entity_t	file:
set_index	lib/flecs/flecs.h	/^    ecs_id_record_t *set_index;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_id_record_t *
set_index	lib/flecs/include/flecs/private/api_types.h	/^    ecs_id_record_t *set_index;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_id_record_t *
set_info_from_record	lib/flecs/flecs.c	/^void set_info_from_record($/;"	f	typeref:typename:void	file:
set_info_from_record	lib/flecs/src/entity.c	/^void set_info_from_record($/;"	f	typeref:typename:void	file:
set_init	lib/libflint/src/lfset.c	/^void set_init(Set* set, int (*match)(const void* a, const void* b),$/;"	f	typeref:typename:void
set_input_to_subj	lib/flecs/flecs.c	/^void set_input_to_subj($/;"	f	typeref:typename:void	file:
set_input_to_subj	lib/flecs/src/addons/rules.c	/^void set_input_to_subj($/;"	f	typeref:typename:void	file:
set_insert	lib/libflint/src/lfset.c	/^int set_insert(Set* set, const void* data) {$/;"	f	typeref:typename:int
set_int	lib/flecs/flecs.h	/^    int set_int(int64_t value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_int	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_int(int64_t value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_intersection	lib/libflint/src/lfset.c	/^int set_intersection(Set* seti, const Set* a, const Set* b) {$/;"	f	typeref:typename:int
set_is_equal	lib/libflint/src/lfset.c	/^int set_is_equal(const Set* a, const Set* b) {$/;"	f	typeref:typename:int
set_is_member	lib/libflint/src/lfset.c	/^int set_is_member(const Set* set, const void* data) {$/;"	f	typeref:typename:int
set_is_subset	lib/libflint/src/lfset.c	/^int set_is_subset(const Set* a, const Set* b) {$/;"	f	typeref:typename:int
set_level	lib/flecs/flecs.h	/^inline void set_level(int level) {$/;"	f	namespace:flecs::log	typeref:typename:void
set_level	lib/flecs/include/flecs/addons/cpp/log.hpp	/^inline void set_level(int level) {$/;"	f	namespace:flecs::log	typeref:typename:void
set_link	lib/flecs/flecs.h	/^inline void set_link(flecs::entity& e, const char *description) {$/;"	f	namespace:flecs::doc	typeref:typename:void
set_link	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline void set_link(flecs::entity& e, const char *description) {$/;"	f	namespace:flecs::doc	typeref:typename:void
set_lookup_path	lib/flecs/flecs.h	/^    flecs::entity_t* set_lookup_path(const flecs::entity_t *search_path) {$/;"	f	struct:flecs::world	typeref:typename:flecs::entity_t *
set_lookup_path	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    flecs::entity_t* set_lookup_path(const flecs::entity_t *search_path) {$/;"	f	struct:flecs::world	typeref:typename:flecs::entity_t *
set_mask_to_name	lib/flecs/flecs.c	/^const char* set_mask_to_name($/;"	f	typeref:typename:const char *	file:
set_mask_to_name	lib/flecs/src/addons/plecs.c	/^const char* set_mask_to_name($/;"	f	typeref:typename:const char *	file:
set_member	lib/flecs/flecs.c	/^void set_member(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_member	lib/flecs/src/addons/meta/meta.c	/^void set_member(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_name	lib/flecs/flecs.h	/^    Self& set_name(const char *name) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_name	lib/flecs/flecs.h	/^inline void set_name(flecs::entity& e, const char *name) {$/;"	f	namespace:flecs::doc	typeref:typename:void
set_name	lib/flecs/include/flecs/addons/cpp/mixins/doc/impl.hpp	/^inline void set_name(flecs::entity& e, const char *name) {$/;"	f	namespace:flecs::doc	typeref:typename:void
set_name	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set_name(const char *name) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_null	lib/flecs/flecs.h	/^    int set_null() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_null	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_null() {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_output_to_subj	lib/flecs/flecs.c	/^void set_output_to_subj($/;"	f	typeref:typename:void	file:
set_output_to_subj	lib/flecs/src/addons/rules.c	/^void set_output_to_subj($/;"	f	typeref:typename:void	file:
set_override	lib/flecs/flecs.h	/^    Self& set_override(T&& val) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_override	lib/flecs/flecs.h	/^    Self& set_override(const T& val) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_override	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set_override(T&& val) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_override	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set_override(const T& val) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_pipeline	lib/flecs/flecs.h	/^inline void world::set_pipeline() const {$/;"	f	class:flecs::world	typeref:typename:void
set_pipeline	lib/flecs/flecs.h	/^inline void world::set_pipeline(const flecs::pipeline& pip) const {$/;"	f	class:flecs::world	typeref:typename:void
set_pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline void world::set_pipeline() const {$/;"	f	class:flecs::world	typeref:typename:void
set_pipeline	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline void world::set_pipeline(const flecs::pipeline& pip) const {$/;"	f	class:flecs::world	typeref:typename:void
set_primitive	lib/flecs/flecs.c	/^void set_primitive(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_primitive	lib/flecs/src/addons/meta/meta.c	/^void set_primitive(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_ptr	lib/flecs/flecs.h	/^    Self& set_ptr(entity_t comp, const void *ptr) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_ptr	lib/flecs/flecs.h	/^    Self& set_ptr(entity_t comp, size_t size, const void *ptr) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_ptr	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set_ptr(entity_t comp, const void *ptr) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_ptr	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set_ptr(entity_t comp, size_t size, const void *ptr) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_random	lib/flecs/test/api/src/Stresstests.c	/^void set_random($/;"	f	typeref:typename:void	file:
set_remove	lib/libflint/src/lfset.c	/^int set_remove(Set* set, void** data) {$/;"	f	typeref:typename:int
set_row_info	lib/flecs/flecs.c	/^void set_row_info($/;"	f	typeref:typename:void	file:
set_row_info	lib/flecs/src/entity.c	/^void set_row_info($/;"	f	typeref:typename:void	file:
set_scope	lib/flecs/flecs.h	/^inline flecs::entity world::set_scope() const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
set_scope	lib/flecs/flecs.h	/^inline flecs::entity world::set_scope(const flecs::entity_t s) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
set_scope	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity world::set_scope() const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
set_scope	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity world::set_scope(const flecs::entity_t s) const {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
set_source	lib/flecs/flecs.c	/^void set_source($/;"	f	typeref:typename:void	file:
set_source	lib/flecs/src/addons/rules.c	/^void set_source($/;"	f	typeref:typename:void	file:
set_stage	lib/flecs/flecs.h	/^inline flecs::entity entity_view::set_stage(world_t *stage) {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
set_stage	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::entity entity_view::set_stage(world_t *stage) {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::entity
set_stages	lib/flecs/flecs.h	/^    void set_stages(int32_t stages) const {$/;"	f	struct:flecs::world	typeref:typename:void
set_stages	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void set_stages(int32_t stages) const {$/;"	f	struct:flecs::world	typeref:typename:void
set_string	lib/flecs/flecs.h	/^    int set_string(const char *value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_string	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_string(const char *value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_string_literal	lib/flecs/flecs.h	/^    int set_string_literal(const char *value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_string_literal	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_string_literal(const char *value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_struct_member	lib/flecs/flecs.c	/^void set_struct_member($/;"	f	typeref:typename:void	file:
set_struct_member	lib/flecs/src/addons/meta/meta.c	/^void set_struct_member($/;"	f	typeref:typename:void	file:
set_switch	lib/flecs/flecs.c	/^void set_switch($/;"	f	typeref:typename:void	file:
set_switch	lib/flecs/src/entity.c	/^void set_switch($/;"	f	typeref:typename:void	file:
set_target_fps	lib/flecs/flecs.h	/^inline void world::set_target_fps(FLECS_FLOAT target_fps) const {$/;"	f	class:flecs::world	typeref:typename:void
set_target_fps	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline void world::set_target_fps(FLECS_FLOAT target_fps) const {$/;"	f	class:flecs::world	typeref:typename:void
set_term	lib/flecs/flecs.h	/^    void set_term(ecs_term_t *term) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:void
set_term	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    void set_term(ecs_term_t *term) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:void
set_term_vars	lib/flecs/flecs.c	/^void set_term_vars($/;"	f	typeref:typename:void	file:
set_term_vars	lib/flecs/src/addons/rules.c	/^void set_term_vars($/;"	f	typeref:typename:void	file:
set_threads	lib/flecs/flecs.h	/^inline void world::set_threads(int32_t threads) const {$/;"	f	class:flecs::world	typeref:typename:void
set_threads	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline void world::set_threads(int32_t threads) const {$/;"	f	class:flecs::world	typeref:typename:void
set_tick_source	lib/flecs/flecs.h	/^inline void system::set_tick_source(flecs::entity e) {$/;"	f	class:flecs::system	typeref:typename:void
set_tick_source	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline void system::set_tick_source(flecs::entity e) {$/;"	f	class:flecs::system	typeref:typename:void
set_time_scale	lib/flecs/flecs.h	/^inline void world::set_time_scale(FLECS_FLOAT mul) const {$/;"	f	class:flecs::world	typeref:typename:void
set_time_scale	lib/flecs/include/flecs/addons/cpp/mixins/pipeline/impl.hpp	/^inline void world::set_time_scale(FLECS_FLOAT mul) const {$/;"	f	class:flecs::world	typeref:typename:void
set_trigger_flags_for_id	lib/flecs/flecs.c	/^void set_trigger_flags_for_id($/;"	f	typeref:typename:void	file:
set_trigger_flags_for_id	lib/flecs/src/table_graph.c	/^void set_trigger_flags_for_id($/;"	f	typeref:typename:void	file:
set_triggers	lib/flecs/flecs.c	/^    ecs_map_t set_triggers; \/* map<trigger_id, trigger_t> *\/$/;"	m	struct:ecs_event_id_record_t	typeref:typename:ecs_map_t	file:
set_triggers	lib/flecs/src/private_types.h	/^    ecs_map_t set_triggers; \/* map<trigger_id, trigger_t> *\/$/;"	m	struct:ecs_event_id_record_t	typeref:typename:ecs_map_t
set_uint	lib/flecs/flecs.h	/^    int set_uint(uint64_t value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_uint	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^    int set_uint(uint64_t value) {$/;"	f	struct:flecs::meta::cursor	typeref:typename:int
set_union	lib/libflint/src/lfset.c	/^int set_union(Set* setu, const Set* a, const Set* b) {$/;"	f	typeref:typename:int
set_unit	lib/flecs/flecs.c	/^void set_unit(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_unit	lib/flecs/src/addons/meta/meta.c	/^void set_unit(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_var	lib/flecs/flecs.h	/^iter_iterable<Components...>& set_var(const char *name, flecs::entity_t value) {$/;"	f	struct:flecs::iter_iterable	typeref:typename:iter_iterable<Components...> &
set_var	lib/flecs/flecs.h	/^iter_iterable<Components...>& set_var(int var_id, flecs::entity_t value) {$/;"	f	struct:flecs::iter_iterable	typeref:typename:iter_iterable<Components...> &
set_var	lib/flecs/include/flecs/addons/cpp/mixins/rule/iterable.inl	/^iter_iterable<Components...>& set_var(const char *name, flecs::entity_t value) {$/;"	f	typeref:typename:iter_iterable<Components...> &
set_var	lib/flecs/include/flecs/addons/cpp/mixins/rule/iterable.inl	/^iter_iterable<Components...>& set_var(int var_id, flecs::entity_t value) {$/;"	f	typeref:typename:iter_iterable<Components...> &
set_vector	lib/flecs/flecs.c	/^void set_vector(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_vector	lib/flecs/src/addons/meta/meta.c	/^void set_vector(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
set_w_object	lib/flecs/flecs.h	/^    Self& set_w_object(const O& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_w_object	lib/flecs/flecs.h	/^    Self& set_w_object(entity_t relation, const O& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_w_object	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set_w_object(const O& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_w_object	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& set_w_object(entity_t relation, const O& value) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
set_write_state	lib/flecs/flecs.c	/^void set_write_state($/;"	f	typeref:typename:void	file:
set_write_state	lib/flecs/src/addons/pipeline/pipeline.c	/^void set_write_state($/;"	f	typeref:typename:void	file:
setjmp	lib/flecs/flecs.c	/^        ecs_rule_setjmp_ctx_t setjmp;$/;"	m	union:ecs_rule_op_ctx_t::__anona642c005070a	typeref:typename:ecs_rule_setjmp_ctx_t	file:
setjmp	lib/flecs/src/addons/rules.c	/^        ecs_rule_setjmp_ctx_t setjmp;$/;"	m	union:ecs_rule_op_ctx_t::__anon218568c2030a	typeref:typename:ecs_rule_setjmp_ctx_t	file:
shared	lib/flecs/flecs.c	/^    bool shared;$/;"	m	struct:sort_helper_t	typeref:typename:bool	file:
shared	lib/flecs/src/query.c	/^    bool shared;$/;"	m	struct:sort_helper_t	typeref:typename:bool	file:
should_quit	lib/flecs/flecs.c	/^    bool should_quit;            \/* Did a system signal that app should quit *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool	file:
should_quit	lib/flecs/flecs.h	/^    bool should_quit() {$/;"	f	struct:flecs::world	typeref:typename:bool
should_quit	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool should_quit() {$/;"	f	struct:flecs::world	typeref:typename:bool
should_quit	lib/flecs/src/private_types.h	/^    bool should_quit;            \/* Did a system signal that app should quit *\/$/;"	m	struct:ecs_world_t	typeref:typename:bool
should_run	lib/flecs/flecs.c	/^    bool should_run;$/;"	m	struct:ecs_http_server_t	typeref:typename:bool	file:
should_run	lib/flecs/src/addons/http.c	/^    bool should_run;$/;"	m	struct:ecs_http_server_t	typeref:typename:bool	file:
sig	lib/flecs/flecs.h	/^        sig(flecs::world_t *world) $/;"	f	struct:flecs::_::sig
sig	lib/flecs/flecs.h	/^    struct sig {$/;"	s	namespace:flecs::_
sig	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^        sig(flecs::world_t *world) $/;"	f	struct:flecs::_::sig
sig	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^    struct sig {$/;"	s	namespace:flecs::_
sig	lib/uthash/tests/hashscan.c	/^const uint32_t sig = HASH_SIGNATURE;$/;"	v	typeref:typename:const uint32_t
signal_workers	lib/flecs/flecs.c	/^void signal_workers($/;"	f	typeref:typename:void	file:
signal_workers	lib/flecs/src/addons/pipeline/worker.c	/^void signal_workers($/;"	f	typeref:typename:void	file:
signature	lib/uthash/include/uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table	typeref:typename:uint32_t
signature	lib/uthash/src/uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table	typeref:typename:uint32_t
signature_column_index	lib/flecs/flecs.c	/^    int32_t signature_column_index;$/;"	m	struct:flecs_sparse_column_t	typeref:typename:int32_t	file:
signature_column_index	lib/flecs/src/private_types.h	/^    int32_t signature_column_index;$/;"	m	struct:flecs_sparse_column_t	typeref:typename:int32_t
sigscan	lib/uthash/tests/hashscan.c	/^static void sigscan(int fd, off_t start, off_t end, uint32_t sig, pid_t pid)$/;"	f	typeref:typename:void	file:
sigscan	lib/uthash/tests/hashscan.c	/^static void sigscan(pid_t pid, void *start, void *end, uint32_t sig)$/;"	f	typeref:typename:void	file:
single_shot	lib/flecs/flecs.h	/^    bool single_shot;            \/* Is this a single shot timer *\/$/;"	m	struct:EcsTimer	typeref:typename:bool
single_shot	lib/flecs/include/flecs/addons/timer.h	/^    bool single_shot;            \/* Is this a single shot timer *\/$/;"	m	struct:EcsTimer	typeref:typename:bool
singleton	lib/flecs/flecs.h	/^    Base& singleton() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
singleton	lib/flecs/flecs.h	/^inline flecs::entity world::singleton() {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
singleton	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity world::singleton() {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
singleton	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& singleton() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
singleton_table_count	lib/flecs/flecs.h	/^    ecs_gauge_t singleton_table_count;        \/* Number of singleton tables. Singleton tables a/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
singleton_table_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t singleton_table_count;        \/* Number of singleton tables. Singleton tables a/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
size	lib/flecs/flecs.c	/^    ecs_size_t size;            \/* Size of value *\/$/;"	m	struct:ecs_defer_op_1_t	typeref:typename:ecs_size_t	file:
size	lib/flecs/flecs.c	/^    ecs_size_t size;$/;"	m	struct:ecs_bitset_t	typeref:typename:ecs_size_t	file:
size	lib/flecs/flecs.c	/^    ecs_size_t size;$/;"	m	struct:ecs_type_info_t	typeref:typename:ecs_size_t	file:
size	lib/flecs/flecs.c	/^    int16_t size;                \/* Column element size *\/$/;"	m	struct:ecs_column_t	typeref:typename:int16_t	file:
size	lib/flecs/flecs.c	/^    int32_t size;$/;"	m	struct:ecs_vector_t	typeref:typename:int32_t	file:
size	lib/flecs/flecs.h	/^    ecs_size_t size;            \/* Element size *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:ecs_size_t
size	lib/flecs/flecs.h	/^    ecs_size_t size;           \/* Component size *\/$/;"	m	struct:EcsComponent	typeref:typename:ecs_size_t
size	lib/flecs/flecs.h	/^    ecs_size_t size;        \/* Size of type of operation *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_size_t
size	lib/flecs/flecs.h	/^    ecs_size_t size;$/;"	m	struct:ecs_member_t	typeref:typename:ecs_size_t
size	lib/flecs/flecs.h	/^    ecs_size_t size;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:ecs_size_t
size	lib/flecs/flecs.h	/^    ecs_size_t size;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_size_t
size	lib/flecs/flecs.h	/^    int32_t size() {$/;"	f	class:flecs::vector	typeref:typename:int32_t
size	lib/flecs/flecs.h	/^    int32_t size;           \/* The size of the array *\/$/;"	m	struct:ecs_ids_t	typeref:typename:int32_t
size	lib/flecs/flecs.h	/^    int32_t size;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
size	lib/flecs/flecs.h	/^    size_t size() {$/;"	f	struct:flecs::array	typeref:typename:size_t
size	lib/flecs/flecs.h	/^    size_t size(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:size_t
size	lib/flecs/flecs.h	/^    size_t size;                        \/* Component size *\/$/;"	m	struct:ecs_component_desc_t	typeref:typename:size_t
size	lib/flecs/flecs.h	/^    static size_t size() {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:size_t
size	lib/flecs/flecs.h	/^    std::size_t size() {$/;"	f	struct:flecs::string	typeref:typename:std::size_t
size	lib/flecs/include/flecs.h	/^    ecs_size_t size;           \/* Component size *\/$/;"	m	struct:EcsComponent	typeref:typename:ecs_size_t
size	lib/flecs/include/flecs.h	/^    size_t size;                        \/* Component size *\/$/;"	m	struct:ecs_component_desc_t	typeref:typename:size_t
size	lib/flecs/include/flecs/addons/cpp/component.hpp	/^    static size_t size() {$/;"	f	struct:flecs::_::cpp_type_impl	typeref:typename:size_t
size	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    size_t size(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:size_t
size	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^    size_t size() {$/;"	f	struct:flecs::array	typeref:typename:size_t
size	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    std::size_t size() {$/;"	f	struct:flecs::string	typeref:typename:std::size_t
size	lib/flecs/include/flecs/addons/meta.h	/^    ecs_size_t size;        \/* Size of type of operation *\/$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_size_t
size	lib/flecs/include/flecs/addons/meta.h	/^    ecs_size_t size;$/;"	m	struct:ecs_member_t	typeref:typename:ecs_size_t
size	lib/flecs/include/flecs/private/api_types.h	/^    ecs_size_t size;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:ecs_size_t
size	lib/flecs/include/flecs/private/api_types.h	/^    ecs_size_t size;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_size_t
size	lib/flecs/include/flecs/private/api_types.h	/^    int32_t size;           \/* The size of the array *\/$/;"	m	struct:ecs_ids_t	typeref:typename:int32_t
size	lib/flecs/include/flecs/private/bitset.h	/^    ecs_size_t size;$/;"	m	struct:ecs_bitset_t	typeref:typename:ecs_size_t
size	lib/flecs/include/flecs/private/sparse.h	/^    ecs_size_t size;            \/* Element size *\/$/;"	m	struct:ecs_sparse_t	typeref:typename:ecs_size_t
size	lib/flecs/include/flecs/private/strbuf.h	/^    int32_t size;$/;"	m	struct:ecs_strbuf_t	typeref:typename:int32_t
size	lib/flecs/include/flecs/private/vector.h	/^    int32_t size() {$/;"	f	class:flecs::vector	typeref:typename:int32_t
size	lib/flecs/src/datastructures/vector.c	/^    int32_t size;$/;"	m	struct:ecs_vector_t	typeref:typename:int32_t	file:
size	lib/flecs/src/private_types.h	/^    ecs_size_t size;            \/* Size of value *\/$/;"	m	struct:ecs_defer_op_1_t	typeref:typename:ecs_size_t
size	lib/flecs/src/private_types.h	/^    ecs_size_t size;$/;"	m	struct:ecs_type_info_t	typeref:typename:ecs_size_t
size	lib/flecs/src/private_types.h	/^    int16_t size;                \/* Column element size *\/$/;"	m	struct:ecs_column_t	typeref:typename:int16_t
size	lib/flecs/test/api/src/ComponentLifecycle.c	/^    size_t size;$/;"	m	struct:copy_ctx	typeref:typename:size_t	file:
size	lib/flecs/test/api/src/ComponentLifecycle.c	/^    size_t size;$/;"	m	struct:xtor_ctx	typeref:typename:size_t	file:
size	lib/libflint/include/lfbinarytree.h	/^    int size;$/;"	m	struct:__anonb782dc9e0108	typeref:typename:int
size	lib/libflint/include/lflinkedlist.h	/^    size_t size;$/;"	m	struct:__anoncabdecbc0108	typeref:typename:size_t
sizes	lib/flecs/flecs.c	/^    ecs_size_t *sizes;        \/* Sizes for ids for current table *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_size_t *	file:
sizes	lib/flecs/flecs.h	/^    ecs_size_t *sizes;            \/* Component sizes *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_size_t *
sizes	lib/flecs/flecs.h	/^    ecs_size_t sizes[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:ecs_size_t[]
sizes	lib/flecs/include/flecs/private/api_types.h	/^    ecs_size_t *sizes;            \/* Component sizes *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_size_t *
sizes	lib/flecs/include/flecs/private/api_types.h	/^    ecs_size_t sizes[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:ecs_size_t[]
sizes	lib/flecs/src/private_types.h	/^    ecs_size_t *sizes;        \/* Sizes for ids for current table *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_size_t *
sizes_alloc	lib/flecs/flecs.h	/^    bool sizes_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
sizes_alloc	lib/flecs/include/flecs/private/api_types.h	/^    bool sizes_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
skip	lib/flecs/flecs.h	/^    void skip() {$/;"	f	struct:flecs::iter	typeref:typename:void
skip	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    void skip() {$/;"	f	struct:flecs::iter	typeref:typename:void
skip_count	lib/flecs/flecs.h	/^    int32_t skip_count;$/;"	m	struct:ecs_query_iter_t	typeref:typename:int32_t
skip_count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t skip_count;$/;"	m	struct:ecs_query_iter_t	typeref:typename:int32_t
skip_id	lib/flecs/flecs.c	/^bool skip_id($/;"	f	typeref:typename:bool	file:
skip_id	lib/flecs/src/addons/json/serialize.c	/^bool skip_id($/;"	f	typeref:typename:bool	file:
skip_scope	lib/flecs/flecs.c	/^const char* skip_scope(const char *ptr, meta_parse_ctx_t *ctx) {$/;"	f	typeref:typename:const char *	file:
skip_scope	lib/flecs/src/addons/meta_c.c	/^const char* skip_scope(const char *ptr, meta_parse_ctx_t *ctx) {$/;"	f	typeref:typename:const char *	file:
skip_term	lib/flecs/flecs.c	/^bool skip_term(ecs_term_t *term) {$/;"	f	typeref:typename:bool	file:
skip_term	lib/flecs/src/addons/rules.c	/^bool skip_term(ecs_term_t *term) {$/;"	f	typeref:typename:bool	file:
skip_variable	lib/flecs/flecs.c	/^bool skip_variable($/;"	f	typeref:typename:bool	file:
skip_variable	lib/flecs/src/addons/json/serialize.c	/^bool skip_variable($/;"	f	typeref:typename:bool	file:
sleep_	lib/flecs/flecs.h	/^    ecs_os_api_sleep_t sleep_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_sleep_t
sleep_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_sleep_t sleep_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_sleep_t
sleep_test	lib/uthash/tests/Makefile	/^sleep_test : $(HASHDIR)\/uthash.h$/;"	t
sm_input	src/screens/manager.c	/^void sm_input(struct GameState *gs) {$/;"	f	typeref:typename:void
sm_render	src/screens/manager.c	/^void sm_render(struct GameState *gs) {$/;"	f	typeref:typename:void
sm_update	src/screens/manager.c	/^void sm_update(struct GameState *gs) {$/;"	f	typeref:typename:void
snapshot	lib/flecs/flecs.h	/^        ecs_snapshot_iter_t snapshot;$/;"	m	union:ecs_iter_private_t::__anona642c00a010a	typeref:typename:ecs_snapshot_iter_t
snapshot	lib/flecs/flecs.h	/^    explicit snapshot(const world& world)$/;"	f	struct:flecs::snapshot
snapshot	lib/flecs/flecs.h	/^    snapshot(const snapshot& obj) $/;"	f	struct:flecs::snapshot
snapshot	lib/flecs/flecs.h	/^    snapshot(snapshot&& obj) $/;"	f	struct:flecs::snapshot
snapshot	lib/flecs/flecs.h	/^inline flecs::snapshot world::snapshot(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::snapshot
snapshot	lib/flecs/flecs.h	/^struct snapshot final {$/;"	s	namespace:flecs
snapshot	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    explicit snapshot(const world& world)$/;"	f	struct:flecs::snapshot
snapshot	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    snapshot(const snapshot& obj) $/;"	f	struct:flecs::snapshot
snapshot	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    snapshot(snapshot&& obj) $/;"	f	struct:flecs::snapshot
snapshot	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^inline flecs::snapshot world::snapshot(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::snapshot
snapshot	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^struct snapshot final {$/;"	s	namespace:flecs
snapshot	lib/flecs/include/flecs/private/api_types.h	/^        ecs_snapshot_iter_t snapshot;$/;"	m	union:ecs_iter_private_t::__anon49db2d84010a	typeref:typename:ecs_snapshot_iter_t
snapshot_create	lib/flecs/flecs.c	/^ecs_snapshot_t* snapshot_create($/;"	f	typeref:typename:ecs_snapshot_t *	file:
snapshot_create	lib/flecs/src/addons/snapshot.c	/^ecs_snapshot_t* snapshot_create($/;"	f	typeref:typename:ecs_snapshot_t *	file:
snapshot_t	lib/flecs/flecs.h	/^using snapshot_t = ecs_snapshot_t;$/;"	t	namespace:flecs	typeref:typename:ecs_snapshot_t
snapshot_t	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/decl.hpp	/^using snapshot_t = ecs_snapshot_t;$/;"	t	namespace:flecs	typeref:typename:ecs_snapshot_t
snapshot_table	lib/flecs/flecs.c	/^void snapshot_table($/;"	f	typeref:typename:void	file:
snapshot_table	lib/flecs/src/addons/snapshot.c	/^void snapshot_table($/;"	f	typeref:typename:void	file:
sock	lib/flecs/flecs.c	/^    ecs_http_socket_t sock;$/;"	m	struct:__anona642c0050b08	typeref:typename:ecs_http_socket_t	file:
sock	lib/flecs/flecs.c	/^    ecs_http_socket_t sock;$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_http_socket_t	file:
sock	lib/flecs/src/addons/http.c	/^    ecs_http_socket_t sock;$/;"	m	struct:__anonc2d932d70308	typeref:typename:ecs_http_socket_t	file:
sock	lib/flecs/src/addons/http.c	/^    ecs_http_socket_t sock;$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_http_socket_t	file:
sodipodi	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
sodipodi	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
some_user_data	lib/uthash/tests/test90.c	/^    int some_user_data;$/;"	m	struct:item	typeref:typename:int	file:
sort_field	lib/uthash/tests/test90.c	/^    unsigned char *sort_field;$/;"	m	struct:item	typeref:typename:unsigned char *	file:
sort_field_len	lib/uthash/tests/test90.c	/^    size_t sort_field_len; \/** Sort field length, in bytes *\/$/;"	m	struct:item	typeref:typename:size_t	file:
sort_func	lib/uthash/tests/test90.c	/^int sort_func(const struct item *a, const struct item *b)$/;"	f	typeref:typename:int
sort_helper_t	lib/flecs/flecs.c	/^typedef struct sort_helper_t {$/;"	s	file:
sort_helper_t	lib/flecs/flecs.c	/^} sort_helper_t;$/;"	t	typeref:struct:sort_helper_t	file:
sort_helper_t	lib/flecs/src/query.c	/^typedef struct sort_helper_t {$/;"	s	file:
sort_helper_t	lib/flecs/src/query.c	/^} sort_helper_t;$/;"	t	typeref:struct:sort_helper_t	file:
sort_table	lib/flecs/flecs.c	/^void sort_table($/;"	f	typeref:typename:void	file:
sort_table	lib/flecs/src/query.c	/^void sort_table($/;"	f	typeref:typename:void	file:
sort_tables	lib/flecs/flecs.c	/^void sort_tables($/;"	f	typeref:typename:void	file:
sort_tables	lib/flecs/src/query.c	/^void sort_tables($/;"	f	typeref:typename:void	file:
source	lib/flecs/flecs.h	/^inline flecs::entity iter::source(int32_t index) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
source	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::entity iter::source(int32_t index) const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
sp	lib/flecs/flecs.c	/^    int32_t sp;$/;"	m	struct:__anona642c0050408	typeref:typename:int32_t	file:
sp	lib/flecs/flecs.c	/^    int32_t sp;$/;"	m	struct:ecs_rule_subset_ctx_t	typeref:typename:int32_t	file:
sp	lib/flecs/flecs.c	/^    int32_t sp;$/;"	m	struct:ecs_rule_superset_ctx_t	typeref:typename:int32_t	file:
sp	lib/flecs/flecs.h	/^    int32_t sp;$/;"	m	struct:ecs_rule_iter_t	typeref:typename:int32_t
sp	lib/flecs/include/flecs/private/api_types.h	/^    int32_t sp;$/;"	m	struct:ecs_rule_iter_t	typeref:typename:int32_t
sp	lib/flecs/src/addons/plecs.c	/^    int32_t sp;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:int32_t	file:
sp	lib/flecs/src/addons/rules.c	/^    int32_t sp;$/;"	m	struct:ecs_rule_subset_ctx_t	typeref:typename:int32_t	file:
sp	lib/flecs/src/addons/rules.c	/^    int32_t sp;$/;"	m	struct:ecs_rule_superset_ctx_t	typeref:typename:int32_t	file:
sparse	lib/flecs/flecs.c	/^    int32_t *sparse;            \/* Sparse array with indices to dense array *\/$/;"	m	struct:chunk_t	typeref:typename:int32_t *	file:
sparse	lib/flecs/flecs.h	/^    ecs_sparse_t *sparse;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:ecs_sparse_t *
sparse	lib/flecs/include/flecs/private/api_types.h	/^    ecs_sparse_t *sparse;$/;"	m	struct:ecs_sparse_iter_t	typeref:typename:ecs_sparse_t *
sparse	lib/flecs/src/datastructures/sparse.c	/^    int32_t *sparse;            \/* Sparse array with indices to dense array *\/$/;"	m	struct:chunk_t	typeref:typename:int32_t *	file:
sparse_column_next	lib/flecs/flecs.c	/^int sparse_column_next($/;"	f	typeref:typename:int	file:
sparse_column_next	lib/flecs/src/query.c	/^int sparse_column_next($/;"	f	typeref:typename:int	file:
sparse_columns	lib/flecs/flecs.c	/^    ecs_vector_t *sparse_columns;  \/* Column ids of sparse columns *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_vector_t *	file:
sparse_columns	lib/flecs/src/private_types.h	/^    ecs_vector_t *sparse_columns;  \/* Column ids of sparse columns *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_vector_t *
sparse_copy	lib/flecs/flecs.c	/^void sparse_copy($/;"	f	typeref:typename:void	file:
sparse_copy	lib/flecs/src/datastructures/sparse.c	/^void sparse_copy($/;"	f	typeref:typename:void	file:
sparse_first	lib/flecs/flecs.h	/^    int32_t sparse_first;$/;"	m	struct:ecs_query_iter_t	typeref:typename:int32_t
sparse_first	lib/flecs/include/flecs/private/api_types.h	/^    int32_t sparse_first;$/;"	m	struct:ecs_query_iter_t	typeref:typename:int32_t
sparse_smallest	lib/flecs/flecs.h	/^    int32_t sparse_smallest;$/;"	m	struct:ecs_query_iter_t	typeref:typename:int32_t
sparse_smallest	lib/flecs/include/flecs/private/api_types.h	/^    int32_t sparse_smallest;$/;"	m	struct:ecs_query_iter_t	typeref:typename:int32_t
speed	include/ecs/components.h	/^    int speed;$/;"	m	struct:__anon1ffac85e0408	typeref:typename:int
speed	lib/flecs/flecs.h	/^struct speed {$/;"	s	struct:flecs::units
speed	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct speed {$/;"	s	struct:flecs::units
split	lib/libflint/src/lfinput.c	/^char **split(char *s, size_t *lsz, const char *delim) {$/;"	f	typeref:typename:char **
src	lib/flecs/flecs.h	/^    ecs_entity_t src;            \/* Source of the rate filter *\/$/;"	m	struct:EcsRateFilter	typeref:typename:ecs_entity_t
src	lib/flecs/include/flecs/addons/timer.h	/^    ecs_entity_t src;            \/* Source of the rate filter *\/$/;"	m	struct:EcsRateFilter	typeref:typename:ecs_entity_t
src/addons/app.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/app.c.i:$/;"	t
src/addons/app.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/app.c.i:$/;"	t
src/addons/app.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/app.c.o:$/;"	t
src/addons/app.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/app.c.o:$/;"	t
src/addons/app.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/app.c.s:$/;"	t
src/addons/app.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/app.c.s:$/;"	t
src/addons/app.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/app.i: src\/addons\/app.c.i$/;"	t
src/addons/app.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/app.i: src\/addons\/app.c.i$/;"	t
src/addons/app.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/app.o: src\/addons\/app.c.o$/;"	t
src/addons/app.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/app.o: src\/addons\/app.c.o$/;"	t
src/addons/app.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/app.s: src\/addons\/app.c.s$/;"	t
src/addons/app.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/app.s: src\/addons\/app.c.s$/;"	t
src/addons/coredoc.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/coredoc.c.i:$/;"	t
src/addons/coredoc.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/coredoc.c.i:$/;"	t
src/addons/coredoc.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/coredoc.c.o:$/;"	t
src/addons/coredoc.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/coredoc.c.o:$/;"	t
src/addons/coredoc.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/coredoc.c.s:$/;"	t
src/addons/coredoc.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/coredoc.c.s:$/;"	t
src/addons/coredoc.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/coredoc.i: src\/addons\/coredoc.c.i$/;"	t
src/addons/coredoc.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/coredoc.i: src\/addons\/coredoc.c.i$/;"	t
src/addons/coredoc.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/coredoc.o: src\/addons\/coredoc.c.o$/;"	t
src/addons/coredoc.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/coredoc.o: src\/addons\/coredoc.c.o$/;"	t
src/addons/coredoc.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/coredoc.s: src\/addons\/coredoc.c.s$/;"	t
src/addons/coredoc.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/coredoc.s: src\/addons\/coredoc.c.s$/;"	t
src/addons/deprecated.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/deprecated.c.i:$/;"	t
src/addons/deprecated.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/deprecated.c.i:$/;"	t
src/addons/deprecated.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/deprecated.c.o:$/;"	t
src/addons/deprecated.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/deprecated.c.o:$/;"	t
src/addons/deprecated.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/deprecated.c.s:$/;"	t
src/addons/deprecated.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/deprecated.c.s:$/;"	t
src/addons/deprecated.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/deprecated.i: src\/addons\/deprecated.c.i$/;"	t
src/addons/deprecated.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/deprecated.i: src\/addons\/deprecated.c.i$/;"	t
src/addons/deprecated.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/deprecated.o: src\/addons\/deprecated.c.o$/;"	t
src/addons/deprecated.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/deprecated.o: src\/addons\/deprecated.c.o$/;"	t
src/addons/deprecated.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/deprecated.s: src\/addons\/deprecated.c.s$/;"	t
src/addons/deprecated.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/deprecated.s: src\/addons\/deprecated.c.s$/;"	t
src/addons/doc.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/doc.c.i:$/;"	t
src/addons/doc.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/doc.c.i:$/;"	t
src/addons/doc.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/doc.c.o:$/;"	t
src/addons/doc.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/doc.c.o:$/;"	t
src/addons/doc.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/doc.c.s:$/;"	t
src/addons/doc.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/doc.c.s:$/;"	t
src/addons/doc.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/doc.i: src\/addons\/doc.c.i$/;"	t
src/addons/doc.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/doc.i: src\/addons\/doc.c.i$/;"	t
src/addons/doc.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/doc.o: src\/addons\/doc.c.o$/;"	t
src/addons/doc.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/doc.o: src\/addons\/doc.c.o$/;"	t
src/addons/doc.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/doc.s: src\/addons\/doc.c.s$/;"	t
src/addons/doc.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/doc.s: src\/addons\/doc.c.s$/;"	t
src/addons/expr/deserialize.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.c.i:$/;"	t
src/addons/expr/deserialize.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.c.i:$/;"	t
src/addons/expr/deserialize.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.c.o:$/;"	t
src/addons/expr/deserialize.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.c.o:$/;"	t
src/addons/expr/deserialize.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.c.s:$/;"	t
src/addons/expr/deserialize.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.c.s:$/;"	t
src/addons/expr/deserialize.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.i: src\/addons\/expr\/deserialize.c.i$/;"	t
src/addons/expr/deserialize.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.i: src\/addons\/expr\/deserialize.c.i$/;"	t
src/addons/expr/deserialize.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.o: src\/addons\/expr\/deserialize.c.o$/;"	t
src/addons/expr/deserialize.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.o: src\/addons\/expr\/deserialize.c.o$/;"	t
src/addons/expr/deserialize.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.s: src\/addons\/expr\/deserialize.c.s$/;"	t
src/addons/expr/deserialize.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/deserialize.s: src\/addons\/expr\/deserialize.c.s$/;"	t
src/addons/expr/serialize.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.c.i:$/;"	t
src/addons/expr/serialize.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.c.i:$/;"	t
src/addons/expr/serialize.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.c.o:$/;"	t
src/addons/expr/serialize.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.c.o:$/;"	t
src/addons/expr/serialize.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.c.s:$/;"	t
src/addons/expr/serialize.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.c.s:$/;"	t
src/addons/expr/serialize.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.i: src\/addons\/expr\/serialize.c.i$/;"	t
src/addons/expr/serialize.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.i: src\/addons\/expr\/serialize.c.i$/;"	t
src/addons/expr/serialize.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.o: src\/addons\/expr\/serialize.c.o$/;"	t
src/addons/expr/serialize.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.o: src\/addons\/expr\/serialize.c.o$/;"	t
src/addons/expr/serialize.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.s: src\/addons\/expr\/serialize.c.s$/;"	t
src/addons/expr/serialize.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/serialize.s: src\/addons\/expr\/serialize.c.s$/;"	t
src/addons/expr/strutil.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.c.i:$/;"	t
src/addons/expr/strutil.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.c.i:$/;"	t
src/addons/expr/strutil.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.c.o:$/;"	t
src/addons/expr/strutil.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.c.o:$/;"	t
src/addons/expr/strutil.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.c.s:$/;"	t
src/addons/expr/strutil.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.c.s:$/;"	t
src/addons/expr/strutil.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.i: src\/addons\/expr\/strutil.c.i$/;"	t
src/addons/expr/strutil.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.i: src\/addons\/expr\/strutil.c.i$/;"	t
src/addons/expr/strutil.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.o: src\/addons\/expr\/strutil.c.o$/;"	t
src/addons/expr/strutil.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.o: src\/addons\/expr\/strutil.c.o$/;"	t
src/addons/expr/strutil.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.s: src\/addons\/expr\/strutil.c.s$/;"	t
src/addons/expr/strutil.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/expr\/strutil.s: src\/addons\/expr\/strutil.c.s$/;"	t
src/addons/flecs_cpp.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.c.i:$/;"	t
src/addons/flecs_cpp.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.c.i:$/;"	t
src/addons/flecs_cpp.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.c.o:$/;"	t
src/addons/flecs_cpp.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.c.o:$/;"	t
src/addons/flecs_cpp.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.c.s:$/;"	t
src/addons/flecs_cpp.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.c.s:$/;"	t
src/addons/flecs_cpp.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.i: src\/addons\/flecs_cpp.c.i$/;"	t
src/addons/flecs_cpp.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.i: src\/addons\/flecs_cpp.c.i$/;"	t
src/addons/flecs_cpp.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.o: src\/addons\/flecs_cpp.c.o$/;"	t
src/addons/flecs_cpp.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.o: src\/addons\/flecs_cpp.c.o$/;"	t
src/addons/flecs_cpp.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.s: src\/addons\/flecs_cpp.c.s$/;"	t
src/addons/flecs_cpp.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/flecs_cpp.s: src\/addons\/flecs_cpp.c.s$/;"	t
src/addons/http.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/http.c.i:$/;"	t
src/addons/http.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/http.c.i:$/;"	t
src/addons/http.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/http.c.o:$/;"	t
src/addons/http.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/http.c.o:$/;"	t
src/addons/http.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/http.c.s:$/;"	t
src/addons/http.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/http.c.s:$/;"	t
src/addons/http.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/http.i: src\/addons\/http.c.i$/;"	t
src/addons/http.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/http.i: src\/addons\/http.c.i$/;"	t
src/addons/http.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/http.o: src\/addons\/http.c.o$/;"	t
src/addons/http.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/http.o: src\/addons\/http.c.o$/;"	t
src/addons/http.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/http.s: src\/addons\/http.c.s$/;"	t
src/addons/http.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/http.s: src\/addons\/http.c.s$/;"	t
src/addons/json/deserialize.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.c.i:$/;"	t
src/addons/json/deserialize.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.c.i:$/;"	t
src/addons/json/deserialize.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.c.o:$/;"	t
src/addons/json/deserialize.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.c.o:$/;"	t
src/addons/json/deserialize.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.c.s:$/;"	t
src/addons/json/deserialize.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.c.s:$/;"	t
src/addons/json/deserialize.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.i: src\/addons\/json\/deserialize.c.i$/;"	t
src/addons/json/deserialize.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.i: src\/addons\/json\/deserialize.c.i$/;"	t
src/addons/json/deserialize.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.o: src\/addons\/json\/deserialize.c.o$/;"	t
src/addons/json/deserialize.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.o: src\/addons\/json\/deserialize.c.o$/;"	t
src/addons/json/deserialize.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.s: src\/addons\/json\/deserialize.c.s$/;"	t
src/addons/json/deserialize.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/deserialize.s: src\/addons\/json\/deserialize.c.s$/;"	t
src/addons/json/json.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/json.c.i:$/;"	t
src/addons/json/json.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/json.c.i:$/;"	t
src/addons/json/json.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/json.c.o:$/;"	t
src/addons/json/json.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/json.c.o:$/;"	t
src/addons/json/json.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/json.c.s:$/;"	t
src/addons/json/json.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/json.c.s:$/;"	t
src/addons/json/json.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/json.i: src\/addons\/json\/json.c.i$/;"	t
src/addons/json/json.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/json.i: src\/addons\/json\/json.c.i$/;"	t
src/addons/json/json.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/json.o: src\/addons\/json\/json.c.o$/;"	t
src/addons/json/json.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/json.o: src\/addons\/json\/json.c.o$/;"	t
src/addons/json/json.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/json.s: src\/addons\/json\/json.c.s$/;"	t
src/addons/json/json.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/json.s: src\/addons\/json\/json.c.s$/;"	t
src/addons/json/serialize.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize.c.i:$/;"	t
src/addons/json/serialize.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize.c.i:$/;"	t
src/addons/json/serialize.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize.c.o:$/;"	t
src/addons/json/serialize.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize.c.o:$/;"	t
src/addons/json/serialize.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize.c.s:$/;"	t
src/addons/json/serialize.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize.c.s:$/;"	t
src/addons/json/serialize.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize.i: src\/addons\/json\/serialize.c.i$/;"	t
src/addons/json/serialize.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize.i: src\/addons\/json\/serialize.c.i$/;"	t
src/addons/json/serialize.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize.o: src\/addons\/json\/serialize.c.o$/;"	t
src/addons/json/serialize.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize.o: src\/addons\/json\/serialize.c.o$/;"	t
src/addons/json/serialize.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize.s: src\/addons\/json\/serialize.c.s$/;"	t
src/addons/json/serialize.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize.s: src\/addons\/json\/serialize.c.s$/;"	t
src/addons/json/serialize_type_info.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.c.i:$/;"	t
src/addons/json/serialize_type_info.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.c.i:$/;"	t
src/addons/json/serialize_type_info.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.c.o:$/;"	t
src/addons/json/serialize_type_info.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.c.o:$/;"	t
src/addons/json/serialize_type_info.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.c.s:$/;"	t
src/addons/json/serialize_type_info.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.c.s:$/;"	t
src/addons/json/serialize_type_info.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.i: src\/addons\/json\/serialize_type_info.c.i$/;"	t
src/addons/json/serialize_type_info.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.i: src\/addons\/json\/serialize_type_info.c.i$/;"	t
src/addons/json/serialize_type_info.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.o: src\/addons\/json\/serialize_type_info.c.o$/;"	t
src/addons/json/serialize_type_info.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.o: src\/addons\/json\/serialize_type_info.c.o$/;"	t
src/addons/json/serialize_type_info.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.s: src\/addons\/json\/serialize_type_info.c.s$/;"	t
src/addons/json/serialize_type_info.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/json\/serialize_type_info.s: src\/addons\/json\/serialize_type_info.c.s$/;"	t
src/addons/log.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/log.c.i:$/;"	t
src/addons/log.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/log.c.i:$/;"	t
src/addons/log.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/log.c.o:$/;"	t
src/addons/log.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/log.c.o:$/;"	t
src/addons/log.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/log.c.s:$/;"	t
src/addons/log.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/log.c.s:$/;"	t
src/addons/log.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/log.i: src\/addons\/log.c.i$/;"	t
src/addons/log.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/log.i: src\/addons\/log.c.i$/;"	t
src/addons/log.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/log.o: src\/addons\/log.c.o$/;"	t
src/addons/log.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/log.o: src\/addons\/log.c.o$/;"	t
src/addons/log.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/log.s: src\/addons\/log.c.s$/;"	t
src/addons/log.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/log.s: src\/addons\/log.c.s$/;"	t
src/addons/meta/api.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/api.c.i:$/;"	t
src/addons/meta/api.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/api.c.i:$/;"	t
src/addons/meta/api.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/api.c.o:$/;"	t
src/addons/meta/api.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/api.c.o:$/;"	t
src/addons/meta/api.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/api.c.s:$/;"	t
src/addons/meta/api.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/api.c.s:$/;"	t
src/addons/meta/api.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/api.i: src\/addons\/meta\/api.c.i$/;"	t
src/addons/meta/api.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/api.i: src\/addons\/meta\/api.c.i$/;"	t
src/addons/meta/api.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/api.o: src\/addons\/meta\/api.c.o$/;"	t
src/addons/meta/api.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/api.o: src\/addons\/meta\/api.c.o$/;"	t
src/addons/meta/api.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/api.s: src\/addons\/meta\/api.c.s$/;"	t
src/addons/meta/api.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/api.s: src\/addons\/meta\/api.c.s$/;"	t
src/addons/meta/cursor.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.c.i:$/;"	t
src/addons/meta/cursor.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.c.i:$/;"	t
src/addons/meta/cursor.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.c.o:$/;"	t
src/addons/meta/cursor.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.c.o:$/;"	t
src/addons/meta/cursor.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.c.s:$/;"	t
src/addons/meta/cursor.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.c.s:$/;"	t
src/addons/meta/cursor.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.i: src\/addons\/meta\/cursor.c.i$/;"	t
src/addons/meta/cursor.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.i: src\/addons\/meta\/cursor.c.i$/;"	t
src/addons/meta/cursor.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.o: src\/addons\/meta\/cursor.c.o$/;"	t
src/addons/meta/cursor.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.o: src\/addons\/meta\/cursor.c.o$/;"	t
src/addons/meta/cursor.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.s: src\/addons\/meta\/cursor.c.s$/;"	t
src/addons/meta/cursor.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/cursor.s: src\/addons\/meta\/cursor.c.s$/;"	t
src/addons/meta/meta.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/meta.c.i:$/;"	t
src/addons/meta/meta.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/meta.c.i:$/;"	t
src/addons/meta/meta.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/meta.c.o:$/;"	t
src/addons/meta/meta.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/meta.c.o:$/;"	t
src/addons/meta/meta.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/meta.c.s:$/;"	t
src/addons/meta/meta.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/meta.c.s:$/;"	t
src/addons/meta/meta.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/meta.i: src\/addons\/meta\/meta.c.i$/;"	t
src/addons/meta/meta.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/meta.i: src\/addons\/meta\/meta.c.i$/;"	t
src/addons/meta/meta.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/meta.o: src\/addons\/meta\/meta.c.o$/;"	t
src/addons/meta/meta.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/meta.o: src\/addons\/meta\/meta.c.o$/;"	t
src/addons/meta/meta.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/meta.s: src\/addons\/meta\/meta.c.s$/;"	t
src/addons/meta/meta.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/meta.s: src\/addons\/meta\/meta.c.s$/;"	t
src/addons/meta/serialized.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.c.i:$/;"	t
src/addons/meta/serialized.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.c.i:$/;"	t
src/addons/meta/serialized.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.c.o:$/;"	t
src/addons/meta/serialized.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.c.o:$/;"	t
src/addons/meta/serialized.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.c.s:$/;"	t
src/addons/meta/serialized.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.c.s:$/;"	t
src/addons/meta/serialized.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.i: src\/addons\/meta\/serialized.c.i$/;"	t
src/addons/meta/serialized.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.i: src\/addons\/meta\/serialized.c.i$/;"	t
src/addons/meta/serialized.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.o: src\/addons\/meta\/serialized.c.o$/;"	t
src/addons/meta/serialized.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.o: src\/addons\/meta\/serialized.c.o$/;"	t
src/addons/meta/serialized.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.s: src\/addons\/meta\/serialized.c.s$/;"	t
src/addons/meta/serialized.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta\/serialized.s: src\/addons\/meta\/serialized.c.s$/;"	t
src/addons/meta_c.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta_c.c.i:$/;"	t
src/addons/meta_c.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta_c.c.i:$/;"	t
src/addons/meta_c.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta_c.c.o:$/;"	t
src/addons/meta_c.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta_c.c.o:$/;"	t
src/addons/meta_c.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta_c.c.s:$/;"	t
src/addons/meta_c.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta_c.c.s:$/;"	t
src/addons/meta_c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta_c.i: src\/addons\/meta_c.c.i$/;"	t
src/addons/meta_c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta_c.i: src\/addons\/meta_c.c.i$/;"	t
src/addons/meta_c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta_c.o: src\/addons\/meta_c.c.o$/;"	t
src/addons/meta_c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta_c.o: src\/addons\/meta_c.c.o$/;"	t
src/addons/meta_c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/meta_c.s: src\/addons\/meta_c.c.s$/;"	t
src/addons/meta_c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/meta_c.s: src\/addons\/meta_c.c.s$/;"	t
src/addons/module.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/module.c.i:$/;"	t
src/addons/module.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/module.c.i:$/;"	t
src/addons/module.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/module.c.o:$/;"	t
src/addons/module.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/module.c.o:$/;"	t
src/addons/module.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/module.c.s:$/;"	t
src/addons/module.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/module.c.s:$/;"	t
src/addons/module.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/module.i: src\/addons\/module.c.i$/;"	t
src/addons/module.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/module.i: src\/addons\/module.c.i$/;"	t
src/addons/module.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/module.o: src\/addons\/module.c.o$/;"	t
src/addons/module.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/module.o: src\/addons\/module.c.o$/;"	t
src/addons/module.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/module.s: src\/addons\/module.c.s$/;"	t
src/addons/module.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/module.s: src\/addons\/module.c.s$/;"	t
src/addons/os_api_impl/os_api_impl.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.c.i:$/;"	t
src/addons/os_api_impl/os_api_impl.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.c.i:$/;"	t
src/addons/os_api_impl/os_api_impl.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.c.o:$/;"	t
src/addons/os_api_impl/os_api_impl.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.c.o:$/;"	t
src/addons/os_api_impl/os_api_impl.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.c.s:$/;"	t
src/addons/os_api_impl/os_api_impl.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.c.s:$/;"	t
src/addons/os_api_impl/os_api_impl.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.i: src\/addons\/os_api_impl\/os_api_impl.c.i$/;"	t
src/addons/os_api_impl/os_api_impl.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.i: src\/addons\/os_api_impl\/os_api_impl.c.i$/;"	t
src/addons/os_api_impl/os_api_impl.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.o: src\/addons\/os_api_impl\/os_api_impl.c.o$/;"	t
src/addons/os_api_impl/os_api_impl.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.o: src\/addons\/os_api_impl\/os_api_impl.c.o$/;"	t
src/addons/os_api_impl/os_api_impl.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.s: src\/addons\/os_api_impl\/os_api_impl.c.s$/;"	t
src/addons/os_api_impl/os_api_impl.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/os_api_impl\/os_api_impl.s: src\/addons\/os_api_impl\/os_api_impl.c.s$/;"	t
src/addons/parser.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/parser.c.i:$/;"	t
src/addons/parser.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/parser.c.i:$/;"	t
src/addons/parser.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/parser.c.o:$/;"	t
src/addons/parser.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/parser.c.o:$/;"	t
src/addons/parser.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/parser.c.s:$/;"	t
src/addons/parser.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/parser.c.s:$/;"	t
src/addons/parser.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/parser.i: src\/addons\/parser.c.i$/;"	t
src/addons/parser.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/parser.i: src\/addons\/parser.c.i$/;"	t
src/addons/parser.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/parser.o: src\/addons\/parser.c.o$/;"	t
src/addons/parser.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/parser.o: src\/addons\/parser.c.o$/;"	t
src/addons/parser.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/parser.s: src\/addons\/parser.c.s$/;"	t
src/addons/parser.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/parser.s: src\/addons\/parser.c.s$/;"	t
src/addons/pipeline/pipeline.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.c.i:$/;"	t
src/addons/pipeline/pipeline.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.c.i:$/;"	t
src/addons/pipeline/pipeline.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.c.o:$/;"	t
src/addons/pipeline/pipeline.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.c.o:$/;"	t
src/addons/pipeline/pipeline.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.c.s:$/;"	t
src/addons/pipeline/pipeline.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.c.s:$/;"	t
src/addons/pipeline/pipeline.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.i: src\/addons\/pipeline\/pipeline.c.i$/;"	t
src/addons/pipeline/pipeline.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.i: src\/addons\/pipeline\/pipeline.c.i$/;"	t
src/addons/pipeline/pipeline.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.o: src\/addons\/pipeline\/pipeline.c.o$/;"	t
src/addons/pipeline/pipeline.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.o: src\/addons\/pipeline\/pipeline.c.o$/;"	t
src/addons/pipeline/pipeline.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.s: src\/addons\/pipeline\/pipeline.c.s$/;"	t
src/addons/pipeline/pipeline.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/pipeline.s: src\/addons\/pipeline\/pipeline.c.s$/;"	t
src/addons/pipeline/worker.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.c.i:$/;"	t
src/addons/pipeline/worker.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.c.i:$/;"	t
src/addons/pipeline/worker.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.c.o:$/;"	t
src/addons/pipeline/worker.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.c.o:$/;"	t
src/addons/pipeline/worker.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.c.s:$/;"	t
src/addons/pipeline/worker.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.c.s:$/;"	t
src/addons/pipeline/worker.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.i: src\/addons\/pipeline\/worker.c.i$/;"	t
src/addons/pipeline/worker.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.i: src\/addons\/pipeline\/worker.c.i$/;"	t
src/addons/pipeline/worker.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.o: src\/addons\/pipeline\/worker.c.o$/;"	t
src/addons/pipeline/worker.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.o: src\/addons\/pipeline\/worker.c.o$/;"	t
src/addons/pipeline/worker.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.s: src\/addons\/pipeline\/worker.c.s$/;"	t
src/addons/pipeline/worker.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/pipeline\/worker.s: src\/addons\/pipeline\/worker.c.s$/;"	t
src/addons/plecs.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/plecs.c.i:$/;"	t
src/addons/plecs.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/plecs.c.i:$/;"	t
src/addons/plecs.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/plecs.c.o:$/;"	t
src/addons/plecs.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/plecs.c.o:$/;"	t
src/addons/plecs.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/plecs.c.s:$/;"	t
src/addons/plecs.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/plecs.c.s:$/;"	t
src/addons/plecs.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/plecs.i: src\/addons\/plecs.c.i$/;"	t
src/addons/plecs.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/plecs.i: src\/addons\/plecs.c.i$/;"	t
src/addons/plecs.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/plecs.o: src\/addons\/plecs.c.o$/;"	t
src/addons/plecs.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/plecs.o: src\/addons\/plecs.c.o$/;"	t
src/addons/plecs.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/plecs.s: src\/addons\/plecs.c.s$/;"	t
src/addons/plecs.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/plecs.s: src\/addons\/plecs.c.s$/;"	t
src/addons/rest.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rest.c.i:$/;"	t
src/addons/rest.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rest.c.i:$/;"	t
src/addons/rest.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rest.c.o:$/;"	t
src/addons/rest.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rest.c.o:$/;"	t
src/addons/rest.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rest.c.s:$/;"	t
src/addons/rest.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rest.c.s:$/;"	t
src/addons/rest.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rest.i: src\/addons\/rest.c.i$/;"	t
src/addons/rest.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rest.i: src\/addons\/rest.c.i$/;"	t
src/addons/rest.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rest.o: src\/addons\/rest.c.o$/;"	t
src/addons/rest.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rest.o: src\/addons\/rest.c.o$/;"	t
src/addons/rest.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rest.s: src\/addons\/rest.c.s$/;"	t
src/addons/rest.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rest.s: src\/addons\/rest.c.s$/;"	t
src/addons/rules.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rules.c.i:$/;"	t
src/addons/rules.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rules.c.i:$/;"	t
src/addons/rules.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rules.c.o:$/;"	t
src/addons/rules.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rules.c.o:$/;"	t
src/addons/rules.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rules.c.s:$/;"	t
src/addons/rules.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rules.c.s:$/;"	t
src/addons/rules.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rules.i: src\/addons\/rules.c.i$/;"	t
src/addons/rules.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rules.i: src\/addons\/rules.c.i$/;"	t
src/addons/rules.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rules.o: src\/addons\/rules.c.o$/;"	t
src/addons/rules.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rules.o: src\/addons\/rules.c.o$/;"	t
src/addons/rules.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/rules.s: src\/addons\/rules.c.s$/;"	t
src/addons/rules.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/rules.s: src\/addons\/rules.c.s$/;"	t
src/addons/snapshot.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/snapshot.c.i:$/;"	t
src/addons/snapshot.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/snapshot.c.i:$/;"	t
src/addons/snapshot.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/snapshot.c.o:$/;"	t
src/addons/snapshot.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/snapshot.c.o:$/;"	t
src/addons/snapshot.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/snapshot.c.s:$/;"	t
src/addons/snapshot.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/snapshot.c.s:$/;"	t
src/addons/snapshot.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/snapshot.i: src\/addons\/snapshot.c.i$/;"	t
src/addons/snapshot.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/snapshot.i: src\/addons\/snapshot.c.i$/;"	t
src/addons/snapshot.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/snapshot.o: src\/addons\/snapshot.c.o$/;"	t
src/addons/snapshot.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/snapshot.o: src\/addons\/snapshot.c.o$/;"	t
src/addons/snapshot.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/snapshot.s: src\/addons\/snapshot.c.s$/;"	t
src/addons/snapshot.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/snapshot.s: src\/addons\/snapshot.c.s$/;"	t
src/addons/stats.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/stats.c.i:$/;"	t
src/addons/stats.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/stats.c.i:$/;"	t
src/addons/stats.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/stats.c.o:$/;"	t
src/addons/stats.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/stats.c.o:$/;"	t
src/addons/stats.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/stats.c.s:$/;"	t
src/addons/stats.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/stats.c.s:$/;"	t
src/addons/stats.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/stats.i: src\/addons\/stats.c.i$/;"	t
src/addons/stats.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/stats.i: src\/addons\/stats.c.i$/;"	t
src/addons/stats.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/stats.o: src\/addons\/stats.c.o$/;"	t
src/addons/stats.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/stats.o: src\/addons\/stats.c.o$/;"	t
src/addons/stats.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/stats.s: src\/addons\/stats.c.s$/;"	t
src/addons/stats.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/stats.s: src\/addons\/stats.c.s$/;"	t
src/addons/system/system.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/system\/system.c.i:$/;"	t
src/addons/system/system.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/system\/system.c.i:$/;"	t
src/addons/system/system.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/system\/system.c.o:$/;"	t
src/addons/system/system.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/system\/system.c.o:$/;"	t
src/addons/system/system.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/system\/system.c.s:$/;"	t
src/addons/system/system.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/system\/system.c.s:$/;"	t
src/addons/system/system.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/system\/system.i: src\/addons\/system\/system.c.i$/;"	t
src/addons/system/system.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/system\/system.i: src\/addons\/system\/system.c.i$/;"	t
src/addons/system/system.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/system\/system.o: src\/addons\/system\/system.c.o$/;"	t
src/addons/system/system.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/system\/system.o: src\/addons\/system\/system.c.o$/;"	t
src/addons/system/system.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/system\/system.s: src\/addons\/system\/system.c.s$/;"	t
src/addons/system/system.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/system\/system.s: src\/addons\/system\/system.c.s$/;"	t
src/addons/timer.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/timer.c.i:$/;"	t
src/addons/timer.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/timer.c.i:$/;"	t
src/addons/timer.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/timer.c.o:$/;"	t
src/addons/timer.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/timer.c.o:$/;"	t
src/addons/timer.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/timer.c.s:$/;"	t
src/addons/timer.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/timer.c.s:$/;"	t
src/addons/timer.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/timer.i: src\/addons\/timer.c.i$/;"	t
src/addons/timer.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/timer.i: src\/addons\/timer.c.i$/;"	t
src/addons/timer.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/timer.o: src\/addons\/timer.c.o$/;"	t
src/addons/timer.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/timer.o: src\/addons\/timer.c.o$/;"	t
src/addons/timer.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/timer.s: src\/addons\/timer.c.s$/;"	t
src/addons/timer.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/timer.s: src\/addons\/timer.c.s$/;"	t
src/addons/units.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/units.c.i:$/;"	t
src/addons/units.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/units.c.i:$/;"	t
src/addons/units.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/units.c.o:$/;"	t
src/addons/units.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/units.c.o:$/;"	t
src/addons/units.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/units.c.s:$/;"	t
src/addons/units.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/units.c.s:$/;"	t
src/addons/units.i	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/units.i: src\/addons\/units.c.i$/;"	t
src/addons/units.i	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/units.i: src\/addons\/units.c.i$/;"	t
src/addons/units.o	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/units.o: src\/addons\/units.c.o$/;"	t
src/addons/units.o	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/units.o: src\/addons\/units.c.o$/;"	t
src/addons/units.s	cmake-build-debug/lib/flecs/Makefile	/^src\/addons\/units.s: src\/addons\/units.c.s$/;"	t
src/addons/units.s	cmake-build-release/lib/flecs/Makefile	/^src\/addons\/units.s: src\/addons\/units.c.s$/;"	t
src/bootstrap.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/bootstrap.c.i:$/;"	t
src/bootstrap.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/bootstrap.c.i:$/;"	t
src/bootstrap.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/bootstrap.c.o:$/;"	t
src/bootstrap.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/bootstrap.c.o:$/;"	t
src/bootstrap.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/bootstrap.c.s:$/;"	t
src/bootstrap.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/bootstrap.c.s:$/;"	t
src/bootstrap.i	cmake-build-debug/lib/flecs/Makefile	/^src\/bootstrap.i: src\/bootstrap.c.i$/;"	t
src/bootstrap.i	cmake-build-release/lib/flecs/Makefile	/^src\/bootstrap.i: src\/bootstrap.c.i$/;"	t
src/bootstrap.o	cmake-build-debug/lib/flecs/Makefile	/^src\/bootstrap.o: src\/bootstrap.c.o$/;"	t
src/bootstrap.o	cmake-build-release/lib/flecs/Makefile	/^src\/bootstrap.o: src\/bootstrap.c.o$/;"	t
src/bootstrap.s	cmake-build-debug/lib/flecs/Makefile	/^src\/bootstrap.s: src\/bootstrap.c.s$/;"	t
src/bootstrap.s	cmake-build-release/lib/flecs/Makefile	/^src\/bootstrap.s: src\/bootstrap.c.s$/;"	t
src/colors.c.i	cmake-build-debug/Makefile	/^src\/colors.c.i:$/;"	t
src/colors.c.i	cmake-build-release/Makefile	/^src\/colors.c.i:$/;"	t
src/colors.c.o	cmake-build-debug/Makefile	/^src\/colors.c.o:$/;"	t
src/colors.c.o	cmake-build-release/Makefile	/^src\/colors.c.o:$/;"	t
src/colors.c.s	cmake-build-debug/Makefile	/^src\/colors.c.s:$/;"	t
src/colors.c.s	cmake-build-release/Makefile	/^src\/colors.c.s:$/;"	t
src/colors.i	cmake-build-debug/Makefile	/^src\/colors.i: src\/colors.c.i$/;"	t
src/colors.i	cmake-build-release/Makefile	/^src\/colors.i: src\/colors.c.i$/;"	t
src/colors.o	cmake-build-debug/Makefile	/^src\/colors.o: src\/colors.c.o$/;"	t
src/colors.o	cmake-build-release/Makefile	/^src\/colors.o: src\/colors.c.o$/;"	t
src/colors.s	cmake-build-debug/Makefile	/^src\/colors.s: src\/colors.c.s$/;"	t
src/colors.s	cmake-build-release/Makefile	/^src\/colors.s: src\/colors.c.s$/;"	t
src/datastructures/bitset.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/bitset.c.i:$/;"	t
src/datastructures/bitset.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/bitset.c.i:$/;"	t
src/datastructures/bitset.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/bitset.c.o:$/;"	t
src/datastructures/bitset.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/bitset.c.o:$/;"	t
src/datastructures/bitset.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/bitset.c.s:$/;"	t
src/datastructures/bitset.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/bitset.c.s:$/;"	t
src/datastructures/bitset.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/bitset.i: src\/datastructures\/bitset.c.i$/;"	t
src/datastructures/bitset.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/bitset.i: src\/datastructures\/bitset.c.i$/;"	t
src/datastructures/bitset.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/bitset.o: src\/datastructures\/bitset.c.o$/;"	t
src/datastructures/bitset.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/bitset.o: src\/datastructures\/bitset.c.o$/;"	t
src/datastructures/bitset.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/bitset.s: src\/datastructures\/bitset.c.s$/;"	t
src/datastructures/bitset.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/bitset.s: src\/datastructures\/bitset.c.s$/;"	t
src/datastructures/hash.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hash.c.i:$/;"	t
src/datastructures/hash.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hash.c.i:$/;"	t
src/datastructures/hash.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hash.c.o:$/;"	t
src/datastructures/hash.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hash.c.o:$/;"	t
src/datastructures/hash.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hash.c.s:$/;"	t
src/datastructures/hash.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hash.c.s:$/;"	t
src/datastructures/hash.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hash.i: src\/datastructures\/hash.c.i$/;"	t
src/datastructures/hash.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hash.i: src\/datastructures\/hash.c.i$/;"	t
src/datastructures/hash.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hash.o: src\/datastructures\/hash.c.o$/;"	t
src/datastructures/hash.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hash.o: src\/datastructures\/hash.c.o$/;"	t
src/datastructures/hash.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hash.s: src\/datastructures\/hash.c.s$/;"	t
src/datastructures/hash.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hash.s: src\/datastructures\/hash.c.s$/;"	t
src/datastructures/hashmap.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hashmap.c.i:$/;"	t
src/datastructures/hashmap.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hashmap.c.i:$/;"	t
src/datastructures/hashmap.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hashmap.c.o:$/;"	t
src/datastructures/hashmap.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hashmap.c.o:$/;"	t
src/datastructures/hashmap.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hashmap.c.s:$/;"	t
src/datastructures/hashmap.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hashmap.c.s:$/;"	t
src/datastructures/hashmap.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hashmap.i: src\/datastructures\/hashmap.c.i$/;"	t
src/datastructures/hashmap.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hashmap.i: src\/datastructures\/hashmap.c.i$/;"	t
src/datastructures/hashmap.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hashmap.o: src\/datastructures\/hashmap.c.o$/;"	t
src/datastructures/hashmap.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hashmap.o: src\/datastructures\/hashmap.c.o$/;"	t
src/datastructures/hashmap.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/hashmap.s: src\/datastructures\/hashmap.c.s$/;"	t
src/datastructures/hashmap.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/hashmap.s: src\/datastructures\/hashmap.c.s$/;"	t
src/datastructures/map.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/map.c.i:$/;"	t
src/datastructures/map.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/map.c.i:$/;"	t
src/datastructures/map.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/map.c.o:$/;"	t
src/datastructures/map.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/map.c.o:$/;"	t
src/datastructures/map.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/map.c.s:$/;"	t
src/datastructures/map.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/map.c.s:$/;"	t
src/datastructures/map.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/map.i: src\/datastructures\/map.c.i$/;"	t
src/datastructures/map.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/map.i: src\/datastructures\/map.c.i$/;"	t
src/datastructures/map.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/map.o: src\/datastructures\/map.c.o$/;"	t
src/datastructures/map.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/map.o: src\/datastructures\/map.c.o$/;"	t
src/datastructures/map.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/map.s: src\/datastructures\/map.c.s$/;"	t
src/datastructures/map.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/map.s: src\/datastructures\/map.c.s$/;"	t
src/datastructures/name_index.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/name_index.c.i:$/;"	t
src/datastructures/name_index.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/name_index.c.i:$/;"	t
src/datastructures/name_index.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/name_index.c.o:$/;"	t
src/datastructures/name_index.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/name_index.c.o:$/;"	t
src/datastructures/name_index.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/name_index.c.s:$/;"	t
src/datastructures/name_index.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/name_index.c.s:$/;"	t
src/datastructures/name_index.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/name_index.i: src\/datastructures\/name_index.c.i$/;"	t
src/datastructures/name_index.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/name_index.i: src\/datastructures\/name_index.c.i$/;"	t
src/datastructures/name_index.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/name_index.o: src\/datastructures\/name_index.c.o$/;"	t
src/datastructures/name_index.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/name_index.o: src\/datastructures\/name_index.c.o$/;"	t
src/datastructures/name_index.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/name_index.s: src\/datastructures\/name_index.c.s$/;"	t
src/datastructures/name_index.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/name_index.s: src\/datastructures\/name_index.c.s$/;"	t
src/datastructures/qsort.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/qsort.c.i:$/;"	t
src/datastructures/qsort.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/qsort.c.i:$/;"	t
src/datastructures/qsort.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/qsort.c.o:$/;"	t
src/datastructures/qsort.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/qsort.c.o:$/;"	t
src/datastructures/qsort.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/qsort.c.s:$/;"	t
src/datastructures/qsort.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/qsort.c.s:$/;"	t
src/datastructures/qsort.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/qsort.i: src\/datastructures\/qsort.c.i$/;"	t
src/datastructures/qsort.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/qsort.i: src\/datastructures\/qsort.c.i$/;"	t
src/datastructures/qsort.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/qsort.o: src\/datastructures\/qsort.c.o$/;"	t
src/datastructures/qsort.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/qsort.o: src\/datastructures\/qsort.c.o$/;"	t
src/datastructures/qsort.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/qsort.s: src\/datastructures\/qsort.c.s$/;"	t
src/datastructures/qsort.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/qsort.s: src\/datastructures\/qsort.c.s$/;"	t
src/datastructures/sparse.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/sparse.c.i:$/;"	t
src/datastructures/sparse.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/sparse.c.i:$/;"	t
src/datastructures/sparse.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/sparse.c.o:$/;"	t
src/datastructures/sparse.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/sparse.c.o:$/;"	t
src/datastructures/sparse.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/sparse.c.s:$/;"	t
src/datastructures/sparse.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/sparse.c.s:$/;"	t
src/datastructures/sparse.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/sparse.i: src\/datastructures\/sparse.c.i$/;"	t
src/datastructures/sparse.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/sparse.i: src\/datastructures\/sparse.c.i$/;"	t
src/datastructures/sparse.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/sparse.o: src\/datastructures\/sparse.c.o$/;"	t
src/datastructures/sparse.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/sparse.o: src\/datastructures\/sparse.c.o$/;"	t
src/datastructures/sparse.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/sparse.s: src\/datastructures\/sparse.c.s$/;"	t
src/datastructures/sparse.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/sparse.s: src\/datastructures\/sparse.c.s$/;"	t
src/datastructures/strbuf.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/strbuf.c.i:$/;"	t
src/datastructures/strbuf.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/strbuf.c.i:$/;"	t
src/datastructures/strbuf.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/strbuf.c.o:$/;"	t
src/datastructures/strbuf.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/strbuf.c.o:$/;"	t
src/datastructures/strbuf.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/strbuf.c.s:$/;"	t
src/datastructures/strbuf.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/strbuf.c.s:$/;"	t
src/datastructures/strbuf.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/strbuf.i: src\/datastructures\/strbuf.c.i$/;"	t
src/datastructures/strbuf.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/strbuf.i: src\/datastructures\/strbuf.c.i$/;"	t
src/datastructures/strbuf.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/strbuf.o: src\/datastructures\/strbuf.c.o$/;"	t
src/datastructures/strbuf.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/strbuf.o: src\/datastructures\/strbuf.c.o$/;"	t
src/datastructures/strbuf.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/strbuf.s: src\/datastructures\/strbuf.c.s$/;"	t
src/datastructures/strbuf.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/strbuf.s: src\/datastructures\/strbuf.c.s$/;"	t
src/datastructures/switch_list.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/switch_list.c.i:$/;"	t
src/datastructures/switch_list.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/switch_list.c.i:$/;"	t
src/datastructures/switch_list.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/switch_list.c.o:$/;"	t
src/datastructures/switch_list.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/switch_list.c.o:$/;"	t
src/datastructures/switch_list.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/switch_list.c.s:$/;"	t
src/datastructures/switch_list.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/switch_list.c.s:$/;"	t
src/datastructures/switch_list.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/switch_list.i: src\/datastructures\/switch_list.c.i$/;"	t
src/datastructures/switch_list.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/switch_list.i: src\/datastructures\/switch_list.c.i$/;"	t
src/datastructures/switch_list.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/switch_list.o: src\/datastructures\/switch_list.c.o$/;"	t
src/datastructures/switch_list.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/switch_list.o: src\/datastructures\/switch_list.c.o$/;"	t
src/datastructures/switch_list.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/switch_list.s: src\/datastructures\/switch_list.c.s$/;"	t
src/datastructures/switch_list.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/switch_list.s: src\/datastructures\/switch_list.c.s$/;"	t
src/datastructures/vector.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/vector.c.i:$/;"	t
src/datastructures/vector.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/vector.c.i:$/;"	t
src/datastructures/vector.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/vector.c.o:$/;"	t
src/datastructures/vector.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/vector.c.o:$/;"	t
src/datastructures/vector.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/vector.c.s:$/;"	t
src/datastructures/vector.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/vector.c.s:$/;"	t
src/datastructures/vector.i	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/vector.i: src\/datastructures\/vector.c.i$/;"	t
src/datastructures/vector.i	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/vector.i: src\/datastructures\/vector.c.i$/;"	t
src/datastructures/vector.o	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/vector.o: src\/datastructures\/vector.c.o$/;"	t
src/datastructures/vector.o	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/vector.o: src\/datastructures\/vector.c.o$/;"	t
src/datastructures/vector.s	cmake-build-debug/lib/flecs/Makefile	/^src\/datastructures\/vector.s: src\/datastructures\/vector.c.s$/;"	t
src/datastructures/vector.s	cmake-build-release/lib/flecs/Makefile	/^src\/datastructures\/vector.s: src\/datastructures\/vector.c.s$/;"	t
src/ecs/components.c.i	cmake-build-debug/Makefile	/^src\/ecs\/components.c.i:$/;"	t
src/ecs/components.c.i	cmake-build-release/Makefile	/^src\/ecs\/components.c.i:$/;"	t
src/ecs/components.c.o	cmake-build-debug/Makefile	/^src\/ecs\/components.c.o:$/;"	t
src/ecs/components.c.o	cmake-build-release/Makefile	/^src\/ecs\/components.c.o:$/;"	t
src/ecs/components.c.s	cmake-build-debug/Makefile	/^src\/ecs\/components.c.s:$/;"	t
src/ecs/components.c.s	cmake-build-release/Makefile	/^src\/ecs\/components.c.s:$/;"	t
src/ecs/components.i	cmake-build-debug/Makefile	/^src\/ecs\/components.i: src\/ecs\/components.c.i$/;"	t
src/ecs/components.i	cmake-build-release/Makefile	/^src\/ecs\/components.i: src\/ecs\/components.c.i$/;"	t
src/ecs/components.o	cmake-build-debug/Makefile	/^src\/ecs\/components.o: src\/ecs\/components.c.o$/;"	t
src/ecs/components.o	cmake-build-release/Makefile	/^src\/ecs\/components.o: src\/ecs\/components.c.o$/;"	t
src/ecs/components.s	cmake-build-debug/Makefile	/^src\/ecs\/components.s: src\/ecs\/components.c.s$/;"	t
src/ecs/components.s	cmake-build-release/Makefile	/^src\/ecs\/components.s: src\/ecs\/components.c.s$/;"	t
src/ecs/systems.c.i	cmake-build-debug/Makefile	/^src\/ecs\/systems.c.i:$/;"	t
src/ecs/systems.c.i	cmake-build-release/Makefile	/^src\/ecs\/systems.c.i:$/;"	t
src/ecs/systems.c.o	cmake-build-debug/Makefile	/^src\/ecs\/systems.c.o:$/;"	t
src/ecs/systems.c.o	cmake-build-release/Makefile	/^src\/ecs\/systems.c.o:$/;"	t
src/ecs/systems.c.s	cmake-build-debug/Makefile	/^src\/ecs\/systems.c.s:$/;"	t
src/ecs/systems.c.s	cmake-build-release/Makefile	/^src\/ecs\/systems.c.s:$/;"	t
src/ecs/systems.i	cmake-build-debug/Makefile	/^src\/ecs\/systems.i: src\/ecs\/systems.c.i$/;"	t
src/ecs/systems.i	cmake-build-release/Makefile	/^src\/ecs\/systems.i: src\/ecs\/systems.c.i$/;"	t
src/ecs/systems.o	cmake-build-debug/Makefile	/^src\/ecs\/systems.o: src\/ecs\/systems.c.o$/;"	t
src/ecs/systems.o	cmake-build-release/Makefile	/^src\/ecs\/systems.o: src\/ecs\/systems.c.o$/;"	t
src/ecs/systems.s	cmake-build-debug/Makefile	/^src\/ecs\/systems.s: src\/ecs\/systems.c.s$/;"	t
src/ecs/systems.s	cmake-build-release/Makefile	/^src\/ecs\/systems.s: src\/ecs\/systems.c.s$/;"	t
src/entity.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/entity.c.i:$/;"	t
src/entity.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/entity.c.i:$/;"	t
src/entity.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/entity.c.o:$/;"	t
src/entity.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/entity.c.o:$/;"	t
src/entity.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/entity.c.s:$/;"	t
src/entity.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/entity.c.s:$/;"	t
src/entity.i	cmake-build-debug/lib/flecs/Makefile	/^src\/entity.i: src\/entity.c.i$/;"	t
src/entity.i	cmake-build-release/lib/flecs/Makefile	/^src\/entity.i: src\/entity.c.i$/;"	t
src/entity.o	cmake-build-debug/lib/flecs/Makefile	/^src\/entity.o: src\/entity.c.o$/;"	t
src/entity.o	cmake-build-release/lib/flecs/Makefile	/^src\/entity.o: src\/entity.c.o$/;"	t
src/entity.s	cmake-build-debug/lib/flecs/Makefile	/^src\/entity.s: src\/entity.c.s$/;"	t
src/entity.s	cmake-build-release/lib/flecs/Makefile	/^src\/entity.s: src\/entity.c.s$/;"	t
src/filter.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/filter.c.i:$/;"	t
src/filter.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/filter.c.i:$/;"	t
src/filter.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/filter.c.o:$/;"	t
src/filter.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/filter.c.o:$/;"	t
src/filter.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/filter.c.s:$/;"	t
src/filter.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/filter.c.s:$/;"	t
src/filter.i	cmake-build-debug/lib/flecs/Makefile	/^src\/filter.i: src\/filter.c.i$/;"	t
src/filter.i	cmake-build-release/lib/flecs/Makefile	/^src\/filter.i: src\/filter.c.i$/;"	t
src/filter.o	cmake-build-debug/lib/flecs/Makefile	/^src\/filter.o: src\/filter.c.o$/;"	t
src/filter.o	cmake-build-release/lib/flecs/Makefile	/^src\/filter.o: src\/filter.c.o$/;"	t
src/filter.s	cmake-build-debug/lib/flecs/Makefile	/^src\/filter.s: src\/filter.c.s$/;"	t
src/filter.s	cmake-build-release/lib/flecs/Makefile	/^src\/filter.s: src\/filter.c.s$/;"	t
src/gamestate.c.i	cmake-build-debug/Makefile	/^src\/gamestate.c.i:$/;"	t
src/gamestate.c.i	cmake-build-release/Makefile	/^src\/gamestate.c.i:$/;"	t
src/gamestate.c.o	cmake-build-debug/Makefile	/^src\/gamestate.c.o:$/;"	t
src/gamestate.c.o	cmake-build-release/Makefile	/^src\/gamestate.c.o:$/;"	t
src/gamestate.c.s	cmake-build-debug/Makefile	/^src\/gamestate.c.s:$/;"	t
src/gamestate.c.s	cmake-build-release/Makefile	/^src\/gamestate.c.s:$/;"	t
src/gamestate.i	cmake-build-debug/Makefile	/^src\/gamestate.i: src\/gamestate.c.i$/;"	t
src/gamestate.i	cmake-build-release/Makefile	/^src\/gamestate.i: src\/gamestate.c.i$/;"	t
src/gamestate.o	cmake-build-debug/Makefile	/^src\/gamestate.o: src\/gamestate.c.o$/;"	t
src/gamestate.o	cmake-build-release/Makefile	/^src\/gamestate.o: src\/gamestate.c.o$/;"	t
src/gamestate.s	cmake-build-debug/Makefile	/^src\/gamestate.s: src\/gamestate.c.s$/;"	t
src/gamestate.s	cmake-build-release/Makefile	/^src\/gamestate.s: src\/gamestate.c.s$/;"	t
src/hierarchy.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/hierarchy.c.i:$/;"	t
src/hierarchy.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/hierarchy.c.i:$/;"	t
src/hierarchy.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/hierarchy.c.o:$/;"	t
src/hierarchy.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/hierarchy.c.o:$/;"	t
src/hierarchy.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/hierarchy.c.s:$/;"	t
src/hierarchy.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/hierarchy.c.s:$/;"	t
src/hierarchy.i	cmake-build-debug/lib/flecs/Makefile	/^src\/hierarchy.i: src\/hierarchy.c.i$/;"	t
src/hierarchy.i	cmake-build-release/lib/flecs/Makefile	/^src\/hierarchy.i: src\/hierarchy.c.i$/;"	t
src/hierarchy.o	cmake-build-debug/lib/flecs/Makefile	/^src\/hierarchy.o: src\/hierarchy.c.o$/;"	t
src/hierarchy.o	cmake-build-release/lib/flecs/Makefile	/^src\/hierarchy.o: src\/hierarchy.c.o$/;"	t
src/hierarchy.s	cmake-build-debug/lib/flecs/Makefile	/^src\/hierarchy.s: src\/hierarchy.c.s$/;"	t
src/hierarchy.s	cmake-build-release/lib/flecs/Makefile	/^src\/hierarchy.s: src\/hierarchy.c.s$/;"	t
src/iter.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/iter.c.i:$/;"	t
src/iter.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/iter.c.i:$/;"	t
src/iter.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/iter.c.o:$/;"	t
src/iter.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/iter.c.o:$/;"	t
src/iter.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/iter.c.s:$/;"	t
src/iter.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/iter.c.s:$/;"	t
src/iter.i	cmake-build-debug/lib/flecs/Makefile	/^src\/iter.i: src\/iter.c.i$/;"	t
src/iter.i	cmake-build-release/lib/flecs/Makefile	/^src\/iter.i: src\/iter.c.i$/;"	t
src/iter.o	cmake-build-debug/lib/flecs/Makefile	/^src\/iter.o: src\/iter.c.o$/;"	t
src/iter.o	cmake-build-release/lib/flecs/Makefile	/^src\/iter.o: src\/iter.c.o$/;"	t
src/iter.s	cmake-build-debug/lib/flecs/Makefile	/^src\/iter.s: src\/iter.c.s$/;"	t
src/iter.s	cmake-build-release/lib/flecs/Makefile	/^src\/iter.s: src\/iter.c.s$/;"	t
src/lfbinarytree.c.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfbinarytree.c.i:$/;"	t
src/lfbinarytree.c.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfbinarytree.c.i:$/;"	t
src/lfbinarytree.c.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfbinarytree.c.o:$/;"	t
src/lfbinarytree.c.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfbinarytree.c.o:$/;"	t
src/lfbinarytree.c.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfbinarytree.c.s:$/;"	t
src/lfbinarytree.c.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfbinarytree.c.s:$/;"	t
src/lfbinarytree.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfbinarytree.i: src\/lfbinarytree.c.i$/;"	t
src/lfbinarytree.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfbinarytree.i: src\/lfbinarytree.c.i$/;"	t
src/lfbinarytree.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfbinarytree.o: src\/lfbinarytree.c.o$/;"	t
src/lfbinarytree.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfbinarytree.o: src\/lfbinarytree.c.o$/;"	t
src/lfbinarytree.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfbinarytree.s: src\/lfbinarytree.c.s$/;"	t
src/lfbinarytree.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfbinarytree.s: src\/lfbinarytree.c.s$/;"	t
src/lfinput.c.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfinput.c.i:$/;"	t
src/lfinput.c.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfinput.c.i:$/;"	t
src/lfinput.c.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfinput.c.o:$/;"	t
src/lfinput.c.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfinput.c.o:$/;"	t
src/lfinput.c.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfinput.c.s:$/;"	t
src/lfinput.c.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfinput.c.s:$/;"	t
src/lfinput.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfinput.i: src\/lfinput.c.i$/;"	t
src/lfinput.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfinput.i: src\/lfinput.c.i$/;"	t
src/lfinput.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfinput.o: src\/lfinput.c.o$/;"	t
src/lfinput.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfinput.o: src\/lfinput.c.o$/;"	t
src/lfinput.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfinput.s: src\/lfinput.c.s$/;"	t
src/lfinput.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfinput.s: src\/lfinput.c.s$/;"	t
src/lflinkedlist.c.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lflinkedlist.c.i:$/;"	t
src/lflinkedlist.c.i	cmake-build-release/lib/libflint/Makefile	/^src\/lflinkedlist.c.i:$/;"	t
src/lflinkedlist.c.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lflinkedlist.c.o:$/;"	t
src/lflinkedlist.c.o	cmake-build-release/lib/libflint/Makefile	/^src\/lflinkedlist.c.o:$/;"	t
src/lflinkedlist.c.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lflinkedlist.c.s:$/;"	t
src/lflinkedlist.c.s	cmake-build-release/lib/libflint/Makefile	/^src\/lflinkedlist.c.s:$/;"	t
src/lflinkedlist.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lflinkedlist.i: src\/lflinkedlist.c.i$/;"	t
src/lflinkedlist.i	cmake-build-release/lib/libflint/Makefile	/^src\/lflinkedlist.i: src\/lflinkedlist.c.i$/;"	t
src/lflinkedlist.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lflinkedlist.o: src\/lflinkedlist.c.o$/;"	t
src/lflinkedlist.o	cmake-build-release/lib/libflint/Makefile	/^src\/lflinkedlist.o: src\/lflinkedlist.c.o$/;"	t
src/lflinkedlist.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lflinkedlist.s: src\/lflinkedlist.c.s$/;"	t
src/lflinkedlist.s	cmake-build-release/lib/libflint/Makefile	/^src\/lflinkedlist.s: src\/lflinkedlist.c.s$/;"	t
src/lfmath.c.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfmath.c.i:$/;"	t
src/lfmath.c.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfmath.c.i:$/;"	t
src/lfmath.c.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfmath.c.o:$/;"	t
src/lfmath.c.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfmath.c.o:$/;"	t
src/lfmath.c.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfmath.c.s:$/;"	t
src/lfmath.c.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfmath.c.s:$/;"	t
src/lfmath.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfmath.i: src\/lfmath.c.i$/;"	t
src/lfmath.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfmath.i: src\/lfmath.c.i$/;"	t
src/lfmath.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfmath.o: src\/lfmath.c.o$/;"	t
src/lfmath.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfmath.o: src\/lfmath.c.o$/;"	t
src/lfmath.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfmath.s: src\/lfmath.c.s$/;"	t
src/lfmath.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfmath.s: src\/lfmath.c.s$/;"	t
src/lfset.c.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfset.c.i:$/;"	t
src/lfset.c.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfset.c.i:$/;"	t
src/lfset.c.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfset.c.o:$/;"	t
src/lfset.c.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfset.c.o:$/;"	t
src/lfset.c.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfset.c.s:$/;"	t
src/lfset.c.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfset.c.s:$/;"	t
src/lfset.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfset.i: src\/lfset.c.i$/;"	t
src/lfset.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfset.i: src\/lfset.c.i$/;"	t
src/lfset.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfset.o: src\/lfset.c.o$/;"	t
src/lfset.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfset.o: src\/lfset.c.o$/;"	t
src/lfset.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfset.s: src\/lfset.c.s$/;"	t
src/lfset.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfset.s: src\/lfset.c.s$/;"	t
src/lfstack.c.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfstack.c.i:$/;"	t
src/lfstack.c.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfstack.c.i:$/;"	t
src/lfstack.c.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfstack.c.o:$/;"	t
src/lfstack.c.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfstack.c.o:$/;"	t
src/lfstack.c.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfstack.c.s:$/;"	t
src/lfstack.c.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfstack.c.s:$/;"	t
src/lfstack.i	cmake-build-debug/lib/libflint/Makefile	/^src\/lfstack.i: src\/lfstack.c.i$/;"	t
src/lfstack.i	cmake-build-release/lib/libflint/Makefile	/^src\/lfstack.i: src\/lfstack.c.i$/;"	t
src/lfstack.o	cmake-build-debug/lib/libflint/Makefile	/^src\/lfstack.o: src\/lfstack.c.o$/;"	t
src/lfstack.o	cmake-build-release/lib/libflint/Makefile	/^src\/lfstack.o: src\/lfstack.c.o$/;"	t
src/lfstack.s	cmake-build-debug/lib/libflint/Makefile	/^src\/lfstack.s: src\/lfstack.c.s$/;"	t
src/lfstack.s	cmake-build-release/lib/libflint/Makefile	/^src\/lfstack.s: src\/lfstack.c.s$/;"	t
src/main.c.i	cmake-build-debug/Makefile	/^src\/main.c.i:$/;"	t
src/main.c.i	cmake-build-release/Makefile	/^src\/main.c.i:$/;"	t
src/main.c.o	cmake-build-debug/Makefile	/^src\/main.c.o:$/;"	t
src/main.c.o	cmake-build-release/Makefile	/^src\/main.c.o:$/;"	t
src/main.c.s	cmake-build-debug/Makefile	/^src\/main.c.s:$/;"	t
src/main.c.s	cmake-build-release/Makefile	/^src\/main.c.s:$/;"	t
src/main.i	cmake-build-debug/Makefile	/^src\/main.i: src\/main.c.i$/;"	t
src/main.i	cmake-build-release/Makefile	/^src\/main.i: src\/main.c.i$/;"	t
src/main.o	cmake-build-debug/Makefile	/^src\/main.o: src\/main.c.o$/;"	t
src/main.o	cmake-build-release/Makefile	/^src\/main.o: src\/main.c.o$/;"	t
src/main.s	cmake-build-debug/Makefile	/^src\/main.s: src\/main.c.s$/;"	t
src/main.s	cmake-build-release/Makefile	/^src\/main.s: src\/main.c.s$/;"	t
src/mapping/generators/test.c.i	cmake-build-debug/Makefile	/^src\/mapping\/generators\/test.c.i:$/;"	t
src/mapping/generators/test.c.i	cmake-build-release/Makefile	/^src\/mapping\/generators\/test.c.i:$/;"	t
src/mapping/generators/test.c.o	cmake-build-debug/Makefile	/^src\/mapping\/generators\/test.c.o:$/;"	t
src/mapping/generators/test.c.o	cmake-build-release/Makefile	/^src\/mapping\/generators\/test.c.o:$/;"	t
src/mapping/generators/test.c.s	cmake-build-debug/Makefile	/^src\/mapping\/generators\/test.c.s:$/;"	t
src/mapping/generators/test.c.s	cmake-build-release/Makefile	/^src\/mapping\/generators\/test.c.s:$/;"	t
src/mapping/generators/test.i	cmake-build-debug/Makefile	/^src\/mapping\/generators\/test.i: src\/mapping\/generators\/test.c.i$/;"	t
src/mapping/generators/test.i	cmake-build-release/Makefile	/^src\/mapping\/generators\/test.i: src\/mapping\/generators\/test.c.i$/;"	t
src/mapping/generators/test.o	cmake-build-debug/Makefile	/^src\/mapping\/generators\/test.o: src\/mapping\/generators\/test.c.o$/;"	t
src/mapping/generators/test.o	cmake-build-release/Makefile	/^src\/mapping\/generators\/test.o: src\/mapping\/generators\/test.c.o$/;"	t
src/mapping/generators/test.s	cmake-build-debug/Makefile	/^src\/mapping\/generators\/test.s: src\/mapping\/generators\/test.c.s$/;"	t
src/mapping/generators/test.s	cmake-build-release/Makefile	/^src\/mapping\/generators\/test.s: src\/mapping\/generators\/test.c.s$/;"	t
src/mapping/map.c.i	cmake-build-debug/Makefile	/^src\/mapping\/map.c.i:$/;"	t
src/mapping/map.c.i	cmake-build-release/Makefile	/^src\/mapping\/map.c.i:$/;"	t
src/mapping/map.c.o	cmake-build-debug/Makefile	/^src\/mapping\/map.c.o:$/;"	t
src/mapping/map.c.o	cmake-build-release/Makefile	/^src\/mapping\/map.c.o:$/;"	t
src/mapping/map.c.s	cmake-build-debug/Makefile	/^src\/mapping\/map.c.s:$/;"	t
src/mapping/map.c.s	cmake-build-release/Makefile	/^src\/mapping\/map.c.s:$/;"	t
src/mapping/map.i	cmake-build-debug/Makefile	/^src\/mapping\/map.i: src\/mapping\/map.c.i$/;"	t
src/mapping/map.i	cmake-build-release/Makefile	/^src\/mapping\/map.i: src\/mapping\/map.c.i$/;"	t
src/mapping/map.o	cmake-build-debug/Makefile	/^src\/mapping\/map.o: src\/mapping\/map.c.o$/;"	t
src/mapping/map.o	cmake-build-release/Makefile	/^src\/mapping\/map.o: src\/mapping\/map.c.o$/;"	t
src/mapping/map.s	cmake-build-debug/Makefile	/^src\/mapping\/map.s: src\/mapping\/map.c.s$/;"	t
src/mapping/map.s	cmake-build-release/Makefile	/^src\/mapping\/map.s: src\/mapping\/map.c.s$/;"	t
src/misc.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/misc.c.i:$/;"	t
src/misc.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/misc.c.i:$/;"	t
src/misc.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/misc.c.o:$/;"	t
src/misc.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/misc.c.o:$/;"	t
src/misc.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/misc.c.s:$/;"	t
src/misc.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/misc.c.s:$/;"	t
src/misc.i	cmake-build-debug/lib/flecs/Makefile	/^src\/misc.i: src\/misc.c.i$/;"	t
src/misc.i	cmake-build-release/lib/flecs/Makefile	/^src\/misc.i: src\/misc.c.i$/;"	t
src/misc.o	cmake-build-debug/lib/flecs/Makefile	/^src\/misc.o: src\/misc.c.o$/;"	t
src/misc.o	cmake-build-release/lib/flecs/Makefile	/^src\/misc.o: src\/misc.c.o$/;"	t
src/misc.s	cmake-build-debug/lib/flecs/Makefile	/^src\/misc.s: src\/misc.c.s$/;"	t
src/misc.s	cmake-build-release/lib/flecs/Makefile	/^src\/misc.s: src\/misc.c.s$/;"	t
src/observable.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/observable.c.i:$/;"	t
src/observable.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/observable.c.i:$/;"	t
src/observable.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/observable.c.o:$/;"	t
src/observable.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/observable.c.o:$/;"	t
src/observable.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/observable.c.s:$/;"	t
src/observable.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/observable.c.s:$/;"	t
src/observable.i	cmake-build-debug/lib/flecs/Makefile	/^src\/observable.i: src\/observable.c.i$/;"	t
src/observable.i	cmake-build-release/lib/flecs/Makefile	/^src\/observable.i: src\/observable.c.i$/;"	t
src/observable.o	cmake-build-debug/lib/flecs/Makefile	/^src\/observable.o: src\/observable.c.o$/;"	t
src/observable.o	cmake-build-release/lib/flecs/Makefile	/^src\/observable.o: src\/observable.c.o$/;"	t
src/observable.s	cmake-build-debug/lib/flecs/Makefile	/^src\/observable.s: src\/observable.c.s$/;"	t
src/observable.s	cmake-build-release/lib/flecs/Makefile	/^src\/observable.s: src\/observable.c.s$/;"	t
src/observer.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/observer.c.i:$/;"	t
src/observer.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/observer.c.i:$/;"	t
src/observer.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/observer.c.o:$/;"	t
src/observer.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/observer.c.o:$/;"	t
src/observer.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/observer.c.s:$/;"	t
src/observer.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/observer.c.s:$/;"	t
src/observer.i	cmake-build-debug/lib/flecs/Makefile	/^src\/observer.i: src\/observer.c.i$/;"	t
src/observer.i	cmake-build-release/lib/flecs/Makefile	/^src\/observer.i: src\/observer.c.i$/;"	t
src/observer.o	cmake-build-debug/lib/flecs/Makefile	/^src\/observer.o: src\/observer.c.o$/;"	t
src/observer.o	cmake-build-release/lib/flecs/Makefile	/^src\/observer.o: src\/observer.c.o$/;"	t
src/observer.s	cmake-build-debug/lib/flecs/Makefile	/^src\/observer.s: src\/observer.c.s$/;"	t
src/observer.s	cmake-build-release/lib/flecs/Makefile	/^src\/observer.s: src\/observer.c.s$/;"	t
src/os_api.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/os_api.c.i:$/;"	t
src/os_api.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/os_api.c.i:$/;"	t
src/os_api.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/os_api.c.o:$/;"	t
src/os_api.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/os_api.c.o:$/;"	t
src/os_api.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/os_api.c.s:$/;"	t
src/os_api.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/os_api.c.s:$/;"	t
src/os_api.i	cmake-build-debug/lib/flecs/Makefile	/^src\/os_api.i: src\/os_api.c.i$/;"	t
src/os_api.i	cmake-build-release/lib/flecs/Makefile	/^src\/os_api.i: src\/os_api.c.i$/;"	t
src/os_api.o	cmake-build-debug/lib/flecs/Makefile	/^src\/os_api.o: src\/os_api.c.o$/;"	t
src/os_api.o	cmake-build-release/lib/flecs/Makefile	/^src\/os_api.o: src\/os_api.c.o$/;"	t
src/os_api.s	cmake-build-debug/lib/flecs/Makefile	/^src\/os_api.s: src\/os_api.c.s$/;"	t
src/os_api.s	cmake-build-release/lib/flecs/Makefile	/^src\/os_api.s: src\/os_api.c.s$/;"	t
src/poly.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/poly.c.i:$/;"	t
src/poly.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/poly.c.i:$/;"	t
src/poly.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/poly.c.o:$/;"	t
src/poly.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/poly.c.o:$/;"	t
src/poly.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/poly.c.s:$/;"	t
src/poly.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/poly.c.s:$/;"	t
src/poly.i	cmake-build-debug/lib/flecs/Makefile	/^src\/poly.i: src\/poly.c.i$/;"	t
src/poly.i	cmake-build-release/lib/flecs/Makefile	/^src\/poly.i: src\/poly.c.i$/;"	t
src/poly.o	cmake-build-debug/lib/flecs/Makefile	/^src\/poly.o: src\/poly.c.o$/;"	t
src/poly.o	cmake-build-release/lib/flecs/Makefile	/^src\/poly.o: src\/poly.c.o$/;"	t
src/poly.s	cmake-build-debug/lib/flecs/Makefile	/^src\/poly.s: src\/poly.c.s$/;"	t
src/poly.s	cmake-build-release/lib/flecs/Makefile	/^src\/poly.s: src\/poly.c.s$/;"	t
src/query.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/query.c.i:$/;"	t
src/query.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/query.c.i:$/;"	t
src/query.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/query.c.o:$/;"	t
src/query.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/query.c.o:$/;"	t
src/query.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/query.c.s:$/;"	t
src/query.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/query.c.s:$/;"	t
src/query.i	cmake-build-debug/lib/flecs/Makefile	/^src\/query.i: src\/query.c.i$/;"	t
src/query.i	cmake-build-release/lib/flecs/Makefile	/^src\/query.i: src\/query.c.i$/;"	t
src/query.o	cmake-build-debug/lib/flecs/Makefile	/^src\/query.o: src\/query.c.o$/;"	t
src/query.o	cmake-build-release/lib/flecs/Makefile	/^src\/query.o: src\/query.c.o$/;"	t
src/query.s	cmake-build-debug/lib/flecs/Makefile	/^src\/query.s: src\/query.c.s$/;"	t
src/query.s	cmake-build-release/lib/flecs/Makefile	/^src\/query.s: src\/query.c.s$/;"	t
src/screens/gamescreen.c.i	cmake-build-debug/Makefile	/^src\/screens\/gamescreen.c.i:$/;"	t
src/screens/gamescreen.c.i	cmake-build-release/Makefile	/^src\/screens\/gamescreen.c.i:$/;"	t
src/screens/gamescreen.c.o	cmake-build-debug/Makefile	/^src\/screens\/gamescreen.c.o:$/;"	t
src/screens/gamescreen.c.o	cmake-build-release/Makefile	/^src\/screens\/gamescreen.c.o:$/;"	t
src/screens/gamescreen.c.s	cmake-build-debug/Makefile	/^src\/screens\/gamescreen.c.s:$/;"	t
src/screens/gamescreen.c.s	cmake-build-release/Makefile	/^src\/screens\/gamescreen.c.s:$/;"	t
src/screens/gamescreen.i	cmake-build-debug/Makefile	/^src\/screens\/gamescreen.i: src\/screens\/gamescreen.c.i$/;"	t
src/screens/gamescreen.i	cmake-build-release/Makefile	/^src\/screens\/gamescreen.i: src\/screens\/gamescreen.c.i$/;"	t
src/screens/gamescreen.o	cmake-build-debug/Makefile	/^src\/screens\/gamescreen.o: src\/screens\/gamescreen.c.o$/;"	t
src/screens/gamescreen.o	cmake-build-release/Makefile	/^src\/screens\/gamescreen.o: src\/screens\/gamescreen.c.o$/;"	t
src/screens/gamescreen.s	cmake-build-debug/Makefile	/^src\/screens\/gamescreen.s: src\/screens\/gamescreen.c.s$/;"	t
src/screens/gamescreen.s	cmake-build-release/Makefile	/^src\/screens\/gamescreen.s: src\/screens\/gamescreen.c.s$/;"	t
src/screens/mainmenu.c.i	cmake-build-debug/Makefile	/^src\/screens\/mainmenu.c.i:$/;"	t
src/screens/mainmenu.c.i	cmake-build-release/Makefile	/^src\/screens\/mainmenu.c.i:$/;"	t
src/screens/mainmenu.c.o	cmake-build-debug/Makefile	/^src\/screens\/mainmenu.c.o:$/;"	t
src/screens/mainmenu.c.o	cmake-build-release/Makefile	/^src\/screens\/mainmenu.c.o:$/;"	t
src/screens/mainmenu.c.s	cmake-build-debug/Makefile	/^src\/screens\/mainmenu.c.s:$/;"	t
src/screens/mainmenu.c.s	cmake-build-release/Makefile	/^src\/screens\/mainmenu.c.s:$/;"	t
src/screens/mainmenu.i	cmake-build-debug/Makefile	/^src\/screens\/mainmenu.i: src\/screens\/mainmenu.c.i$/;"	t
src/screens/mainmenu.i	cmake-build-release/Makefile	/^src\/screens\/mainmenu.i: src\/screens\/mainmenu.c.i$/;"	t
src/screens/mainmenu.o	cmake-build-debug/Makefile	/^src\/screens\/mainmenu.o: src\/screens\/mainmenu.c.o$/;"	t
src/screens/mainmenu.o	cmake-build-release/Makefile	/^src\/screens\/mainmenu.o: src\/screens\/mainmenu.c.o$/;"	t
src/screens/mainmenu.s	cmake-build-debug/Makefile	/^src\/screens\/mainmenu.s: src\/screens\/mainmenu.c.s$/;"	t
src/screens/mainmenu.s	cmake-build-release/Makefile	/^src\/screens\/mainmenu.s: src\/screens\/mainmenu.c.s$/;"	t
src/screens/manager.c.i	cmake-build-debug/Makefile	/^src\/screens\/manager.c.i:$/;"	t
src/screens/manager.c.i	cmake-build-release/Makefile	/^src\/screens\/manager.c.i:$/;"	t
src/screens/manager.c.o	cmake-build-debug/Makefile	/^src\/screens\/manager.c.o:$/;"	t
src/screens/manager.c.o	cmake-build-release/Makefile	/^src\/screens\/manager.c.o:$/;"	t
src/screens/manager.c.s	cmake-build-debug/Makefile	/^src\/screens\/manager.c.s:$/;"	t
src/screens/manager.c.s	cmake-build-release/Makefile	/^src\/screens\/manager.c.s:$/;"	t
src/screens/manager.i	cmake-build-debug/Makefile	/^src\/screens\/manager.i: src\/screens\/manager.c.i$/;"	t
src/screens/manager.i	cmake-build-release/Makefile	/^src\/screens\/manager.i: src\/screens\/manager.c.i$/;"	t
src/screens/manager.o	cmake-build-debug/Makefile	/^src\/screens\/manager.o: src\/screens\/manager.c.o$/;"	t
src/screens/manager.o	cmake-build-release/Makefile	/^src\/screens\/manager.o: src\/screens\/manager.c.o$/;"	t
src/screens/manager.s	cmake-build-debug/Makefile	/^src\/screens\/manager.s: src\/screens\/manager.c.s$/;"	t
src/screens/manager.s	cmake-build-release/Makefile	/^src\/screens\/manager.s: src\/screens\/manager.c.s$/;"	t
src/screens/utility.c.i	cmake-build-debug/Makefile	/^src\/screens\/utility.c.i:$/;"	t
src/screens/utility.c.i	cmake-build-release/Makefile	/^src\/screens\/utility.c.i:$/;"	t
src/screens/utility.c.o	cmake-build-debug/Makefile	/^src\/screens\/utility.c.o:$/;"	t
src/screens/utility.c.o	cmake-build-release/Makefile	/^src\/screens\/utility.c.o:$/;"	t
src/screens/utility.c.s	cmake-build-debug/Makefile	/^src\/screens\/utility.c.s:$/;"	t
src/screens/utility.c.s	cmake-build-release/Makefile	/^src\/screens\/utility.c.s:$/;"	t
src/screens/utility.i	cmake-build-debug/Makefile	/^src\/screens\/utility.i: src\/screens\/utility.c.i$/;"	t
src/screens/utility.i	cmake-build-release/Makefile	/^src\/screens\/utility.i: src\/screens\/utility.c.i$/;"	t
src/screens/utility.o	cmake-build-debug/Makefile	/^src\/screens\/utility.o: src\/screens\/utility.c.o$/;"	t
src/screens/utility.o	cmake-build-release/Makefile	/^src\/screens\/utility.o: src\/screens\/utility.c.o$/;"	t
src/screens/utility.s	cmake-build-debug/Makefile	/^src\/screens\/utility.s: src\/screens\/utility.c.s$/;"	t
src/screens/utility.s	cmake-build-release/Makefile	/^src\/screens\/utility.s: src\/screens\/utility.c.s$/;"	t
src/search.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/search.c.i:$/;"	t
src/search.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/search.c.i:$/;"	t
src/search.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/search.c.o:$/;"	t
src/search.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/search.c.o:$/;"	t
src/search.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/search.c.s:$/;"	t
src/search.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/search.c.s:$/;"	t
src/search.i	cmake-build-debug/lib/flecs/Makefile	/^src\/search.i: src\/search.c.i$/;"	t
src/search.i	cmake-build-release/lib/flecs/Makefile	/^src\/search.i: src\/search.c.i$/;"	t
src/search.o	cmake-build-debug/lib/flecs/Makefile	/^src\/search.o: src\/search.c.o$/;"	t
src/search.o	cmake-build-release/lib/flecs/Makefile	/^src\/search.o: src\/search.c.o$/;"	t
src/search.s	cmake-build-debug/lib/flecs/Makefile	/^src\/search.s: src\/search.c.s$/;"	t
src/search.s	cmake-build-release/lib/flecs/Makefile	/^src\/search.s: src\/search.c.s$/;"	t
src/stage.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/stage.c.i:$/;"	t
src/stage.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/stage.c.i:$/;"	t
src/stage.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/stage.c.o:$/;"	t
src/stage.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/stage.c.o:$/;"	t
src/stage.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/stage.c.s:$/;"	t
src/stage.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/stage.c.s:$/;"	t
src/stage.i	cmake-build-debug/lib/flecs/Makefile	/^src\/stage.i: src\/stage.c.i$/;"	t
src/stage.i	cmake-build-release/lib/flecs/Makefile	/^src\/stage.i: src\/stage.c.i$/;"	t
src/stage.o	cmake-build-debug/lib/flecs/Makefile	/^src\/stage.o: src\/stage.c.o$/;"	t
src/stage.o	cmake-build-release/lib/flecs/Makefile	/^src\/stage.o: src\/stage.c.o$/;"	t
src/stage.s	cmake-build-debug/lib/flecs/Makefile	/^src\/stage.s: src\/stage.c.s$/;"	t
src/stage.s	cmake-build-release/lib/flecs/Makefile	/^src\/stage.s: src\/stage.c.s$/;"	t
src/table.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/table.c.i:$/;"	t
src/table.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/table.c.i:$/;"	t
src/table.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/table.c.o:$/;"	t
src/table.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/table.c.o:$/;"	t
src/table.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/table.c.s:$/;"	t
src/table.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/table.c.s:$/;"	t
src/table.i	cmake-build-debug/lib/flecs/Makefile	/^src\/table.i: src\/table.c.i$/;"	t
src/table.i	cmake-build-release/lib/flecs/Makefile	/^src\/table.i: src\/table.c.i$/;"	t
src/table.o	cmake-build-debug/lib/flecs/Makefile	/^src\/table.o: src\/table.c.o$/;"	t
src/table.o	cmake-build-release/lib/flecs/Makefile	/^src\/table.o: src\/table.c.o$/;"	t
src/table.s	cmake-build-debug/lib/flecs/Makefile	/^src\/table.s: src\/table.c.s$/;"	t
src/table.s	cmake-build-release/lib/flecs/Makefile	/^src\/table.s: src\/table.c.s$/;"	t
src/table_cache.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/table_cache.c.i:$/;"	t
src/table_cache.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/table_cache.c.i:$/;"	t
src/table_cache.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/table_cache.c.o:$/;"	t
src/table_cache.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/table_cache.c.o:$/;"	t
src/table_cache.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/table_cache.c.s:$/;"	t
src/table_cache.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/table_cache.c.s:$/;"	t
src/table_cache.i	cmake-build-debug/lib/flecs/Makefile	/^src\/table_cache.i: src\/table_cache.c.i$/;"	t
src/table_cache.i	cmake-build-release/lib/flecs/Makefile	/^src\/table_cache.i: src\/table_cache.c.i$/;"	t
src/table_cache.o	cmake-build-debug/lib/flecs/Makefile	/^src\/table_cache.o: src\/table_cache.c.o$/;"	t
src/table_cache.o	cmake-build-release/lib/flecs/Makefile	/^src\/table_cache.o: src\/table_cache.c.o$/;"	t
src/table_cache.s	cmake-build-debug/lib/flecs/Makefile	/^src\/table_cache.s: src\/table_cache.c.s$/;"	t
src/table_cache.s	cmake-build-release/lib/flecs/Makefile	/^src\/table_cache.s: src\/table_cache.c.s$/;"	t
src/table_graph.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/table_graph.c.i:$/;"	t
src/table_graph.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/table_graph.c.i:$/;"	t
src/table_graph.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/table_graph.c.o:$/;"	t
src/table_graph.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/table_graph.c.o:$/;"	t
src/table_graph.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/table_graph.c.s:$/;"	t
src/table_graph.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/table_graph.c.s:$/;"	t
src/table_graph.i	cmake-build-debug/lib/flecs/Makefile	/^src\/table_graph.i: src\/table_graph.c.i$/;"	t
src/table_graph.i	cmake-build-release/lib/flecs/Makefile	/^src\/table_graph.i: src\/table_graph.c.i$/;"	t
src/table_graph.o	cmake-build-debug/lib/flecs/Makefile	/^src\/table_graph.o: src\/table_graph.c.o$/;"	t
src/table_graph.o	cmake-build-release/lib/flecs/Makefile	/^src\/table_graph.o: src\/table_graph.c.o$/;"	t
src/table_graph.s	cmake-build-debug/lib/flecs/Makefile	/^src\/table_graph.s: src\/table_graph.c.s$/;"	t
src/table_graph.s	cmake-build-release/lib/flecs/Makefile	/^src\/table_graph.s: src\/table_graph.c.s$/;"	t
src/trigger.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/trigger.c.i:$/;"	t
src/trigger.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/trigger.c.i:$/;"	t
src/trigger.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/trigger.c.o:$/;"	t
src/trigger.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/trigger.c.o:$/;"	t
src/trigger.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/trigger.c.s:$/;"	t
src/trigger.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/trigger.c.s:$/;"	t
src/trigger.i	cmake-build-debug/lib/flecs/Makefile	/^src\/trigger.i: src\/trigger.c.i$/;"	t
src/trigger.i	cmake-build-release/lib/flecs/Makefile	/^src\/trigger.i: src\/trigger.c.i$/;"	t
src/trigger.o	cmake-build-debug/lib/flecs/Makefile	/^src\/trigger.o: src\/trigger.c.o$/;"	t
src/trigger.o	cmake-build-release/lib/flecs/Makefile	/^src\/trigger.o: src\/trigger.c.o$/;"	t
src/trigger.s	cmake-build-debug/lib/flecs/Makefile	/^src\/trigger.s: src\/trigger.c.s$/;"	t
src/trigger.s	cmake-build-release/lib/flecs/Makefile	/^src\/trigger.s: src\/trigger.c.s$/;"	t
src/world.c.i	cmake-build-debug/lib/flecs/Makefile	/^src\/world.c.i:$/;"	t
src/world.c.i	cmake-build-release/lib/flecs/Makefile	/^src\/world.c.i:$/;"	t
src/world.c.o	cmake-build-debug/lib/flecs/Makefile	/^src\/world.c.o:$/;"	t
src/world.c.o	cmake-build-release/lib/flecs/Makefile	/^src\/world.c.o:$/;"	t
src/world.c.s	cmake-build-debug/lib/flecs/Makefile	/^src\/world.c.s:$/;"	t
src/world.c.s	cmake-build-release/lib/flecs/Makefile	/^src\/world.c.s:$/;"	t
src/world.i	cmake-build-debug/lib/flecs/Makefile	/^src\/world.i: src\/world.c.i$/;"	t
src/world.i	cmake-build-release/lib/flecs/Makefile	/^src\/world.i: src\/world.c.i$/;"	t
src/world.o	cmake-build-debug/lib/flecs/Makefile	/^src\/world.o: src\/world.c.o$/;"	t
src/world.o	cmake-build-release/lib/flecs/Makefile	/^src\/world.o: src\/world.c.o$/;"	t
src/world.s	cmake-build-debug/lib/flecs/Makefile	/^src\/world.s: src\/world.c.s$/;"	t
src/world.s	cmake-build-release/lib/flecs/Makefile	/^src\/world.s: src\/world.c.s$/;"	t
src_entity	lib/flecs/test/api/src/ComponentLifecycle.c	/^    ecs_entity_t src_entity;$/;"	m	struct:copy_ctx	typeref:typename:ecs_entity_t	file:
srv	lib/flecs/flecs.c	/^    ecs_http_server_t *srv;$/;"	m	struct:__anona642c0050808	typeref:typename:ecs_http_server_t *	file:
srv	lib/flecs/src/addons/rest.c	/^    ecs_http_server_t *srv;$/;"	m	struct:__anond91cde350108	typeref:typename:ecs_http_server_t *	file:
stack	lib/flecs/flecs.c	/^    ecs_rule_subset_frame_t *stack;$/;"	m	struct:ecs_rule_subset_ctx_t	typeref:typename:ecs_rule_subset_frame_t *	file:
stack	lib/flecs/flecs.c	/^    ecs_rule_superset_frame_t *stack;$/;"	m	struct:ecs_rule_superset_ctx_t	typeref:typename:ecs_rule_superset_frame_t *	file:
stack	lib/flecs/src/addons/rules.c	/^    ecs_rule_subset_frame_t *stack;$/;"	m	struct:ecs_rule_subset_ctx_t	typeref:typename:ecs_rule_subset_frame_t *	file:
stack	lib/flecs/src/addons/rules.c	/^    ecs_rule_superset_frame_t *stack;$/;"	m	struct:ecs_rule_superset_ctx_t	typeref:typename:ecs_rule_superset_frame_t *	file:
stack_destroy	lib/libflint/src/lfstack.c	/^void stack_destroy(Stack* stack) {$/;"	f	typeref:typename:void
stack_init	lib/libflint/src/lfstack.c	/^void stack_init(Stack* stack, void (*destroy)(void* data)) {$/;"	f	typeref:typename:void
stack_peek	lib/libflint/src/lfstack.c	/^void *stack_peek(Stack *stack) {$/;"	f	typeref:typename:void *
stack_pop	lib/libflint/src/lfstack.c	/^int stack_pop(Stack *stack, void **data) {$/;"	f	typeref:typename:int
stack_push	lib/libflint/src/lfstack.c	/^int stack_push(Stack* stack, void *data) {$/;"	f	typeref:typename:int
stage	lib/flecs/flecs.c	/^    ecs_stage_t *stage;$/;"	m	struct:__anona642c0050208	typeref:typename:ecs_stage_t *	file:
stage	lib/flecs/flecs.c	/^    ecs_stage_t stage;           \/* Main stage *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_stage_t	file:
stage	lib/flecs/flecs.h	/^    system_runner_fluent& stage(flecs::world& stage) {$/;"	f	struct:flecs::system_runner_fluent	typeref:typename:system_runner_fluent &
stage	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    system_runner_fluent& stage(flecs::world& stage) {$/;"	f	struct:flecs::system_runner_fluent	typeref:typename:system_runner_fluent &
stage	lib/flecs/src/private_api.h	/^    ecs_stage_t *stage;$/;"	m	struct:__anonf633b8e80108	typeref:typename:ecs_stage_t *
stage	lib/flecs/src/private_types.h	/^    ecs_stage_t stage;           \/* Main stage *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_stage_t
stage	lib/uthash/doc/Makefile	/^stage:$/;"	t
staging_begin	lib/flecs/flecs.h	/^    bool staging_begin() {$/;"	f	struct:flecs::world	typeref:typename:bool
staging_begin	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    bool staging_begin() {$/;"	f	struct:flecs::world	typeref:typename:bool
staging_end	lib/flecs/flecs.h	/^    void staging_end() {$/;"	f	struct:flecs::world	typeref:typename:void
staging_end	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void staging_end() {$/;"	f	struct:flecs::world	typeref:typename:void
start	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^    Point start, stop;$/;"	m	struct:__anonab3664440208	typeref:typename:Point	file:
start	lib/flecs/examples/cpp/reflection/nested_set_member/src/main.cpp	/^    Point start;$/;"	m	struct:Line	typeref:typename:Point	file:
start	lib/flecs/examples/cpp/reflection/nested_struct/src/main.cpp	/^    Point start;$/;"	m	struct:Line	typeref:typename:Point	file:
start	lib/flecs/flecs.h	/^inline void system::start() {$/;"	f	class:flecs::system	typeref:typename:void
start	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline void system::start() {$/;"	f	class:flecs::system	typeref:typename:void
start	lib/flecs/test/api/src/Plecs.c	/^        } start;$/;"	m	struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08	typeref:struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08::__anonb7ea1cde0d08	file:
start	lib/flecs/test/api/src/Plecs.c	/^        } start;$/;"	m	struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808	typeref:struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808::__anonb7ea1cde0908	file:
start	lib/uthash/tests/hashscan.c	/^    off_t start;$/;"	m	struct:__anone6f392830208	typeref:typename:off_t	file:
start	lib/uthash/tests/hashscan.c	/^    void *start;$/;"	m	struct:__anone6f392830108	typeref:typename:void *	file:
start_measure_frame	lib/flecs/flecs.c	/^FLECS_FLOAT start_measure_frame($/;"	f	typeref:typename:FLECS_FLOAT	file:
start_measure_frame	lib/flecs/src/world.c	/^FLECS_FLOAT start_measure_frame($/;"	f	typeref:typename:FLECS_FLOAT	file:
start_workers	lib/flecs/flecs.c	/^void start_workers($/;"	f	typeref:typename:void	file:
start_workers	lib/flecs/src/addons/pipeline/worker.c	/^void start_workers($/;"	f	typeref:typename:void	file:
stat_key	lib/uthash/tests/keystat.c	/^typedef struct stat_key {$/;"	s	file:
stat_key	lib/uthash/tests/keystat.c	/^} stat_key;$/;"	t	typeref:struct:stat_key	file:
state	lib/flecs/flecs.c	/^    HttpFragState state;$/;"	m	struct:__anona642c0050a08	typeref:typename:HttpFragState	file:
state	lib/flecs/src/addons/http.c	/^    HttpFragState state;$/;"	m	struct:__anonc2d932d70208	typeref:typename:HttpFragState	file:
stats	lib/flecs/flecs.c	/^    ecs_world_info_t stats;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_world_info_t	file:
stats	lib/flecs/src/private_types.h	/^    ecs_world_info_t stats;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_world_info_t
stats_timeout	lib/flecs/flecs.c	/^    FLECS_FLOAT stats_timeout; \/* used for periodic reporting of statistics *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:FLECS_FLOAT	file:
stats_timeout	lib/flecs/src/addons/http.c	/^    FLECS_FLOAT stats_timeout; \/* used for periodic reporting of statistics *\/$/;"	m	struct:ecs_http_server_t	typeref:typename:FLECS_FLOAT	file:
statsort	lib/uthash/tests/keystats	/^sub statsort {$/;"	s
status	lib/flecs/flecs.h	/^    const char* status;         \/* default = OK *\/$/;"	m	struct:__anona642c00a0b08	typeref:typename:const char *
status	lib/flecs/include/flecs/addons/http.h	/^    const char* status;         \/* default = OK *\/$/;"	m	struct:__anon12cf63340508	typeref:typename:const char *
status_action	lib/flecs/flecs.c	/^    ecs_system_status_action_t status_action; \/* Status action *\/   $/;"	m	struct:EcsSystem	typeref:typename:ecs_system_status_action_t	file:
status_action	lib/flecs/src/addons/system/system.h	/^    ecs_system_status_action_t status_action; \/* Status action *\/   $/;"	m	struct:EcsSystem	typeref:typename:ecs_system_status_action_t
status_action	lib/flecs/test/api/src/SystemManual.c	/^void status_action($/;"	f	typeref:typename:void	file:
status_action	lib/flecs/test/api/src/SystemMisc.c	/^void status_action($/;"	f	typeref:typename:void	file:
status_callback	lib/flecs/flecs.h	/^    ecs_system_status_action_t status_callback;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_system_status_action_t
status_callback	lib/flecs/include/flecs/addons/system.h	/^    ecs_system_status_action_t status_callback;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_system_status_action_t
status_ctx	lib/flecs/flecs.c	/^    void *status_ctx;               \/* User data for status action *\/ $/;"	m	struct:EcsSystem	typeref:typename:void *	file:
status_ctx	lib/flecs/flecs.h	/^    void *status_ctx;$/;"	m	struct:ecs_system_desc_t	typeref:typename:void *
status_ctx	lib/flecs/include/flecs/addons/system.h	/^    void *status_ctx;$/;"	m	struct:ecs_system_desc_t	typeref:typename:void *
status_ctx	lib/flecs/src/addons/system/system.h	/^    void *status_ctx;               \/* User data for status action *\/ $/;"	m	struct:EcsSystem	typeref:typename:void *
status_ctx_free	lib/flecs/flecs.c	/^    ecs_ctx_free_t status_ctx_free;$/;"	m	struct:EcsSystem	typeref:typename:ecs_ctx_free_t	file:
status_ctx_free	lib/flecs/flecs.h	/^    ecs_ctx_free_t status_ctx_free;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_ctx_free_t
status_ctx_free	lib/flecs/include/flecs/addons/system.h	/^    ecs_ctx_free_t status_ctx_free;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_ctx_free_t
status_ctx_free	lib/flecs/src/addons/system/system.h	/^    ecs_ctx_free_t status_ctx_free;$/;"	m	struct:EcsSystem	typeref:typename:ecs_ctx_free_t
stdcpp_adec	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^int32_t stdcpp_adec(int32_t *count) {$/;"	f	typeref:typename:int32_t	file:
stdcpp_ainc	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^int32_t stdcpp_ainc(int32_t *count) {$/;"	f	typeref:typename:int32_t	file:
stdcpp_cond_broadcast	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void stdcpp_cond_broadcast(ecs_os_cond_t c) {$/;"	f	typeref:typename:void	file:
stdcpp_cond_free	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void stdcpp_cond_free(ecs_os_cond_t c) {$/;"	f	typeref:typename:void	file:
stdcpp_cond_new	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^ecs_os_cond_t stdcpp_cond_new(void) {$/;"	f	typeref:typename:ecs_os_cond_t	file:
stdcpp_cond_signal	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void stdcpp_cond_signal(ecs_os_cond_t c) {$/;"	f	typeref:typename:void	file:
stdcpp_cond_wait	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void stdcpp_cond_wait(ecs_os_cond_t c, ecs_os_mutex_t m) {$/;"	f	typeref:typename:void	file:
stdcpp_mutex_free	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void stdcpp_mutex_free(ecs_os_mutex_t m) {$/;"	f	typeref:typename:void	file:
stdcpp_mutex_lock	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void stdcpp_mutex_lock(ecs_os_mutex_t m) {$/;"	f	typeref:typename:void	file:
stdcpp_mutex_new	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^ecs_os_mutex_t stdcpp_mutex_new(void) {$/;"	f	typeref:typename:ecs_os_mutex_t	file:
stdcpp_mutex_unlock	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void stdcpp_mutex_unlock(ecs_os_mutex_t m) {$/;"	f	typeref:typename:void	file:
stdcpp_set_os_api	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void stdcpp_set_os_api(void) {$/;"	f	typeref:typename:void
stdcpp_thread_join	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^void* stdcpp_thread_join($/;"	f	typeref:typename:void *	file:
stdcpp_thread_new	lib/flecs/examples/os_api/stdcpp/src/flecs-os_api-stdcpp.cpp	/^ecs_os_thread_t stdcpp_thread_new($/;"	f	typeref:typename:ecs_os_thread_t	file:
stop	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^    Point start, stop;$/;"	m	struct:__anonab3664440208	typeref:typename:Point	file:
stop	lib/flecs/examples/cpp/reflection/nested_set_member/src/main.cpp	/^    Point stop;$/;"	m	struct:Line	typeref:typename:Point	file:
stop	lib/flecs/examples/cpp/reflection/nested_struct/src/main.cpp	/^    Point stop;$/;"	m	struct:Line	typeref:typename:Point	file:
stop	lib/flecs/flecs.h	/^inline void system::stop() {$/;"	f	class:flecs::system	typeref:typename:void
stop	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline void system::stop() {$/;"	f	class:flecs::system	typeref:typename:void
stop	lib/flecs/test/api/src/Plecs.c	/^        } stop;$/;"	m	struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08	typeref:struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08::__anonb7ea1cde0e08	file:
stop	lib/flecs/test/api/src/Plecs.c	/^        } stop;$/;"	m	struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808	typeref:struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808::__anonb7ea1cde0a08	file:
stop12745	lib/uthash/doc/banner.svg	/^         id="stop12745" \/>$/;"	i
stop12745	lib/uthash/doc/uthash-mini.svg	/^         id="stop12745" \/>$/;"	i
stop12747	lib/uthash/doc/banner.svg	/^         id="stop12747" \/>$/;"	i
stop12747	lib/uthash/doc/uthash-mini.svg	/^         id="stop12747" \/>$/;"	i
stop12753	lib/uthash/doc/banner.svg	/^         style="stop-color:#99e1fa;stop-opacity:0.49803922;" \/>$/;"	i
stop12753	lib/uthash/doc/uthash-mini.svg	/^         style="stop-color:#99e1fa;stop-opacity:0.49803922;" \/>$/;"	i
stop3966	lib/uthash/doc/banner.svg	/^         id="stop3966" \/>$/;"	i
stop3966	lib/uthash/doc/uthash-mini.svg	/^         id="stop3966" \/>$/;"	i
stop3968	lib/uthash/doc/banner.svg	/^         id="stop3968" \/>$/;"	i
stop3968	lib/uthash/doc/uthash-mini.svg	/^         id="stop3968" \/>$/;"	i
stop_measure_frame	lib/flecs/flecs.c	/^void stop_measure_frame($/;"	f	typeref:typename:void	file:
stop_measure_frame	lib/flecs/src/world.c	/^void stop_measure_frame($/;"	f	typeref:typename:void	file:
storage	lib/flecs/flecs.c	/^    ecs_data_t storage;              \/* Component storage *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_data_t	file:
storage	lib/flecs/flecs.c	/^    ecs_rule_subset_frame_t storage[16]; \/* Alloc-free array for small trees *\/$/;"	m	struct:ecs_rule_subset_ctx_t	typeref:typename:ecs_rule_subset_frame_t[16]	file:
storage	lib/flecs/flecs.c	/^    ecs_rule_superset_frame_t storage[16]; \/* Alloc-free array for small trees *\/$/;"	m	struct:ecs_rule_superset_ctx_t	typeref:typename:ecs_rule_superset_frame_t[16]	file:
storage	lib/flecs/src/addons/rules.c	/^    ecs_rule_subset_frame_t storage[16]; \/* Alloc-free array for small trees *\/$/;"	m	struct:ecs_rule_subset_ctx_t	typeref:typename:ecs_rule_subset_frame_t[16]	file:
storage	lib/flecs/src/addons/rules.c	/^    ecs_rule_superset_frame_t storage[16]; \/* Alloc-free array for small trees *\/$/;"	m	struct:ecs_rule_superset_ctx_t	typeref:typename:ecs_rule_superset_frame_t[16]	file:
storage	lib/flecs/src/private_types.h	/^    ecs_data_t storage;              \/* Component storage *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_data_t
storage_map	lib/flecs/flecs.c	/^    int32_t *storage_map;            \/* Map type <-> storage type$/;"	m	struct:ecs_table_t	typeref:typename:int32_t *	file:
storage_map	lib/flecs/src/private_types.h	/^    int32_t *storage_map;            \/* Map type <-> storage type$/;"	m	struct:ecs_table_t	typeref:typename:int32_t *
storage_table	lib/flecs/flecs.c	/^    ecs_table_t *storage_table;      \/* Table w\/type without tags *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_table_t *	file:
storage_table	lib/flecs/src/private_types.h	/^    ecs_table_t *storage_table;      \/* Table w\/type without tags *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_table_t *
storage_type	lib/flecs/flecs.c	/^    ecs_type_t storage_type;         \/* Storage table type (prevents indirection) *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_type_t	file:
storage_type	lib/flecs/src/private_types.h	/^    ecs_type_t storage_type;         \/* Storage table type (prevents indirection) *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_type_t
store	lib/flecs/flecs.c	/^    ecs_store_t store;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_store_t	file:
store	lib/flecs/src/private_types.h	/^    ecs_store_t store;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_store_t
store_added	lib/flecs/flecs.h	/^    static size_t store_added(IdArray& added, size_t elem, ecs_table_t *prev, $/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:size_t
store_added	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^    static size_t store_added(IdArray& added, size_t elem, ecs_table_t *prev, $/;"	f	struct:flecs::_::entity_with_invoker_impl	typeref:typename:size_t
store_reflexive_set	lib/flecs/flecs.c	/^ecs_rule_var_t* store_reflexive_set($/;"	f	typeref:typename:ecs_rule_var_t *	file:
store_reflexive_set	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* store_reflexive_set($/;"	f	typeref:typename:ecs_rule_var_t *	file:
str	lib/flecs/flecs.h	/^    flecs::string str() const {$/;"	f	struct:flecs::id	typeref:typename:flecs::string
str	lib/flecs/flecs.h	/^    flecs::string str() const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::string
str	lib/flecs/flecs.h	/^    flecs::string str() const {$/;"	f	struct:flecs::type_base	typeref:typename:flecs::string
str	lib/flecs/flecs.h	/^    flecs::string str() {$/;"	f	struct:flecs::filter_base	typeref:typename:flecs::string
str	lib/flecs/flecs.h	/^    flecs::string str() {$/;"	f	struct:flecs::query_base	typeref:typename:flecs::string
str	lib/flecs/flecs.h	/^    flecs::string str() {$/;"	f	struct:flecs::rule_base	typeref:typename:flecs::string
str	lib/flecs/flecs.h	/^    flecs::string str() {$/;"	f	struct:flecs::stringstream	typeref:typename:flecs::string
str	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::string str() const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::string
str	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    flecs::string str() {$/;"	f	struct:flecs::filter_base	typeref:typename:flecs::string
str	lib/flecs/include/flecs/addons/cpp/mixins/id/decl.hpp	/^    flecs::string str() const {$/;"	f	struct:flecs::id	typeref:typename:flecs::string
str	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    flecs::string str() {$/;"	f	struct:flecs::query_base	typeref:typename:flecs::string
str	lib/flecs/include/flecs/addons/cpp/mixins/rule/impl.hpp	/^    flecs::string str() {$/;"	f	struct:flecs::rule_base	typeref:typename:flecs::string
str	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    flecs::string str() const {$/;"	f	struct:flecs::type_base	typeref:typename:flecs::string
str	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^    flecs::string str() {$/;"	f	struct:flecs::stringstream	typeref:typename:flecs::string
str	lib/flecs/test/api/src/ComponentLifecycle.c	/^    char *str;$/;"	m	struct:__anoneccc1c6a0208	typeref:typename:char *	file:
str_	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    std::string str_;$/;"	m	class:CtorDtorNonTrivial	typeref:typename:std::string	file:
str_	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    std::string str_;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:std::string	file:
strbuf_itoa	lib/flecs/flecs.c	/^char* strbuf_itoa($/;"	f	typeref:typename:char *	file:
strbuf_itoa	lib/flecs/src/datastructures/strbuf.c	/^char* strbuf_itoa($/;"	f	typeref:typename:char *	file:
strdup_	lib/flecs/flecs.h	/^    ecs_os_api_strdup_t strdup_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_strdup_t
strdup_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_strdup_t strdup_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_strdup_t
string	lib/flecs/flecs.h	/^    explicit string() $/;"	f	struct:flecs::string
string	lib/flecs/flecs.h	/^    explicit string(char *str) $/;"	f	struct:flecs::string
string	lib/flecs/flecs.h	/^    string(const char *str)$/;"	f	struct:flecs::string
string	lib/flecs/flecs.h	/^    string(string&& str) {$/;"	f	struct:flecs::string
string	lib/flecs/flecs.h	/^struct string {$/;"	s	namespace:flecs
string	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    explicit string() $/;"	f	struct:flecs::string
string	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    explicit string(char *str) $/;"	f	struct:flecs::string
string	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    string(const char *str)$/;"	f	struct:flecs::string
string	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    string(string&& str) {$/;"	f	struct:flecs::string
string	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^struct string {$/;"	s	namespace:flecs
string_dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void string_dtor($/;"	f	typeref:typename:void	file:
string_view	lib/flecs/flecs.h	/^    explicit string_view(const char *str)$/;"	f	struct:flecs::string_view
string_view	lib/flecs/flecs.h	/^struct string_view : string {$/;"	s	namespace:flecs
string_view	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    explicit string_view(const char *str)$/;"	f	struct:flecs::string_view
string_view	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^struct string_view : string {$/;"	s	namespace:flecs
stringstream	lib/flecs/flecs.h	/^    explicit stringstream() $/;"	f	struct:flecs::stringstream
stringstream	lib/flecs/flecs.h	/^    stringstream(stringstream&& str) {$/;"	f	struct:flecs::stringstream
stringstream	lib/flecs/flecs.h	/^struct stringstream {$/;"	s	namespace:flecs
stringstream	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^    explicit stringstream() $/;"	f	struct:flecs::stringstream
stringstream	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^    stringstream(stringstream&& str) {$/;"	f	struct:flecs::stringstream
stringstream	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^struct stringstream {$/;"	s	namespace:flecs
strip_generation	lib/flecs/flecs.c	/^uint64_t strip_generation($/;"	f	typeref:typename:uint64_t	file:
strip_generation	lib/flecs/flecs.h	/^inline flecs::id_t strip_generation(flecs::entity_t e) {$/;"	f	namespace:flecs	typeref:typename:flecs::id_t
strip_generation	lib/flecs/include/flecs/addons/cpp/world.hpp	/^inline flecs::id_t strip_generation(flecs::entity_t e) {$/;"	f	namespace:flecs	typeref:typename:flecs::id_t
strip_generation	lib/flecs/src/datastructures/sparse.c	/^uint64_t strip_generation($/;"	f	typeref:typename:uint64_t	file:
strlen	lib/uthash/tests/test6.c	/^#define strlen /;"	d	file:
strsort	lib/uthash/tests/test46.c	/^static int strsort(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
strsort	lib/uthash/tests/test61.c	/^static int strsort(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
sub	lib/flecs/flecs.h	/^    Base& sub(const flecs::id_t relation = flecs::IsA, uint8_t mask = 0)$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
sub	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& sub(const flecs::id_t relation = flecs::IsA, uint8_t mask = 0)$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
sub	lib/uthash/tests/test59.c	/^    struct item *sub;$/;"	m	struct:item	typeref:struct:item *	file:
sub	lib/uthash/tests/test60.c	/^    struct item *sub;$/;"	m	struct:item	typeref:struct:item *	file:
subj	lib/flecs/flecs.c	/^    int32_t subj;$/;"	m	struct:ecs_rule_term_vars_t	typeref:typename:int32_t	file:
subj	lib/flecs/flecs.h	/^    Base& subj() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
subj	lib/flecs/flecs.h	/^    Base& subj(const char *n) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
subj	lib/flecs/flecs.h	/^    Base& subj(entity_t entity) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
subj	lib/flecs/flecs.h	/^    ecs_term_id_t subj;         \/* Subject of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_term_id_t
subj	lib/flecs/include/flecs.h	/^    ecs_term_id_t subj;         \/* Subject of term *\/$/;"	m	struct:ecs_term_t	typeref:typename:ecs_term_id_t
subj	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& subj() {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
subj	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& subj(const char *n) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
subj	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& subj(entity_t entity) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
subj	lib/flecs/src/addons/rules.c	/^    int32_t subj;$/;"	m	struct:ecs_rule_term_vars_t	typeref:typename:int32_t	file:
subj_is_set	lib/flecs/flecs.c	/^bool subj_is_set($/;"	f	typeref:typename:bool	file:
subj_is_set	lib/flecs/src/addons/rules.c	/^bool subj_is_set($/;"	f	typeref:typename:bool	file:
subj_var_count	lib/flecs/flecs.c	/^    int32_t subj_var_count;$/;"	m	struct:ecs_rule_t	typeref:typename:int32_t	file:
subj_var_count	lib/flecs/src/addons/rules.c	/^    int32_t subj_var_count;$/;"	m	struct:ecs_rule_t	typeref:typename:int32_t	file:
subject	lib/flecs/flecs.c	/^    ecs_entity_t subject;       \/* If set, operation has a constant subject *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:ecs_entity_t	file:
subject	lib/flecs/flecs.h	/^    ecs_entity_t subject;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_entity_t
subject	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t subject;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_entity_t
subject	lib/flecs/src/addons/rules.c	/^    ecs_entity_t subject;       \/* If set, operation has a constant subject *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:ecs_entity_t	file:
subjects	lib/flecs/flecs.c	/^    ecs_entity_t *subjects;   \/* Subjects (sources) of ids *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_entity_t *	file:
subjects	lib/flecs/flecs.h	/^    ecs_entity_t *subjects;       \/* Subject (source) entities *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t *
subjects	lib/flecs/flecs.h	/^    ecs_entity_t subjects[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:ecs_entity_t[]
subjects	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t *subjects;       \/* Subject (source) entities *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t *
subjects	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t subjects[ECS_TERM_CACHE_SIZE];$/;"	m	struct:ecs_iter_cache_t	typeref:typename:ecs_entity_t[]
subjects	lib/flecs/src/private_types.h	/^    ecs_entity_t *subjects;   \/* Subjects (sources) of ids *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_entity_t *
subjects_alloc	lib/flecs/flecs.h	/^    bool subjects_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
subjects_alloc	lib/flecs/include/flecs/private/api_types.h	/^    bool subjects_alloc;$/;"	m	struct:ecs_iter_cache_t	typeref:typename:bool
subqueries	lib/flecs/flecs.c	/^    ecs_vector_t *subqueries;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_vector_t *	file:
subqueries	lib/flecs/src/private_types.h	/^    ecs_vector_t *subqueries;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_vector_t *
subset	lib/flecs/flecs.c	/^        ecs_rule_subset_ctx_t subset;$/;"	m	union:ecs_rule_op_ctx_t::__anona642c005070a	typeref:typename:ecs_rule_subset_ctx_t	file:
subset	lib/flecs/src/addons/rules.c	/^        ecs_rule_subset_ctx_t subset;$/;"	m	union:ecs_rule_op_ctx_t::__anon218568c2030a	typeref:typename:ecs_rule_subset_ctx_t	file:
suites	lib/flecs/test/api/src/main.c	/^static bake_test_suite suites[] = {$/;"	v	typeref:typename:bake_test_suite[]	file:
suites	lib/flecs/test/collections/src/main.c	/^static bake_test_suite suites[] = {$/;"	v	typeref:typename:bake_test_suite[]	file:
suites	lib/flecs/test/cpp_api/src/main.cpp	/^static bake_test_suite suites[] = {$/;"	v	typeref:typename:bake_test_suite[]	file:
suites	lib/flecs/test/meta/src/main.c	/^static bake_test_suite suites[] = {$/;"	v	typeref:typename:bake_test_suite[]	file:
super	lib/flecs/flecs.h	/^    Base& super(const flecs::id_t relation = flecs::IsA, uint8_t mask = 0)$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
super	lib/flecs/flecs.h	/^    ecs_strbuf_element super;$/;"	m	struct:ecs_strbuf_element_embedded	typeref:typename:ecs_strbuf_element
super	lib/flecs/flecs.h	/^    ecs_strbuf_element super;$/;"	m	struct:ecs_strbuf_element_str	typeref:typename:ecs_strbuf_element
super	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& super(const flecs::id_t relation = flecs::IsA, uint8_t mask = 0)$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
super	lib/flecs/include/flecs/private/strbuf.h	/^    ecs_strbuf_element super;$/;"	m	struct:ecs_strbuf_element_embedded	typeref:typename:ecs_strbuf_element
super	lib/flecs/include/flecs/private/strbuf.h	/^    ecs_strbuf_element super;$/;"	m	struct:ecs_strbuf_element_str	typeref:typename:ecs_strbuf_element
superset	lib/flecs/flecs.c	/^        ecs_rule_superset_ctx_t superset;$/;"	m	union:ecs_rule_op_ctx_t::__anona642c005070a	typeref:typename:ecs_rule_superset_ctx_t	file:
superset	lib/flecs/src/addons/rules.c	/^        ecs_rule_superset_ctx_t superset;$/;"	m	union:ecs_rule_op_ctx_t::__anon218568c2030a	typeref:typename:ecs_rule_superset_ctx_t	file:
svg	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	n	uri:http://www.w3.org/2000/svg
svg	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	n	uri:http://www.w3.org/2000/svg
svg1307	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	i
svg2018	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	i
sw_case	lib/flecs/flecs.c	/^    ecs_entity_t sw_case; $/;"	m	struct:flecs_sparse_column_t	typeref:typename:ecs_entity_t	file:
sw_case	lib/flecs/src/private_types.h	/^    ecs_entity_t sw_case; $/;"	m	struct:flecs_sparse_column_t	typeref:typename:ecs_entity_t
sw_column	lib/flecs/flecs.c	/^    ecs_sw_column_t *sw_column;$/;"	m	struct:flecs_sparse_column_t	typeref:typename:ecs_sw_column_t *	file:
sw_column	lib/flecs/src/private_types.h	/^    ecs_sw_column_t *sw_column;$/;"	m	struct:flecs_sparse_column_t	typeref:typename:ecs_sw_column_t *
sw_column_count	lib/flecs/flecs.c	/^    int32_t sw_column_count;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t	file:
sw_column_count	lib/flecs/src/private_types.h	/^    int32_t sw_column_count;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t
sw_column_offset	lib/flecs/flecs.c	/^    int32_t sw_column_offset;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t	file:
sw_column_offset	lib/flecs/src/private_types.h	/^    int32_t sw_column_offset;$/;"	m	struct:ecs_table_t	typeref:typename:int32_t
sw_columns	lib/flecs/flecs.c	/^    ecs_sw_column_t *sw_columns; \/* Switch columns *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_sw_column_t *	file:
sw_columns	lib/flecs/src/private_types.h	/^    ecs_sw_column_t *sw_columns; \/* Switch columns *\/$/;"	m	struct:ecs_data_t	typeref:typename:ecs_sw_column_t *
swap_bitset_columns	lib/flecs/flecs.c	/^void swap_bitset_columns($/;"	f	typeref:typename:void	file:
swap_bitset_columns	lib/flecs/src/table.c	/^void swap_bitset_columns($/;"	f	typeref:typename:void	file:
swap_dense	lib/flecs/flecs.c	/^void swap_dense($/;"	f	typeref:typename:void	file:
swap_dense	lib/flecs/src/datastructures/sparse.c	/^void swap_dense($/;"	f	typeref:typename:void	file:
swap_switch_columns	lib/flecs/flecs.c	/^void swap_switch_columns($/;"	f	typeref:typename:void	file:
swap_switch_columns	lib/flecs/src/table.c	/^void swap_switch_columns($/;"	f	typeref:typename:void	file:
switch_column_count	lib/flecs/flecs.c	/^int32_t switch_column_count($/;"	f	typeref:typename:int32_t	file:
switch_column_count	lib/flecs/src/table.c	/^int32_t switch_column_count($/;"	f	typeref:typename:int32_t	file:
symbol	include/ecs/components.h	/^    char symbol;$/;"	m	struct:__anon1ffac85e0308	typeref:typename:char
symbol	lib/flecs/flecs.h	/^    char *symbol;   \/* Symbol of prefix (e.g. "K", "M", "Ki") *\/$/;"	m	struct:EcsUnitPrefix	typeref:typename:char *
symbol	lib/flecs/flecs.h	/^    char *symbol;$/;"	m	struct:EcsUnit	typeref:typename:char *
symbol	lib/flecs/flecs.h	/^    const char *symbol;  \/* Optional entity symbol. A symbol is an unscoped$/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
symbol	lib/flecs/flecs.h	/^    const char *symbol;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:const char *
symbol	lib/flecs/flecs.h	/^    const char *symbol;$/;"	m	struct:ecs_unit_prefix_desc_t	typeref:typename:const char *
symbol	lib/flecs/flecs.h	/^    flecs::string_view symbol() const {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::string_view
symbol	lib/flecs/include/flecs.h	/^    const char *symbol;  \/* Optional entity symbol. A symbol is an unscoped$/;"	m	struct:ecs_entity_desc_t	typeref:typename:const char *
symbol	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    flecs::string_view symbol() const {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::string_view
symbol	lib/flecs/include/flecs/addons/meta.h	/^    char *symbol;   \/* Symbol of prefix (e.g. "K", "M", "Ki") *\/$/;"	m	struct:EcsUnitPrefix	typeref:typename:char *
symbol	lib/flecs/include/flecs/addons/meta.h	/^    char *symbol;$/;"	m	struct:EcsUnit	typeref:typename:char *
symbol	lib/flecs/include/flecs/addons/meta.h	/^    const char *symbol;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:const char *
symbol	lib/flecs/include/flecs/addons/meta.h	/^    const char *symbol;$/;"	m	struct:ecs_unit_prefix_desc_t	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^inline static const char* symbol_name() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<double>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<float>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<int16_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<int32_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<int64_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<int8_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<uint16_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<uint32_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<uint64_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/flecs.h	/^template <> inline const char* symbol_name<uint8_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^inline static const char* symbol_name() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<double>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<float>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<int16_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<int32_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<int64_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<int8_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<uint16_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<uint32_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<uint64_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbol_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^template <> inline const char* symbol_name<uint8_t>() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
symbols	lib/flecs/flecs.c	/^    ecs_hashmap_t symbols;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_hashmap_t	file:
symbols	lib/flecs/src/private_types.h	/^    ecs_hashmap_t symbols;$/;"	m	struct:ecs_world_t	typeref:typename:ecs_hashmap_t
sync_cond	lib/flecs/flecs.c	/^    ecs_os_cond_t sync_cond;     \/* Signal that worker thread job is done *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_cond_t	file:
sync_cond	lib/flecs/src/private_types.h	/^    ecs_os_cond_t sync_cond;     \/* Signal that worker thread job is done *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_cond_t
sync_from_flecs	lib/flecs/flecs.h	/^    void sync_from_flecs() {$/;"	f	struct:flecs::type_base	typeref:typename:void
sync_from_flecs	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    void sync_from_flecs() {$/;"	f	struct:flecs::type_base	typeref:typename:void
sync_from_me	lib/flecs/flecs.h	/^    void sync_from_me() {$/;"	f	struct:flecs::type_base	typeref:typename:void
sync_from_me	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    void sync_from_me() {$/;"	f	struct:flecs::type_base	typeref:typename:void
sync_match_monitor	lib/flecs/flecs.c	/^void sync_match_monitor($/;"	f	typeref:typename:void	file:
sync_match_monitor	lib/flecs/src/query.c	/^void sync_match_monitor($/;"	f	typeref:typename:void	file:
sync_mutex	lib/flecs/flecs.c	/^    ecs_os_mutex_t sync_mutex;   \/* Mutex for job_cond *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_mutex_t	file:
sync_mutex	lib/flecs/src/private_types.h	/^    ecs_os_mutex_t sync_mutex;   \/* Mutex for job_cond *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_mutex_t
sync_worker	lib/flecs/flecs.c	/^void sync_worker($/;"	f	typeref:typename:void	file:
sync_worker	lib/flecs/src/addons/pipeline/worker.c	/^void sync_worker($/;"	f	typeref:typename:void	file:
sys_a_invoked	lib/flecs/test/api/src/Pipeline.c	/^static int sys_a_invoked;$/;"	v	typeref:typename:int	file:
sys_a_real_world	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_a_real_world;$/;"	v	typeref:typename:bool	file:
sys_a_world_readonly	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_a_world_readonly;$/;"	v	typeref:typename:bool	file:
sys_b_invoked	lib/flecs/test/api/src/Pipeline.c	/^static int sys_b_invoked;$/;"	v	typeref:typename:int	file:
sys_b_real_world	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_b_real_world;$/;"	v	typeref:typename:bool	file:
sys_b_world_readonly	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_b_world_readonly;$/;"	v	typeref:typename:bool	file:
sys_c_invoked	lib/flecs/test/api/src/Pipeline.c	/^static int sys_c_invoked;$/;"	v	typeref:typename:int	file:
sys_c_real_world	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_c_real_world;$/;"	v	typeref:typename:bool	file:
sys_c_world_readonly	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_c_world_readonly;$/;"	v	typeref:typename:bool	file:
sys_ctor_init_zero	lib/flecs/flecs.c	/^void sys_ctor_init_zero($/;"	f	typeref:typename:void	file:
sys_ctor_init_zero	lib/flecs/src/addons/system/system.c	/^void sys_ctor_init_zero($/;"	f	typeref:typename:void	file:
sys_d_invoked	lib/flecs/test/api/src/Pipeline.c	/^static int sys_d_invoked;$/;"	v	typeref:typename:int	file:
sys_d_real_world	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_d_real_world;$/;"	v	typeref:typename:bool	file:
sys_d_world_readonly	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_d_world_readonly;$/;"	v	typeref:typename:bool	file:
sys_e_invoked	lib/flecs/test/api/src/Pipeline.c	/^static int sys_e_invoked;$/;"	v	typeref:typename:int	file:
sys_e_real_world	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_e_real_world;$/;"	v	typeref:typename:bool	file:
sys_e_world_readonly	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_e_world_readonly;$/;"	v	typeref:typename:bool	file:
sys_f_invoked	lib/flecs/test/api/src/Pipeline.c	/^static int sys_f_invoked;$/;"	v	typeref:typename:int	file:
sys_f_real_world	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_f_real_world;$/;"	v	typeref:typename:bool	file:
sys_f_world_readonly	lib/flecs/test/api/src/Pipeline.c	/^static bool sys_f_world_readonly;$/;"	v	typeref:typename:bool	file:
sys_in_invoked	lib/flecs/test/api/src/Pipeline.c	/^static int sys_in_invoked;$/;"	v	typeref:typename:int	file:
sys_invoked_count	lib/flecs/test/cpp_api/src/Misc.cpp	/^static int sys_invoked_count = 0;$/;"	v	typeref:typename:int	file:
sys_out_invoked	lib/flecs/test/api/src/Pipeline.c	/^static int sys_out_invoked;$/;"	v	typeref:typename:int	file:
system	lib/flecs/flecs.c	/^    ecs_entity_t system;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_entity_t	file:
system	lib/flecs/flecs.h	/^    ecs_entity_t system;          \/* The system (if applicable) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t
system	lib/flecs/flecs.h	/^    ecs_entity_t system;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_entity_t
system	lib/flecs/flecs.h	/^    explicit system() {$/;"	f	struct:flecs::system
system	lib/flecs/flecs.h	/^    explicit system(flecs::world_t *world, ecs_system_desc_t *desc) $/;"	f	struct:flecs::system
system	lib/flecs/flecs.h	/^inline flecs::entity iter::system() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
system	lib/flecs/flecs.h	/^inline system world::system(flecs::entity e) const {$/;"	f	class:flecs::world	typeref:typename:system
system	lib/flecs/flecs.h	/^inline system_builder<Comps...> world::system(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:system_builder<Comps...>
system	lib/flecs/flecs.h	/^struct system final : entity$/;"	s	namespace:flecs
system	lib/flecs/include/flecs.h	/^    ecs_entity_t system;$/;"	m	struct:ecs_query_desc_t	typeref:typename:ecs_entity_t
system	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::entity iter::system() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::entity
system	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    explicit system() {$/;"	f	struct:flecs::system
system	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    explicit system(flecs::world_t *world, ecs_system_desc_t *desc) $/;"	f	struct:flecs::system
system	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^inline system world::system(flecs::entity e) const {$/;"	f	class:flecs::world	typeref:typename:system
system	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^inline system_builder<Comps...> world::system(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:system_builder<Comps...>
system	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^struct system final : entity$/;"	s	namespace:flecs
system	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t system;          \/* The system (if applicable) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t
system	lib/flecs/src/private_types.h	/^    ecs_entity_t system;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_entity_t
system	lib/flecs/test/api/include/api.h	/^    ecs_entity_t system;$/;"	m	struct:Probe	typeref:typename:ecs_entity_t
system_a_invoked	lib/flecs/test/api/src/Timer.c	/^static bool system_a_invoked;$/;"	v	typeref:typename:bool	file:
system_b_invoked	lib/flecs/test/api/src/Timer.c	/^static bool system_b_invoked;$/;"	v	typeref:typename:bool	file:
system_builder	lib/flecs/flecs.h	/^    system_builder(flecs::world_t* world, const char *name = nullptr)$/;"	f	struct:flecs::system_builder
system_builder	lib/flecs/flecs.h	/^struct system_builder final : _::system_builder_base<Components...> {$/;"	s	namespace:flecs
system_builder	lib/flecs/include/flecs/addons/cpp/mixins/system/builder.hpp	/^    system_builder(flecs::world_t* world, const char *name = nullptr)$/;"	f	struct:flecs::system_builder
system_builder	lib/flecs/include/flecs/addons/cpp/mixins/system/builder.hpp	/^struct system_builder final : _::system_builder_base<Components...> {$/;"	s	namespace:flecs
system_builder_base	lib/flecs/flecs.h	/^    using system_builder_base = node_builder<$/;"	t	namespace:flecs::_	typeref:typename:node_builder<system,ecs_system_desc_t,system_builder<Components...>,system_builder_i,Components...>
system_builder_base	lib/flecs/include/flecs/addons/cpp/mixins/system/builder.hpp	/^    using system_builder_base = node_builder<$/;"	t	namespace:flecs::_	typeref:typename:node_builder<system,ecs_system_desc_t,system_builder<Components...>,system_builder_i,Components...>
system_builder_i	lib/flecs/flecs.h	/^    system_builder_i(ecs_system_desc_t *desc) $/;"	f	struct:flecs::system_builder_i
system_builder_i	lib/flecs/flecs.h	/^struct system_builder_i : query_builder_i<Base, Components ...> {$/;"	s	namespace:flecs
system_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^    system_builder_i(ecs_system_desc_t *desc) $/;"	f	struct:flecs::system_builder_i
system_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/system/builder_i.hpp	/^struct system_builder_i : query_builder_i<Base, Components ...> {$/;"	s	namespace:flecs
system_c_invoked	lib/flecs/test/api/src/Timer.c	/^static bool system_c_invoked;$/;"	v	typeref:typename:bool	file:
system_callback	lib/flecs/test/api/src/Event.c	/^void system_callback(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
system_count	lib/flecs/flecs.h	/^    ecs_gauge_t system_count;                 \/* Number of systems *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
system_count	lib/flecs/flecs.h	/^    int32_t system_count; \/* Number of systems in pipeline *\/$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:int32_t
system_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t system_count;                 \/* Number of systems *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
system_count	lib/flecs/include/flecs/addons/stats.h	/^    int32_t system_count; \/* Number of systems in pipeline *\/$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:int32_t
system_init	lib/flecs/flecs.h	/^inline void system_init(flecs::world& world) {$/;"	f	namespace:flecs::_	typeref:typename:void
system_init	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^inline void system_init(flecs::world& world) {$/;"	f	namespace:flecs::_	typeref:typename:void
system_invoke_count	lib/flecs/test/cpp_api/src/World.cpp	/^        static int system_invoke_count;$/;"	m	struct:ns::namespace_module	typeref:typename:int	file:
system_invoke_count	lib/flecs/test/cpp_api/src/World.cpp	/^    int namespace_module::system_invoke_count = 0;$/;"	m	class:ns::namespace_module	typeref:typename:int
system_runner_fluent	lib/flecs/flecs.h	/^    system_runner_fluent($/;"	f	struct:flecs::system_runner_fluent
system_runner_fluent	lib/flecs/flecs.h	/^struct system_runner_fluent {$/;"	s	namespace:flecs
system_runner_fluent	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    system_runner_fluent($/;"	f	struct:flecs::system_runner_fluent
system_runner_fluent	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^struct system_runner_fluent {$/;"	s	namespace:flecs
system_stats	lib/flecs/flecs.h	/^    ecs_map_t *system_stats;$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:ecs_map_t *
system_stats	lib/flecs/include/flecs/addons/stats.h	/^    ecs_map_t *system_stats;$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:ecs_map_t *
system_status_action_invoked	lib/flecs/test/api/src/SystemManual.c	/^static bool system_status_action_invoked = false;$/;"	v	typeref:typename:bool	file:
system_status_action_invoked	lib/flecs/test/api/src/SystemMisc.c	/^static bool system_status_action_invoked = false;$/;"	v	typeref:typename:bool	file:
system_time_total	lib/flecs/flecs.h	/^    ecs_counter_t system_time_total;          \/* Time spent on processing systems. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
system_time_total	lib/flecs/flecs.h	/^    float system_time_total;          \/* Total time spent in systems *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:float
system_time_total	lib/flecs/include/flecs.h	/^    float system_time_total;          \/* Total time spent in systems *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:float
system_time_total	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t system_time_total;          \/* Time spent on processing systems. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
systems	lib/flecs/flecs.h	/^    ecs_vector_t *systems;$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:ecs_vector_t *
systems	lib/flecs/include/flecs/addons/stats.h	/^    ecs_vector_t *systems;$/;"	m	struct:ecs_pipeline_stats_t	typeref:typename:ecs_vector_t *
systems_ran_frame	lib/flecs/flecs.h	/^    ecs_counter_t systems_ran_frame;          \/* Number of systems ran in the last frame. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
systems_ran_frame	lib/flecs/flecs.h	/^    int32_t systems_ran_frame;  \/* Total number of systems ran in last frame *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:int32_t
systems_ran_frame	lib/flecs/include/flecs.h	/^    int32_t systems_ran_frame;  \/* Total number of systems ran in last frame *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:int32_t
systems_ran_frame	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t systems_ran_frame;          \/* Number of systems ran in the last frame. *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
sz	lib/uthash/include/utarray.h	/^    size_t sz;$/;"	m	struct:__anonf30a79380108	typeref:typename:size_t
sz	lib/uthash/src/utarray.h	/^    size_t sz;$/;"	m	struct:__anon57c8b0dc0108	typeref:typename:size_t
t	lib/flecs/flecs.h	/^    int32_t t; $/;"	m	struct:ecs_query_stats_t	typeref:typename:int32_t
t	lib/flecs/flecs.h	/^    int32_t t;$/;"	m	struct:ecs_world_stats_t	typeref:typename:int32_t
t	lib/flecs/include/flecs/addons/stats.h	/^    int32_t t; $/;"	m	struct:ecs_query_stats_t	typeref:typename:int32_t
t	lib/flecs/include/flecs/addons/stats.h	/^    int32_t t;$/;"	m	struct:ecs_world_stats_t	typeref:typename:int32_t
t	lib/uthash/tests/test89.c	/^    clock_time_t t;$/;"	m	struct:netq_t	typeref:typename:clock_time_t	file:
t_next	lib/flecs/flecs.c	/^int32_t t_next($/;"	f	typeref:typename:int32_t	file:
t_next	lib/flecs/src/addons/stats.c	/^int32_t t_next($/;"	f	typeref:typename:int32_t	file:
t_prev	lib/flecs/flecs.c	/^int32_t t_prev($/;"	f	typeref:typename:int32_t	file:
t_prev	lib/flecs/src/addons/stats.c	/^int32_t t_prev($/;"	f	typeref:typename:int32_t	file:
table	lib/flecs/flecs.c	/^    ecs_table_slice_t table;$/;"	m	struct:ecs_rule_reg_t	typeref:typename:ecs_table_slice_t	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;         \/* Table. Not set if entity is empty *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;       \/* The current table. *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;$/;"	m	struct:__anona642c0050d08	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_query_event_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_rule_subset_frame_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_rule_superset_frame_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_table_leaf_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_table_slice_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/flecs.h	/^    Base& table(flecs::table_t *t, int32_t offset = 0, int32_t count = 0) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
table	lib/flecs/flecs.h	/^    ecs_table_t *table;           \/* Current table *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_table_t *
table	lib/flecs/flecs.h	/^    ecs_table_t *table;  \/* Identifies a type (and table) in world *\/$/;"	m	struct:ecs_record_t	typeref:typename:ecs_table_t *
table	lib/flecs/flecs.h	/^    ecs_table_t *table; \/* Table to insert the entities into. Should not be set$/;"	m	struct:ecs_bulk_desc_t	typeref:typename:ecs_table_t *
table	lib/flecs/flecs.h	/^    ecs_table_t *table;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_table_t *
table	lib/flecs/flecs.h	/^    ecs_table_t *table;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_table_t *
table	lib/flecs/flecs.h	/^    flecs::table_t* table() const {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::table_t *
table	lib/flecs/flecs.h	/^    void *table;            \/* Last known table *\/$/;"	m	struct:ecs_ref_t	typeref:typename:void *
table	lib/flecs/include/flecs.h	/^    ecs_table_t *table; \/* Table to insert the entities into. Should not be set$/;"	m	struct:ecs_bulk_desc_t	typeref:typename:ecs_table_t *
table	lib/flecs/include/flecs.h	/^    ecs_table_t *table;$/;"	m	struct:ecs_event_desc_t	typeref:typename:ecs_table_t *
table	lib/flecs/include/flecs/addons/cpp/entity_view.hpp	/^    flecs::table_t* table() const {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::table_t *
table	lib/flecs/include/flecs/addons/cpp/mixins/event/builder.hpp	/^    Base& table(flecs::table_t *t, int32_t offset = 0, int32_t count = 0) {$/;"	f	struct:flecs::event_builder_base	typeref:typename:Base &
table	lib/flecs/include/flecs/private/api_types.h	/^    ecs_table_t *table;           \/* Current table *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_table_t *
table	lib/flecs/include/flecs/private/api_types.h	/^    ecs_table_t *table;  \/* Identifies a type (and table) in world *\/$/;"	m	struct:ecs_record_t	typeref:typename:ecs_table_t *
table	lib/flecs/include/flecs/private/api_types.h	/^    ecs_table_t *table;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_table_t *
table	lib/flecs/include/flecs/private/api_types.h	/^    void *table;            \/* Last known table *\/$/;"	m	struct:ecs_ref_t	typeref:typename:void *
table	lib/flecs/src/addons/rules.c	/^    ecs_table_slice_t table;$/;"	m	struct:ecs_rule_reg_t	typeref:typename:ecs_table_slice_t	file:
table	lib/flecs/src/addons/rules.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_rule_subset_frame_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/src/addons/rules.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_rule_superset_frame_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/src/addons/rules.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_table_slice_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/src/addons/snapshot.c	/^    ecs_table_t *table;$/;"	m	struct:ecs_table_leaf_t	typeref:typename:ecs_table_t *	file:
table	lib/flecs/src/private_types.h	/^    ecs_table_t *table;         \/* Table. Not set if entity is empty *\/$/;"	m	struct:ecs_entity_info_t	typeref:typename:ecs_table_t *
table	lib/flecs/src/private_types.h	/^    ecs_table_t *table;       \/* The current table. *\/$/;"	m	struct:ecs_query_table_match_t	typeref:typename:ecs_table_t *
table	lib/flecs/src/private_types.h	/^    ecs_table_t *table;$/;"	m	struct:ecs_query_event_t	typeref:typename:ecs_table_t *
table	lib/flecs/src/private_types.h	/^    ecs_table_t *table;$/;"	m	struct:ecs_table_cache_hdr_t	typeref:typename:ecs_table_t *
table	lib/flecs/src/query.c	/^    ecs_table_t *table;$/;"	m	struct:__anon8da83e450108	typeref:typename:ecs_table_t *	file:
table_append	lib/flecs/flecs.c	/^ecs_table_t* table_append($/;"	f	typeref:typename:ecs_table_t *	file:
table_append	lib/flecs/src/entity.c	/^ecs_table_t* table_append($/;"	f	typeref:typename:ecs_table_t *	file:
table_cache_free	lib/flecs/flecs.c	/^void table_cache_free($/;"	f	typeref:typename:void	file:
table_cache_free	lib/flecs/src/query.c	/^void table_cache_free($/;"	f	typeref:typename:void	file:
table_cache_list_insert	lib/flecs/flecs.c	/^void table_cache_list_insert($/;"	f	typeref:typename:void	file:
table_cache_list_insert	lib/flecs/src/table_cache.c	/^void table_cache_list_insert($/;"	f	typeref:typename:void	file:
table_cache_list_remove	lib/flecs/flecs.c	/^void table_cache_list_remove($/;"	f	typeref:typename:void	file:
table_cache_list_remove	lib/flecs/src/table_cache.c	/^void table_cache_list_remove($/;"	f	typeref:typename:void	file:
table_column	lib/flecs/flecs.h	/^    flecs::column<T> table_column() const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<T>
table_column	lib/flecs/flecs.h	/^    flecs::column<T> table_column(flecs::id_t obj) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<T>
table_column	lib/flecs/flecs.h	/^    void* table_column(int32_t column) const {$/;"	f	struct:flecs::iter	typeref:typename:void *
table_column	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::column<T> table_column() const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<T>
table_column	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::column<T> table_column(flecs::id_t obj) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<T>
table_column	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    void* table_column(int32_t column) const {$/;"	f	struct:flecs::iter	typeref:typename:void *
table_count	lib/flecs/flecs.h	/^    ecs_gauge_t table_count;                  \/* Number of tables *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
table_count	lib/flecs/flecs.h	/^    int32_t table_count() const {$/;"	f	struct:flecs::iter	typeref:typename:int32_t
table_count	lib/flecs/flecs.h	/^    int32_t table_count;          \/* Active table count for query *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
table_count	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    int32_t table_count() const {$/;"	f	struct:flecs::iter	typeref:typename:int32_t
table_count	lib/flecs/include/flecs/addons/stats.h	/^    ecs_gauge_t table_count;                  \/* Number of tables *\/$/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_gauge_t
table_count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t table_count;          \/* Active table count for query *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
table_count_actual	lib/flecs/test/api/include/api.h	/^    int32_t table_count_actual;$/;"	m	struct:test_iter_result_t	typeref:typename:int32_t
table_count_expect	lib/flecs/test/api/include/api.h	/^    int32_t table_count_expect;$/;"	m	struct:test_iter_result_t	typeref:typename:int32_t
table_diff_free	lib/flecs/flecs.c	/^void table_diff_free($/;"	f	typeref:typename:void	file:
table_diff_free	lib/flecs/src/table_graph.c	/^void table_diff_free($/;"	f	typeref:typename:void	file:
table_dirty_state_t	lib/flecs/flecs.c	/^} table_dirty_state_t;$/;"	t	typeref:struct:__anona642c0050d08	file:
table_dirty_state_t	lib/flecs/src/query.c	/^} table_dirty_state_t;$/;"	t	typeref:struct:__anon8da83e450108	file:
table_event	lib/flecs/flecs.h	/^    bool table_event;$/;"	m	struct:ecs_event_desc_t	typeref:typename:bool
table_event	lib/flecs/include/flecs.h	/^    bool table_event;$/;"	m	struct:ecs_event_desc_t	typeref:typename:bool
table_from_entity	lib/flecs/flecs.c	/^ecs_table_slice_t table_from_entity($/;"	f	typeref:typename:ecs_table_slice_t	file:
table_from_entity	lib/flecs/src/addons/rules.c	/^ecs_table_slice_t table_from_entity($/;"	f	typeref:typename:ecs_table_slice_t	file:
table_map	lib/flecs/flecs.c	/^    ecs_hashmap_t table_map;    \/* hashmap<ecs_ids_t, ecs_table_t*> *\/$/;"	m	struct:ecs_store_t	typeref:typename:ecs_hashmap_t	file:
table_map	lib/flecs/src/private_types.h	/^    ecs_hashmap_t table_map;    \/* hashmap<ecs_ids_t, ecs_table_t*> *\/$/;"	m	struct:ecs_store_t	typeref:typename:ecs_hashmap_t
table_only	lib/flecs/flecs.h	/^    bool table_only;              \/* If false, iterator does not expose table data *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
table_only	lib/flecs/include/flecs/private/api_types.h	/^    bool table_only;              \/* If false, iterator does not expose table data *\/$/;"	m	struct:ecs_iter_t	typeref:typename:bool
table_reg_get	lib/flecs/flecs.c	/^ecs_table_slice_t table_reg_get($/;"	f	typeref:typename:ecs_table_slice_t	file:
table_reg_get	lib/flecs/src/addons/rules.c	/^ecs_table_slice_t table_reg_get($/;"	f	typeref:typename:ecs_table_slice_t	file:
table_reg_set	lib/flecs/flecs.c	/^void table_reg_set($/;"	f	typeref:typename:void	file:
table_reg_set	lib/flecs/src/addons/rules.c	/^void table_reg_set($/;"	f	typeref:typename:void	file:
table_slices	lib/flecs/flecs.c	/^    ecs_vector_t *table_slices;     $/;"	m	struct:ecs_query_t	typeref:typename:ecs_vector_t *	file:
table_slices	lib/flecs/src/private_types.h	/^    ecs_vector_t *table_slices;     $/;"	m	struct:ecs_query_t	typeref:typename:ecs_vector_t *
table_t	lib/flecs/flecs.h	/^using table_t = ecs_table_t;$/;"	t	namespace:flecs	typeref:typename:ecs_table_t
table_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using table_t = ecs_table_t;$/;"	t	namespace:flecs	typeref:typename:ecs_table_t
tables	lib/flecs/flecs.c	/^    ecs_sparse_t tables;       \/* sparse<table_id, ecs_table_t> *\/$/;"	m	struct:ecs_store_t	typeref:typename:ecs_sparse_t	file:
tables	lib/flecs/flecs.c	/^    ecs_table_cache_list_t tables;$/;"	m	struct:ecs_table_cache_t	typeref:typename:ecs_table_cache_list_t	file:
tables	lib/flecs/flecs.c	/^    ecs_vector_t *tables;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_vector_t *	file:
tables	lib/flecs/flecs.h	/^    ecs_vector_t *tables; \/* ecs_table_leaf_t *\/$/;"	m	struct:ecs_snapshot_iter_t	typeref:typename:ecs_vector_t *
tables	lib/flecs/include/flecs/private/api_types.h	/^    ecs_vector_t *tables; \/* ecs_table_leaf_t *\/$/;"	m	struct:ecs_snapshot_iter_t	typeref:typename:ecs_vector_t *
tables	lib/flecs/src/addons/snapshot.c	/^    ecs_vector_t *tables;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_vector_t *	file:
tables	lib/flecs/src/private_types.h	/^    ecs_sparse_t tables;       \/* sparse<table_id, ecs_table_t> *\/$/;"	m	struct:ecs_store_t	typeref:typename:ecs_sparse_t
tables	lib/flecs/src/private_types.h	/^    ecs_table_cache_list_t tables;$/;"	m	struct:ecs_table_cache_t	typeref:typename:ecs_table_cache_list_t
tag	lib/flecs/test/api/src/TriggerOnRemove.c	/^    ecs_entity_t tag;$/;"	m	struct:on_remove_has_tag_t	typeref:typename:ecs_entity_t	file:
tag	lib/uthash/tests/test79.c	/^    int tag;$/;"	m	struct:hs_t	typeref:typename:int	file:
tail	lib/libflint/include/lflinkedlist.h	/^    struct ListNode* tail;$/;"	m	struct:__anoncabdecbc0108	typeref:struct:ListNode *
tail	lib/uthash/include/uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_handle *
tail	lib/uthash/src/uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_handle *
take	lib/flecs/flecs.h	/^    void take() {$/;"	f	struct:flecs::snapshot	typeref:typename:void
take	lib/flecs/flecs.h	/^    void take(const F& f) {$/;"	f	struct:flecs::snapshot	typeref:typename:void
take	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    void take() {$/;"	f	struct:flecs::snapshot	typeref:typename:void
take	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    void take(const F& f) {$/;"	f	struct:flecs::snapshot	typeref:typename:void
target_default_compile_options_c	lib/flecs/cmake/target_default_compile_options.cmake	/^function(target_default_compile_options_c THIS)$/;"	f
target_default_compile_options_cxx	lib/flecs/cmake/target_default_compile_options.cmake	/^function(target_default_compile_options_cxx THIS)$/;"	f
target_default_compile_warnings_c	lib/flecs/cmake/target_default_compile_warnings.cmake	/^function(target_default_compile_warnings_c THIS)$/;"	f
target_default_compile_warnings_cxx	lib/flecs/cmake/target_default_compile_warnings.cmake	/^function(target_default_compile_warnings_cxx THIS)$/;"	f
target_fps	lib/flecs/flecs.h	/^    FLECS_FLOAT target_fps;           \/* Target fps *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
target_fps	lib/flecs/flecs.h	/^    FLECS_FLOAT target_fps;   \/* Target FPS. *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:FLECS_FLOAT
target_fps	lib/flecs/flecs.h	/^    app_builder& target_fps(FLECS_FLOAT value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
target_fps	lib/flecs/include/flecs.h	/^    FLECS_FLOAT target_fps;           \/* Target fps *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
target_fps	lib/flecs/include/flecs/addons/app.h	/^    FLECS_FLOAT target_fps;   \/* Target FPS. *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:FLECS_FLOAT
target_fps	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    app_builder& target_fps(FLECS_FLOAT value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
tbl	lib/uthash/include/uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_table *
tbl	lib/uthash/src/uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_table *
tbl_from_sig_addr	lib/uthash/tests/hashscan.c	/^static char *tbl_from_sig_addr(char *sig)$/;"	f	typeref:typename:char *	file:
temperature	lib/flecs/examples/c/reflection/units/src/main.c	/^    double temperature;$/;"	m	struct:__anon444de4d00108	typeref:typename:double	file:
temperature	lib/flecs/examples/cpp/reflection/units/src/main.cpp	/^    double temperature;$/;"	m	struct:WeatherStation	typeref:typename:double	file:
temperature	lib/flecs/flecs.h	/^struct temperature {$/;"	s	struct:flecs::units
temperature	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct temperature {$/;"	s	struct:flecs::units
term	lib/flecs/flecs.c	/^    int32_t term;               \/* Corresponding term index in signature *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
term	lib/flecs/flecs.h	/^        ecs_term_iter_t term;$/;"	m	union:ecs_iter_private_t::__anona642c00a010a	typeref:typename:ecs_term_iter_t
term	lib/flecs/flecs.h	/^    Base& term() {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(E value) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(const char *expr) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(const flecs::type& type) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(const flecs::type& type, flecs::id_t o) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(flecs::term& term) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(flecs::term&& term) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(id_t id) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(id_t id) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(id_t o) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    Base& term(id_t r, id_t o) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/flecs.h	/^    ecs_term_t term;            \/* Term describing the trigger condition id *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_term_t
term	lib/flecs/flecs.h	/^    ecs_term_t term;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_term_t
term	lib/flecs/flecs.h	/^    ecs_term_t term;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_term_t
term	lib/flecs/flecs.h	/^    flecs::column<A> term(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<A>
term	lib/flecs/flecs.h	/^    flecs::term term(int32_t index) {$/;"	f	struct:flecs::filter_base	typeref:typename:flecs::term
term	lib/flecs/flecs.h	/^    flecs::term term(int32_t index) {$/;"	f	struct:flecs::query_base	typeref:typename:flecs::term
term	lib/flecs/flecs.h	/^    flecs::unsafe_column term(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::unsafe_column
term	lib/flecs/flecs.h	/^    term(const term& t) : term_builder_i<term>(&value) {$/;"	f	struct:flecs::term
term	lib/flecs/flecs.h	/^    term(flecs::world_t *world_ptr) $/;"	f	struct:flecs::term
term	lib/flecs/flecs.h	/^    term(flecs::world_t *world_ptr, const char *expr) $/;"	f	struct:flecs::term
term	lib/flecs/flecs.h	/^    term(flecs::world_t *world_ptr, ecs_term_t t)$/;"	f	struct:flecs::term
term	lib/flecs/flecs.h	/^    term(flecs::world_t *world_ptr, id_t id) $/;"	f	struct:flecs::term
term	lib/flecs/flecs.h	/^    term(flecs::world_t *world_ptr, id_t r, id_t o) $/;"	f	struct:flecs::term
term	lib/flecs/flecs.h	/^    term(id_t id) $/;"	f	struct:flecs::term
term	lib/flecs/flecs.h	/^    term(term&& t) : term_builder_i<term>(&value) {$/;"	f	struct:flecs::term
term	lib/flecs/flecs.h	/^inline flecs::term world::term(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::term
term	lib/flecs/flecs.h	/^struct term final : term_builder_i<term> {$/;"	s	namespace:flecs
term	lib/flecs/include/flecs.h	/^    ecs_term_t term;            \/* Term describing the trigger condition id *\/$/;"	m	struct:ecs_trigger_t	typeref:typename:ecs_term_t
term	lib/flecs/include/flecs.h	/^    ecs_term_t term;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:ecs_term_t
term	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::column<A> term(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<A>
term	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::unsafe_column term(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::unsafe_column
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term() {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(E value) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(const char *expr) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(const flecs::type& type) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(const flecs::type& type, flecs::id_t o) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(flecs::term& term) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(flecs::term&& term) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(id_t id) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(id_t o) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/builder_i.hpp	/^    Base& term(id_t r, id_t o) {$/;"	f	struct:flecs::filter_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    flecs::term term(int32_t index) {$/;"	f	struct:flecs::filter_base	typeref:typename:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    flecs::term term(int32_t index) {$/;"	f	struct:flecs::query_base	typeref:typename:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& term(id_t id) {$/;"	f	struct:flecs::term_builder_i	typeref:typename:Base &
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term(const term& t) : term_builder_i<term>(&value) {$/;"	f	struct:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term(flecs::world_t *world_ptr) $/;"	f	struct:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term(flecs::world_t *world_ptr, const char *expr) $/;"	f	struct:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term(flecs::world_t *world_ptr, ecs_term_t t)$/;"	f	struct:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term(flecs::world_t *world_ptr, id_t id) $/;"	f	struct:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term(flecs::world_t *world_ptr, id_t r, id_t o) $/;"	f	struct:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term(id_t id) $/;"	f	struct:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    term(term&& t) : term_builder_i<term>(&value) {$/;"	f	struct:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^inline flecs::term world::term(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::term
term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^struct term final : term_builder_i<term> {$/;"	s	namespace:flecs
term	lib/flecs/include/flecs/private/api_types.h	/^        ecs_term_iter_t term;$/;"	m	union:ecs_iter_private_t::__anon49db2d84010a	typeref:typename:ecs_term_iter_t
term	lib/flecs/include/flecs/private/api_types.h	/^    ecs_term_t term;$/;"	m	struct:ecs_term_iter_t	typeref:typename:ecs_term_t
term	lib/flecs/src/addons/rules.c	/^    int32_t term;               \/* Corresponding term index in signature *\/$/;"	m	struct:ecs_rule_op_t	typeref:typename:int32_t	file:
term_builder_i	lib/flecs/flecs.h	/^    term_builder_i() : m_term(nullptr) { }$/;"	f	struct:flecs::term_builder_i
term_builder_i	lib/flecs/flecs.h	/^    term_builder_i(ecs_term_t *term_ptr) { $/;"	f	struct:flecs::term_builder_i
term_builder_i	lib/flecs/flecs.h	/^struct term_builder_i : term_id_builder_i<Base> {$/;"	s	namespace:flecs
term_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    term_builder_i() : m_term(nullptr) { }$/;"	f	struct:flecs::term_builder_i
term_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    term_builder_i(ecs_term_t *term_ptr) { $/;"	f	struct:flecs::term_builder_i
term_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^struct term_builder_i : term_id_builder_i<Base> {$/;"	s	namespace:flecs
term_cache	lib/flecs/flecs.h	/^    ecs_term_t term_cache[ECS_TERM_CACHE_SIZE]; \/* Cache for small filters *\/$/;"	m	struct:ecs_filter_t	typeref:typename:ecs_term_t[]
term_cache	lib/flecs/include/flecs.h	/^    ecs_term_t term_cache[ECS_TERM_CACHE_SIZE]; \/* Cache for small filters *\/$/;"	m	struct:ecs_filter_t	typeref:typename:ecs_term_t[]
term_cache_used	lib/flecs/flecs.h	/^    bool term_cache_used;$/;"	m	struct:ecs_filter_t	typeref:typename:bool
term_cache_used	lib/flecs/include/flecs.h	/^    bool term_cache_used;$/;"	m	struct:ecs_filter_t	typeref:typename:bool
term_can_inherit	lib/flecs/flecs.c	/^bool term_can_inherit($/;"	f	typeref:typename:bool	file:
term_can_inherit	lib/flecs/src/filter.c	/^bool term_can_inherit($/;"	f	typeref:typename:bool	file:
term_columns	lib/flecs/test/api/include/api.h	/^    void *term_columns[ITER_MAX_TERMS];$/;"	m	struct:test_iter_result_t	typeref:typename:void * []
term_count	lib/flecs/flecs.h	/^    int32_t term_count() const {$/;"	f	struct:flecs::iter	typeref:typename:int32_t
term_count	lib/flecs/flecs.h	/^    int32_t term_count() {$/;"	f	struct:flecs::filter_base	typeref:typename:int32_t
term_count	lib/flecs/flecs.h	/^    int32_t term_count() {$/;"	f	struct:flecs::query_base	typeref:typename:int32_t
term_count	lib/flecs/flecs.h	/^    int32_t term_count;           \/* Number of terms in query *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
term_count	lib/flecs/flecs.h	/^    int32_t term_count;        \/* Number of elements in terms array *\/$/;"	m	struct:ecs_filter_t	typeref:typename:int32_t
term_count	lib/flecs/include/flecs.h	/^    int32_t term_count;        \/* Number of elements in terms array *\/$/;"	m	struct:ecs_filter_t	typeref:typename:int32_t
term_count	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    int32_t term_count() const {$/;"	f	struct:flecs::iter	typeref:typename:int32_t
term_count	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    int32_t term_count() {$/;"	f	struct:flecs::filter_base	typeref:typename:int32_t
term_count	lib/flecs/include/flecs/addons/cpp/mixins/query/impl.hpp	/^    int32_t term_count() {$/;"	f	struct:flecs::query_base	typeref:typename:int32_t
term_count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t term_count;           \/* Number of terms in query *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
term_count	lib/flecs/test/api/include/api.h	/^    int32_t term_count;$/;"	m	struct:Probe	typeref:typename:int32_t
term_count_actual	lib/flecs/flecs.h	/^    int32_t term_count_actual; \/* Processed count, which folds OR terms *\/$/;"	m	struct:ecs_filter_t	typeref:typename:int32_t
term_count_actual	lib/flecs/include/flecs.h	/^    int32_t term_count_actual; \/* Processed count, which folds OR terms *\/$/;"	m	struct:ecs_filter_t	typeref:typename:int32_t
term_error	lib/flecs/flecs.c	/^void term_error($/;"	f	typeref:typename:void	file:
term_error	lib/flecs/src/filter.c	/^void term_error($/;"	f	typeref:typename:void	file:
term_id_builder_i	lib/flecs/flecs.h	/^    term_id_builder_i() : m_term_id(nullptr) { }$/;"	f	struct:flecs::term_id_builder_i
term_id_builder_i	lib/flecs/flecs.h	/^struct term_id_builder_i {$/;"	s	namespace:flecs
term_id_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    term_id_builder_i() : m_term_id(nullptr) { }$/;"	f	struct:flecs::term_id_builder_i
term_id_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^struct term_id_builder_i {$/;"	s	namespace:flecs
term_id_entity	lib/flecs/flecs.c	/^ecs_entity_t term_id_entity($/;"	f	typeref:typename:ecs_entity_t	file:
term_id_entity	lib/flecs/src/filter.c	/^ecs_entity_t term_id_entity($/;"	f	typeref:typename:ecs_entity_t	file:
term_id_is_variable	lib/flecs/flecs.c	/^bool term_id_is_variable($/;"	f	typeref:typename:bool	file:
term_id_is_variable	lib/flecs/src/addons/rules.c	/^bool term_id_is_variable($/;"	f	typeref:typename:bool	file:
term_id_to_var	lib/flecs/flecs.c	/^ecs_rule_var_t* term_id_to_var($/;"	f	typeref:typename:ecs_rule_var_t *	file:
term_id_to_var	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* term_id_to_var($/;"	f	typeref:typename:ecs_rule_var_t *	file:
term_id_var_name	lib/flecs/flecs.c	/^const char *term_id_var_name($/;"	f	typeref:typename:const char *	file:
term_id_var_name	lib/flecs/src/addons/rules.c	/^const char *term_id_var_name($/;"	f	typeref:typename:const char *	file:
term_ids	lib/flecs/test/api/include/api.h	/^    ecs_id_t term_ids[ITER_MAX_ENTITIES][ITER_MAX_TERMS];$/;"	m	struct:test_iter_result_t	typeref:typename:ecs_id_t[][]
term_ids_expr	lib/flecs/test/api/include/api.h	/^    char *term_ids_expr[ITER_MAX_ENTITIES][ITER_MAX_TERMS];$/;"	m	struct:test_iter_result_t	typeref:typename:char * [][]
term_index	lib/flecs/flecs.h	/^    int32_t term_index;           \/* Index of term that triggered an event.$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
term_index	lib/flecs/include/flecs/private/api_types.h	/^    int32_t term_index;           \/* Index of term that triggered an event.$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
term_index	lib/flecs/test/api/include/api.h	/^    int32_t term_index;$/;"	m	struct:Probe	typeref:typename:int32_t
term_iter	lib/flecs/flecs.h	/^    ecs_term_iter_t term_iter;$/;"	m	struct:ecs_filter_iter_t	typeref:typename:ecs_term_iter_t
term_iter	lib/flecs/include/flecs/private/api_types.h	/^    ecs_term_iter_t term_iter;$/;"	m	struct:ecs_filter_iter_t	typeref:typename:ecs_term_iter_t
term_iter_init	lib/flecs/flecs.c	/^void term_iter_init($/;"	f	typeref:typename:void	file:
term_iter_init	lib/flecs/src/filter.c	/^void term_iter_init($/;"	f	typeref:typename:void	file:
term_iter_init_no_data	lib/flecs/flecs.c	/^void term_iter_init_no_data($/;"	f	typeref:typename:void	file:
term_iter_init_no_data	lib/flecs/src/filter.c	/^void term_iter_init_no_data($/;"	f	typeref:typename:void	file:
term_iter_init_wildcard	lib/flecs/flecs.c	/^void term_iter_init_wildcard($/;"	f	typeref:typename:void	file:
term_iter_init_wildcard	lib/flecs/src/filter.c	/^void term_iter_init_wildcard($/;"	f	typeref:typename:void	file:
term_iter_next	lib/flecs/flecs.c	/^bool term_iter_next($/;"	f	typeref:typename:bool	file:
term_iter_next	lib/flecs/src/filter.c	/^bool term_iter_next($/;"	f	typeref:typename:bool	file:
term_obj	lib/flecs/flecs.c	/^ecs_rule_var_t* term_obj($/;"	f	typeref:typename:ecs_rule_var_t *	file:
term_obj	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* term_obj($/;"	f	typeref:typename:ecs_rule_var_t *	file:
term_owned	lib/flecs/flecs.h	/^    flecs::column<A> term_owned(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<A>
term_owned	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    flecs::column<A> term_owned(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:flecs::column<A>
term_pred	lib/flecs/flecs.c	/^ecs_rule_var_t* term_pred($/;"	f	typeref:typename:ecs_rule_var_t *	file:
term_pred	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* term_pred($/;"	f	typeref:typename:ecs_rule_var_t *	file:
term_ptr	lib/flecs/flecs.h	/^struct term_ptr {$/;"	s	namespace:flecs::_
term_ptr	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct term_ptr {$/;"	s	namespace:flecs::_
term_ptrs	lib/flecs/flecs.h	/^struct term_ptrs {$/;"	s	namespace:flecs::_
term_ptrs	lib/flecs/include/flecs/addons/cpp/invoker.hpp	/^struct term_ptrs {$/;"	s	namespace:flecs::_
term_shared	lib/flecs/flecs.h	/^    const T& term_shared(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:const T &
term_shared	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    const T& term_shared(int32_t index) const {$/;"	f	struct:flecs::iter	typeref:typename:const T &
term_str_w_strbuf	lib/flecs/flecs.c	/^void term_str_w_strbuf($/;"	f	typeref:typename:void	file:
term_str_w_strbuf	lib/flecs/src/filter.c	/^void term_str_w_strbuf($/;"	f	typeref:typename:void	file:
term_subj	lib/flecs/flecs.c	/^ecs_rule_var_t* term_subj($/;"	f	typeref:typename:ecs_rule_var_t *	file:
term_subj	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* term_subj($/;"	f	typeref:typename:ecs_rule_var_t *	file:
term_to_pair	lib/flecs/flecs.c	/^ecs_rule_pair_t term_to_pair($/;"	f	typeref:typename:ecs_rule_pair_t	file:
term_to_pair	lib/flecs/src/addons/rules.c	/^ecs_rule_pair_t term_to_pair($/;"	f	typeref:typename:ecs_rule_pair_t	file:
term_vars	lib/flecs/flecs.c	/^    ecs_rule_term_vars_t term_vars[ECS_RULE_MAX_VAR_COUNT];$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_rule_term_vars_t[]	file:
term_vars	lib/flecs/src/addons/rules.c	/^    ecs_rule_term_vars_t term_vars[ECS_RULE_MAX_VAR_COUNT];$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_rule_term_vars_t[]	file:
terminal_bkcolor	include/BearLibTerminal.h	/^TERMINAL_INLINE void terminal_bkcolor(const char* name)$/;"	f	typeref:typename:TERMINAL_INLINE void
terminal_bkcolor	include/BearLibTerminal.h	/^TERMINAL_INLINE void terminal_bkcolor(const wchar_t* name)$/;"	f	typeref:typename:TERMINAL_INLINE void
terminal_check	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_check(int code)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_color	include/BearLibTerminal.h	/^TERMINAL_INLINE void terminal_color(const char* name)$/;"	f	typeref:typename:TERMINAL_INLINE void
terminal_color	include/BearLibTerminal.h	/^TERMINAL_INLINE void terminal_color(const wchar_t* name)$/;"	f	typeref:typename:TERMINAL_INLINE void
terminal_font	include/BearLibTerminal.h	/^TERMINAL_INLINE void terminal_font(const char* name)$/;"	f	typeref:typename:TERMINAL_INLINE void
terminal_font	include/BearLibTerminal.h	/^TERMINAL_INLINE void terminal_font(const wchar_t* name)$/;"	f	typeref:typename:TERMINAL_INLINE void
terminal_get	include/BearLibTerminal.h	/^TERMINAL_INLINE const wchar_t* terminal_get(const wchar_t* key, const wchar_t* default_ = (const/;"	f	typeref:typename:TERMINAL_INLINE const wchar_t *
terminal_measure	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_measure(const char* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_measure	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_measure(const wchar_t* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_measure_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_measure_ext(int w, int h, const char* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_measure_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_measure_ext(int w, int h, const wchar_t* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_measuref	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_measuref(const char* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_measuref	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_measuref(const wchar_t* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_measuref_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_measuref_ext(int w, int h, const char* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_measuref_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_measuref_ext(int w, int h, const wchar_t* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_pick	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_pick(int x, int y)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_pick_color	include/BearLibTerminal.h	/^TERMINAL_INLINE color_t terminal_pick_color(int x, int y)$/;"	f	typeref:typename:TERMINAL_INLINE color_t
terminal_print	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_print(int x, int y, const char* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_print	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_print(int x, int y, const wchar_t* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_print_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_print_ext(int x, int y, int w, int h, int align, const cha/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_print_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_print_ext(int x, int y, int w, int h, int align, const wch/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_printf	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_printf(int x, int y, const char* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_printf	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_printf(int x, int y, const wchar_t* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_printf_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_printf_ext(int x, int y, int w, int h, int align, const ch/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_printf_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_printf_ext(int x, int y, int w, int h, int align, const wc/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_put_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE void terminal_put_ext(int x, int y, int dx, int dy, int code)$/;"	f	typeref:typename:TERMINAL_INLINE void
terminal_read_str	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_read_str(int x, int y, char* buffer, int max)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_read_str	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_read_str(int x, int y, wchar_t* buffer, int max)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_read_wstr	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_read_wstr(int x, int y, wchar_t* buffer, int max)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_set	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_set(const char* s)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_set	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_set(const wchar_t* s)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_setf	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_setf(const char* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_setf	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_setf(const wchar_t* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_vsprintf	include/BearLibTerminal.h	/^TERMINAL_INLINE const char* terminal_vsprintf(const char* s, va_list args)$/;"	f	typeref:typename:TERMINAL_INLINE const char *
terminal_vswprintf	include/BearLibTerminal.h	/^TERMINAL_INLINE const wchar_t* terminal_vswprintf(const wchar_t* s, va_list args)$/;"	f	typeref:typename:TERMINAL_INLINE const wchar_t *
terminal_wfont	include/BearLibTerminal.h	/^TERMINAL_INLINE void terminal_wfont(const wchar_t* name)$/;"	f	typeref:typename:TERMINAL_INLINE void
terminal_wmeasure	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_wmeasure(const wchar_t* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_wmeasure_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_wmeasure_ext(int w, int h, const wchar_t* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_wmeasuref	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_wmeasuref(const wchar_t* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_wmeasuref_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_wmeasuref_ext(int w, int h, const wchar_t* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_wprint	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_wprint(int x, int y, const wchar_t* s)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_wprint_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_wprint_ext(int x, int y, int w, int h, int align, const wc/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_wprintf	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_wprintf(int x, int y, const wchar_t* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_wprintf_ext	include/BearLibTerminal.h	/^TERMINAL_INLINE dimensions_t terminal_wprintf_ext(int x, int y, int w, int h, int align, const w/;"	f	typeref:typename:TERMINAL_INLINE dimensions_t
terminal_wset	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_wset(const wchar_t* s)$/;"	f	typeref:typename:TERMINAL_INLINE int
terminal_wsetf	include/BearLibTerminal.h	/^TERMINAL_INLINE int terminal_wsetf(const wchar_t* s, ...)$/;"	f	typeref:typename:TERMINAL_INLINE int
terms	lib/flecs/flecs.h	/^    ecs_term_t *terms;            \/* Terms of query being evaluated *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_term_t *
terms	lib/flecs/flecs.h	/^    ecs_term_t *terms;         \/* Array containing terms for filter *\/$/;"	m	struct:ecs_filter_t	typeref:typename:ecs_term_t *
terms	lib/flecs/flecs.h	/^    ecs_term_t terms[ECS_TERM_DESC_CACHE_SIZE];$/;"	m	struct:ecs_filter_desc_t	typeref:typename:ecs_term_t[]
terms	lib/flecs/include/flecs.h	/^    ecs_term_t *terms;         \/* Array containing terms for filter *\/$/;"	m	struct:ecs_filter_t	typeref:typename:ecs_term_t *
terms	lib/flecs/include/flecs.h	/^    ecs_term_t terms[ECS_TERM_DESC_CACHE_SIZE];$/;"	m	struct:ecs_filter_desc_t	typeref:typename:ecs_term_t[]
terms	lib/flecs/include/flecs/private/api_types.h	/^    ecs_term_t *terms;            \/* Terms of query being evaluated *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_term_t *
terms_buffer	lib/flecs/flecs.h	/^    ecs_term_t *terms_buffer;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:ecs_term_t *
terms_buffer	lib/flecs/include/flecs.h	/^    ecs_term_t *terms_buffer;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:ecs_term_t *
terms_buffer_count	lib/flecs/flecs.h	/^    int32_t terms_buffer_count;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:int32_t
terms_buffer_count	lib/flecs/include/flecs.h	/^    int32_t terms_buffer_count;$/;"	m	struct:ecs_filter_desc_t	typeref:typename:int32_t
test	lib/flecs/test/cpp_api/src/Paths.cpp	/^namespace test {$/;"	n	file:
test	lib/flecs/test/cpp_api/src/World.cpp	/^namespace test {$/;"	n	file:
test_1_comp	lib/flecs/test/api/src/Rules.c	/^void test_1_comp(const char *expr) {$/;"	f	typeref:typename:void	file:
test_2_comp	lib/flecs/test/api/src/Rules.c	/^void test_2_comp(const char *expr) {$/;"	f	typeref:typename:void	file:
test_bintree	lib/libflint/tests/tests.c	/^void test_bintree() {$/;"	f	typeref:typename:void
test_calloc	lib/flecs/test/api/src/World.c	/^void *test_calloc(ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
test_calloc	lib/flecs/test/collections/src/Map.c	/^void *test_calloc(ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
test_combs_100_entity	lib/flecs/test/api/src/MultiThread.c	/^void test_combs_100_entity(int THREADS) {$/;"	f	typeref:typename:void	file:
test_combs_100_entity_2_types	lib/flecs/test/api/src/MultiThread.c	/^void test_combs_100_entity_2_types(int THREADS) {$/;"	f	typeref:typename:void	file:
test_fail	lib/flecs/test/meta/include/meta.h	/^#define test_fail(/;"	d
test_iter	lib/flecs/test/api/src/util.c	/^bool test_iter($/;"	f	typeref:typename:bool
test_iter_result_t	lib/flecs/test/api/include/api.h	/^typedef struct test_iter_result_t {$/;"	s
test_iter_result_t	lib/flecs/test/api/include/api.h	/^} test_iter_result_t;$/;"	t	typeref:struct:test_iter_result_t
test_legacy	lib/flecs/test/api/src/Parser.c	/^#define test_legacy(/;"	d	file:
test_ll	lib/libflint/tests/tests.c	/^void test_ll() {$/;"	f	typeref:typename:void
test_malloc	lib/flecs/test/api/src/World.c	/^void *test_malloc(ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
test_malloc	lib/flecs/test/collections/src/Map.c	/^void *test_malloc(ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
test_math	lib/libflint/tests/tests.c	/^void test_math() {$/;"	f	typeref:typename:void
test_mn	lib/flecs/test/meta/src/Serialized.c	/^#define test_mn(/;"	d	file:
test_mp	lib/flecs/test/meta/src/Serialized.c	/^#define test_mp(/;"	d	file:
test_no_chain	lib/flecs/test/api/src/MixinIterable.c	/^void test_no_chain($/;"	f	typeref:typename:void	file:
test_obj	lib/flecs/test/api/src/Parser.c	/^#define test_obj(/;"	d	file:
test_obj_var	lib/flecs/test/api/src/Parser.c	/^#define test_obj_var(/;"	d	file:
test_ok	lib/flecs/test/meta/include/meta.h	/^#define test_ok(/;"	d
test_op	lib/flecs/test/meta/src/Serialized.c	/^static void test_op($/;"	f	typeref:typename:void	file:
test_pred	lib/flecs/test/api/src/Parser.c	/^#define test_pred(/;"	d	file:
test_pred_var	lib/flecs/test/api/src/Parser.c	/^#define test_pred_var(/;"	d	file:
test_realloc	lib/flecs/test/api/src/World.c	/^void *test_realloc(void *old_ptr, ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
test_realloc	lib/flecs/test/collections/src/Map.c	/^void *test_realloc(void *old_ptr, ecs_size_t size) {$/;"	f	typeref:typename:void *	file:
test_set	lib/libflint/tests/tests.c	/^void test_set() {$/;"	f	typeref:typename:void
test_stack	lib/libflint/tests/tests.c	/^void test_stack() {$/;"	f	typeref:typename:void
test_subj	lib/flecs/test/api/src/Parser.c	/^#define test_subj(/;"	d	file:
test_subj_var	lib/flecs/test/api/src/Parser.c	/^#define test_subj_var(/;"	d	file:
test_t	lib/uthash/tests/test38.c	/^struct test_t {$/;"	s	file:
test_t	lib/uthash/tests/test62.c	/^struct test_t {$/;"	s	file:
test_table_count_invoked	lib/flecs/test/api/src/SystemMisc.c	/^static int test_table_count_invoked;$/;"	v	typeref:typename:int	file:
test_term_id	lib/flecs/test/api/src/Rules.c	/^#define test_term_id(/;"	d	file:
test_term_source	lib/flecs/test/api/src/Rules.c	/^#define test_term_source(/;"	d	file:
test_var	lib/flecs/test/api/src/Rules.c	/^#define test_var(/;"	d	file:
test_w_chain	lib/flecs/test/api/src/MixinIterable.c	/^void test_w_chain($/;"	f	typeref:typename:void	file:
tests	lib/libflint/CMakeLists.txt	/^    add_executable(tests tests\/tests.c)$/;"	t
tests_only	lib/uthash/tests/Makefile	/^tests_only: $(PROGS) $(TEST_TARGET)$/;"	t
text	lib/uthash/tests/test22.c	/^    int text[];         \/* comprise the key *\/$/;"	m	struct:__anonbb926f9e0108	typeref:typename:int[]	file:
text	lib/uthash/tests/test22.c	/^    int text[];$/;"	m	struct:__anonbb926f9e0208	typeref:typename:int[]	file:
text2331	lib/uthash/doc/banner.svg	/^         id="text2331"><tspan$/;"	i
thorough	lib/uthash/tests/Makefile	/^thorough:$/;"	t
thr_cond	lib/flecs/flecs.c	/^    ecs_os_cond_t thr_cond;      \/* Used to signal threads at end of frame *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_cond_t	file:
thr_cond	lib/flecs/src/private_types.h	/^    ecs_os_cond_t thr_cond;      \/* Used to signal threads at end of frame *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_cond_t
thr_sync	lib/flecs/flecs.c	/^    ecs_os_mutex_t thr_sync;     \/* Used to signal threads at end of frame *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_mutex_t	file:
thr_sync	lib/flecs/src/private_types.h	/^    ecs_os_mutex_t thr_sync;     \/* Used to signal threads at end of frame *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_mutex_t
thread	lib/flecs/flecs.c	/^    ecs_os_thread_t thread;      \/* Thread handle (0 if no threading is used) *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_os_thread_t	file:
thread	lib/flecs/flecs.c	/^    ecs_os_thread_t thread;$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_os_thread_t	file:
thread	lib/flecs/src/addons/http.c	/^    ecs_os_thread_t thread;$/;"	m	struct:ecs_http_server_t	typeref:typename:ecs_os_thread_t	file:
thread	lib/flecs/src/private_types.h	/^    ecs_os_thread_t thread;      \/* Thread handle (0 if no threading is used) *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_os_thread_t
thread_ctx	lib/flecs/flecs.c	/^    ecs_world_t *thread_ctx;     \/* Points to stage when a thread stage *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_world_t *	file:
thread_ctx	lib/flecs/src/private_types.h	/^    ecs_world_t *thread_ctx;     \/* Points to stage when a thread stage *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_world_t *
thread_join_	lib/flecs/flecs.h	/^    ecs_os_api_thread_join_t thread_join_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_thread_join_t
thread_join_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_thread_join_t thread_join_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_thread_join_t
thread_new_	lib/flecs/flecs.h	/^    ecs_os_api_thread_new_t thread_new_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_thread_new_t
thread_new_	lib/flecs/include/flecs/os_api.h	/^    ecs_os_api_thread_new_t thread_new_;$/;"	m	struct:ecs_os_api_t	typeref:typename:ecs_os_api_thread_new_t
thread_routine	lib/uthash/tests/threads/test2.c	/^void *thread_routine( void *arg ) {$/;"	f	typeref:typename:void *
thread_routine_r	lib/uthash/tests/threads/test1.c	/^void *thread_routine_r( void *arg ) {$/;"	f	typeref:typename:void *
thread_routine_w	lib/uthash/tests/threads/test1.c	/^void *thread_routine_w( void *arg ) {$/;"	f	typeref:typename:void *
threads	lib/flecs/flecs.h	/^    app_builder& threads(int32_t value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
threads	lib/flecs/flecs.h	/^    int32_t threads;          \/* Number of threads. *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:int32_t
threads	lib/flecs/include/flecs/addons/app.h	/^    int32_t threads;          \/* Number of threads. *\/$/;"	m	struct:ecs_app_desc_t	typeref:typename:int32_t
threads	lib/flecs/include/flecs/addons/cpp/mixins/app/builder.hpp	/^    app_builder& threads(int32_t value) {$/;"	f	struct:flecs::app_builder	typeref:typename:app_builder &
throw_invalid_delete	lib/flecs/flecs.c	/^void throw_invalid_delete($/;"	f	typeref:typename:void	file:
throw_invalid_delete	lib/flecs/src/entity.c	/^void throw_invalid_delete($/;"	f	typeref:typename:void	file:
tick	lib/flecs/flecs.h	/^    bool tick;                 \/* True if providing tick *\/$/;"	m	struct:EcsTickSource	typeref:typename:bool
tick	lib/flecs/flecs.h	/^    int32_t tick() const {$/;"	f	struct:flecs::world	typeref:typename:int32_t
tick	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    int32_t tick() const {$/;"	f	struct:flecs::world	typeref:typename:int32_t
tick	lib/flecs/include/flecs/addons/system.h	/^    bool tick;                 \/* True if providing tick *\/$/;"	m	struct:EcsTickSource	typeref:typename:bool
tick_count	lib/flecs/flecs.h	/^    int32_t tick_count;          \/* Number of times the rate filter ticked *\/$/;"	m	struct:EcsRateFilter	typeref:typename:int32_t
tick_count	lib/flecs/include/flecs/addons/timer.h	/^    int32_t tick_count;          \/* Number of times the rate filter ticked *\/$/;"	m	struct:EcsRateFilter	typeref:typename:int32_t
tick_source	lib/flecs/flecs.c	/^    ecs_entity_t tick_source;       \/* Tick source associated with system *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_entity_t	file:
tick_source	lib/flecs/flecs.h	/^    ecs_entity_t tick_source;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_entity_t
tick_source	lib/flecs/include/flecs/addons/system.h	/^    ecs_entity_t tick_source;$/;"	m	struct:ecs_system_desc_t	typeref:typename:ecs_entity_t
tick_source	lib/flecs/src/addons/system/system.h	/^    ecs_entity_t tick_source;       \/* Tick source associated with system *\/$/;"	m	struct:EcsSystem	typeref:typename:ecs_entity_t
tile	src/mapping/map.c	/^enum Tile *tile(struct Map *map, int x, int y) {$/;"	f	typeref:enum:Tile *
tiles	include/mapping/map.h	/^    enum Tile *tiles;$/;"	m	struct:Map	typeref:enum:Tile *
time	lib/flecs/flecs.h	/^    FLECS_FLOAT time() const {$/;"	f	struct:flecs::world	typeref:typename:FLECS_FLOAT
time	lib/flecs/flecs.h	/^    FLECS_FLOAT time;            \/* Incrementing time value *\/$/;"	m	struct:EcsTimer	typeref:typename:FLECS_FLOAT
time	lib/flecs/flecs.h	/^struct time {$/;"	s	struct:flecs::units
time	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct time {$/;"	s	struct:flecs::units
time	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    FLECS_FLOAT time() const {$/;"	f	struct:flecs::world	typeref:typename:FLECS_FLOAT
time	lib/flecs/include/flecs/addons/timer.h	/^    FLECS_FLOAT time;            \/* Incrementing time value *\/$/;"	m	struct:EcsTimer	typeref:typename:FLECS_FLOAT
time	lib/uthash/tests/test96.c	/^    int time;$/;"	m	struct:clockface	typeref:typename:int	file:
time_elapsed	lib/flecs/flecs.h	/^    FLECS_FLOAT time_elapsed;    \/* Time elapsed since last tick *\/$/;"	m	struct:EcsRateFilter	typeref:typename:FLECS_FLOAT
time_elapsed	lib/flecs/flecs.h	/^    FLECS_FLOAT time_elapsed;  \/* Time elapsed since last tick *\/$/;"	m	struct:EcsTickSource	typeref:typename:FLECS_FLOAT
time_elapsed	lib/flecs/include/flecs/addons/system.h	/^    FLECS_FLOAT time_elapsed;  \/* Time elapsed since last tick *\/$/;"	m	struct:EcsTickSource	typeref:typename:FLECS_FLOAT
time_elapsed	lib/flecs/include/flecs/addons/timer.h	/^    FLECS_FLOAT time_elapsed;    \/* Time elapsed since last tick *\/$/;"	m	struct:EcsRateFilter	typeref:typename:FLECS_FLOAT
time_passed	lib/flecs/flecs.c	/^    FLECS_FLOAT time_passed;        \/* Time passed since last invocation *\/$/;"	m	struct:EcsSystem	typeref:typename:FLECS_FLOAT	file:
time_passed	lib/flecs/src/addons/system/system.h	/^    FLECS_FLOAT time_passed;        \/* Time passed since last invocation *\/$/;"	m	struct:EcsSystem	typeref:typename:FLECS_FLOAT
time_scale	lib/flecs/flecs.h	/^    FLECS_FLOAT time_scale;           \/* Time scale applied to delta_time *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
time_scale	lib/flecs/include/flecs.h	/^    FLECS_FLOAT time_scale;           \/* Time scale applied to delta_time *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
time_spent	lib/flecs/flecs.c	/^    float time_spent;               \/* Time spent on running system *\/$/;"	m	struct:EcsSystem	typeref:typename:float	file:
time_spent	lib/flecs/flecs.h	/^    ecs_counter_t time_spent;       \/* Time spent processing a system *\/$/;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_counter_t
time_spent	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t time_spent;       \/* Time spent processing a system *\/$/;"	m	struct:ecs_system_stats_t	typeref:typename:ecs_counter_t
time_spent	lib/flecs/src/addons/system/system.h	/^    float time_spent;               \/* Time spent on running system *\/$/;"	m	struct:EcsSystem	typeref:typename:float
timeout	lib/flecs/flecs.h	/^    FLECS_FLOAT timeout;         \/* Timer timeout period *\/$/;"	m	struct:EcsTimer	typeref:typename:FLECS_FLOAT
timeout	lib/flecs/flecs.h	/^inline FLECS_FLOAT system::timeout() {$/;"	f	class:flecs::system	typeref:typename:FLECS_FLOAT
timeout	lib/flecs/flecs.h	/^inline void system::timeout(FLECS_FLOAT timeout) {$/;"	f	class:flecs::system	typeref:typename:void
timeout	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline FLECS_FLOAT system::timeout() {$/;"	f	class:flecs::system	typeref:typename:FLECS_FLOAT
timeout	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline void system::timeout(FLECS_FLOAT timeout) {$/;"	f	class:flecs::system	typeref:typename:void
timeout	lib/flecs/include/flecs/addons/timer.h	/^    FLECS_FLOAT timeout;         \/* Timer timeout period *\/$/;"	m	struct:EcsTimer	typeref:typename:FLECS_FLOAT
timer	lib/flecs/flecs.h	/^    timer(Args&&... args) : entity(FLECS_FWD(args)...) { }$/;"	f	struct:flecs::timer
timer	lib/flecs/flecs.h	/^struct timer final : entity {$/;"	s	namespace:flecs
timer	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^    timer(Args&&... args) : entity(FLECS_FWD(args)...) { }$/;"	f	struct:flecs::timer
timer	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^struct timer final : entity {$/;"	s	namespace:flecs
timer_init	lib/flecs/flecs.h	/^inline void timer_init(flecs::world& world) {$/;"	f	namespace:flecs::_	typeref:typename:void
timer_init	lib/flecs/include/flecs/addons/cpp/mixins/timer/impl.hpp	/^inline void timer_init(flecs::world& world) {$/;"	f	namespace:flecs::_	typeref:typename:void
timersub	lib/uthash/tests/keystat.c	/^#define timersub(/;"	d	file:
to	lib/flecs/flecs.c	/^    ecs_table_t *to;         \/* Edge destination table *\/$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_table_t *	file:
to	lib/flecs/src/private_types.h	/^    ecs_table_t *to;         \/* Edge destination table *\/$/;"	m	struct:ecs_graph_edge_t	typeref:typename:ecs_table_t *
to_array	lib/flecs/flecs.h	/^array<T, Size> to_array(const T (&elems)[Size]) {$/;"	f	namespace:flecs	typeref:typename:array<T,Size>
to_array	lib/flecs/include/flecs/addons/cpp/utils/array.hpp	/^array<T, Size> to_array(const T (&elems)[Size]) {$/;"	f	namespace:flecs	typeref:typename:array<T,Size>
to_base	lib/flecs/flecs.h	/^    Self& to_base() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
to_base	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& to_base() {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
to_constant	lib/flecs/flecs.h	/^struct to_constant {$/;"	s	namespace:flecs::_
to_constant	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^struct to_constant {$/;"	s	namespace:flecs::_
to_delete	lib/flecs/examples/cpp/systems/mutate_entity_handle/src/main.cpp	/^    flecs::entity to_delete;$/;"	m	struct:Timeout	typeref:typename:flecs::entity	file:
to_entity	lib/flecs/flecs.c	/^ecs_rule_var_t* to_entity($/;"	f	typeref:typename:ecs_rule_var_t *	file:
to_entity	lib/flecs/src/addons/rules.c	/^ecs_rule_var_t* to_entity($/;"	f	typeref:typename:ecs_rule_var_t *	file:
to_expr	lib/flecs/flecs.h	/^flecs::string to_expr(const T* value) {$/;"	f	struct:flecs::world	typeref:typename:flecs::string
to_expr	lib/flecs/flecs.h	/^flecs::string to_expr(flecs::entity_t tid, const void* value) {$/;"	f	struct:flecs::world	typeref:typename:flecs::string
to_expr	lib/flecs/include/flecs/addons/cpp/mixins/meta/world.inl	/^flecs::string to_expr(const T* value) {$/;"	f	typeref:typename:flecs::string
to_expr	lib/flecs/include/flecs/addons/cpp/mixins/meta/world.inl	/^flecs::string to_expr(flecs::entity_t tid, const void* value) {$/;"	f	typeref:typename:flecs::string
to_int	lib/flecs/flecs.h	/^    static constexpr int to_int() {$/;"	f	struct:flecs::_::enum_type	typeref:typename:int
to_int	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static constexpr int to_int() {$/;"	f	struct:flecs::_::enum_type	typeref:typename:int
to_json	lib/flecs/flecs.h	/^flecs::string to_json(const T* value) {$/;"	f	struct:flecs::world	typeref:typename:flecs::string
to_json	lib/flecs/flecs.h	/^flecs::string to_json(const flecs::entity_to_json_desc_t *desc = nullptr) {$/;"	f	struct:flecs::entity_view	typeref:typename:flecs::string
to_json	lib/flecs/flecs.h	/^flecs::string to_json(flecs::entity_t tid, const void* value) {$/;"	f	struct:flecs::world	typeref:typename:flecs::string
to_json	lib/flecs/flecs.h	/^flecs::string to_json(flecs::iter_to_json_desc_t *desc = nullptr) {$/;"	f	struct:flecs::iter_iterable	typeref:typename:flecs::string
to_json	lib/flecs/include/flecs/addons/cpp/mixins/json/entity.inl	/^flecs::string to_json(const flecs::entity_to_json_desc_t *desc = nullptr) {$/;"	f	typeref:typename:flecs::string
to_json	lib/flecs/include/flecs/addons/cpp/mixins/json/iterable.inl	/^flecs::string to_json(flecs::iter_to_json_desc_t *desc = nullptr) {$/;"	f	typeref:typename:flecs::string
to_json	lib/flecs/include/flecs/addons/cpp/mixins/json/world.inl	/^flecs::string to_json(const T* value) {$/;"	f	typeref:typename:flecs::string
to_json	lib/flecs/include/flecs/addons/cpp/mixins/json/world.inl	/^flecs::string to_json(flecs::entity_t tid, const void* value) {$/;"	f	typeref:typename:flecs::string
toppings	lib/flecs/examples/c/reflection/basics_bitmask/src/main.c	/^    Toppings toppings;$/;"	m	struct:__anon9d6d05bc0108	typeref:typename:Toppings	file:
toppings	lib/flecs/examples/cpp/reflection/basics_bitmask/src/main.cpp	/^    uint32_t toppings;$/;"	m	struct:Sandwich	typeref:typename:uint32_t	file:
trace	lib/flecs/flecs.h	/^inline void trace(const char *fmt, ...) {$/;"	f	namespace:flecs::log	typeref:typename:void
trace	lib/flecs/include/flecs/addons/cpp/log.hpp	/^inline void trace(const char *fmt, ...) {$/;"	f	namespace:flecs::log	typeref:typename:void
transcribe_const_t	lib/flecs/flecs.h	/^using transcribe_const_t = conditional_t<is_const<Src>::value, Dst const, Dst>;$/;"	t	namespace:flecs	typeref:typename:conditional_t<is_const<Src>::value,Dst const,Dst>
transcribe_const_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using transcribe_const_t = conditional_t<is_const<Src>::value, Dst const, Dst>;$/;"	t	namespace:flecs	typeref:typename:conditional_t<is_const<Src>::value,Dst const,Dst>
transcribe_cv_t	lib/flecs/flecs.h	/^using transcribe_cv_t = transcribe_const_t< Src, transcribe_volatile_t< Src, Dst> >;$/;"	t	namespace:flecs	typeref:typename:transcribe_const_t<Src,transcribe_volatile_t<Src,Dst>>
transcribe_cv_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using transcribe_cv_t = transcribe_const_t< Src, transcribe_volatile_t< Src, Dst> >;$/;"	t	namespace:flecs	typeref:typename:transcribe_const_t<Src,transcribe_volatile_t<Src,Dst>>
transcribe_volatile_t	lib/flecs/flecs.h	/^using transcribe_volatile_t = conditional_t<is_volatile<Src>::value, Dst volatile, Dst>;$/;"	t	namespace:flecs	typeref:typename:conditional_t<is_volatile<Src>::value,Dst volatile,Dst>
transcribe_volatile_t	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^using transcribe_volatile_t = conditional_t<is_volatile<Src>::value, Dst volatile, Dst>;$/;"	t	namespace:flecs	typeref:typename:conditional_t<is_volatile<Src>::value,Dst volatile,Dst>
transfer_item	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^void transfer_item(flecs::entity container, flecs::entity item) {$/;"	f	typeref:typename:void
transfer_items	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^void transfer_items(flecs::entity dst, flecs::entity src) {$/;"	f	typeref:typename:void
transitive	lib/flecs/flecs.c	/^    bool transitive; \/* Is predicate transitive *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
transitive	lib/flecs/src/addons/rules.c	/^    bool transitive; \/* Is predicate transitive *\/$/;"	m	struct:ecs_rule_pair_t	typeref:typename:bool	file:
translation	lib/flecs/flecs.h	/^    ecs_unit_translation_t translation; \/* Translation for derived unit *\/$/;"	m	struct:EcsUnit	typeref:typename:ecs_unit_translation_t
translation	lib/flecs/flecs.h	/^    ecs_unit_translation_t translation; \/* Translation of prefix *\/$/;"	m	struct:EcsUnitPrefix	typeref:typename:ecs_unit_translation_t
translation	lib/flecs/flecs.h	/^    ecs_unit_translation_t translation;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_unit_translation_t
translation	lib/flecs/flecs.h	/^    ecs_unit_translation_t translation;$/;"	m	struct:ecs_unit_prefix_desc_t	typeref:typename:ecs_unit_translation_t
translation	lib/flecs/include/flecs/addons/meta.h	/^    ecs_unit_translation_t translation; \/* Translation for derived unit *\/$/;"	m	struct:EcsUnit	typeref:typename:ecs_unit_translation_t
translation	lib/flecs/include/flecs/addons/meta.h	/^    ecs_unit_translation_t translation; \/* Translation of prefix *\/$/;"	m	struct:EcsUnitPrefix	typeref:typename:ecs_unit_translation_t
translation	lib/flecs/include/flecs/addons/meta.h	/^    ecs_unit_translation_t translation;$/;"	m	struct:ecs_unit_desc_t	typeref:typename:ecs_unit_translation_t
translation	lib/flecs/include/flecs/addons/meta.h	/^    ecs_unit_translation_t translation;$/;"	m	struct:ecs_unit_prefix_desc_t	typeref:typename:ecs_unit_translation_t
traverse_add	lib/flecs/flecs.c	/^int traverse_add($/;"	f	typeref:typename:int	file:
traverse_add	lib/flecs/src/entity.c	/^int traverse_add($/;"	f	typeref:typename:int	file:
traverse_from_expr	lib/flecs/flecs.c	/^ecs_table_t *traverse_from_expr($/;"	f	typeref:typename:ecs_table_t *	file:
traverse_from_expr	lib/flecs/src/entity.c	/^ecs_table_t *traverse_from_expr($/;"	f	typeref:typename:ecs_table_t *	file:
trig_invoked_count	lib/flecs/test/cpp_api/src/Misc.cpp	/^static int trig_invoked_count = 0;$/;"	v	typeref:typename:int	file:
trigger	lib/flecs/flecs.h	/^    const ecs_trigger_t *trigger;$/;"	m	struct:EcsTrigger	typeref:typename:const ecs_trigger_t *
trigger	lib/flecs/flecs.h	/^    trigger(flecs::world_t *world, ecs_trigger_desc_t *desc) $/;"	f	struct:flecs::trigger
trigger	lib/flecs/flecs.h	/^inline trigger_builder<Comps...> world::trigger(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:trigger_builder<Comps...>
trigger	lib/flecs/flecs.h	/^struct trigger final : entity$/;"	s	namespace:flecs
trigger	lib/flecs/include/flecs.h	/^    const ecs_trigger_t *trigger;$/;"	m	struct:EcsTrigger	typeref:typename:const ecs_trigger_t *
trigger	lib/flecs/include/flecs/addons/cpp/mixins/trigger/impl.hpp	/^    trigger(flecs::world_t *world, ecs_trigger_desc_t *desc) $/;"	f	struct:flecs::trigger
trigger	lib/flecs/include/flecs/addons/cpp/mixins/trigger/impl.hpp	/^inline trigger_builder<Comps...> world::trigger(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:trigger_builder<Comps...>
trigger	lib/flecs/include/flecs/addons/cpp/mixins/trigger/impl.hpp	/^struct trigger final : entity$/;"	s	namespace:flecs
trigger_builder	lib/flecs/flecs.h	/^    trigger_builder(flecs::world_t* world, const char *name = nullptr)$/;"	f	struct:flecs::trigger_builder
trigger_builder	lib/flecs/flecs.h	/^struct trigger_builder final : _::trigger_builder_base<Components...> {$/;"	s	namespace:flecs
trigger_builder	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder.hpp	/^    trigger_builder(flecs::world_t* world, const char *name = nullptr)$/;"	f	struct:flecs::trigger_builder
trigger_builder	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder.hpp	/^struct trigger_builder final : _::trigger_builder_base<Components...> {$/;"	s	namespace:flecs
trigger_builder_base	lib/flecs/flecs.h	/^    using trigger_builder_base = node_builder<$/;"	t	namespace:flecs::_	typeref:typename:node_builder<trigger,ecs_trigger_desc_t,trigger_builder<Components...>,trigger_builder_i,Components...>
trigger_builder_base	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder.hpp	/^    using trigger_builder_base = node_builder<$/;"	t	namespace:flecs::_	typeref:typename:node_builder<trigger,ecs_trigger_desc_t,trigger_builder<Components...>,trigger_builder_i,Components...>
trigger_builder_i	lib/flecs/flecs.h	/^    trigger_builder_i(ecs_trigger_desc_t *desc) $/;"	f	struct:flecs::trigger_builder_i
trigger_builder_i	lib/flecs/flecs.h	/^struct trigger_builder_i : term_builder_i<Base> {$/;"	s	namespace:flecs
trigger_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    trigger_builder_i(ecs_trigger_desc_t *desc) $/;"	f	struct:flecs::trigger_builder_i
trigger_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^struct trigger_builder_i : term_builder_i<Base> {$/;"	s	namespace:flecs
trigger_count	lib/flecs/flecs.c	/^    int32_t trigger_count;$/;"	m	struct:ecs_event_id_record_t	typeref:typename:int32_t	file:
trigger_count	lib/flecs/src/private_types.h	/^    int32_t trigger_count;$/;"	m	struct:ecs_event_id_record_t	typeref:typename:int32_t
trigger_count	lib/flecs/test/api/src/OnDelete.c	/^static int trigger_count;$/;"	v	typeref:typename:int	file:
trigger_entity	lib/flecs/test/api/src/OnDelete.c	/^static ecs_entity_t trigger_entity;$/;"	v	typeref:typename:ecs_entity_t	file:
trigger_type	lib/flecs/test/api/src/Observer.c	/^static ecs_type_t trigger_type;$/;"	v	typeref:typename:ecs_type_t	file:
trigger_type	lib/flecs/test/api/src/Trigger.c	/^static ecs_type_t trigger_type;$/;"	v	typeref:typename:ecs_type_t	file:
trigger_yield_existing	lib/flecs/flecs.c	/^void trigger_yield_existing($/;"	f	typeref:typename:void	file:
trigger_yield_existing	lib/flecs/src/trigger.c	/^void trigger_yield_existing($/;"	f	typeref:typename:void	file:
triggers	lib/flecs/flecs.c	/^    ecs_map_t triggers; \/* map<trigger_id, trigger_t> *\/$/;"	m	struct:ecs_event_id_record_t	typeref:typename:ecs_map_t	file:
triggers	lib/flecs/flecs.c	/^    ecs_sparse_t *triggers;        \/* sparse<query_id, ecs_trigger_t> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *	file:
triggers	lib/flecs/flecs.h	/^    ecs_vector_t *triggers;$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_vector_t *
triggers	lib/flecs/include/flecs.h	/^    ecs_vector_t *triggers;$/;"	m	struct:ecs_observer_t	typeref:typename:ecs_vector_t *
triggers	lib/flecs/src/private_types.h	/^    ecs_map_t triggers; \/* map<trigger_id, trigger_t> *\/$/;"	m	struct:ecs_event_id_record_t	typeref:typename:ecs_map_t
triggers	lib/flecs/src/private_types.h	/^    ecs_sparse_t *triggers;        \/* sparse<query_id, ecs_trigger_t> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *
true	lib/flecs/flecs.h	/^#define true /;"	d
true	lib/flecs/include/flecs/private/api_defines.h	/^#define true /;"	d
try_add	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^static void try_add(flecs::world& ecs) {$/;"	f	typeref:typename:void	file:
try_add_relation	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^static void try_add_relation(flecs::world& ecs) {$/;"	f	typeref:typename:void	file:
try_add_w_object	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^static void try_add_w_object(flecs::world& ecs) {$/;"	f	typeref:typename:void	file:
try_emplace	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^static void try_emplace(flecs::world& ecs) {$/;"	f	typeref:typename:void	file:
try_set	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^static void try_set(flecs::world& ecs) {$/;"	f	typeref:typename:void	file:
try_set_default	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^static void try_set_default(flecs::world& ecs) {$/;"	f	typeref:typename:void	file:
try_sparse	lib/flecs/flecs.c	/^void* try_sparse($/;"	f	typeref:typename:void *	file:
try_sparse	lib/flecs/src/datastructures/sparse.c	/^void* try_sparse($/;"	f	typeref:typename:void *	file:
try_sparse_any	lib/flecs/flecs.c	/^void* try_sparse_any($/;"	f	typeref:typename:void *	file:
try_sparse_any	lib/flecs/src/datastructures/sparse.c	/^void* try_sparse_any($/;"	f	typeref:typename:void *	file:
tspan2333	lib/uthash/doc/banner.svg	/^           y="50.633156">a hash table<\/tspan><tspan$/;"	i
tspan2361	lib/uthash/doc/banner.svg	/^           id="tspan2361">for C structures<\/tspan><\/text>$/;"	i
turn_flag	include/gamestate.h	/^    int turn_flag;$/;"	m	struct:GameState	typeref:typename:int
type	lib/flecs/flecs.c	/^    ecs_meta_token_t type;$/;"	m	struct:meta_type_t	typeref:typename:ecs_meta_token_t	file:
type	lib/flecs/flecs.c	/^    ecs_table_t *type;           \/* Table with switch type *\/$/;"	m	struct:ecs_sw_column_t	typeref:typename:ecs_table_t *	file:
type	lib/flecs/flecs.c	/^    ecs_type_t type;                 \/* Identifies table type in type_index *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_type_t	file:
type	lib/flecs/flecs.c	/^    ecs_vector_t *type;$/;"	m	struct:ecs_table_leaf_t	typeref:typename:ecs_vector_t *	file:
type	lib/flecs/flecs.c	/^    meta_type_t type;$/;"	m	struct:meta_member_t	typeref:typename:meta_type_t	file:
type	lib/flecs/flecs.c	/^    meta_type_t type;$/;"	m	struct:meta_params_t	typeref:typename:meta_type_t	file:
type	lib/flecs/flecs.h	/^    ecs_entity_t type;        \/* The type being iterated *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:ecs_entity_t
type	lib/flecs/flecs.h	/^    ecs_entity_t type;$/;"	m	struct:EcsArray	typeref:typename:ecs_entity_t
type	lib/flecs/flecs.h	/^    ecs_entity_t type;$/;"	m	struct:EcsMember	typeref:typename:ecs_entity_t
type	lib/flecs/flecs.h	/^    ecs_entity_t type;$/;"	m	struct:EcsVector	typeref:typename:ecs_entity_t
type	lib/flecs/flecs.h	/^    ecs_entity_t type;$/;"	m	struct:ecs_array_desc_t	typeref:typename:ecs_entity_t
type	lib/flecs/flecs.h	/^    ecs_entity_t type;$/;"	m	struct:ecs_member_t	typeref:typename:ecs_entity_t
type	lib/flecs/flecs.h	/^    ecs_entity_t type;$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_entity_t
type	lib/flecs/flecs.h	/^    ecs_entity_t type;$/;"	m	struct:ecs_vector_desc_t	typeref:typename:ecs_entity_t
type	lib/flecs/flecs.h	/^    ecs_type_t type;              \/* Current type *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_type_t
type	lib/flecs/flecs.h	/^    ecs_type_t type;        \/* Preserved nested types *\/$/;"	m	struct:EcsType	typeref:typename:ecs_type_t
type	lib/flecs/flecs.h	/^    int32_t type;  \/* Magic number indicating which type of flecs object *\/$/;"	m	struct:ecs_header_t	typeref:typename:int32_t
type	lib/flecs/flecs.h	/^    using type = T;$/;"	t	struct:flecs::actual_type	typeref:typename:T
type	lib/flecs/flecs.h	/^    using type = T;$/;"	t	struct:flecs::first_arg_impl	typeref:typename:T
type	lib/flecs/flecs.h	/^    using type = conditional_t<!is_empty<R>::value || is_empty<O>::value, R, O>;$/;"	t	struct:flecs::pair	typeref:typename:conditional_t<!is_empty<R>::value||is_empty<O>::value,R,O>
type	lib/flecs/flecs.h	/^    using type = pair_type_t<T>;$/;"	t	struct:flecs::actual_type	typeref:typename:pair_type_t<T>
type	lib/flecs/flecs.h	/^    using type = remove_pointer_t< decay_t< actual_type_t<T> > >;$/;"	t	struct:flecs::base_type	typeref:typename:remove_pointer_t<decay_t<actual_type_t<T>>>
type	lib/flecs/flecs.h	/^    using type = remove_pointer_t< remove_reference_t< actual_type_t<T> > >;$/;"	t	struct:flecs::base_arg_type	typeref:typename:remove_pointer_t<remove_reference_t<actual_type_t<T>>>
type	lib/flecs/flecs.h	/^    using type = typename first_arg_impl<Func, arg_list_t<Func>>::type;$/;"	t	struct:flecs::first_arg	typeref:typename:first_arg_impl<Func,arg_list_t<Func>>::type
type	lib/flecs/flecs.h	/^inline flecs::type entity_view::type() const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::type
type	lib/flecs/flecs.h	/^inline flecs::type iter::type() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::type
type	lib/flecs/flecs.h	/^inline flecs::type world::type(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::type
type	lib/flecs/flecs.h	/^inline flecs::type world::type(const char *name) const {$/;"	f	class:flecs::world	typeref:typename:flecs::type
type	lib/flecs/flecs.h	/^struct type : type_base<type> { $/;"	s	namespace:flecs
type	lib/flecs/include/flecs.h	/^    ecs_type_t type;        \/* Preserved nested types *\/$/;"	m	struct:EcsType	typeref:typename:ecs_type_t
type	lib/flecs/include/flecs.h	/^    int32_t type;  \/* Magic number indicating which type of flecs object *\/$/;"	m	struct:ecs_header_t	typeref:typename:int32_t
type	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::type iter::type() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::type
type	lib/flecs/include/flecs/addons/cpp/mixins/entity/impl.hpp	/^inline flecs::type entity_view::type() const {$/;"	f	class:flecs::entity_view	typeref:typename:flecs::type
type	lib/flecs/include/flecs/addons/cpp/mixins/type/impl.hpp	/^inline flecs::type world::type(Args &&... args) const {$/;"	f	class:flecs::world	typeref:typename:flecs::type
type	lib/flecs/include/flecs/addons/cpp/mixins/type/impl.hpp	/^inline flecs::type world::type(const char *name) const {$/;"	f	class:flecs::world	typeref:typename:flecs::type
type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    using type = T;$/;"	t	struct:flecs::actual_type	typeref:typename:T
type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    using type = conditional_t<!is_empty<R>::value || is_empty<O>::value, R, O>;$/;"	t	struct:flecs::pair	typeref:typename:conditional_t<!is_empty<R>::value||is_empty<O>::value,R,O>
type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    using type = pair_type_t<T>;$/;"	t	struct:flecs::actual_type	typeref:typename:pair_type_t<T>
type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    using type = remove_pointer_t< decay_t< actual_type_t<T> > >;$/;"	t	struct:flecs::base_type	typeref:typename:remove_pointer_t<decay_t<actual_type_t<T>>>
type	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    using type = remove_pointer_t< remove_reference_t< actual_type_t<T> > >;$/;"	t	struct:flecs::base_arg_type	typeref:typename:remove_pointer_t<remove_reference_t<actual_type_t<T>>>
type	lib/flecs/include/flecs/addons/cpp/type.hpp	/^struct type : type_base<type> { $/;"	s	namespace:flecs
type	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    using type = T;$/;"	t	struct:flecs::first_arg_impl	typeref:typename:T
type	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    using type = typename first_arg_impl<Func, arg_list_t<Func>>::type;$/;"	t	struct:flecs::first_arg	typeref:typename:first_arg_impl<Func,arg_list_t<Func>>::type
type	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t type;        \/* The type being iterated *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:ecs_entity_t
type	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t type;$/;"	m	struct:EcsArray	typeref:typename:ecs_entity_t
type	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t type;$/;"	m	struct:EcsMember	typeref:typename:ecs_entity_t
type	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t type;$/;"	m	struct:EcsVector	typeref:typename:ecs_entity_t
type	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t type;$/;"	m	struct:ecs_array_desc_t	typeref:typename:ecs_entity_t
type	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t type;$/;"	m	struct:ecs_member_t	typeref:typename:ecs_entity_t
type	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t type;$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_entity_t
type	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t type;$/;"	m	struct:ecs_vector_desc_t	typeref:typename:ecs_entity_t
type	lib/flecs/include/flecs/private/api_types.h	/^    ecs_type_t type;              \/* Current type *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_type_t
type	lib/flecs/src/addons/meta_c.c	/^    ecs_meta_token_t type;$/;"	m	struct:meta_type_t	typeref:typename:ecs_meta_token_t	file:
type	lib/flecs/src/addons/meta_c.c	/^    meta_type_t type;$/;"	m	struct:meta_member_t	typeref:typename:meta_type_t	file:
type	lib/flecs/src/addons/meta_c.c	/^    meta_type_t type;$/;"	m	struct:meta_params_t	typeref:typename:meta_type_t	file:
type	lib/flecs/src/addons/snapshot.c	/^    ecs_vector_t *type;$/;"	m	struct:ecs_table_leaf_t	typeref:typename:ecs_vector_t *	file:
type	lib/flecs/src/private_types.h	/^    ecs_table_t *type;           \/* Table with switch type *\/$/;"	m	struct:ecs_sw_column_t	typeref:typename:ecs_table_t *
type	lib/flecs/src/private_types.h	/^    ecs_type_t type;                 \/* Identifies table type in type_index *\/$/;"	m	struct:ecs_table_t	typeref:typename:ecs_type_t
type_base	lib/flecs/flecs.h	/^    explicit type_base($/;"	f	struct:flecs::type_base
type_base	lib/flecs/flecs.h	/^    explicit type_base(world_t *world, table_t *t)$/;"	f	struct:flecs::type_base
type_base	lib/flecs/flecs.h	/^    type_base(table_t *t)$/;"	f	struct:flecs::type_base
type_base	lib/flecs/flecs.h	/^struct type_base {$/;"	s	namespace:flecs
type_base	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    explicit type_base($/;"	f	struct:flecs::type_base
type_base	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    explicit type_base(world_t *world, table_t *t)$/;"	f	struct:flecs::type_base
type_base	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    type_base(table_t *t)$/;"	f	struct:flecs::type_base
type_base	lib/flecs/include/flecs/addons/cpp/type.hpp	/^struct type_base {$/;"	s	namespace:flecs
type_can_inherit_id	lib/flecs/flecs.c	/^bool type_can_inherit_id($/;"	f	typeref:typename:bool	file:
type_can_inherit_id	lib/flecs/src/search.c	/^bool type_can_inherit_id($/;"	f	typeref:typename:bool	file:
type_dtor	lib/flecs/test/api/src/ComponentLifecycle.c	/^void type_dtor($/;"	f	typeref:typename:void	file:
type_handles	lib/flecs/flecs.c	/^    ecs_map_t type_handles;     \/* Handles to named types *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_map_t	file:
type_handles	lib/flecs/src/private_types.h	/^    ecs_map_t type_handles;     \/* Handles to named types *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_map_t
type_id	lib/flecs/flecs.h	/^flecs::entity_t type_id() {$/;"	f	namespace:flecs	typeref:typename:flecs::entity_t
type_id	lib/flecs/include/flecs/addons/cpp/component.hpp	/^flecs::entity_t type_id() {$/;"	f	namespace:flecs	typeref:typename:flecs::entity_t
type_info	lib/flecs/flecs.c	/^    ecs_sparse_t *type_info;     \/* sparse<type_id, type_info_t> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *	file:
type_info	lib/flecs/src/private_types.h	/^    ecs_sparse_t *type_info;     \/* sparse<type_id, type_info_t> *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_sparse_t *
type_kind_t	lib/flecs/flecs.h	/^using type_kind_t = ecs_type_kind_t;$/;"	t	namespace:flecs	typeref:typename:ecs_type_kind_t
type_kind_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using type_kind_t = ecs_type_kind_t;$/;"	t	namespace:flecs	typeref:typename:ecs_type_kind_t
type_name	lib/flecs/flecs.c	/^    const char *type_name; \/* Include name of mixin type so debug code doesn't$/;"	m	struct:ecs_mixins_t	typeref:typename:const char *	file:
type_name	lib/flecs/flecs.h	/^inline static const char* type_name() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
type_name	lib/flecs/include/flecs/addons/cpp/component.hpp	/^inline static const char* type_name() {$/;"	f	namespace:flecs::_	typeref:typename:const char *
type_name	lib/flecs/src/private_types.h	/^    const char *type_name; \/* Include name of mixin type so debug code doesn't$/;"	m	struct:ecs_mixins_t	typeref:typename:const char *
type_offset_search	lib/flecs/flecs.c	/^int32_t type_offset_search($/;"	f	typeref:typename:int32_t	file:
type_offset_search	lib/flecs/src/search.c	/^int32_t type_offset_search($/;"	f	typeref:typename:int32_t	file:
type_search	lib/flecs/flecs.c	/^int32_t type_search($/;"	f	typeref:typename:int32_t	file:
type_search	lib/flecs/src/search.c	/^int32_t type_search($/;"	f	typeref:typename:int32_t	file:
type_search_relation	lib/flecs/flecs.c	/^int32_t type_search_relation($/;"	f	typeref:typename:int32_t	file:
type_search_relation	lib/flecs/src/search.c	/^int32_t type_search_relation($/;"	f	typeref:typename:int32_t	file:
type_size	lib/flecs/flecs.c	/^ecs_size_t type_size(ecs_world_t *world, ecs_entity_t type) {$/;"	f	typeref:typename:ecs_size_t	file:
type_size	lib/flecs/src/addons/meta/serialized.c	/^ecs_size_t type_size(ecs_world_t *world, ecs_entity_t type) {$/;"	f	typeref:typename:ecs_size_t	file:
type_str	lib/flecs/test/api/src/Type.c	/^char* type_str(ecs_world_t *world, ecs_entity_t type_ent) {$/;"	f	typeref:typename:char *	file:
type_t	lib/flecs/flecs.h	/^using type_t = ecs_type_t;$/;"	t	namespace:flecs	typeref:typename:ecs_type_t
type_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using type_t = ecs_type_t;$/;"	t	namespace:flecs	typeref:typename:ecs_type_t
type_to_inout	lib/flecs/flecs.h	/^    static constexpr flecs::inout_kind_t type_to_inout() {$/;"	f	namespace:flecs::_	typeref:typename:flecs::inout_kind_t
type_to_inout	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^    static constexpr flecs::inout_kind_t type_to_inout() {$/;"	f	namespace:flecs::_	typeref:typename:flecs::inout_kind_t
type_to_oper	lib/flecs/flecs.h	/^    static constexpr flecs::oper_kind_t type_to_oper() {$/;"	f	namespace:flecs::_	typeref:typename:flecs::oper_kind_t
type_to_oper	lib/flecs/include/flecs/addons/cpp/utils/signature.hpp	/^    static constexpr flecs::oper_kind_t type_to_oper() {$/;"	f	namespace:flecs::_	typeref:typename:flecs::oper_kind_t
u	lib/flecs/flecs.c	/^        uint64_t u;$/;"	m	union:_flecs_ito::__anona642c005100a	typeref:typename:uint64_t	file:
u	lib/flecs/src/misc.c	/^        uint64_t u;$/;"	m	union:_flecs_ito::__anoneaa0a51b010a	typeref:typename:uint64_t	file:
u16_t	lib/flecs/flecs.h	/^using u16_t = ecs_u16_t;$/;"	t	namespace:flecs	typeref:typename:ecs_u16_t
u16_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using u16_t = ecs_u16_t;$/;"	t	namespace:flecs	typeref:typename:ecs_u16_t
u32_t	lib/flecs/flecs.h	/^using u32_t = ecs_u32_t;$/;"	t	namespace:flecs	typeref:typename:ecs_u32_t
u32_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using u32_t = ecs_u32_t;$/;"	t	namespace:flecs	typeref:typename:ecs_u32_t
u64_t	lib/flecs/flecs.h	/^using u64_t = ecs_u64_t;$/;"	t	namespace:flecs	typeref:typename:ecs_u64_t
u64_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using u64_t = ecs_u64_t;$/;"	t	namespace:flecs	typeref:typename:ecs_u64_t
u8_t	lib/flecs/flecs.h	/^using u8_t = ecs_u8_t;$/;"	t	namespace:flecs	typeref:typename:ecs_u8_t
u8_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using u8_t = ecs_u8_t;$/;"	t	namespace:flecs	typeref:typename:ecs_u8_t
u_max	lib/flecs/flecs.c	/^static uint64_t u_max[] = { $/;"	v	typeref:typename:uint64_t[]	file:
u_max	lib/flecs/src/misc.c	/^static uint64_t u_max[] = { $/;"	v	typeref:typename:uint64_t[]	file:
uint32_t	lib/uthash/include/uthash.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint32_t	lib/uthash/src/uthash.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint8_t	lib/uthash/include/uthash.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uint8_t	lib/uthash/src/uthash.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
un_set	lib/flecs/flecs.c	/^    ecs_ids_t un_set;        \/* UnSet from hiding\/removing base components *\/$/;"	m	struct:ecs_table_diff_t	typeref:typename:ecs_ids_t	file:
un_set	lib/flecs/src/private_types.h	/^    ecs_ids_t un_set;        \/* UnSet from hiding\/removing base components *\/$/;"	m	struct:ecs_table_diff_t	typeref:typename:ecs_ids_t
unit	lib/flecs/flecs.h	/^    ecs_entity_t unit;$/;"	m	struct:EcsMember	typeref:typename:ecs_entity_t
unit	lib/flecs/flecs.h	/^    ecs_entity_t unit;$/;"	m	struct:ecs_member_t	typeref:typename:ecs_entity_t
unit	lib/flecs/flecs.h	/^    ecs_entity_t unit;$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_entity_t
unit	lib/flecs/flecs.h	/^Self& unit( $/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
unit	lib/flecs/flecs.h	/^Self& unit($/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
unit	lib/flecs/include/flecs/addons/cpp/mixins/meta/entity_builder.inl	/^Self& unit( $/;"	f	typeref:typename:Self &
unit	lib/flecs/include/flecs/addons/cpp/mixins/meta/entity_builder.inl	/^Self& unit($/;"	f	typeref:typename:Self &
unit	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t unit;$/;"	m	struct:EcsMember	typeref:typename:ecs_entity_t
unit	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t unit;$/;"	m	struct:ecs_member_t	typeref:typename:ecs_entity_t
unit	lib/flecs/include/flecs/addons/meta.h	/^    ecs_entity_t unit;$/;"	m	struct:ecs_meta_type_op_t	typeref:typename:ecs_entity_t
unit_prefix	lib/flecs/flecs.h	/^Self& unit_prefix( $/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
unit_prefix	lib/flecs/include/flecs/addons/cpp/mixins/meta/entity_builder.inl	/^Self& unit_prefix( $/;"	f	typeref:typename:Self &
unit_quantity_monitor	lib/flecs/flecs.c	/^void unit_quantity_monitor(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
unit_quantity_monitor	lib/flecs/src/addons/meta/meta.c	/^void unit_quantity_monitor(ecs_iter_t *it) {$/;"	f	typeref:typename:void	file:
units	lib/flecs/flecs.h	/^inline units::units(flecs::world& world) {$/;"	f	class:flecs::units
units	lib/flecs/flecs.h	/^struct units {$/;"	s	namespace:flecs
units	lib/flecs/include/flecs/addons/cpp/mixins/units/decl.hpp	/^struct units {$/;"	s	namespace:flecs
units	lib/flecs/include/flecs/addons/cpp/mixins/units/impl.hpp	/^inline units::units(flecs::world& world) {$/;"	f	class:flecs::units
unlock	lib/flecs/flecs.h	/^    void unlock() {$/;"	f	struct:flecs::world	typeref:typename:void
unlock	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void unlock() {$/;"	f	struct:flecs::world	typeref:typename:void
unmatch_table	lib/flecs/flecs.c	/^void unmatch_table($/;"	f	typeref:typename:void	file:
unmatch_table	lib/flecs/src/query.c	/^void unmatch_table($/;"	f	typeref:typename:void	file:
unregister_event_trigger	lib/flecs/flecs.c	/^void unregister_event_trigger($/;"	f	typeref:typename:void	file:
unregister_event_trigger	lib/flecs/src/trigger.c	/^void unregister_event_trigger($/;"	f	typeref:typename:void	file:
unregister_monitors	lib/flecs/flecs.c	/^void unregister_monitors($/;"	f	typeref:typename:void	file:
unregister_monitors	lib/flecs/src/query.c	/^void unregister_monitors($/;"	f	typeref:typename:void	file:
unregister_trigger	lib/flecs/flecs.c	/^void unregister_trigger($/;"	f	typeref:typename:void	file:
unregister_trigger	lib/flecs/src/trigger.c	/^void unregister_trigger($/;"	f	typeref:typename:void	file:
unregister_trigger_for_id	lib/flecs/flecs.c	/^void unregister_trigger_for_id($/;"	f	typeref:typename:void	file:
unregister_trigger_for_id	lib/flecs/src/trigger.c	/^void unregister_trigger_for_id($/;"	f	typeref:typename:void	file:
unsafe_column	lib/flecs/flecs.h	/^    unsafe_column(void* array, size_t size, size_t count, bool is_shared = false)$/;"	f	struct:flecs::unsafe_column
unsafe_column	lib/flecs/flecs.h	/^struct unsafe_column {$/;"	s	namespace:flecs
unsafe_column	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^    unsafe_column(void* array, size_t size, size_t count, bool is_shared = false)$/;"	f	struct:flecs::unsafe_column
unsafe_column	lib/flecs/include/flecs/addons/cpp/iter.hpp	/^struct unsafe_column {$/;"	s	namespace:flecs
untyped_component	lib/flecs/flecs.h	/^struct untyped_component : entity {$/;"	s	namespace:flecs
untyped_component	lib/flecs/include/flecs/addons/cpp/component.hpp	/^struct untyped_component : entity {$/;"	s	namespace:flecs
update	include/screens/screen.h	/^    screen_func update;$/;"	m	struct:Screen	typeref:typename:screen_func
update_component_monitor_w_array	lib/flecs/flecs.c	/^void update_component_monitor_w_array($/;"	f	typeref:typename:void	file:
update_component_monitor_w_array	lib/flecs/src/entity.c	/^void update_component_monitor_w_array($/;"	f	typeref:typename:void	file:
update_component_monitors	lib/flecs/flecs.c	/^void update_component_monitors($/;"	f	typeref:typename:void	file:
update_component_monitors	lib/flecs/src/entity.c	/^void update_component_monitors($/;"	f	typeref:typename:void	file:
update_table	lib/flecs/flecs.c	/^void update_table($/;"	f	typeref:typename:void	file:
update_table	lib/flecs/src/query.c	/^void update_table($/;"	f	typeref:typename:void	file:
uptr_t	lib/flecs/flecs.h	/^using uptr_t = ecs_uptr_t;$/;"	t	namespace:flecs	typeref:typename:ecs_uptr_t
uptr_t	lib/flecs/include/flecs/addons/cpp/mixins/meta/decl.hpp	/^using uptr_t = ecs_uptr_t;$/;"	t	namespace:flecs	typeref:typename:ecs_uptr_t
usage	lib/uthash/tests/hashscan.c	/^static int usage(const char *prog)$/;"	f	typeref:typename:int	file:
usage	lib/uthash/tests/keystats	/^sub usage {$/;"	s
use	lib/flecs/flecs.h	/^inline flecs::entity world::use(const char *alias) {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
use	lib/flecs/flecs.h	/^inline flecs::entity world::use(const char *name, const char *alias) {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
use	lib/flecs/flecs.h	/^inline void world::use(flecs::entity e, const char *alias) {$/;"	f	class:flecs::world	typeref:typename:void
use	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity world::use(const char *alias) {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
use	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline flecs::entity world::use(const char *name, const char *alias) {$/;"	f	class:flecs::world	typeref:typename:flecs::entity
use	lib/flecs/include/flecs/addons/cpp/impl/world.hpp	/^inline void world::use(flecs::entity e, const char *alias) {$/;"	f	class:flecs::world	typeref:typename:void
use_low_id	lib/flecs/flecs.h	/^    bool use_low_id;     \/* When set to true, a low id (typically reserved for$/;"	m	struct:ecs_entity_desc_t	typeref:typename:bool
use_low_id	lib/flecs/include/flecs.h	/^    bool use_low_id;     \/* When set to true, a low id (typically reserved for$/;"	m	struct:ecs_entity_desc_t	typeref:typename:bool
user_id	lib/uthash/tests/test16.c	/^    int user_id;$/;"	m	struct:my_event	typeref:typename:int	file:
user_id	lib/uthash/tests/test93.c	/^static int user_id = 0;$/;"	v	typeref:typename:int	file:
users	lib/uthash/tests/example.c	/^struct my_struct *users = NULL;$/;"	v	typeref:struct:my_struct *
users	lib/uthash/tests/test93.c	/^static example_user_t * users;$/;"	v	typeref:typename:example_user_t *	file:
using	lib/flecs/flecs.c	/^    ecs_entity_t using[STACK_MAX_SIZE];$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_entity_t[]	file:
using	lib/flecs/src/addons/plecs.c	/^    ecs_entity_t using[STACK_MAX_SIZE];$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_entity_t[]	file:
using_frame	lib/flecs/flecs.c	/^    int32_t using_frame;$/;"	m	struct:__anona642c0050408	typeref:typename:int32_t	file:
using_frame	lib/flecs/src/addons/plecs.c	/^    int32_t using_frame;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:int32_t	file:
using_frames	lib/flecs/flecs.c	/^    int32_t using_frames[STACK_MAX_SIZE];$/;"	m	struct:__anona642c0050408	typeref:typename:int32_t[]	file:
using_frames	lib/flecs/src/addons/plecs.c	/^    int32_t using_frames[STACK_MAX_SIZE];$/;"	m	struct:__anon7212bd4e0108	typeref:typename:int32_t[]	file:
using_stmt	lib/flecs/flecs.c	/^    bool using_stmt;$/;"	m	struct:__anona642c0050408	typeref:typename:bool	file:
using_stmt	lib/flecs/src/addons/plecs.c	/^    bool using_stmt;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:bool	file:
utarray_back	lib/uthash/include/utarray.h	/^#define utarray_back(/;"	d
utarray_back	lib/uthash/src/utarray.h	/^#define utarray_back(/;"	d
utarray_clear	lib/uthash/include/utarray.h	/^#define utarray_clear(/;"	d
utarray_clear	lib/uthash/src/utarray.h	/^#define utarray_clear(/;"	d
utarray_concat	lib/uthash/include/utarray.h	/^#define utarray_concat(/;"	d
utarray_concat	lib/uthash/src/utarray.h	/^#define utarray_concat(/;"	d
utarray_done	lib/uthash/include/utarray.h	/^#define utarray_done(/;"	d
utarray_done	lib/uthash/src/utarray.h	/^#define utarray_done(/;"	d
utarray_eltidx	lib/uthash/include/utarray.h	/^#define utarray_eltidx(/;"	d
utarray_eltidx	lib/uthash/src/utarray.h	/^#define utarray_eltidx(/;"	d
utarray_eltptr	lib/uthash/include/utarray.h	/^#define utarray_eltptr(/;"	d
utarray_eltptr	lib/uthash/src/utarray.h	/^#define utarray_eltptr(/;"	d
utarray_erase	lib/uthash/include/utarray.h	/^#define utarray_erase(/;"	d
utarray_erase	lib/uthash/src/utarray.h	/^#define utarray_erase(/;"	d
utarray_extend_back	lib/uthash/include/utarray.h	/^#define utarray_extend_back(/;"	d
utarray_extend_back	lib/uthash/src/utarray.h	/^#define utarray_extend_back(/;"	d
utarray_find	lib/uthash/include/utarray.h	/^#define utarray_find(/;"	d
utarray_find	lib/uthash/src/utarray.h	/^#define utarray_find(/;"	d
utarray_free	lib/uthash/include/utarray.h	/^#define utarray_free(/;"	d
utarray_free	lib/uthash/src/utarray.h	/^#define utarray_free(/;"	d
utarray_front	lib/uthash/include/utarray.h	/^#define utarray_front(/;"	d
utarray_front	lib/uthash/src/utarray.h	/^#define utarray_front(/;"	d
utarray_init	lib/uthash/include/utarray.h	/^#define utarray_init(/;"	d
utarray_init	lib/uthash/src/utarray.h	/^#define utarray_init(/;"	d
utarray_insert	lib/uthash/include/utarray.h	/^#define utarray_insert(/;"	d
utarray_insert	lib/uthash/src/utarray.h	/^#define utarray_insert(/;"	d
utarray_inserta	lib/uthash/include/utarray.h	/^#define utarray_inserta(/;"	d
utarray_inserta	lib/uthash/src/utarray.h	/^#define utarray_inserta(/;"	d
utarray_len	lib/uthash/include/utarray.h	/^#define utarray_len(/;"	d
utarray_len	lib/uthash/src/utarray.h	/^#define utarray_len(/;"	d
utarray_new	lib/uthash/include/utarray.h	/^#define utarray_new(/;"	d
utarray_new	lib/uthash/src/utarray.h	/^#define utarray_new(/;"	d
utarray_next	lib/uthash/include/utarray.h	/^#define utarray_next(/;"	d
utarray_next	lib/uthash/src/utarray.h	/^#define utarray_next(/;"	d
utarray_oom	lib/uthash/include/utarray.h	/^#define utarray_oom(/;"	d
utarray_oom	lib/uthash/src/utarray.h	/^#define utarray_oom(/;"	d
utarray_pop_back	lib/uthash/include/utarray.h	/^#define utarray_pop_back(/;"	d
utarray_pop_back	lib/uthash/src/utarray.h	/^#define utarray_pop_back(/;"	d
utarray_prev	lib/uthash/include/utarray.h	/^#define utarray_prev(/;"	d
utarray_prev	lib/uthash/src/utarray.h	/^#define utarray_prev(/;"	d
utarray_push_back	lib/uthash/include/utarray.h	/^#define utarray_push_back(/;"	d
utarray_push_back	lib/uthash/src/utarray.h	/^#define utarray_push_back(/;"	d
utarray_renew	lib/uthash/include/utarray.h	/^#define utarray_renew(/;"	d
utarray_renew	lib/uthash/src/utarray.h	/^#define utarray_renew(/;"	d
utarray_reserve	lib/uthash/include/utarray.h	/^#define utarray_reserve(/;"	d
utarray_reserve	lib/uthash/src/utarray.h	/^#define utarray_reserve(/;"	d
utarray_resize	lib/uthash/include/utarray.h	/^#define utarray_resize(/;"	d
utarray_resize	lib/uthash/src/utarray.h	/^#define utarray_resize(/;"	d
utarray_sort	lib/uthash/include/utarray.h	/^#define utarray_sort(/;"	d
utarray_sort	lib/uthash/src/utarray.h	/^#define utarray_sort(/;"	d
utarray_str_cpy	lib/uthash/include/utarray.h	/^static void utarray_str_cpy(void *dst, const void *src) {$/;"	f	typeref:typename:void
utarray_str_cpy	lib/uthash/src/utarray.h	/^static void utarray_str_cpy(void *dst, const void *src) {$/;"	f	typeref:typename:void
utarray_str_dtor	lib/uthash/include/utarray.h	/^static void utarray_str_dtor(void *elt) {$/;"	f	typeref:typename:void
utarray_str_dtor	lib/uthash/src/utarray.h	/^static void utarray_str_dtor(void *elt) {$/;"	f	typeref:typename:void
uthash_bzero	lib/uthash/include/uthash.h	/^#define uthash_bzero(/;"	d
uthash_bzero	lib/uthash/src/uthash.h	/^#define uthash_bzero(/;"	d
uthash_bzero	lib/uthash/tests/test6.c	/^#define uthash_bzero(/;"	d	file:
uthash_expand_fyi	lib/uthash/include/uthash.h	/^#define uthash_expand_fyi(/;"	d
uthash_expand_fyi	lib/uthash/src/uthash.h	/^#define uthash_expand_fyi(/;"	d
uthash_fatal	lib/uthash/include/uthash.h	/^#define uthash_fatal(/;"	d
uthash_fatal	lib/uthash/src/uthash.h	/^#define uthash_fatal(/;"	d
uthash_fatal	lib/uthash/tests/test93.c	/^#define uthash_fatal(/;"	d	file:
uthash_free	lib/uthash/include/uthash.h	/^#define uthash_free(/;"	d
uthash_free	lib/uthash/src/uthash.h	/^#define uthash_free(/;"	d
uthash_free	lib/uthash/tests/test6.c	/^#define uthash_free(/;"	d	file:
uthash_free	lib/uthash/tests/test92.c	/^#define uthash_free(/;"	d	file:
uthash_malloc	lib/uthash/include/uthash.h	/^#define uthash_malloc(/;"	d
uthash_malloc	lib/uthash/src/uthash.h	/^#define uthash_malloc(/;"	d
uthash_malloc	lib/uthash/tests/test6.c	/^#define uthash_malloc(/;"	d	file:
uthash_malloc	lib/uthash/tests/test92.c	/^#define uthash_malloc(/;"	d	file:
uthash_malloc	lib/uthash/tests/test93.c	/^#define uthash_malloc(/;"	d	file:
uthash_noexpand_fyi	lib/uthash/include/uthash.h	/^#define uthash_noexpand_fyi(/;"	d
uthash_noexpand_fyi	lib/uthash/src/uthash.h	/^#define uthash_noexpand_fyi(/;"	d
uthash_noexpand_fyi	lib/uthash/tests/keystat.c	/^#define uthash_noexpand_fyi(/;"	d	file:
uthash_noexpand_fyi	lib/uthash/tests/threads/test1.c	/^#define uthash_noexpand_fyi(/;"	d	file:
uthash_noexpand_fyi	lib/uthash/tests/threads/test2.c	/^#define uthash_noexpand_fyi(/;"	d	file:
uthash_nonfatal_oom	lib/uthash/include/uthash.h	/^#define uthash_nonfatal_oom(/;"	d
uthash_nonfatal_oom	lib/uthash/src/uthash.h	/^#define uthash_nonfatal_oom(/;"	d
uthash_nonfatal_oom	lib/uthash/tests/test92.c	/^#define uthash_nonfatal_oom(/;"	d	file:
uthash_strlen	lib/uthash/include/uthash.h	/^#define uthash_strlen(/;"	d
uthash_strlen	lib/uthash/src/uthash.h	/^#define uthash_strlen(/;"	d
uthash_strlen	lib/uthash/tests/test6.c	/^#define uthash_strlen(/;"	d	file:
uthash_strlen	lib/uthash/tests/test88.c	/^#define uthash_strlen(/;"	d	file:
utringbuffer_back	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_back(/;"	d
utringbuffer_back	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_back(/;"	d
utringbuffer_clear	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_clear(/;"	d
utringbuffer_clear	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_clear(/;"	d
utringbuffer_done	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_done(/;"	d
utringbuffer_done	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_done(/;"	d
utringbuffer_eltidx	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_eltidx(/;"	d
utringbuffer_eltidx	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_eltidx(/;"	d
utringbuffer_eltptr	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_eltptr(/;"	d
utringbuffer_eltptr	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_eltptr(/;"	d
utringbuffer_empty	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_empty(/;"	d
utringbuffer_empty	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_empty(/;"	d
utringbuffer_free	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_free(/;"	d
utringbuffer_free	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_free(/;"	d
utringbuffer_front	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_front(/;"	d
utringbuffer_front	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_front(/;"	d
utringbuffer_full	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_full(/;"	d
utringbuffer_full	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_full(/;"	d
utringbuffer_init	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_init(/;"	d
utringbuffer_init	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_init(/;"	d
utringbuffer_len	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_len(/;"	d
utringbuffer_len	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_len(/;"	d
utringbuffer_new	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_new(/;"	d
utringbuffer_new	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_new(/;"	d
utringbuffer_next	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_next(/;"	d
utringbuffer_next	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_next(/;"	d
utringbuffer_prev	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_prev(/;"	d
utringbuffer_prev	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_prev(/;"	d
utringbuffer_push_back	lib/uthash/include/utringbuffer.h	/^#define utringbuffer_push_back(/;"	d
utringbuffer_push_back	lib/uthash/src/utringbuffer.h	/^#define utringbuffer_push_back(/;"	d
utstring_bincpy	lib/uthash/include/utstring.h	/^#define utstring_bincpy(/;"	d
utstring_bincpy	lib/uthash/src/utstring.h	/^#define utstring_bincpy(/;"	d
utstring_body	lib/uthash/include/utstring.h	/^#define utstring_body(/;"	d
utstring_body	lib/uthash/src/utstring.h	/^#define utstring_body(/;"	d
utstring_clear	lib/uthash/include/utstring.h	/^#define utstring_clear(/;"	d
utstring_clear	lib/uthash/src/utstring.h	/^#define utstring_clear(/;"	d
utstring_concat	lib/uthash/include/utstring.h	/^#define utstring_concat(/;"	d
utstring_concat	lib/uthash/src/utstring.h	/^#define utstring_concat(/;"	d
utstring_done	lib/uthash/include/utstring.h	/^#define utstring_done(/;"	d
utstring_done	lib/uthash/src/utstring.h	/^#define utstring_done(/;"	d
utstring_find	lib/uthash/include/utstring.h	/^UTSTRING_UNUSED static long utstring_find($/;"	f	typeref:typename:UTSTRING_UNUSED long
utstring_find	lib/uthash/src/utstring.h	/^UTSTRING_UNUSED static long utstring_find($/;"	f	typeref:typename:UTSTRING_UNUSED long
utstring_findR	lib/uthash/include/utstring.h	/^UTSTRING_UNUSED static long utstring_findR($/;"	f	typeref:typename:UTSTRING_UNUSED long
utstring_findR	lib/uthash/src/utstring.h	/^UTSTRING_UNUSED static long utstring_findR($/;"	f	typeref:typename:UTSTRING_UNUSED long
utstring_free	lib/uthash/include/utstring.h	/^#define utstring_free(/;"	d
utstring_free	lib/uthash/src/utstring.h	/^#define utstring_free(/;"	d
utstring_init	lib/uthash/include/utstring.h	/^#define utstring_init(/;"	d
utstring_init	lib/uthash/src/utstring.h	/^#define utstring_init(/;"	d
utstring_len	lib/uthash/include/utstring.h	/^#define utstring_len(/;"	d
utstring_len	lib/uthash/src/utstring.h	/^#define utstring_len(/;"	d
utstring_new	lib/uthash/include/utstring.h	/^#define utstring_new(/;"	d
utstring_new	lib/uthash/src/utstring.h	/^#define utstring_new(/;"	d
utstring_oom	lib/uthash/include/utstring.h	/^#define utstring_oom(/;"	d
utstring_oom	lib/uthash/src/utstring.h	/^#define utstring_oom(/;"	d
utstring_printf	lib/uthash/include/utstring.h	/^UTSTRING_UNUSED static void utstring_printf(UT_string *s, const char *fmt, ...) {$/;"	f	typeref:typename:UTSTRING_UNUSED void
utstring_printf	lib/uthash/src/utstring.h	/^UTSTRING_UNUSED static void utstring_printf(UT_string *s, const char *fmt, ...) {$/;"	f	typeref:typename:UTSTRING_UNUSED void
utstring_printf_va	lib/uthash/include/utstring.h	/^UTSTRING_UNUSED static void utstring_printf_va(UT_string *s, const char *fmt, va_list ap) {$/;"	f	typeref:typename:UTSTRING_UNUSED void
utstring_printf_va	lib/uthash/src/utstring.h	/^UTSTRING_UNUSED static void utstring_printf_va(UT_string *s, const char *fmt, va_list ap) {$/;"	f	typeref:typename:UTSTRING_UNUSED void
utstring_renew	lib/uthash/include/utstring.h	/^#define utstring_renew(/;"	d
utstring_renew	lib/uthash/src/utstring.h	/^#define utstring_renew(/;"	d
utstring_reserve	lib/uthash/include/utstring.h	/^#define utstring_reserve(/;"	d
utstring_reserve	lib/uthash/src/utstring.h	/^#define utstring_reserve(/;"	d
v	lib/flecs/test/api/src/Filter.c	/^    float v;$/;"	m	struct:__anona52ddc0d0108	typeref:typename:float	file:
v	lib/flecs/test/api/src/Query.c	/^    float v;$/;"	m	struct:__anon19eb1a7d0108	typeref:typename:float	file:
v	lib/flecs/test/cpp_api/src/World.cpp	/^struct Tmp { int32_t v; };$/;"	m	struct:Tmp	typeref:typename:int32_t	file:
v	lib/flecs/test/meta/src/BitmaskTypes.c	/^        ecs_u32_t v;$/;"	m	struct:BitmaskTypes_struct_w_bitmask::__anon4ec5b3140108	typeref:typename:ecs_u32_t	file:
v	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        E v;$/;"	m	struct:DeserializeFromExpr_struct_enum::__anon51c88b180308	typeref:typename:E	file:
v	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_u32_t v;$/;"	m	struct:DeserializeFromExpr_struct_bitmask::__anon51c88b180408	typeref:typename:ecs_u32_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        E v;$/;"	m	struct:DeserializeFromJson_struct_enum::__anon5d173e531608	typeref:typename:E	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        bool v;$/;"	m	struct:DeserializeFromJson_struct_bool::__anon5d173e530108	typeref:typename:bool	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        char* v;$/;"	m	struct:DeserializeFromJson_struct_string::__anon5d173e531308	typeref:typename:char *	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_byte_t v;$/;"	m	struct:DeserializeFromJson_struct_byte::__anon5d173e530208	typeref:typename:ecs_byte_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_char_t v;$/;"	m	struct:DeserializeFromJson_struct_char::__anon5d173e530308	typeref:typename:ecs_char_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_char_t v;$/;"	m	struct:DeserializeFromJson_struct_char_literal::__anon5d173e530408	typeref:typename:ecs_char_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_entity_t v;$/;"	m	struct:DeserializeFromJson_struct_entity::__anon5d173e531408	typeref:typename:ecs_entity_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_f32_t v;$/;"	m	struct:DeserializeFromJson_struct_float::__anon5d173e530f08	typeref:typename:ecs_f32_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_f32_t v;$/;"	m	struct:DeserializeFromJson_struct_negative_float::__anon5d173e531208	typeref:typename:ecs_f32_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_f64_t v;$/;"	m	struct:DeserializeFromJson_struct_double::__anon5d173e531008	typeref:typename:ecs_f64_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i16_t v;$/;"	m	struct:DeserializeFromJson_struct_i16::__anon5d173e530608	typeref:typename:ecs_i16_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t v;$/;"	m	struct:DeserializeFromJson_struct_i32::__anon5d173e530708	typeref:typename:ecs_i32_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t v;$/;"	m	struct:DeserializeFromJson_struct_negative_int::__anon5d173e531108	typeref:typename:ecs_i32_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i64_t v;$/;"	m	struct:DeserializeFromJson_struct_i64::__anon5d173e530808	typeref:typename:ecs_i64_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i8_t v;$/;"	m	struct:DeserializeFromJson_struct_i8::__anon5d173e530508	typeref:typename:ecs_i8_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_iptr_t v;$/;"	m	struct:DeserializeFromJson_struct_iptr::__anon5d173e530908	typeref:typename:ecs_iptr_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_u16_t v;$/;"	m	struct:DeserializeFromJson_struct_u16::__anon5d173e530b08	typeref:typename:ecs_u16_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_u32_t v;$/;"	m	struct:DeserializeFromJson_struct_bitmask::__anon5d173e531708	typeref:typename:ecs_u32_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_u32_t v;$/;"	m	struct:DeserializeFromJson_struct_u32::__anon5d173e530c08	typeref:typename:ecs_u32_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_u64_t v;$/;"	m	struct:DeserializeFromJson_struct_u64::__anon5d173e530d08	typeref:typename:ecs_u64_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_u8_t v;$/;"	m	struct:DeserializeFromJson_struct_u8::__anon5d173e530a08	typeref:typename:ecs_u8_t	file:
v	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_uptr_t v;$/;"	m	struct:DeserializeFromJson_struct_uptr::__anon5d173e530e08	typeref:typename:ecs_uptr_t	file:
v	lib/flecs/test/meta/src/EnumTypes.c	/^        ecs_i32_t v;$/;"	m	struct:EnumTypes_struct_w_enum::__anon4354dcde0108	typeref:typename:ecs_i32_t	file:
v	lib/flecs/test/meta/src/SerializeToExpr.c	/^        int32_t v;$/;"	m	struct:SerializeToExpr_entity_entity_after_float::__anon35ed1d3e0808	typeref:typename:int32_t	file:
v	lib/flecs/test/meta/src/SerializeToJson.c	/^        int32_t v;$/;"	m	struct:SerializeToJson_struct_entity_after_float::__anon413bd0791708	typeref:typename:int32_t	file:
v	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t v;$/;"	m	struct:Serialized_ops_struct_w_enum::__anond4af8f004b08	typeref:typename:ecs_i32_t	file:
v	lib/flecs/test/meta/src/Serialized.c	/^        ecs_u32_t v;$/;"	m	struct:Serialized_ops_struct_w_bitmask::__anond4af8f004a08	typeref:typename:ecs_u32_t	file:
v	lib/flecs/test/meta/src/Serialized.c	/^        ecs_vector_t *v;$/;"	m	struct:Serialized_ops_struct_w_vector::__anond4af8f004708	typeref:typename:ecs_vector_t *	file:
v	lib/flecs/test/meta/src/Serialized.c	/^        ecs_vector_t *v;$/;"	m	struct:Serialized_ops_struct_w_vector_w_bool_after::__anond4af8f004908	typeref:typename:ecs_vector_t *	file:
v	lib/flecs/test/meta/src/Serialized.c	/^        ecs_vector_t *v;$/;"	m	struct:Serialized_ops_struct_w_vector_w_bool_before::__anond4af8f004808	typeref:typename:ecs_vector_t *	file:
v	lib/uthash/tests/threads/test2.c	/^  int v;$/;"	m	struct:__anon26fefb660108	typeref:typename:int	file:
v_entity	lib/flecs/test/api/src/Snapshot.c	/^static ecs_entity_t v_entity = 0;$/;"	v	typeref:typename:ecs_entity_t	file:
val	lib/uthash/tests/test59.c	/^    int val;$/;"	m	struct:item	typeref:typename:int	file:
val	lib/uthash/tests/test60.c	/^    int val;$/;"	m	struct:item	typeref:typename:int	file:
valid	lib/flecs/flecs.h	/^    bool valid;$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:bool
valid	lib/flecs/include/flecs/addons/meta.h	/^    bool valid;$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:bool
valid_identifier_start_char	lib/flecs/flecs.c	/^bool valid_identifier_start_char($/;"	f	typeref:typename:bool	file:
valid_identifier_start_char	lib/flecs/src/addons/parser.c	/^bool valid_identifier_start_char($/;"	f	typeref:typename:bool	file:
valid_operator_char	lib/flecs/flecs.c	/^bool valid_operator_char($/;"	f	typeref:typename:bool	file:
valid_operator_char	lib/flecs/src/addons/parser.c	/^bool valid_operator_char($/;"	f	typeref:typename:bool	file:
valid_token_char	lib/flecs/flecs.c	/^bool valid_token_char($/;"	f	typeref:typename:bool	file:
valid_token_char	lib/flecs/src/addons/parser.c	/^bool valid_token_char($/;"	f	typeref:typename:bool	file:
valid_token_start_char	lib/flecs/flecs.c	/^bool valid_token_start_char($/;"	f	typeref:typename:bool	file:
valid_token_start_char	lib/flecs/src/addons/parser.c	/^bool valid_token_start_char($/;"	f	typeref:typename:bool	file:
value	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } Attack;$/;"	m	struct:__anonfbee6d870108	typeref:typename:double	file:
value	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } Defense;$/;"	m	struct:__anonfbee6d870208	typeref:typename:double	file:
value	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } FreightCapacity;$/;"	m	struct:__anonfbee6d870308	typeref:typename:double	file:
value	lib/flecs/examples/c/entities/prefab/src/main.c	/^typedef struct { double value; } ImpulseSpeed;$/;"	m	struct:__anonfbee6d870408	typeref:typename:double	file:
value	lib/flecs/examples/c/queries/change_tracking/src/main.c	/^    bool value;$/;"	m	struct:__anon3f4b18880108	typeref:typename:bool	file:
value	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^    float value;$/;"	m	struct:__anon7b79ffa80208	typeref:typename:float	file:
value	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^    float value;$/;"	m	struct:__anon70a3d52e0208	typeref:typename:float	file:
value	lib/flecs/examples/c/systems/mutate_entity/src/main.c	/^    double value;$/;"	m	struct:__anon6b1f22760108	typeref:typename:double	file:
value	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct Attack { double value; };$/;"	m	struct:Attack	typeref:typename:double	file:
value	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct Defense { double value; };$/;"	m	struct:Defense	typeref:typename:double	file:
value	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct FreightCapacity { double value; };$/;"	m	struct:FreightCapacity	typeref:typename:double	file:
value	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct ImpulseSpeed { double value; };$/;"	m	struct:ImpulseSpeed	typeref:typename:double	file:
value	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    int value;          \/\/ Amount of damage an item deals per use$/;"	m	struct:Attack	typeref:typename:int	file:
value	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    int value;          \/\/ Health of the item$/;"	m	struct:Health	typeref:typename:int	file:
value	lib/flecs/examples/cpp/game_mechanics/inventory_system/src/main.cpp	/^    int value;          \/\/ Number of items the instance represents$/;"	m	struct:Amount	typeref:typename:int	file:
value	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^    bool value;$/;"	m	struct:Dirty	typeref:typename:bool	file:
value	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^    double value;$/;"	m	struct:Mass	typeref:typename:double	file:
value	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^    float value;$/;"	m	struct:Mass	typeref:typename:float	file:
value	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^    float value;$/;"	m	struct:Mass	typeref:typename:float	file:
value	lib/flecs/examples/cpp/systems/mutate_entity/src/main.cpp	/^    double value;$/;"	m	struct:Timeout	typeref:typename:double	file:
value	lib/flecs/examples/cpp/systems/mutate_entity_handle/src/main.cpp	/^    double value;$/;"	m	struct:Timeout	typeref:typename:double	file:
value	lib/flecs/flecs.c	/^    char *value;$/;"	m	struct:ecs_hashed_string_t	typeref:typename:char *	file:
value	lib/flecs/flecs.c	/^    int64_t value;$/;"	m	struct:meta_constant_t	typeref:typename:int64_t	file:
value	lib/flecs/flecs.c	/^    void *value;                \/* Value (used for set \/ get_mut) *\/$/;"	m	struct:ecs_defer_op_1_t	typeref:typename:void *	file:
value	lib/flecs/flecs.h	/^    char *value;$/;"	m	struct:EcsIdentifier	typeref:typename:char *
value	lib/flecs/flecs.h	/^    const char *value;$/;"	m	struct:EcsDocDescription	typeref:typename:const char *
value	lib/flecs/flecs.h	/^    const char *value;$/;"	m	struct:__anona642c00a0808	typeref:typename:const char *
value	lib/flecs/flecs.h	/^    ecs_flags32_t value;$/;"	m	struct:ecs_bitmask_constant_t	typeref:typename:ecs_flags32_t
value	lib/flecs/flecs.h	/^    ecs_term_t value;$/;"	m	struct:flecs::term	typeref:typename:ecs_term_t
value	lib/flecs/flecs.h	/^    float value[ECS_STAT_WINDOW];$/;"	m	struct:ecs_counter_t	typeref:typename:float[]
value	lib/flecs/flecs.h	/^    int32_t value;$/;"	m	struct:ecs_enum_constant_t	typeref:typename:int32_t
value	lib/flecs/flecs.h	/^    static const bool value = false;$/;"	m	struct:flecs::_::always_false	typeref:typename:const bool
value	lib/flecs/flecs.h	/^    static constexpr E value = FLECS_ENUM_MAX(E);$/;"	m	struct:flecs::enum_last	typeref:typename:E
value	lib/flecs/flecs.h	/^    static constexpr E value = static_cast<E>(Value);$/;"	m	struct:flecs::_::to_constant	typeref:typename:E
value	lib/flecs/flecs.h	/^    static constexpr bool value = $/;"	m	struct:flecs::has_flecs_ctor	typeref:typename:bool
value	lib/flecs/flecs.h	/^    static constexpr bool value = $/;"	m	struct:flecs::is_actual	typeref:typename:bool
value	lib/flecs/flecs.h	/^    static constexpr bool value = $/;"	m	struct:flecs::is_flecs_constructible	typeref:typename:bool
value	lib/flecs/flecs.h	/^    static constexpr bool value = $/;"	m	struct:flecs::is_self_constructible	typeref:typename:bool
value	lib/flecs/flecs.h	/^    static constexpr bool value = _::function_traits<T>::is_callable;$/;"	m	struct:flecs::is_callable	typeref:typename:bool
value	lib/flecs/flecs.h	/^    static constexpr bool value = enum_constant_is_valid<E, C>();$/;"	m	struct:flecs::_::enum_is_valid	typeref:typename:bool
value	lib/flecs/flecs.h	/^    static constexpr bool value = is_base_of<_::pair_base, remove_reference_t<T> >::value;$/;"	m	struct:flecs::is_pair	typeref:typename:bool
value	lib/flecs/flecs.h	/^    static constexpr int value = _::function_traits<T>::arity;$/;"	m	struct:flecs::arity	typeref:typename:int
value	lib/flecs/flecs.h	/^    void *value;$/;"	m	struct:__anona642c00a0508	typeref:typename:void *
value	lib/flecs/flecs.h	/^constexpr E to_constant<E, Value>::value;$/;"	m	class:flecs::_::to_constant<E, Value>	typeref:typename:E
value	lib/flecs/include/flecs.h	/^    char *value;$/;"	m	struct:EcsIdentifier	typeref:typename:char *
value	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^    static constexpr bool value = $/;"	m	struct:flecs::has_flecs_ctor	typeref:typename:bool
value	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^    static constexpr bool value = $/;"	m	struct:flecs::is_flecs_constructible	typeref:typename:bool
value	lib/flecs/include/flecs/addons/cpp/lifecycle_traits.hpp	/^    static constexpr bool value = $/;"	m	struct:flecs::is_self_constructible	typeref:typename:bool
value	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    ecs_term_t value;$/;"	m	struct:flecs::term	typeref:typename:ecs_term_t
value	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    static constexpr bool value = $/;"	m	struct:flecs::is_actual	typeref:typename:bool
value	lib/flecs/include/flecs/addons/cpp/pair.hpp	/^    static constexpr bool value = is_base_of<_::pair_base, remove_reference_t<T> >::value;$/;"	m	struct:flecs::is_pair	typeref:typename:bool
value	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static constexpr E value = FLECS_ENUM_MAX(E);$/;"	m	struct:flecs::enum_last	typeref:typename:E
value	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static constexpr E value = static_cast<E>(Value);$/;"	m	struct:flecs::_::to_constant	typeref:typename:E
value	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    static constexpr bool value = enum_constant_is_valid<E, C>();$/;"	m	struct:flecs::_::enum_is_valid	typeref:typename:bool
value	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^constexpr E to_constant<E, Value>::value;$/;"	m	class:flecs::_::to_constant<E, Value>	typeref:typename:E
value	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    static constexpr bool value = _::function_traits<T>::is_callable;$/;"	m	struct:flecs::is_callable	typeref:typename:bool
value	lib/flecs/include/flecs/addons/cpp/utils/function_traits.hpp	/^    static constexpr int value = _::function_traits<T>::arity;$/;"	m	struct:flecs::arity	typeref:typename:int
value	lib/flecs/include/flecs/addons/cpp/utils/utils.hpp	/^    static const bool value = false;$/;"	m	struct:flecs::_::always_false	typeref:typename:const bool
value	lib/flecs/include/flecs/addons/doc.h	/^    const char *value;$/;"	m	struct:EcsDocDescription	typeref:typename:const char *
value	lib/flecs/include/flecs/addons/http.h	/^    const char *value;$/;"	m	struct:__anon12cf63340208	typeref:typename:const char *
value	lib/flecs/include/flecs/addons/meta.h	/^    ecs_flags32_t value;$/;"	m	struct:ecs_bitmask_constant_t	typeref:typename:ecs_flags32_t
value	lib/flecs/include/flecs/addons/meta.h	/^    int32_t value;$/;"	m	struct:ecs_enum_constant_t	typeref:typename:int32_t
value	lib/flecs/include/flecs/addons/stats.h	/^    float value[ECS_STAT_WINDOW];$/;"	m	struct:ecs_counter_t	typeref:typename:float[]
value	lib/flecs/include/flecs/private/hashmap.h	/^    void *value;$/;"	m	struct:__anonceb012f80408	typeref:typename:void *
value	lib/flecs/src/addons/meta_c.c	/^    int64_t value;$/;"	m	struct:meta_constant_t	typeref:typename:int64_t	file:
value	lib/flecs/src/private_types.h	/^    char *value;$/;"	m	struct:ecs_hashed_string_t	typeref:typename:char *
value	lib/flecs/src/private_types.h	/^    void *value;                \/* Value (used for set \/ get_mut) *\/$/;"	m	struct:ecs_defer_op_1_t	typeref:typename:void *
value	lib/flecs/test/api/include/api.h	/^    ecs_entity_t value;$/;"	m	struct:Self	typeref:typename:ecs_entity_t
value	lib/flecs/test/api/src/ComponentLifecycle.c	/^    int value;$/;"	m	struct:Dummy	typeref:typename:int	file:
value	lib/flecs/test/api/src/Modules.c	/^    float value;$/;"	m	struct:NestedComponent	typeref:typename:float	file:
value	lib/flecs/test/api/src/Modules.c	/^    float value;$/;"	m	struct:SimpleFooComponent	typeref:typename:float	file:
value	lib/flecs/test/api/src/Pairs.c	/^    float value;$/;"	m	struct:Obj	typeref:typename:float	file:
value	lib/flecs/test/api/src/Pairs.c	/^    float value;$/;"	m	struct:Rel	typeref:typename:float	file:
value	lib/flecs/test/api/src/Pairs.c	/^    float value;$/;"	m	struct:RelA	typeref:typename:float	file:
value	lib/flecs/test/api/src/Pairs.c	/^    float value;$/;"	m	struct:RelB	typeref:typename:float	file:
value	lib/flecs/test/api/src/Plecs.c	/^        Color value;$/;"	m	struct:Plecs_type_and_assign_in_plecs_w_enum::__anonb7ea1cde0308	typeref:typename:Color	file:
value	lib/flecs/test/api/src/Plecs.c	/^        Color value;$/;"	m	struct:Plecs_type_and_assign_in_plecs_w_enum_using_meta::__anonb7ea1cde0508	typeref:typename:Color	file:
value	lib/flecs/test/api/src/TriggerOnRemove.c	/^    int value;$/;"	m	struct:DummyComp	typeref:typename:int	file:
value	lib/flecs/test/collections/src/Map.c	/^struct elem { int hash; char *value; } elems[] = {$/;"	m	struct:elem	typeref:typename:char *	file:
value	lib/flecs/test/cpp_api/include/cpp_api.h	/^    flecs::entity_view value;$/;"	m	struct:Self	typeref:typename:flecs::entity_view
value	lib/flecs/test/cpp_api/include/cpp_api.h	/^    float value;$/;"	m	struct:Mass	typeref:typename:float
value	lib/flecs/test/cpp_api/include/cpp_api.h	/^    float value;$/;"	m	struct:Rotation	typeref:typename:float
value	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int value;$/;"	m	class:CountNoDefaultCtor	typeref:typename:int
value	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int value;$/;"	m	class:Pod	typeref:typename:int
value	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    std::string value;$/;"	m	class:Str	typeref:typename:std::string	file:
value	lib/flecs/test/cpp_api/src/Event.cpp	/^    int value;$/;"	m	struct:EvtData	typeref:typename:int	file:
value	lib/flecs/test/cpp_api/src/FilterBuilder.cpp	/^    int32_t value;$/;"	m	struct:Other	typeref:typename:int32_t	file:
value	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^    int value;$/;"	m	struct:Pair	typeref:typename:int	file:
value	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    const char *value;$/;"	m	struct:Event	typeref:typename:const char *	file:
value	lib/flecs/test/cpp_api/src/Pairs.cpp	/^    float value;$/;"	m	struct:Pair	typeref:typename:float	file:
value	lib/flecs/test/cpp_api/src/Query.cpp	/^    const char *value;$/;"	m	struct:Event	typeref:typename:const char *	file:
value	lib/flecs/test/cpp_api/src/Query.cpp	/^    float value;$/;"	m	struct:Pair	typeref:typename:float	file:
value	lib/flecs/test/cpp_api/src/Query.cpp	/^    struct Value { int value; };$/;"	m	struct:Query_test_no_defer_each::Value	typeref:typename:int	file:
value	lib/flecs/test/cpp_api/src/Query.cpp	/^    struct Value { int value; };$/;"	m	struct:Query_test_no_defer_iter::Value	typeref:typename:int	file:
value	lib/flecs/test/cpp_api/src/QueryBuilder.cpp	/^    int32_t value;$/;"	m	struct:Other	typeref:typename:int32_t	file:
value	lib/flecs/test/cpp_api/src/System.cpp	/^    struct Value { int value; };$/;"	m	struct:System_test_auto_defer_each::Value	typeref:typename:int	file:
value	lib/flecs/test/cpp_api/src/System.cpp	/^    struct Value { int value; };$/;"	m	struct:System_test_auto_defer_iter::Value	typeref:typename:int	file:
value	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        flecs::entity_view value;$/;"	m	struct:SystemBuilder_singleton_term::Entity	typeref:typename:flecs::entity_view	file:
value	lib/flecs/test/cpp_api/src/SystemBuilder.cpp	/^        int32_t value;$/;"	m	struct:SystemBuilder_singleton_term::Singleton	typeref:typename:int32_t	file:
value	lib/flecs/test/cpp_api/src/World.cpp	/^        int value;$/;"	m	struct:ns::FooComp	typeref:typename:int	file:
value	lib/flecs/test/meta/include/meta.h	/^    int32_t value;$/;"	m	struct:__anon8e06701c0208	typeref:typename:int32_t
value	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t value;    $/;"	m	struct:SerializeToJson_serialize_entity_w_type_info_unit::__anon413bd0792c08	typeref:typename:ecs_i32_t	file:
value	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t value;    $/;"	m	struct:SerializeToJson_serialize_entity_w_type_info_unit_over::__anon413bd0792e08	typeref:typename:ecs_i32_t	file:
value	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t value;    $/;"	m	struct:SerializeToJson_serialize_entity_w_type_info_unit_quantity::__anon413bd0792d08	typeref:typename:ecs_i32_t	file:
value	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t value;    $/;"	m	struct:SerializeToJson_serialize_iterator_type_info_w_unit::__anon413bd0792f08	typeref:typename:ecs_i32_t	file:
value	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t value;    $/;"	m	struct:SerializeToJson_serialize_iterator_type_info_w_unit_over::__anon413bd0793108	typeref:typename:ecs_i32_t	file:
value	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t value;    $/;"	m	struct:SerializeToJson_serialize_iterator_type_info_w_unit_quantity::__anon413bd0793008	typeref:typename:ecs_i32_t	file:
value	lib/uthash/tests/lru_cache/main.c	/^	char *value;$/;"	m	struct:key_record	typeref:typename:char *	file:
value	lib/uthash/tests/test65.c	/^    char *value;$/;"	m	struct:CacheEntry	typeref:typename:char *	file:
value_1	lib/flecs/test/api/src/ComponentLifecycle.c	/^    float value_1;$/;"	m	struct:Pair	typeref:typename:float	file:
value_2	lib/flecs/test/api/src/ComponentLifecycle.c	/^    float value_2;$/;"	m	struct:Pair	typeref:typename:float	file:
value_size	lib/flecs/flecs.h	/^    ecs_size_t value_size;$/;"	m	struct:__anona642c00a0308	typeref:typename:ecs_size_t
value_size	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_size_t value_size;$/;"	m	struct:__anonceb012f80208	typeref:typename:ecs_size_t
values	lib/flecs/flecs.c	/^    ecs_vector_t *values;   \/* Vector with values, of type uint64_t *\/$/;"	m	struct:ecs_switch_t	typeref:typename:ecs_vector_t *	file:
values	lib/flecs/flecs.h	/^    ecs_vector_t *values;$/;"	m	struct:__anona642c00a0208	typeref:typename:ecs_vector_t *
values	lib/flecs/include/flecs/private/hashmap.h	/^    ecs_vector_t *values;$/;"	m	struct:__anonceb012f80108	typeref:typename:ecs_vector_t *
values	lib/flecs/include/flecs/private/switch_list.h	/^    ecs_vector_t *values;   \/* Vector with values, of type uint64_t *\/$/;"	m	struct:ecs_switch_t	typeref:typename:ecs_vector_t *
vappend	lib/flecs/flecs.c	/^bool vappend($/;"	f	typeref:typename:bool	file:
vappend	lib/flecs/src/datastructures/strbuf.c	/^bool vappend($/;"	f	typeref:typename:bool	file:
var	lib/flecs/flecs.h	/^    Base& var(const char *name) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
var	lib/flecs/flecs.h	/^    Base& var(flecs::var_kind_t var = flecs::VarIsVariable) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
var	lib/flecs/flecs.h	/^    ecs_var_kind_t var;         \/* Is id a variable (default yes if name is $/;"	m	struct:ecs_term_id_t	typeref:typename:ecs_var_kind_t
var	lib/flecs/include/flecs.h	/^    ecs_var_kind_t var;         \/* Is id a variable (default yes if name is $/;"	m	struct:ecs_term_id_t	typeref:typename:ecs_var_kind_t
var	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& var(const char *name) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
var	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    Base& var(flecs::var_kind_t var = flecs::VarIsVariable) {$/;"	f	struct:flecs::term_id_builder_i	typeref:typename:Base &
var_count	lib/flecs/flecs.c	/^    int32_t var_count;          \/* Number of variables in signature *\/$/;"	m	struct:ecs_rule_t	typeref:typename:int32_t	file:
var_count	lib/flecs/src/addons/rules.c	/^    int32_t var_count;          \/* Number of variables in signature *\/$/;"	m	struct:ecs_rule_t	typeref:typename:int32_t	file:
var_kind_t	lib/flecs/flecs.h	/^enum var_kind_t {$/;"	g	namespace:flecs
var_kind_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^enum var_kind_t {$/;"	g	namespace:flecs
var_names	lib/flecs/flecs.c	/^    char *var_names[ECS_RULE_MAX_VAR_COUNT]; $/;"	m	struct:ecs_rule_t	typeref:typename:char * []	file:
var_names	lib/flecs/src/addons/rules.c	/^    char *var_names[ECS_RULE_MAX_VAR_COUNT]; $/;"	m	struct:ecs_rule_t	typeref:typename:char * []	file:
variable_count	lib/flecs/flecs.h	/^    int32_t variable_count;       \/* Number of variables for query *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
variable_count	lib/flecs/include/flecs/private/api_types.h	/^    int32_t variable_count;       \/* Number of variables for query *\/$/;"	m	struct:ecs_iter_t	typeref:typename:int32_t
variable_names	lib/flecs/flecs.h	/^    char **variable_names;        \/* Names of variables (if any) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:char **
variable_names	lib/flecs/include/flecs/private/api_types.h	/^    char **variable_names;        \/* Names of variables (if any) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:char **
variables	lib/flecs/flecs.h	/^    ecs_entity_t *variables;             \/* Variable storage for iterator (entities only) *\/$/;"	m	struct:ecs_rule_iter_t	typeref:typename:ecs_entity_t *
variables	lib/flecs/flecs.h	/^    ecs_entity_t *variables;      \/* Values of variables (if any) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t *
variables	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t *variables;             \/* Variable storage for iterator (entities only) *\/$/;"	m	struct:ecs_rule_iter_t	typeref:typename:ecs_entity_t *
variables	lib/flecs/include/flecs/private/api_types.h	/^    ecs_entity_t *variables;      \/* Values of variables (if any) *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_entity_t *
variables	lib/flecs/test/api/include/api.h	/^    } variables[ITER_MAX_VARIABLES];$/;"	m	struct:test_iter_result_t	typeref:struct:test_iter_result_t::__anon6d6591e20108[]
vars	lib/flecs/flecs.c	/^    ecs_rule_var_t vars[ECS_RULE_MAX_VAR_COUNT];$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_rule_var_t[]	file:
vars	lib/flecs/src/addons/rules.c	/^    ecs_rule_var_t vars[ECS_RULE_MAX_VAR_COUNT];$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_rule_var_t[]	file:
vector	lib/flecs/flecs.h	/^    ecs_vector_t **vector;    \/* Current vector, in case a vector is iterated *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:ecs_vector_t **
vector	lib/flecs/flecs.h	/^    explicit vector(ecs_vector_t *v) : m_vector( v ) { }$/;"	f	class:flecs::vector
vector	lib/flecs/flecs.h	/^    flecs::vector<flecs::id_t> vector() {$/;"	f	struct:flecs::type_base	typeref:typename:flecs::vector<flecs::id_t>
vector	lib/flecs/flecs.h	/^    vector(size_t count = 0) : m_vector( nullptr ) { $/;"	f	class:flecs::vector
vector	lib/flecs/flecs.h	/^class vector {$/;"	c	namespace:flecs
vector	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    flecs::vector<flecs::id_t> vector() {$/;"	f	struct:flecs::type_base	typeref:typename:flecs::vector<flecs::id_t>
vector	lib/flecs/include/flecs/addons/meta.h	/^    ecs_vector_t **vector;    \/* Current vector, in case a vector is iterated *\/$/;"	m	struct:ecs_meta_scope_t	typeref:typename:ecs_vector_t **
vector	lib/flecs/include/flecs/private/vector.h	/^    explicit vector(ecs_vector_t *v) : m_vector( v ) { }$/;"	f	class:flecs::vector
vector	lib/flecs/include/flecs/private/vector.h	/^    vector(size_t count = 0) : m_vector( nullptr ) { $/;"	f	class:flecs::vector
vector	lib/flecs/include/flecs/private/vector.h	/^class vector {$/;"	c	namespace:flecs
vector_iterator	lib/flecs/flecs.h	/^    explicit vector_iterator(T* value, int index) {$/;"	f	class:flecs::vector_iterator
vector_iterator	lib/flecs/flecs.h	/^class vector_iterator$/;"	c	namespace:flecs
vector_iterator	lib/flecs/include/flecs/private/vector.h	/^    explicit vector_iterator(T* value, int index) {$/;"	f	class:flecs::vector_iterator
vector_iterator	lib/flecs/include/flecs/private/vector.h	/^class vector_iterator$/;"	c	namespace:flecs
velocity_on_set_invoked	lib/flecs/test/api/src/ComponentLifecycle.c	/^static int velocity_on_set_invoked;$/;"	v	typeref:typename:int	file:
verbose	lib/uthash/tests/hashscan.c	/^int verbose=0;$/;"	v	typeref:typename:int
verify_nodes	lib/flecs/flecs.c	/^#define verify_nodes(/;"	d	file:
verify_nodes	lib/flecs/flecs.c	/^void verify_nodes($/;"	f	typeref:typename:void	file:
verify_nodes	lib/flecs/src/datastructures/switch_list.c	/^#define verify_nodes(/;"	d	file:
verify_nodes	lib/flecs/src/datastructures/switch_list.c	/^void verify_nodes($/;"	f	typeref:typename:void	file:
verify_player_movement_system	src/ecs/systems.c	/^void verify_player_movement_system(ecs_iter_t *it) {$/;"	f	typeref:typename:void
verify_term_consistency	lib/flecs/flecs.c	/^int verify_term_consistency($/;"	f	typeref:typename:int	file:
verify_term_consistency	lib/flecs/src/filter.c	/^int verify_term_consistency($/;"	f	typeref:typename:int	file:
vma_t	lib/uthash/tests/hashscan.c	/^} vma_t;$/;"	t	typeref:struct:__anone6f392830108	file:
vma_t	lib/uthash/tests/hashscan.c	/^} vma_t;$/;"	t	typeref:struct:__anone6f392830208	file:
vv	lib/uthash/tests/hashscan.c	/^#define vv(/;"	d	file:
vvv	lib/uthash/tests/hashscan.c	/^#define vvv(/;"	d	file:
w	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t w;$/;"	m	struct:Cursor_struct_set_bool_bool_i32_bool::__anon23e81c320708	typeref:typename:ecs_bool_t	file:
w	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t w;$/;"	m	struct:StructTypes_i32_bool_bool_bool::__anon7256d2ce0908	typeref:typename:ecs_bool_t	file:
w	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t w;$/;"	m	struct:StructTypes_bool_i32_bool_i32::__anon7256d2ce0608	typeref:typename:ecs_i32_t	file:
wait_for_sync	lib/flecs/flecs.c	/^void wait_for_sync($/;"	f	typeref:typename:void	file:
wait_for_sync	lib/flecs/src/addons/pipeline/worker.c	/^void wait_for_sync($/;"	f	typeref:typename:void	file:
wait_for_workers	lib/flecs/flecs.c	/^void wait_for_workers($/;"	f	typeref:typename:void	file:
wait_for_workers	lib/flecs/src/addons/pipeline/worker.c	/^void wait_for_workers($/;"	f	typeref:typename:void	file:
warn	lib/flecs/flecs.h	/^inline void warn(const char *fmt, ...) {$/;"	f	namespace:flecs::log	typeref:typename:void
warn	lib/flecs/include/flecs/addons/cpp/log.hpp	/^inline void warn(const char *fmt, ...) {$/;"	f	namespace:flecs::log	typeref:typename:void
weight	lib/uthash/tests/test87.c	/^    int weight;$/;"	m	struct:__anonbb95cf290108	typeref:typename:int	file:
width	include/BearLibTerminal.h	/^	int width;$/;"	m	struct:dimensions_t_	typeref:typename:int
width	include/mapping/map.h	/^    int width;$/;"	m	struct:Map	typeref:typename:int
wildcard	lib/flecs/flecs.c	/^    bool wildcard; \/* Does the filter contain wildcards *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:bool	file:
wildcard	lib/flecs/flecs.c	/^    bool wildcard;$/;"	m	struct:write_state_t	typeref:typename:bool	file:
wildcard	lib/flecs/src/addons/pipeline/pipeline.c	/^    bool wildcard;$/;"	m	struct:write_state_t	typeref:typename:bool	file:
wildcard	lib/flecs/src/addons/rules.c	/^    bool wildcard; \/* Does the filter contain wildcards *\/$/;"	m	struct:ecs_rule_filter_t	typeref:typename:bool	file:
win_adec	lib/flecs/flecs.c	/^int32_t win_adec($/;"	f	typeref:typename:int32_t	file:
win_adec	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^int32_t win_adec($/;"	f	typeref:typename:int32_t	file:
win_ainc	lib/flecs/flecs.c	/^int32_t win_ainc($/;"	f	typeref:typename:int32_t	file:
win_ainc	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^int32_t win_ainc($/;"	f	typeref:typename:int32_t	file:
win_cond_broadcast	lib/flecs/flecs.c	/^void win_cond_broadcast($/;"	f	typeref:typename:void	file:
win_cond_broadcast	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_cond_broadcast($/;"	f	typeref:typename:void	file:
win_cond_free	lib/flecs/flecs.c	/^void win_cond_free($/;"	f	typeref:typename:void	file:
win_cond_free	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_cond_free($/;"	f	typeref:typename:void	file:
win_cond_new	lib/flecs/flecs.c	/^ecs_os_cond_t win_cond_new(void) {$/;"	f	typeref:typename:ecs_os_cond_t	file:
win_cond_new	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^ecs_os_cond_t win_cond_new(void) {$/;"	f	typeref:typename:ecs_os_cond_t	file:
win_cond_signal	lib/flecs/flecs.c	/^void win_cond_signal($/;"	f	typeref:typename:void	file:
win_cond_signal	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_cond_signal($/;"	f	typeref:typename:void	file:
win_cond_wait	lib/flecs/flecs.c	/^void win_cond_wait($/;"	f	typeref:typename:void	file:
win_cond_wait	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_cond_wait($/;"	f	typeref:typename:void	file:
win_current_resolution	lib/flecs/flecs.c	/^static ULONG win_current_resolution;$/;"	v	typeref:typename:ULONG	file:
win_current_resolution	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^static ULONG win_current_resolution;$/;"	v	typeref:typename:ULONG	file:
win_enable_high_timer_resolution	lib/flecs/flecs.c	/^void win_enable_high_timer_resolution(bool enable)$/;"	f	typeref:typename:void	file:
win_enable_high_timer_resolution	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_enable_high_timer_resolution(bool enable)$/;"	f	typeref:typename:void	file:
win_gettimeofday	lib/uthash/tests/keystat.c	/^static void win_gettimeofday(struct timeval* p, void* tz \/* IGNORED *\/)$/;"	f	typeref:typename:void	file:
win_mutex_free	lib/flecs/flecs.c	/^void win_mutex_free($/;"	f	typeref:typename:void	file:
win_mutex_free	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_mutex_free($/;"	f	typeref:typename:void	file:
win_mutex_lock	lib/flecs/flecs.c	/^void win_mutex_lock($/;"	f	typeref:typename:void	file:
win_mutex_lock	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_mutex_lock($/;"	f	typeref:typename:void	file:
win_mutex_new	lib/flecs/flecs.c	/^ecs_os_mutex_t win_mutex_new(void) {$/;"	f	typeref:typename:ecs_os_mutex_t	file:
win_mutex_new	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^ecs_os_mutex_t win_mutex_new(void) {$/;"	f	typeref:typename:ecs_os_mutex_t	file:
win_mutex_unlock	lib/flecs/flecs.c	/^void win_mutex_unlock($/;"	f	typeref:typename:void	file:
win_mutex_unlock	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_mutex_unlock($/;"	f	typeref:typename:void	file:
win_sleep	lib/flecs/flecs.c	/^void win_sleep($/;"	f	typeref:typename:void	file:
win_sleep	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_sleep($/;"	f	typeref:typename:void	file:
win_thread_join	lib/flecs/flecs.c	/^void* win_thread_join($/;"	f	typeref:typename:void *	file:
win_thread_join	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void* win_thread_join($/;"	f	typeref:typename:void *	file:
win_thread_new	lib/flecs/flecs.c	/^ecs_os_thread_t win_thread_new($/;"	f	typeref:typename:ecs_os_thread_t	file:
win_thread_new	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^ecs_os_thread_t win_thread_new($/;"	f	typeref:typename:ecs_os_thread_t	file:
win_time_freq	lib/flecs/flecs.c	/^static double win_time_freq;$/;"	v	typeref:typename:double	file:
win_time_freq	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^static double win_time_freq;$/;"	v	typeref:typename:double	file:
win_time_initialized	lib/flecs/flecs.c	/^static bool win_time_initialized;$/;"	v	typeref:typename:bool	file:
win_time_initialized	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^static bool win_time_initialized;$/;"	v	typeref:typename:bool	file:
win_time_now	lib/flecs/flecs.c	/^uint64_t win_time_now(void) {$/;"	f	typeref:typename:uint64_t	file:
win_time_now	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^uint64_t win_time_now(void) {$/;"	f	typeref:typename:uint64_t	file:
win_time_setup	lib/flecs/flecs.c	/^void win_time_setup(void) {$/;"	f	typeref:typename:void	file:
win_time_setup	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^void win_time_setup(void) {$/;"	f	typeref:typename:void	file:
win_time_start	lib/flecs/flecs.c	/^static LARGE_INTEGER win_time_start;$/;"	v	typeref:typename:LARGE_INTEGER	file:
win_time_start	lib/flecs/src/addons/os_api_impl/windows_impl.inl	/^static LARGE_INTEGER win_time_start;$/;"	v	typeref:typename:LARGE_INTEGER	file:
window_height	include/gamestate.h	/^    int window_height;$/;"	m	struct:GameState	typeref:typename:int
window_width	include/gamestate.h	/^    int window_width;$/;"	m	struct:GameState	typeref:typename:int
with	lib/flecs/flecs.c	/^        ecs_rule_with_ctx_t with;$/;"	m	union:ecs_rule_op_ctx_t::__anona642c005070a	typeref:typename:ecs_rule_with_ctx_t	file:
with	lib/flecs/flecs.c	/^    ecs_entity_t with;           \/* Id to add by default to new entities *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_entity_t	file:
with	lib/flecs/flecs.c	/^    ecs_entity_t with;$/;"	m	struct:__anona642c0050208	typeref:typename:ecs_entity_t	file:
with	lib/flecs/flecs.c	/^    ecs_entity_t with[STACK_MAX_SIZE];$/;"	m	struct:__anona642c0050408	typeref:typename:ecs_entity_t[]	file:
with	lib/flecs/flecs.h	/^    Self& with(const Func& func) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
with	lib/flecs/flecs.h	/^    Self& with(id_t relation, const Func& func) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
with	lib/flecs/flecs.h	/^    void with(const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
with	lib/flecs/flecs.h	/^    void with(id_t object, const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
with	lib/flecs/flecs.h	/^    void with(id_t relation, id_t object, const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
with	lib/flecs/flecs.h	/^    void with(id_t with_id, const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
with	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& with(const Func& func) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
with	lib/flecs/include/flecs/addons/cpp/mixins/entity/builder.hpp	/^    Self& with(id_t relation, const Func& func) {$/;"	f	struct:flecs::entity_builder	typeref:typename:Self &
with	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void with(const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
with	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void with(id_t object, const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
with	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void with(id_t relation, id_t object, const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
with	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    void with(id_t with_id, const Func& func) const {$/;"	f	struct:flecs::world	typeref:typename:void
with	lib/flecs/src/addons/plecs.c	/^    ecs_entity_t with[STACK_MAX_SIZE];$/;"	m	struct:__anon7212bd4e0108	typeref:typename:ecs_entity_t[]	file:
with	lib/flecs/src/addons/rules.c	/^        ecs_rule_with_ctx_t with;$/;"	m	union:ecs_rule_op_ctx_t::__anon218568c2030a	typeref:typename:ecs_rule_with_ctx_t	file:
with	lib/flecs/src/private_api.h	/^    ecs_entity_t with;$/;"	m	struct:__anonf633b8e80108	typeref:typename:ecs_entity_t
with	lib/flecs/src/private_types.h	/^    ecs_entity_t with;           \/* Id to add by default to new entities *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_entity_t
with_ctx	lib/flecs/flecs.c	/^    ecs_rule_with_ctx_t with_ctx;$/;"	m	struct:ecs_rule_subset_frame_t	typeref:typename:ecs_rule_with_ctx_t	file:
with_ctx	lib/flecs/src/addons/rules.c	/^    ecs_rule_with_ctx_t with_ctx;$/;"	m	struct:ecs_rule_subset_frame_t	typeref:typename:ecs_rule_with_ctx_t	file:
with_frame	lib/flecs/flecs.c	/^    int32_t with_frame;$/;"	m	struct:__anona642c0050408	typeref:typename:int32_t	file:
with_frame	lib/flecs/src/addons/plecs.c	/^    int32_t with_frame;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:int32_t	file:
with_frames	lib/flecs/flecs.c	/^    int32_t with_frames[STACK_MAX_SIZE];$/;"	m	struct:__anona642c0050408	typeref:typename:int32_t[]	file:
with_frames	lib/flecs/src/addons/plecs.c	/^    int32_t with_frames[STACK_MAX_SIZE];$/;"	m	struct:__anon7212bd4e0108	typeref:typename:int32_t[]	file:
with_stmt	lib/flecs/flecs.c	/^    bool with_stmt;$/;"	m	struct:__anona642c0050408	typeref:typename:bool	file:
with_stmt	lib/flecs/src/addons/plecs.c	/^    bool with_stmt;$/;"	m	struct:__anon7212bd4e0108	typeref:typename:bool	file:
worker	lib/flecs/flecs.c	/^void* worker(void *arg) {$/;"	f	typeref:typename:void *	file:
worker	lib/flecs/flecs.h	/^        ecs_worker_iter_t worker;$/;"	m	union:ecs_iter_private_t::__anona642c00a010a	typeref:typename:ecs_worker_iter_t
worker	lib/flecs/flecs.h	/^worker_iterable<Components...> iterable<Components...>::worker($/;"	f	class:flecs::iterable	typeref:typename:worker_iterable<Components...>
worker	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^worker_iterable<Components...> iterable<Components...>::worker($/;"	f	class:flecs::iterable	typeref:typename:worker_iterable<Components...>
worker	lib/flecs/include/flecs/private/api_types.h	/^        ecs_worker_iter_t worker;$/;"	m	union:ecs_iter_private_t::__anon49db2d84010a	typeref:typename:ecs_worker_iter_t
worker	lib/flecs/src/addons/pipeline/worker.c	/^void* worker(void *arg) {$/;"	f	typeref:typename:void *	file:
worker_cond	lib/flecs/flecs.c	/^    ecs_os_cond_t worker_cond;   \/* Signal that worker threads can start *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_cond_t	file:
worker_cond	lib/flecs/src/private_types.h	/^    ecs_os_cond_t worker_cond;   \/* Signal that worker threads can start *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_os_cond_t
worker_iterable	lib/flecs/flecs.h	/^    worker_iterable(int32_t offset, int32_t limit, iterable<Components...> *it) $/;"	f	struct:flecs::worker_iterable
worker_iterable	lib/flecs/flecs.h	/^struct worker_iterable final : iterable<Components...> {$/;"	s	namespace:flecs
worker_iterable	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    worker_iterable(int32_t offset, int32_t limit, iterable<Components...> *it) $/;"	f	struct:flecs::worker_iterable
worker_iterable	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^struct worker_iterable final : iterable<Components...> {$/;"	s	namespace:flecs
worker_stages	lib/flecs/flecs.c	/^    ecs_vector_t *worker_stages; \/* Stages for threads *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_vector_t *	file:
worker_stages	lib/flecs/src/private_types.h	/^    ecs_vector_t *worker_stages; \/* Stages for threads *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_vector_t *
workers_running	lib/flecs/flecs.c	/^    int32_t workers_running;     \/* Number of threads running *\/$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
workers_running	lib/flecs/src/private_types.h	/^    int32_t workers_running;     \/* Number of threads running *\/$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
workers_waiting	lib/flecs/flecs.c	/^    int32_t workers_waiting;     \/* Number of workers waiting on sync *\/$/;"	m	struct:ecs_world_t	typeref:typename:int32_t	file:
workers_waiting	lib/flecs/src/private_types.h	/^    int32_t workers_waiting;     \/* Number of workers waiting on sync *\/$/;"	m	struct:ecs_world_t	typeref:typename:int32_t
world	lib/flecs/flecs.c	/^    ecs_world_t *world;          \/* Reference to world *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_world_t *	file:
world	lib/flecs/flecs.c	/^    ecs_world_t *world;         \/* Ref to world so rule can be used by itself *\/$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_world_t *	file:
world	lib/flecs/flecs.c	/^    ecs_world_t *world;$/;"	m	struct:__anona642c0050808	typeref:typename:ecs_world_t *	file:
world	lib/flecs/flecs.c	/^    ecs_world_t *world;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_world_t *	file:
world	lib/flecs/flecs.c	/^    ecs_world_t *world;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_world_t *	file:
world	lib/flecs/flecs.h	/^    const ecs_world_t *world;$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:const ecs_world_t *
world	lib/flecs/flecs.h	/^    ecs_world_t *world;           \/* The world *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_world_t *
world	lib/flecs/flecs.h	/^    explicit world() $/;"	f	struct:flecs::world
world	lib/flecs/flecs.h	/^    explicit world(int argc, char *argv[])$/;"	f	struct:flecs::world
world	lib/flecs/flecs.h	/^    explicit world(world_t *w)$/;"	f	struct:flecs::world
world	lib/flecs/flecs.h	/^    flecs::world world() const { $/;"	f	struct:flecs::type_base	typeref:typename:flecs::world
world	lib/flecs/flecs.h	/^    world(world&& obj) {$/;"	f	struct:flecs::world
world	lib/flecs/flecs.h	/^inline flecs::world id::world() const {$/;"	f	class:flecs::id	typeref:typename:flecs::world
world	lib/flecs/flecs.h	/^inline flecs::world iter::world() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::world
world	lib/flecs/flecs.h	/^struct world {$/;"	s	namespace:flecs
world	lib/flecs/include/flecs/addons/cpp/impl/iter.hpp	/^inline flecs::world iter::world() const {$/;"	f	class:flecs::iter	typeref:typename:flecs::world
world	lib/flecs/include/flecs/addons/cpp/mixins/id/impl.hpp	/^inline flecs::world id::world() const {$/;"	f	class:flecs::id	typeref:typename:flecs::world
world	lib/flecs/include/flecs/addons/cpp/type.hpp	/^    flecs::world world() const { $/;"	f	struct:flecs::type_base	typeref:typename:flecs::world
world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    explicit world() $/;"	f	struct:flecs::world
world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    explicit world(int argc, char *argv[])$/;"	f	struct:flecs::world
world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    explicit world(world_t *w)$/;"	f	struct:flecs::world
world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    world(world&& obj) {$/;"	f	struct:flecs::world
world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^struct world {$/;"	s	namespace:flecs
world	lib/flecs/include/flecs/addons/meta.h	/^    const ecs_world_t *world;$/;"	m	struct:ecs_meta_cursor_t	typeref:typename:const ecs_world_t *
world	lib/flecs/include/flecs/private/api_types.h	/^    ecs_world_t *world;           \/* The world *\/$/;"	m	struct:ecs_iter_t	typeref:typename:ecs_world_t *
world	lib/flecs/src/addons/rest.c	/^    ecs_world_t *world;$/;"	m	struct:__anond91cde350108	typeref:typename:ecs_world_t *	file:
world	lib/flecs/src/addons/rules.c	/^    ecs_world_t *world;         \/* Ref to world so rule can be used by itself *\/$/;"	m	struct:ecs_rule_t	typeref:typename:ecs_world_t *	file:
world	lib/flecs/src/addons/snapshot.c	/^    ecs_world_t *world;$/;"	m	struct:ecs_snapshot_t	typeref:typename:ecs_world_t *	file:
world	lib/flecs/src/private_types.h	/^    ecs_world_t *world;          \/* Reference to world *\/$/;"	m	struct:ecs_stage_t	typeref:typename:ecs_world_t *
world	lib/flecs/src/private_types.h	/^    ecs_world_t *world;$/;"	m	struct:ecs_query_t	typeref:typename:ecs_world_t *
world	lib/flecs/test/api/src/ComponentLifecycle.c	/^    ecs_world_t *world;$/;"	m	struct:copy_ctx	typeref:typename:ecs_world_t *	file:
world	lib/flecs/test/api/src/ComponentLifecycle.c	/^    ecs_world_t *world;$/;"	m	struct:xtor_ctx	typeref:typename:ecs_world_t *	file:
world_	lib/flecs/flecs.h	/^    flecs::world_t *world_;$/;"	m	struct:flecs::enum_data	typeref:typename:flecs::world_t *
world_	lib/flecs/include/flecs/addons/cpp/utils/enum.hpp	/^    flecs::world_t *world_;$/;"	m	struct:flecs::enum_data	typeref:typename:flecs::world_t *
world_iter_init	lib/flecs/flecs.c	/^void world_iter_init($/;"	f	typeref:typename:void	file:
world_iter_init	lib/flecs/src/world.c	/^void world_iter_init($/;"	f	typeref:typename:void	file:
world_iter_next	lib/flecs/flecs.c	/^bool world_iter_next($/;"	f	typeref:typename:bool	file:
world_iter_next	lib/flecs/src/world.c	/^bool world_iter_next($/;"	f	typeref:typename:bool	file:
world_start_time	lib/flecs/flecs.c	/^    ecs_time_t world_start_time; \/* Timestamp of simulation start *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_time_t	file:
world_start_time	lib/flecs/src/private_types.h	/^    ecs_time_t world_start_time; \/* Timestamp of simulation start *\/$/;"	m	struct:ecs_world_t	typeref:typename:ecs_time_t
world_t	lib/flecs/flecs.h	/^using world_t = ecs_world_t;$/;"	t	namespace:flecs	typeref:typename:ecs_world_t
world_t	lib/flecs/include/flecs/addons/cpp/c_types.hpp	/^using world_t = ecs_world_t;$/;"	t	namespace:flecs	typeref:typename:ecs_world_t
world_time_total	lib/flecs/flecs.h	/^    FLECS_FLOAT world_time_total;     \/* Time elapsed in simulation *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
world_time_total	lib/flecs/flecs.h	/^    ecs_counter_t world_time_total;           \/* Simulation time passed since simulation start./;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
world_time_total	lib/flecs/include/flecs.h	/^    FLECS_FLOAT world_time_total;     \/* Time elapsed in simulation *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
world_time_total	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t world_time_total;           \/* Simulation time passed since simulation start./;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
world_time_total_raw	lib/flecs/flecs.h	/^    FLECS_FLOAT world_time_total_raw; \/* Time elapsed in simulation (no scaling) *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
world_time_total_raw	lib/flecs/flecs.h	/^    ecs_counter_t world_time_total_raw;       \/* Actual time passed since simulation start (fir/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
world_time_total_raw	lib/flecs/include/flecs.h	/^    FLECS_FLOAT world_time_total_raw; \/* Time elapsed in simulation (no scaling) *\/$/;"	m	struct:ecs_world_info_t	typeref:typename:FLECS_FLOAT
world_time_total_raw	lib/flecs/include/flecs/addons/stats.h	/^    ecs_counter_t world_time_total_raw;       \/* Actual time passed since simulation start (fir/;"	m	struct:ecs_world_stats_t	typeref:typename:ecs_counter_t
world_v	lib/flecs/flecs.h	/^    flecs::world_t* world_v() override { return m_world; }$/;"	f	struct:flecs::_::builder	typeref:typename:flecs::world_t *
world_v	lib/flecs/flecs.h	/^    flecs::world_t* world_v() override { return m_world; }$/;"	f	struct:flecs::_::node_builder	typeref:typename:flecs::world_t *
world_v	lib/flecs/flecs.h	/^    flecs::world_t* world_v() override { return m_world; }$/;"	f	struct:flecs::term	typeref:typename:flecs::world_t *
world_v	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    flecs::world_t* world_v() override { return m_world; }$/;"	f	struct:flecs::term	typeref:typename:flecs::world_t *
world_v	lib/flecs/include/flecs/addons/cpp/utils/builder.hpp	/^    flecs::world_t* world_v() override { return m_world; }$/;"	f	struct:flecs::_::builder	typeref:typename:flecs::world_t *
world_v	lib/flecs/include/flecs/addons/cpp/utils/node_builder.hpp	/^    flecs::world_t* world_v() override { return m_world; }$/;"	f	struct:flecs::_::node_builder	typeref:typename:flecs::world_t *
write_state_t	lib/flecs/flecs.c	/^typedef struct write_state_t {$/;"	s	file:
write_state_t	lib/flecs/flecs.c	/^} write_state_t;$/;"	t	typeref:struct:write_state_t	file:
write_state_t	lib/flecs/src/addons/pipeline/pipeline.c	/^typedef struct write_state_t {$/;"	s	file:
write_state_t	lib/flecs/src/addons/pipeline/pipeline.c	/^} write_state_t;$/;"	t	typeref:struct:write_state_t	file:
x	include/ecs/components.h	/^    int x, y;$/;"	m	struct:__anon1ffac85e0108	typeref:typename:int
x	lib/flecs/examples/c/entities/basics/src/main.c	/^    double x, y;$/;"	m	struct:__anona30c816c0108	typeref:typename:double	file:
x	lib/flecs/examples/c/entities/hierarchy/src/main.c	/^    double x, y;$/;"	m	struct:__anonf9264af60108	typeref:typename:double	file:
x	lib/flecs/examples/c/entities/iterate_components/src/main.c	/^    double x, y;$/;"	m	struct:__anon91bc140a0108	typeref:typename:double	file:
x	lib/flecs/examples/c/entities/prefab/src/main.c	/^    double x; $/;"	m	struct:__anonfbee6d870508	typeref:typename:double	file:
x	lib/flecs/examples/c/hello_world/src/main.c	/^    double x;$/;"	m	struct:__anond3e263be0108	typeref:typename:double	file:
x	lib/flecs/examples/c/queries/basics/src/main.c	/^    double x;$/;"	m	struct:__anon1360c0250108	typeref:typename:double	file:
x	lib/flecs/examples/c/queries/change_tracking/src/main.c	/^    double x, y;$/;"	m	struct:__anon3f4b18880208	typeref:typename:double	file:
x	lib/flecs/examples/c/queries/hierarchies/src/main.c	/^    double x;$/;"	m	struct:__anon95319c370108	typeref:typename:double	file:
x	lib/flecs/examples/c/queries/instancing/src/main.c	/^    double x, y;$/;"	m	struct:__anon12ad033e0108	typeref:typename:double	file:
x	lib/flecs/examples/c/queries/sorting/src/main.c	/^    double x, y;$/;"	m	struct:__anonb97f8f360108	typeref:typename:double	file:
x	lib/flecs/examples/c/reflection/basics/src/main.c	/^    float x, y;$/;"	m	struct:__anon07ccd2f20108	typeref:typename:float	file:
x	lib/flecs/examples/c/reflection/basics_deserialize/src/main.c	/^    float x, y;$/;"	m	struct:__anon3b8ee5220108	typeref:typename:float	file:
x	lib/flecs/examples/c/reflection/basics_json/src/main.c	/^    float x, y;$/;"	m	struct:__anonbc680b0b0108	typeref:typename:float	file:
x	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^    float x, y;$/;"	m	struct:__anonab3664440108	typeref:typename:float	file:
x	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^    float x, y;$/;"	m	struct:__anon7b79ffa80108	typeref:typename:float	file:
x	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^    float x, y;$/;"	m	struct:__anon70a3d52e0108	typeref:typename:float	file:
x	lib/flecs/examples/c/systems/basics/src/main.c	/^    double x, y;$/;"	m	struct:__anon9c840e7f0108	typeref:typename:double	file:
x	lib/flecs/examples/c/systems/pipeline/src/main.c	/^    double x, y;$/;"	m	struct:__anone425e6800108	typeref:typename:double	file:
x	lib/flecs/examples/c/systems/sync_point/src/main.c	/^    double x, y;$/;"	m	struct:__anonc203dd100108	typeref:typename:double	file:
x	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^    double x, y;$/;"	m	struct:__anon263776a20108	typeref:typename:double	file:
x	lib/flecs/examples/cpp/entities/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct Position { double x = 0; double y = 0; };$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^    double x;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^    double x;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/ad_hoc_query/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/ad_hoc_query/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/hierarchy/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/instancing/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/instancing/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/queries/sorting/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/reflection/basics/src/main.cpp	/^    float x;$/;"	m	struct:Position	typeref:typename:float	file:
x	lib/flecs/examples/cpp/reflection/basics_deserialize/src/main.cpp	/^    float x;$/;"	m	struct:Position	typeref:typename:float	file:
x	lib/flecs/examples/cpp/reflection/basics_json/src/main.cpp	/^    float x;$/;"	m	struct:Position	typeref:typename:float	file:
x	lib/flecs/examples/cpp/reflection/nested_set_member/src/main.cpp	/^    float x;$/;"	m	struct:Point	typeref:typename:float	file:
x	lib/flecs/examples/cpp/reflection/nested_struct/src/main.cpp	/^    float x;$/;"	m	struct:Point	typeref:typename:float	file:
x	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^    float x;$/;"	m	struct:Position	typeref:typename:float	file:
x	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^    float x;$/;"	m	struct:Velocity	typeref:typename:float	file:
x	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^    float x;$/;"	m	struct:Position	typeref:typename:float	file:
x	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^    float x;$/;"	m	struct:Velocity	typeref:typename:float	file:
x	lib/flecs/examples/cpp/systems/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/systems/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/test/api/include/api.h	/^    float x;$/;"	m	struct:Position	typeref:typename:float
x	lib/flecs/test/api/include/api.h	/^    float x;$/;"	m	struct:Velocity	typeref:typename:float
x	lib/flecs/test/api/src/Plecs.c	/^            float x;$/;"	m	struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08::__anonb7ea1cde0d08	typeref:typename:float	file:
x	lib/flecs/test/api/src/Plecs.c	/^            float x;$/;"	m	struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08::__anonb7ea1cde0e08	typeref:typename:float	file:
x	lib/flecs/test/api/src/Plecs.c	/^            float x;$/;"	m	struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808::__anonb7ea1cde0908	typeref:typename:float	file:
x	lib/flecs/test/api/src/Plecs.c	/^            float x;$/;"	m	struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808::__anonb7ea1cde0a08	typeref:typename:float	file:
x	lib/flecs/test/api/src/Plecs.c	/^        float x;$/;"	m	struct:Plecs_type_and_assign_in_plecs_w_3_members::__anonb7ea1cde0108	typeref:typename:float	file:
x	lib/flecs/test/api/src/Plecs.c	/^        float x;$/;"	m	struct:Plecs_using_w_entity_ref_in_value_3_members::__anonb7ea1cde0b08	typeref:typename:float	file:
x	lib/flecs/test/cpp_api/include/cpp_api.h	/^    T x;$/;"	m	struct:Template	typeref:typename:T
x	lib/flecs/test/cpp_api/include/cpp_api.h	/^    float x;$/;"	m	struct:Position	typeref:typename:float
x	lib/flecs/test/cpp_api/include/cpp_api.h	/^    float x;$/;"	m	struct:Velocity	typeref:typename:float
x	lib/flecs/test/cpp_api/src/Entity.cpp	/^    float x = -1.0;$/;"	m	struct:PositionInitialized	typeref:typename:float	file:
x	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        float x;$/;"	m	struct:Foo::Position	typeref:typename:float	file:
x	lib/flecs/test/cpp_api/src/Meta.cpp	/^        int32_t x;$/;"	m	struct:Meta_nested_struct::Test	typeref:typename:int32_t	file:
x	lib/flecs/test/cpp_api/src/Paths.cpp	/^        float x;$/;"	m	struct:test::Foo	typeref:typename:float	file:
x	lib/flecs/test/cpp_api/src/World.cpp	/^        float x;$/;"	m	struct:A::Comp	typeref:typename:float	file:
x	lib/flecs/test/custom_builds/c/pipeline/src/main.c	/^    float x, y;$/;"	m	struct:__anon09f76fa60108	typeref:typename:float	file:
x	lib/flecs/test/custom_builds/c/pipeline_w_system/src/main.c	/^    float x, y;$/;"	m	struct:__anon6ce82e000108	typeref:typename:float	file:
x	lib/flecs/test/custom_builds/c/system/src/main.c	/^    float x, y;$/;"	m	struct:__anon8c3501f50108	typeref:typename:float	file:
x	lib/flecs/test/custom_builds/c/timer/src/main.c	/^    float x, y;$/;"	m	struct:__anon7ef2bd910108	typeref:typename:float	file:
x	lib/flecs/test/custom_builds/cpp/pipeline/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/test/custom_builds/cpp/pipeline/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/test/custom_builds/cpp/system/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/test/custom_builds/cpp/system/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/test/custom_builds/cpp/timer/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
x	lib/flecs/test/custom_builds/cpp/timer/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
x	lib/flecs/test/meta/include/meta.h	/^    int32_t x, y;$/;"	m	struct:__anon8e06701c0108	typeref:typename:int32_t
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        bool_1 x[3];$/;"	m	struct:ArrayTypes_array_of_standaline_array_bool_1::__anon98b8c2481508	typeref:typename:bool_1[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        bool_2 x[3];$/;"	m	struct:ArrayTypes_array_of_standaline_array_bool_2::__anon98b8c2481608	typeref:typename:bool_2[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        bool_2 x[4];$/;"	m	struct:ArrayTypes_array_of_standaline_array_bool_3::__anon98b8c2481708	typeref:typename:bool_2[4]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x;$/;"	m	struct:ArrayTypes_array_struct_bool_3::__anon98b8c2480908	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x;$/;"	m	struct:ArrayTypes_array_struct_bool_3_before_i32_member::__anon98b8c2480b08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[1];$/;"	m	struct:ArrayTypes_array_bool_1::__anon98b8c2480108	typeref:typename:ecs_bool_t[1]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[1];$/;"	m	struct:ArrayTypes_array_bool_1_before_i32_member::__anon98b8c2480408	typeref:typename:ecs_bool_t[1]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[1];$/;"	m	struct:ArrayTypes_standaline_array_bool_1::__anon98b8c2481208	typeref:typename:ecs_bool_t[1]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[2];$/;"	m	struct:ArrayTypes_array_bool_2::__anon98b8c2480208	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[2];$/;"	m	struct:ArrayTypes_array_bool_2_before_i32_member::__anon98b8c2480508	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[2];$/;"	m	struct:ArrayTypes_array_struct_array_bool_3::__anon98b8c2480d08	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[2];$/;"	m	struct:ArrayTypes_standaline_array_bool_2::__anon98b8c2481308	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[3];$/;"	m	struct:ArrayTypes_2_arrays_1_bool_1_i32::__anon98b8c2480f08	typeref:typename:ecs_bool_t[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[3];$/;"	m	struct:ArrayTypes_array_bool_3::__anon98b8c2480308	typeref:typename:ecs_bool_t[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[3];$/;"	m	struct:ArrayTypes_array_bool_3_before_i32_member::__anon98b8c2480608	typeref:typename:ecs_bool_t[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t x[3];$/;"	m	struct:ArrayTypes_standaline_array_bool_3::__anon98b8c2481408	typeref:typename:ecs_bool_t[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t x[3];$/;"	m	struct:ArrayTypes_2_arrays_1_i32_1_bool::__anon98b8c2481008	typeref:typename:ecs_i32_t[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t x[3];$/;"	m	struct:ArrayTypes_array_i32_3::__anon98b8c2480708	typeref:typename:ecs_i32_t[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t x[3];$/;"	m	struct:ArrayTypes_array_i32_3_before_i32_member::__anon98b8c2480808	typeref:typename:ecs_i32_t[3]	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        int32_t x;$/;"	m	struct:ArrayTypes_array_struct_array_bool_3::__anon98b8c2480e08	typeref:typename:int32_t	file:
x	lib/flecs/test/meta/src/ArrayTypes.c	/^        int32_t x;$/;"	m	struct:ArrayTypes_array_struct_bool_3_before_i32_member::__anon98b8c2480c08	typeref:typename:int32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t x;$/;"	m	struct:Cursor_struct_set_bool::__anon23e81c320408	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t x;$/;"	m	struct:Cursor_struct_set_bool_bool::__anon23e81c320508	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t x;$/;"	m	struct:Cursor_struct_set_bool_bool_bool::__anon23e81c320608	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t x;$/;"	m	struct:Cursor_struct_set_bool_bool_i32_bool::__anon23e81c320708	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_2_nested_1_i32_2_i32::__anon23e81c320a08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32::__anon23e81c320c08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320e08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_member_2_nested_i32_i32::__anon23e81c322008	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_member_2_nested_i32_i32_reverse::__anon23e81c322208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_member_i32::__anon23e81c321b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_member_i32_i32::__anon23e81c321c08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_member_i32_i32_reverse::__anon23e81c321d08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_member_nested_i32_i32::__anon23e81c321e08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_nested_i32::__anon23e81c320808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_set_2_array_w_struct_i32::__anon23e81c321508	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_set_array_w_struct_i32::__anon23e81c321308	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_set_i32::__anon23e81c320108	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_set_i32_i32::__anon23e81c320208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_set_i32_i32_i32::__anon23e81c320308	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_w_2_array_type_struct::__anon23e81c322808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x;$/;"	m	struct:Cursor_struct_w_array_type_struct::__anon23e81c322508	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x[3];$/;"	m	struct:Cursor_struct_set_2_array_i32_3::__anon23e81c321108	typeref:typename:ecs_i32_t[3]	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x[3];$/;"	m	struct:Cursor_struct_set_2_array_i32_3_w_padding_members::__anon23e81c321208	typeref:typename:ecs_i32_t[3]	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x[3];$/;"	m	struct:Cursor_struct_set_2_array_w_struct_w_array_i32::__anon23e81c321908	typeref:typename:ecs_i32_t[3]	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x[3];$/;"	m	struct:Cursor_struct_set_array_i32_3::__anon23e81c321008	typeref:typename:ecs_i32_t[3]	file:
x	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t x[3];$/;"	m	struct:Cursor_struct_set_array_w_struct_w_array_i32::__anon23e81c321708	typeref:typename:ecs_i32_t[3]	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_2_nested_i32_i32::__anon51c88b180c08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_member_2_nested_i32_i32::__anon51c88b181408	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse::__anon51c88b181608	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_member_nested_i32::__anon51c88b181008	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_member_nested_i32_i32::__anon51c88b181208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_nested_i32::__anon51c88b180808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_nested_i32_i32::__anon51c88b180a08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_struct_i32_array_3::__anon51c88b181908	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_struct_i32_i32_array_3::__anon51c88b181b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_w_2_array_type_struct::__anon51c88b182108	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromExpr_struct_w_array_type_struct::__anon51c88b181f08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        int32_t x;$/;"	m	struct:DeserializeFromExpr_struct_i32::__anon51c88b180508	typeref:typename:int32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        int32_t x;$/;"	m	struct:DeserializeFromExpr_struct_i32_i32::__anon51c88b180608	typeref:typename:int32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        int32_t x;$/;"	m	struct:DeserializeFromExpr_struct_member_i32::__anon51c88b180e08	typeref:typename:int32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        int32_t x;$/;"	m	struct:DeserializeFromExpr_struct_member_i32_i32::__anon51c88b180f08	typeref:typename:int32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        int32_t x[3];$/;"	m	struct:DeserializeFromExpr_struct_i32_array_3::__anon51c88b181808	typeref:typename:int32_t[3]	file:
x	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_entity_t x[3];$/;"	m	struct:DeserializeFromJson_struct_i32_array_3::__anon5d173e531f08	typeref:typename:ecs_entity_t[3]	file:
x	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromJson_struct_2_nested_i32_i32::__anon5d173e531d08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromJson_struct_i32_i32::__anon5d173e531808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromJson_struct_nested_i32::__anon5d173e531908	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromJson_struct_nested_i32_i32::__anon5d173e531b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromJson_struct_struct_i32_array_3::__anon5d173e532008	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t x;$/;"	m	struct:DeserializeFromJson_struct_struct_i32_i32_array_3::__anon5d173e532208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        bool x;$/;"	m	struct:NestedStructTypes_1_bool_w_bool_member::__anon3cdfa8510608	typeref:typename:bool	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool::__anon3cdfa8510108	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_2_bool::__anon3cdfa8510f08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_2_bool_bool::__anon3cdfa8511708	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_2_bool_bool::__anon3cdfa8511808	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_2_i32::__anon3cdfa8511108	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_2_same::__anon3cdfa8510d08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool::__anon3cdfa8511a08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool::__anon3cdfa8511b08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8511f08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8512008	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_same::__anon3cdfa8511d08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_w_bool_member::__anon3cdfa8510508	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_bool_w_int32_member::__anon3cdfa8510708	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_i32_2_bool::__anon3cdfa8511508	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_1_int32_w_bool_member::__anon3cdfa8510a08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513208	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_2_lvls_bool::__anon3cdfa8513308	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513708	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513808	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_bool_2_i32::__anon3cdfa8511208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_bool_w_int32_member::__anon3cdfa8510808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_2_bool::__anon3cdfa8511408	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_2_i32::__anon3cdfa8512408	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_2_i32::__anon3cdfa8512508	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_2_i32_i32::__anon3cdfa8512708	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_2_i32_i32::__anon3cdfa8512808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_2_same::__anon3cdfa8512208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32::__anon3cdfa8512a08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32::__anon3cdfa8512b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8512f08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8513008	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_same::__anon3cdfa8512d08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_int32::__anon3cdfa8510308	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_int32_w_bool_member::__anon3cdfa8510908	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_int32_w_int32_member::__anon3cdfa8510b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:NestedStructTypes_1_int32_w_int32_member::__anon3cdfa8510c08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        E x;$/;"	m	struct:SerializeToExpr_struct_enum::__anon35ed1d3e0308	typeref:typename:E	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToExpr_struct_2_nested_i32_i32::__anon35ed1d3e0d08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToExpr_struct_nested_i32::__anon35ed1d3e0908	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToExpr_struct_nested_i32_i32::__anon35ed1d3e0b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToExpr_struct_struct_i32_array_3::__anon35ed1d3e1008	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToExpr_struct_struct_i32_i32_array_3::__anon35ed1d3e1208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToExpr_struct_w_2_array_type_struct::__anon35ed1d3e1808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToExpr_struct_w_array_type_struct::__anon35ed1d3e1608	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        int32_t x;$/;"	m	struct:SerializeToExpr_struct_i32::__anon35ed1d3e0508	typeref:typename:int32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        int32_t x;$/;"	m	struct:SerializeToExpr_struct_i32_i32::__anon35ed1d3e0608	typeref:typename:int32_t	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        int32_t x[3];$/;"	m	struct:SerializeToExpr_struct_i32_array_3::__anon35ed1d3e0f08	typeref:typename:int32_t[3]	file:
x	lib/flecs/test/meta/src/SerializeToExpr.c	/^        uint32_t x;$/;"	m	struct:SerializeToExpr_struct_bitmask::__anon35ed1d3e0408	typeref:typename:uint32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        E x;$/;"	m	struct:SerializeToJson_struct_enum::__anon413bd0791908	typeref:typename:E	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        char* x;$/;"	m	struct:SerializeToJson_struct_string::__anon413bd0791508	typeref:typename:char *	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_bool_t x;$/;"	m	struct:SerializeToJson_struct_bool::__anon413bd0790108	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_byte_t x;$/;"	m	struct:SerializeToJson_struct_byte::__anon413bd0790208	typeref:typename:ecs_byte_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_char_t x;$/;"	m	struct:SerializeToJson_struct_char::__anon413bd0790308	typeref:typename:ecs_char_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_entity_t x;$/;"	m	struct:SerializeToJson_struct_entity::__anon413bd0791608	typeref:typename:ecs_entity_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_f32_t x;$/;"	m	struct:SerializeToJson_struct_float::__anon413bd0790e08	typeref:typename:ecs_f32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_f32_t x;$/;"	m	struct:SerializeToJson_struct_float_inf::__anon413bd0791008	typeref:typename:ecs_f32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_f32_t x;$/;"	m	struct:SerializeToJson_struct_float_nan::__anon413bd0790f08	typeref:typename:ecs_f32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_f64_t x;$/;"	m	struct:SerializeToJson_struct_double::__anon413bd0791108	typeref:typename:ecs_f64_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_f64_t x;$/;"	m	struct:SerializeToJson_struct_double_inf::__anon413bd0791308	typeref:typename:ecs_f64_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_f64_t x;$/;"	m	struct:SerializeToJson_struct_double_large::__anon413bd0791408	typeref:typename:ecs_f64_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_f64_t x;$/;"	m	struct:SerializeToJson_struct_double_nan::__anon413bd0791208	typeref:typename:ecs_f64_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i16_t x;$/;"	m	struct:SerializeToJson_struct_i16::__anon413bd0790508	typeref:typename:ecs_i16_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToJson_serialize_iterator_w_var_component::__anon413bd0793208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToJson_struct_2_nested_i32_i32::__anon413bd0792008	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToJson_struct_i32::__anon413bd0790608	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToJson_struct_i32_i32::__anon413bd0791b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToJson_struct_nested_i32::__anon413bd0791c08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToJson_struct_nested_i32_i32::__anon413bd0791e08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToJson_struct_struct_i32_array_3::__anon413bd0792308	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t x;$/;"	m	struct:SerializeToJson_struct_struct_i32_i32_array_3::__anon413bd0792508	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i64_t x;$/;"	m	struct:SerializeToJson_struct_i64::__anon413bd0790708	typeref:typename:ecs_i64_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i8_t x;$/;"	m	struct:SerializeToJson_struct_i8::__anon413bd0790408	typeref:typename:ecs_i8_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_iptr_t x;$/;"	m	struct:SerializeToJson_struct_iptr::__anon413bd0790808	typeref:typename:ecs_iptr_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_u16_t x;$/;"	m	struct:SerializeToJson_struct_u16::__anon413bd0790a08	typeref:typename:ecs_u16_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_u32_t x;$/;"	m	struct:SerializeToJson_struct_u32::__anon413bd0790b08	typeref:typename:ecs_u32_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_u64_t x;$/;"	m	struct:SerializeToJson_struct_u64::__anon413bd0790c08	typeref:typename:ecs_u64_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_u8_t x;$/;"	m	struct:SerializeToJson_struct_u8::__anon413bd0790908	typeref:typename:ecs_u8_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_uptr_t x;$/;"	m	struct:SerializeToJson_struct_uptr::__anon413bd0790d08	typeref:typename:ecs_uptr_t	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        int32_t x[3];$/;"	m	struct:SerializeToJson_struct_i32_array_3::__anon413bd0792208	typeref:typename:int32_t[3]	file:
x	lib/flecs/test/meta/src/SerializeToJson.c	/^        uint32_t x;$/;"	m	struct:SerializeToJson_struct_bitmask::__anon413bd0791a08	typeref:typename:uint32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        bool x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_w_bool_member::__anond4af8f000c08	typeref:typename:bool	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        bool x;$/;"	m	struct:Serialized_ops_struct_w_vector_w_bool_after::__anond4af8f004908	typeref:typename:bool	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        bool x;$/;"	m	struct:Serialized_ops_struct_w_vector_w_bool_before::__anond4af8f004808	typeref:typename:bool	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f002f08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003108	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003208	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003308	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003508	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003608	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002008	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool::__anond4af8f002108	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002508	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002608	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002c08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002d08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002e08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool::__anond4af8f000708	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_2_bool::__anond4af8f000f08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001708	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001d08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_w_bool_member::__anond4af8f000b08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_w_i32_member::__anond4af8f000d08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_2_bool::__anond4af8f001208	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001b08	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001508	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_struct_bool::__anond4af8f000108	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_struct_bool_bool::__anond4af8f000208	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x;$/;"	m	struct:Serialized_ops_struct_bool_i32::__anond4af8f000608	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[1];$/;"	m	struct:Serialized_ops_standalone_array_bool_1::__anond4af8f004108	typeref:typename:ecs_bool_t[1]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[1];$/;"	m	struct:Serialized_ops_standalone_array_bool_1_w_bool_after::__anond4af8f004408	typeref:typename:ecs_bool_t[1]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[1];$/;"	m	struct:Serialized_ops_struct_array_bool_1::__anond4af8f003908	typeref:typename:ecs_bool_t[1]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[1];$/;"	m	struct:Serialized_ops_struct_array_bool_1_w_i32_after::__anond4af8f003c08	typeref:typename:ecs_bool_t[1]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[2];$/;"	m	struct:Serialized_ops_standalone_array_bool_2::__anond4af8f004208	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[2];$/;"	m	struct:Serialized_ops_standalone_array_bool_2_w_bool_after::__anond4af8f004508	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[2];$/;"	m	struct:Serialized_ops_struct_array_bool_2::__anond4af8f003a08	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[2];$/;"	m	struct:Serialized_ops_struct_array_bool_2_w_i32_after::__anond4af8f003d08	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[2];$/;"	m	struct:Serialized_ops_struct_array_struct_bool_3_w_i32_after::__anond4af8f003f08	typeref:typename:ecs_bool_t[2]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[3];$/;"	m	struct:Serialized_ops_standalone_array_bool_3::__anond4af8f004308	typeref:typename:ecs_bool_t[3]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[3];$/;"	m	struct:Serialized_ops_standalone_array_bool_3_w_bool_after::__anond4af8f004608	typeref:typename:ecs_bool_t[3]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[3];$/;"	m	struct:Serialized_ops_struct_array_bool_3::__anond4af8f003b08	typeref:typename:ecs_bool_t[3]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t x[3];$/;"	m	struct:Serialized_ops_struct_array_bool_3_w_i32_after::__anond4af8f003e08	typeref:typename:ecs_bool_t[3]	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003008	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003408	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002a08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001e08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_w_i32_member::__anond4af8f000e08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_i32::__anond4af8f000908	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_2_bool::__anond4af8f001108	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001a08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001408	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_struct_array_struct_bool_3_w_i32_after::__anond4af8f004008	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_struct_i32::__anond4af8f000308	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_struct_i32_bool::__anond4af8f000508	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t x;$/;"	m	struct:Serialized_ops_struct_i32_i32::__anond4af8f000408	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i64_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003708	typeref:typename:ecs_i64_t	file:
x	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i64_t x;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003808	typeref:typename:ecs_i64_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:StructTypes_bool_bool_i32::__anon7256d2ce0508	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:StructTypes_bool_i32::__anon7256d2ce0408	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t x;$/;"	m	struct:StructTypes_bool_i32_bool_i32::__anon7256d2ce0608	typeref:typename:ecs_bool_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_i32::__anon7256d2ce0108	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_i32_bool::__anon7256d2ce0708	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_i32_bool_bool::__anon7256d2ce0808	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_i32_bool_bool_bool::__anon7256d2ce0908	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_i32_i32::__anon7256d2ce0208	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_i32_i32_i32::__anon7256d2ce0308	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_i32_i64::__anon7256d2ce0a08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_i32_i64_i32::__anon7256d2ce0b08	typeref:typename:ecs_i32_t	file:
x	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t x;$/;"	m	struct:StructTypes_incomplete_member::__anon7256d2ce0c08	typeref:typename:ecs_i32_t	file:
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:DefaultCtorValueCtor	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:DefaultInit	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:FlecsCtor	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:FlecsCtorDefaultCtor	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:FlecsCtorValueCtor	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:NoCopy	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:NoCopyAssign	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:NoCopyCtor	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:NoDefaultCtor	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:NoDtor	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:NoMove	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:NoMoveAssign	typeref:typename:int
x_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int x_;$/;"	m	struct:NoMoveCtor	typeref:typename:int
x_	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    int x_;$/;"	m	class:CtorDtorNonTrivial	typeref:typename:int	file:
x_	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    int x_;$/;"	m	class:CtorDtor_w_MoveAssign	typeref:typename:int	file:
x_	lib/flecs/test/cpp_api/src/Entity.cpp	/^    int x_;$/;"	m	class:SelfCtor	typeref:typename:int	file:
xlink	lib/uthash/doc/banner.svg	/^   inkscape:output_extension="org.inkscape.output.svg.inkscape">$/;"	n	uri:http://www.w3.org/1999/xlink
xlink	lib/uthash/doc/uthash-mini.svg	/^   sodipodi:docname="uthash-mini.svg">$/;"	n	uri:http://www.w3.org/1999/xlink
xtor_ctx	lib/flecs/test/api/src/ComponentLifecycle.c	/^typedef struct xtor_ctx {$/;"	s	file:
xtor_ctx	lib/flecs/test/api/src/ComponentLifecycle.c	/^} xtor_ctx;$/;"	t	typeref:struct:xtor_ctx	file:
y	include/ecs/components.h	/^    int x, y;$/;"	m	struct:__anon1ffac85e0108	typeref:typename:int
y	lib/flecs/examples/c/entities/basics/src/main.c	/^    double x, y;$/;"	m	struct:__anona30c816c0108	typeref:typename:double	file:
y	lib/flecs/examples/c/entities/hierarchy/src/main.c	/^    double x, y;$/;"	m	struct:__anonf9264af60108	typeref:typename:double	file:
y	lib/flecs/examples/c/entities/iterate_components/src/main.c	/^    double x, y;$/;"	m	struct:__anon91bc140a0108	typeref:typename:double	file:
y	lib/flecs/examples/c/entities/prefab/src/main.c	/^    double y; $/;"	m	struct:__anonfbee6d870508	typeref:typename:double	file:
y	lib/flecs/examples/c/hello_world/src/main.c	/^    double y;$/;"	m	struct:__anond3e263be0108	typeref:typename:double	file:
y	lib/flecs/examples/c/queries/basics/src/main.c	/^    double y;$/;"	m	struct:__anon1360c0250108	typeref:typename:double	file:
y	lib/flecs/examples/c/queries/change_tracking/src/main.c	/^    double x, y;$/;"	m	struct:__anon3f4b18880208	typeref:typename:double	file:
y	lib/flecs/examples/c/queries/hierarchies/src/main.c	/^    double y;$/;"	m	struct:__anon95319c370108	typeref:typename:double	file:
y	lib/flecs/examples/c/queries/instancing/src/main.c	/^    double x, y;$/;"	m	struct:__anon12ad033e0108	typeref:typename:double	file:
y	lib/flecs/examples/c/queries/sorting/src/main.c	/^    double x, y;$/;"	m	struct:__anonb97f8f360108	typeref:typename:double	file:
y	lib/flecs/examples/c/reflection/basics/src/main.c	/^    float x, y;$/;"	m	struct:__anon07ccd2f20108	typeref:typename:float	file:
y	lib/flecs/examples/c/reflection/basics_deserialize/src/main.c	/^    float x, y;$/;"	m	struct:__anon3b8ee5220108	typeref:typename:float	file:
y	lib/flecs/examples/c/reflection/basics_json/src/main.c	/^    float x, y;$/;"	m	struct:__anonbc680b0b0108	typeref:typename:float	file:
y	lib/flecs/examples/c/reflection/nested_struct/src/main.c	/^    float x, y;$/;"	m	struct:__anonab3664440108	typeref:typename:float	file:
y	lib/flecs/examples/c/reflection/query_to_custom_json/src/main.c	/^    float x, y;$/;"	m	struct:__anon7b79ffa80108	typeref:typename:float	file:
y	lib/flecs/examples/c/reflection/query_to_json/src/main.c	/^    float x, y;$/;"	m	struct:__anon70a3d52e0108	typeref:typename:float	file:
y	lib/flecs/examples/c/systems/basics/src/main.c	/^    double x, y;$/;"	m	struct:__anon9c840e7f0108	typeref:typename:double	file:
y	lib/flecs/examples/c/systems/pipeline/src/main.c	/^    double x, y;$/;"	m	struct:__anone425e6800108	typeref:typename:double	file:
y	lib/flecs/examples/c/systems/sync_point/src/main.c	/^    double x, y;$/;"	m	struct:__anonc203dd100108	typeref:typename:double	file:
y	lib/flecs/examples/c/systems/sync_point_delete/src/main.c	/^    double x, y;$/;"	m	struct:__anon263776a20108	typeref:typename:double	file:
y	lib/flecs/examples/cpp/entities/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/entities/hierarchy/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/entities/iterate_components/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/entities/prefab/src/main.cpp	/^struct Position { double x = 0; double y = 0; };$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^    double y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/hello_world/src/main.cpp	/^    double y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/ad_hoc_query/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/ad_hoc_query/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/change_tracking/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/hierarchy/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/instancing/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/instancing/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/iter/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/queries/sorting/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/reflection/basics/src/main.cpp	/^    float y;$/;"	m	struct:Position	typeref:typename:float	file:
y	lib/flecs/examples/cpp/reflection/basics_deserialize/src/main.cpp	/^    float y;$/;"	m	struct:Position	typeref:typename:float	file:
y	lib/flecs/examples/cpp/reflection/basics_json/src/main.cpp	/^    float y;$/;"	m	struct:Position	typeref:typename:float	file:
y	lib/flecs/examples/cpp/reflection/nested_set_member/src/main.cpp	/^    float y;$/;"	m	struct:Point	typeref:typename:float	file:
y	lib/flecs/examples/cpp/reflection/nested_struct/src/main.cpp	/^    float y;$/;"	m	struct:Point	typeref:typename:float	file:
y	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^    float y;$/;"	m	struct:Position	typeref:typename:float	file:
y	lib/flecs/examples/cpp/reflection/query_to_custom_json/src/main.cpp	/^    float y;$/;"	m	struct:Velocity	typeref:typename:float	file:
y	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^    float y;$/;"	m	struct:Position	typeref:typename:float	file:
y	lib/flecs/examples/cpp/reflection/query_to_json/src/main.cpp	/^    float y;$/;"	m	struct:Velocity	typeref:typename:float	file:
y	lib/flecs/examples/cpp/systems/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/systems/basics/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/systems/pipeline/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/systems/sync_point/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/examples/cpp/systems/sync_point_delete/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/test/api/include/api.h	/^    float y;$/;"	m	struct:Position	typeref:typename:float
y	lib/flecs/test/api/include/api.h	/^    float y;$/;"	m	struct:Velocity	typeref:typename:float
y	lib/flecs/test/api/src/Plecs.c	/^            float y;$/;"	m	struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08::__anonb7ea1cde0d08	typeref:typename:float	file:
y	lib/flecs/test/api/src/Plecs.c	/^            float y;$/;"	m	struct:Plecs_struct_type_w_default_child_component_nested_member::__anonb7ea1cde0c08::__anonb7ea1cde0e08	typeref:typename:float	file:
y	lib/flecs/test/api/src/Plecs.c	/^            float y;$/;"	m	struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808::__anonb7ea1cde0908	typeref:typename:float	file:
y	lib/flecs/test/api/src/Plecs.c	/^            float y;$/;"	m	struct:Plecs_type_and_assign_in_plecs_nested_member::__anonb7ea1cde0808::__anonb7ea1cde0a08	typeref:typename:float	file:
y	lib/flecs/test/api/src/Plecs.c	/^        float y;$/;"	m	struct:Plecs_type_and_assign_in_plecs_w_3_members::__anonb7ea1cde0108	typeref:typename:float	file:
y	lib/flecs/test/api/src/Plecs.c	/^        float y;$/;"	m	struct:Plecs_using_w_entity_ref_in_value_3_members::__anonb7ea1cde0b08	typeref:typename:float	file:
y	lib/flecs/test/cpp_api/include/cpp_api.h	/^    T y;$/;"	m	struct:Template	typeref:typename:T
y	lib/flecs/test/cpp_api/include/cpp_api.h	/^    float y;$/;"	m	struct:Position	typeref:typename:float
y	lib/flecs/test/cpp_api/include/cpp_api.h	/^    float y;$/;"	m	struct:Velocity	typeref:typename:float
y	lib/flecs/test/cpp_api/src/Entity.cpp	/^    float y = -1.0;$/;"	m	struct:PositionInitialized	typeref:typename:float	file:
y	lib/flecs/test/cpp_api/src/ImplicitComponents.cpp	/^        float y;$/;"	m	struct:Foo::Position	typeref:typename:float	file:
y	lib/flecs/test/cpp_api/src/Paths.cpp	/^        float y;$/;"	m	struct:test::Foo	typeref:typename:float	file:
y	lib/flecs/test/cpp_api/src/World.cpp	/^        float y;$/;"	m	struct:A::Comp	typeref:typename:float	file:
y	lib/flecs/test/custom_builds/c/pipeline/src/main.c	/^    float x, y;$/;"	m	struct:__anon09f76fa60108	typeref:typename:float	file:
y	lib/flecs/test/custom_builds/c/pipeline_w_system/src/main.c	/^    float x, y;$/;"	m	struct:__anon6ce82e000108	typeref:typename:float	file:
y	lib/flecs/test/custom_builds/c/system/src/main.c	/^    float x, y;$/;"	m	struct:__anon8c3501f50108	typeref:typename:float	file:
y	lib/flecs/test/custom_builds/c/timer/src/main.c	/^    float x, y;$/;"	m	struct:__anon7ef2bd910108	typeref:typename:float	file:
y	lib/flecs/test/custom_builds/cpp/pipeline/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/test/custom_builds/cpp/pipeline/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/test/custom_builds/cpp/system/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/test/custom_builds/cpp/system/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/test/custom_builds/cpp/timer/src/main.cpp	/^    double x, y;$/;"	m	struct:Position	typeref:typename:double	file:
y	lib/flecs/test/custom_builds/cpp/timer/src/main.cpp	/^    double x, y;$/;"	m	struct:Velocity	typeref:typename:double	file:
y	lib/flecs/test/meta/include/meta.h	/^    int32_t x, y;$/;"	m	struct:__anon8e06701c0108	typeref:typename:int32_t
y	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_bool_t y[2];$/;"	m	struct:ArrayTypes_2_arrays_1_i32_1_bool::__anon98b8c2481008	typeref:typename:ecs_bool_t[2]	file:
y	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t y;$/;"	m	struct:ArrayTypes_array_bool_1_before_i32_member::__anon98b8c2480408	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t y;$/;"	m	struct:ArrayTypes_array_bool_2_before_i32_member::__anon98b8c2480508	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t y;$/;"	m	struct:ArrayTypes_array_bool_3_before_i32_member::__anon98b8c2480608	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t y;$/;"	m	struct:ArrayTypes_array_i32_3_before_i32_member::__anon98b8c2480808	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/ArrayTypes.c	/^        ecs_i32_t y[2];$/;"	m	struct:ArrayTypes_2_arrays_1_bool_1_i32::__anon98b8c2480f08	typeref:typename:ecs_i32_t[2]	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t y;$/;"	m	struct:Cursor_struct_set_bool_bool::__anon23e81c320508	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t y;$/;"	m	struct:Cursor_struct_set_bool_bool_bool::__anon23e81c320608	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t y;$/;"	m	struct:Cursor_struct_set_bool_bool_i32_bool::__anon23e81c320708	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32::__anon23e81c320c08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members::__anon23e81c320e08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_member_2_nested_i32_i32::__anon23e81c322008	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_member_2_nested_i32_i32_reverse::__anon23e81c322208	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_member_i32_i32::__anon23e81c321c08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_member_i32_i32_reverse::__anon23e81c321d08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_member_nested_i32_i32::__anon23e81c321e08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_set_i32_i32::__anon23e81c320208	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_set_i32_i32_i32::__anon23e81c320308	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_w_2_array_type_struct::__anon23e81c322808	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y;$/;"	m	struct:Cursor_struct_w_array_type_struct::__anon23e81c322508	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y[3];$/;"	m	struct:Cursor_struct_set_2_array_i32_3::__anon23e81c321108	typeref:typename:ecs_i32_t[3]	file:
y	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t y[3];$/;"	m	struct:Cursor_struct_set_2_array_i32_3_w_padding_members::__anon23e81c321208	typeref:typename:ecs_i32_t[3]	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromExpr_struct_2_nested_i32_i32::__anon51c88b180c08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromExpr_struct_member_2_nested_i32_i32::__anon51c88b181408	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromExpr_struct_member_2_nested_i32_i32_reverse::__anon51c88b181608	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromExpr_struct_member_nested_i32_i32::__anon51c88b181208	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromExpr_struct_nested_i32_i32::__anon51c88b180a08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromExpr_struct_struct_i32_i32_array_3::__anon51c88b181b08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromExpr_struct_w_2_array_type_struct::__anon51c88b182108	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromExpr_struct_w_array_type_struct::__anon51c88b181f08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        int32_t y;$/;"	m	struct:DeserializeFromExpr_struct_i32_i32::__anon51c88b180608	typeref:typename:int32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromExpr.c	/^        int32_t y;$/;"	m	struct:DeserializeFromExpr_struct_member_i32_i32::__anon51c88b180f08	typeref:typename:int32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromJson_struct_2_nested_i32_i32::__anon5d173e531d08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromJson_struct_i32_i32::__anon5d173e531808	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromJson_struct_nested_i32_i32::__anon5d173e531b08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/DeserializeFromJson.c	/^        ecs_i32_t y;$/;"	m	struct:DeserializeFromJson_struct_struct_i32_i32_array_3::__anon5d173e532208	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:NestedStructTypes_1_bool_2_bool_bool::__anon3cdfa8511808	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool::__anon3cdfa8511a08	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8511f08	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_bool_bool::__anon3cdfa8512008	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:NestedStructTypes_1_bool_bool_2_same::__anon3cdfa8511d08	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513708	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:NestedStructTypes_2_lvls_bool_bool::__anon3cdfa8513808	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:NestedStructTypes_1_i32_2_i32_i32::__anon3cdfa8512808	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32::__anon3cdfa8512a08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8512f08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_i32_i32::__anon3cdfa8513008	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/NestedStructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:NestedStructTypes_1_i32_i32_2_same::__anon3cdfa8512d08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToExpr_struct_2_nested_i32_i32::__anon35ed1d3e0d08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToExpr_struct_nested_i32_i32::__anon35ed1d3e0b08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToExpr_struct_struct_i32_i32_array_3::__anon35ed1d3e1208	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToExpr_struct_w_2_array_type_struct::__anon35ed1d3e1808	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToExpr.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToExpr_struct_w_array_type_struct::__anon35ed1d3e1608	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToExpr.c	/^        int32_t y;$/;"	m	struct:SerializeToExpr_struct_i32_i32::__anon35ed1d3e0608	typeref:typename:int32_t	file:
y	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToJson_struct_2_nested_i32_i32::__anon413bd0792008	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToJson_struct_i32_i32::__anon413bd0791b08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToJson_struct_nested_i32_i32::__anon413bd0791e08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/SerializeToJson.c	/^        ecs_i32_t y;$/;"	m	struct:SerializeToJson_struct_struct_i32_i32_array_3::__anon413bd0792508	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003008	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f003308	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003408	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003808	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002508	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_bool_bool::__anond4af8f002608	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002e08	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001708	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001e08	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001a08	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001508	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_standalone_array_bool_1_w_bool_after::__anond4af8f004408	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_standalone_array_bool_2_w_bool_after::__anond4af8f004508	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_standalone_array_bool_3_w_bool_after::__anond4af8f004608	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_struct_bool_bool::__anond4af8f000208	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_bool_t y;$/;"	m	struct:Serialized_ops_struct_i32_bool::__anond4af8f000508	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before::__anond4af8f002f08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before::__anond4af8f003508	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002a08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_nested_2_lvls_i32_i32_w_member_before::__anond4af8f002b08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_bool_2_i32_i32::__anond4af8f001808	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_nested_struct_1_bool_i32_2_i32_bool::__anond4af8f001d08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_bool_2_bool_i32::__anond4af8f001b08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_nested_struct_1_i32_i32_2_bool_bool::__anond4af8f001408	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_struct_array_bool_1_w_i32_after::__anond4af8f003c08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_struct_array_bool_2_w_i32_after::__anond4af8f003d08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_struct_array_bool_3_w_i32_after::__anond4af8f003e08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_struct_bool_i32::__anond4af8f000608	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/Serialized.c	/^        ecs_i32_t y;$/;"	m	struct:Serialized_ops_struct_i32_i32::__anond4af8f000408	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:StructTypes_bool_bool_i32::__anon7256d2ce0508	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:StructTypes_i32_bool::__anon7256d2ce0708	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:StructTypes_i32_bool_bool::__anon7256d2ce0808	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t y;$/;"	m	struct:StructTypes_i32_bool_bool_bool::__anon7256d2ce0908	typeref:typename:ecs_bool_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:StructTypes_bool_i32::__anon7256d2ce0408	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:StructTypes_bool_i32_bool_i32::__anon7256d2ce0608	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:StructTypes_i32_i32::__anon7256d2ce0208	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:StructTypes_i32_i32_i32::__anon7256d2ce0308	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t y;$/;"	m	struct:StructTypes_incomplete_member::__anon7256d2ce0c08	typeref:typename:ecs_i32_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i64_t y;$/;"	m	struct:StructTypes_i32_i64::__anon7256d2ce0a08	typeref:typename:ecs_i64_t	file:
y	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i64_t y;$/;"	m	struct:StructTypes_i32_i64_i32::__anon7256d2ce0b08	typeref:typename:ecs_i64_t	file:
y_	lib/flecs/test/cpp_api/include/cpp_api.h	/^    int y_ = 99;$/;"	m	struct:DefaultInit	typeref:typename:int
y_	lib/flecs/test/cpp_api/src/Entity.cpp	/^    int y_;$/;"	m	class:SelfCtor	typeref:typename:int	file:
yield_existing	lib/flecs/flecs.h	/^    Base& yield_existing(bool value = true) {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
yield_existing	lib/flecs/flecs.h	/^    Base& yield_existing(bool value = true) {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
yield_existing	lib/flecs/flecs.h	/^    bool yield_existing;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:bool
yield_existing	lib/flecs/flecs.h	/^    bool yield_existing;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:bool
yield_existing	lib/flecs/include/flecs.h	/^    bool yield_existing;$/;"	m	struct:ecs_observer_desc_t	typeref:typename:bool
yield_existing	lib/flecs/include/flecs.h	/^    bool yield_existing;$/;"	m	struct:ecs_trigger_desc_t	typeref:typename:bool
yield_existing	lib/flecs/include/flecs/addons/cpp/mixins/observer/builder_i.hpp	/^    Base& yield_existing(bool value = true) {$/;"	f	struct:flecs::observer_builder_i	typeref:typename:Base &
yield_existing	lib/flecs/include/flecs/addons/cpp/mixins/trigger/builder_i.hpp	/^    Base& yield_existing(bool value = true) {$/;"	f	struct:flecs::trigger_builder_i	typeref:typename:Base &
z	lib/flecs/test/api/src/Plecs.c	/^        float z;$/;"	m	struct:Plecs_type_and_assign_in_plecs_w_3_members::__anonb7ea1cde0108	typeref:typename:float	file:
z	lib/flecs/test/api/src/Plecs.c	/^        float z;$/;"	m	struct:Plecs_using_w_entity_ref_in_value_3_members::__anonb7ea1cde0b08	typeref:typename:float	file:
z	lib/flecs/test/meta/src/Cursor.c	/^        ecs_bool_t z;$/;"	m	struct:Cursor_struct_set_bool_bool_bool::__anon23e81c320608	typeref:typename:ecs_bool_t	file:
z	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t z;$/;"	m	struct:Cursor_struct_set_bool_bool_i32_bool::__anon23e81c320708	typeref:typename:ecs_i32_t	file:
z	lib/flecs/test/meta/src/Cursor.c	/^        ecs_i32_t z;$/;"	m	struct:Cursor_struct_set_i32_i32_i32::__anon23e81c320308	typeref:typename:ecs_i32_t	file:
z	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t z;$/;"	m	struct:StructTypes_bool_i32_bool_i32::__anon7256d2ce0608	typeref:typename:ecs_bool_t	file:
z	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t z;$/;"	m	struct:StructTypes_i32_bool_bool::__anon7256d2ce0808	typeref:typename:ecs_bool_t	file:
z	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_bool_t z;$/;"	m	struct:StructTypes_i32_bool_bool_bool::__anon7256d2ce0908	typeref:typename:ecs_bool_t	file:
z	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t z;$/;"	m	struct:StructTypes_bool_bool_i32::__anon7256d2ce0508	typeref:typename:ecs_i32_t	file:
z	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t z;$/;"	m	struct:StructTypes_i32_i32_i32::__anon7256d2ce0308	typeref:typename:ecs_i32_t	file:
z	lib/flecs/test/meta/src/StructTypes.c	/^        ecs_i32_t z;$/;"	m	struct:StructTypes_i32_i64_i32::__anon7256d2ce0b08	typeref:typename:ecs_i32_t	file:
zero_time_scale_invoked	lib/flecs/test/api/src/World.c	/^static int zero_time_scale_invoked = 0;$/;"	v	typeref:typename:int	file:
~CountNoDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~CountNoDefaultCtor() {$/;"	f	class:CountNoDefaultCtor
~CtorDtorNonTrivial	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    ~CtorDtorNonTrivial() {$/;"	f	class:CtorDtorNonTrivial	file:
~CtorDtor_w_MoveAssign	lib/flecs/test/cpp_api/src/ComponentLifecycle.cpp	/^    ~CtorDtor_w_MoveAssign() {$/;"	f	class:CtorDtor_w_MoveAssign	file:
~DefaultCtorValueCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~DefaultCtorValueCtor() { }$/;"	f	struct:DefaultCtorValueCtor
~DefaultInit	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~DefaultInit() { }$/;"	f	struct:DefaultInit
~FlecsCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~FlecsCtor() { }$/;"	f	struct:FlecsCtor
~FlecsCtorDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~FlecsCtorDefaultCtor() { }$/;"	f	struct:FlecsCtorDefaultCtor
~FlecsCtorValueCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~FlecsCtorValueCtor() { }$/;"	f	struct:FlecsCtorValueCtor
~Module_w_dtor	lib/flecs/test/cpp_api/src/Module.cpp	/^    ~Module_w_dtor() {$/;"	f	class:Module_w_dtor	file:
~NoCopy	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~NoCopy() { }$/;"	f	struct:NoCopy
~NoCopyAssign	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~NoCopyAssign() { }$/;"	f	struct:NoCopyAssign
~NoCopyCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~NoCopyCtor() { }$/;"	f	struct:NoCopyCtor
~NoDefaultCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~NoDefaultCtor() { }$/;"	f	struct:NoDefaultCtor
~NoMove	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~NoMove() { }$/;"	f	struct:NoMove
~NoMoveAssign	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~NoMoveAssign() { }$/;"	f	struct:NoMoveAssign
~NoMoveCtor	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~NoMoveCtor() { }$/;"	f	struct:NoMoveCtor
~Pod	lib/flecs/test/cpp_api/include/cpp_api.h	/^    ~Pod() {$/;"	f	class:Pod
~filter_base	lib/flecs/flecs.h	/^    ~filter_base() {$/;"	f	struct:flecs::filter_base
~filter_base	lib/flecs/include/flecs/addons/cpp/mixins/filter/impl.hpp	/^    ~filter_base() {$/;"	f	struct:flecs::filter_base
~iterable	lib/flecs/flecs.h	/^    virtual ~iterable() { }$/;"	f	struct:flecs::iterable
~iterable	lib/flecs/include/flecs/addons/cpp/utils/iterable.hpp	/^    virtual ~iterable() { }$/;"	f	struct:flecs::iterable
~scoped_world	lib/flecs/flecs.h	/^    ~scoped_world() {$/;"	f	struct:flecs::scoped_world
~scoped_world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    ~scoped_world() {$/;"	f	struct:flecs::scoped_world
~snapshot	lib/flecs/flecs.h	/^    ~snapshot() {$/;"	f	struct:flecs::snapshot
~snapshot	lib/flecs/include/flecs/addons/cpp/mixins/snapshot/impl.hpp	/^    ~snapshot() {$/;"	f	struct:flecs::snapshot
~string	lib/flecs/flecs.h	/^    ~string() {$/;"	f	struct:flecs::string
~string	lib/flecs/include/flecs/addons/cpp/utils/string.hpp	/^    ~string() {$/;"	f	struct:flecs::string
~stringstream	lib/flecs/flecs.h	/^    ~stringstream() {$/;"	f	struct:flecs::stringstream
~stringstream	lib/flecs/include/flecs/addons/cpp/utils/stringstream.hpp	/^    ~stringstream() {$/;"	f	struct:flecs::stringstream
~system_runner_fluent	lib/flecs/flecs.h	/^    ~system_runner_fluent() {$/;"	f	struct:flecs::system_runner_fluent
~system_runner_fluent	lib/flecs/include/flecs/addons/cpp/mixins/system/impl.hpp	/^    ~system_runner_fluent() {$/;"	f	struct:flecs::system_runner_fluent
~term	lib/flecs/flecs.h	/^    ~term() {$/;"	f	struct:flecs::term
~term	lib/flecs/include/flecs/addons/cpp/mixins/term/impl.hpp	/^    ~term() {$/;"	f	struct:flecs::term
~term_id_builder_i	lib/flecs/flecs.h	/^    virtual ~term_id_builder_i() { }$/;"	f	struct:flecs::term_id_builder_i
~term_id_builder_i	lib/flecs/include/flecs/addons/cpp/mixins/term/builder_i.hpp	/^    virtual ~term_id_builder_i() { }$/;"	f	struct:flecs::term_id_builder_i
~world	lib/flecs/flecs.h	/^    ~world() { $/;"	f	struct:flecs::world
~world	lib/flecs/include/flecs/addons/cpp/world.hpp	/^    ~world() { $/;"	f	struct:flecs::world
